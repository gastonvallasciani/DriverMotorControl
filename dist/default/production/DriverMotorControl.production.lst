

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Jun 09 11:44:57 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           ; Version 1.41
    49                           ; Generated 25/01/2017 GMT
    50                           ; 
    51                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F46K22 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  00076C                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for _LookUP_TABLE_COS
    88  00076C  FA                 	db	250
    89  00076D  ED                 	db	237
    90  00076E  D8                 	db	216
    91  00076F  BC                 	db	188
    92  000770  99                 	db	153
    93  000771  71                 	db	113
    94  000772  45                 	db	69
    95  000773  18                 	db	24
    96  000774  18                 	db	24
    97  000775  45                 	db	69
    98  000776  71                 	db	113
    99  000777  99                 	db	153
   100  000778  BC                 	db	188
   101  000779  D8                 	db	216
   102  00077A  ED                 	db	237
   103  00077B  FA                 	db	250
   104  00077C  FA                 	db	250
   105  00077D  ED                 	db	237
   106  00077E  D8                 	db	216
   107  00077F  BC                 	db	188
   108  000780  99                 	db	153
   109  000781  71                 	db	113
   110  000782  45                 	db	69
   111  000783  18                 	db	24
   112  000784  18                 	db	24
   113  000785  45                 	db	69
   114  000786  71                 	db	113
   115  000787  99                 	db	153
   116  000788  BC                 	db	188
   117  000789  D8                 	db	216
   118  00078A  ED                 	db	237
   119  00078B  FA                 	db	250
   120                           
   121                           	psect	idataBANK0
   122  00044E                     __pidataBANK0:
   123                           	opt stack 0
   124                           
   125                           ;initializer for _LookUP_TABLE_SEN_16
   126  00044E  0C                 	db	12
   127  00044F  24                 	db	36
   128  000450  3C                 	db	60
   129  000451  53                 	db	83
   130  000452  6A                 	db	106
   131  000453  7F                 	db	127
   132  000454  93                 	db	147
   133  000455  A6                 	db	166
   134  000456  B8                 	db	184
   135  000457  C8                 	db	200
   136  000458  D6                 	db	214
   137  000459  E2                 	db	226
   138  00045A  EC                 	db	236
   139  00045B  F4                 	db	244
   140  00045C  FA                 	db	250
   141  00045D  FE                 	db	254
   142  00045E  FE                 	db	254
   143  00045F  FA                 	db	250
   144  000460  F4                 	db	244
   145  000461  EC                 	db	236
   146  000462  E2                 	db	226
   147  000463  D6                 	db	214
   148  000464  C8                 	db	200
   149  000465  B8                 	db	184
   150  000466  A6                 	db	166
   151  000467  93                 	db	147
   152  000468  7F                 	db	127
   153  000469  6A                 	db	106
   154  00046A  53                 	db	83
   155  00046B  3C                 	db	60
   156  00046C  24                 	db	36
   157  00046D  0C                 	db	12
   158  00046E  0C                 	db	12
   159  00046F  24                 	db	36
   160  000470  3C                 	db	60
   161  000471  53                 	db	83
   162  000472  6A                 	db	106
   163  000473  7F                 	db	127
   164  000474  93                 	db	147
   165  000475  A6                 	db	166
   166  000476  B8                 	db	184
   167  000477  C8                 	db	200
   168  000478  D6                 	db	214
   169  000479  E2                 	db	226
   170  00047A  EC                 	db	236
   171  00047B  F4                 	db	244
   172  00047C  FA                 	db	250
   173  00047D  FE                 	db	254
   174  00047E  FE                 	db	254
   175  00047F  FA                 	db	250
   176  000480  F4                 	db	244
   177  000481  EC                 	db	236
   178  000482  E2                 	db	226
   179  000483  D6                 	db	214
   180  000484  C8                 	db	200
   181  000485  B8                 	db	184
   182  000486  A6                 	db	166
   183  000487  93                 	db	147
   184  000488  7F                 	db	127
   185  000489  6A                 	db	106
   186  00048A  53                 	db	83
   187  00048B  3C                 	db	60
   188  00048C  24                 	db	36
   189  00048D  0C                 	db	12
   190                           
   191                           ;initializer for _LookUP_TABLE_COS_16
   192  00048E  FE                 	db	254
   193  00048F  FA                 	db	250
   194  000490  F4                 	db	244
   195  000491  EC                 	db	236
   196  000492  E2                 	db	226
   197  000493  D6                 	db	214
   198  000494  C8                 	db	200
   199  000495  B8                 	db	184
   200  000496  A6                 	db	166
   201  000497  93                 	db	147
   202  000498  7F                 	db	127
   203  000499  6A                 	db	106
   204  00049A  53                 	db	83
   205  00049B  3C                 	db	60
   206  00049C  24                 	db	36
   207  00049D  0C                 	db	12
   208  00049E  0C                 	db	12
   209  00049F  24                 	db	36
   210  0004A0  3C                 	db	60
   211  0004A1  53                 	db	83
   212  0004A2  6A                 	db	106
   213  0004A3  7F                 	db	127
   214  0004A4  93                 	db	147
   215  0004A5  A6                 	db	166
   216  0004A6  B8                 	db	184
   217  0004A7  C8                 	db	200
   218  0004A8  D6                 	db	214
   219  0004A9  E2                 	db	226
   220  0004AA  EC                 	db	236
   221  0004AB  F4                 	db	244
   222  0004AC  FA                 	db	250
   223  0004AD  FE                 	db	254
   224  0004AE  FE                 	db	254
   225  0004AF  FA                 	db	250
   226  0004B0  F4                 	db	244
   227  0004B1  EC                 	db	236
   228  0004B2  E2                 	db	226
   229  0004B3  D6                 	db	214
   230  0004B4  C8                 	db	200
   231  0004B5  B8                 	db	184
   232  0004B6  A6                 	db	166
   233  0004B7  93                 	db	147
   234  0004B8  7F                 	db	127
   235  0004B9  6A                 	db	106
   236  0004BA  53                 	db	83
   237  0004BB  3C                 	db	60
   238  0004BC  24                 	db	36
   239  0004BD  0C                 	db	12
   240  0004BE  0C                 	db	12
   241  0004BF  24                 	db	36
   242  0004C0  3C                 	db	60
   243  0004C1  53                 	db	83
   244  0004C2  6A                 	db	106
   245  0004C3  7F                 	db	127
   246  0004C4  93                 	db	147
   247  0004C5  A6                 	db	166
   248  0004C6  B8                 	db	184
   249  0004C7  C8                 	db	200
   250  0004C8  D6                 	db	214
   251  0004C9  E2                 	db	226
   252  0004CA  EC                 	db	236
   253  0004CB  F4                 	db	244
   254  0004CC  FA                 	db	250
   255  0004CD  FE                 	db	254
   256                           
   257                           ;initializer for _LookUP_TABLE_SEN
   258  0004CE  18                 	db	24
   259  0004CF  45                 	db	69
   260  0004D0  71                 	db	113
   261  0004D1  99                 	db	153
   262  0004D2  BC                 	db	188
   263  0004D3  D8                 	db	216
   264  0004D4  ED                 	db	237
   265  0004D5  FA                 	db	250
   266  0004D6  FA                 	db	250
   267  0004D7  ED                 	db	237
   268  0004D8  D8                 	db	216
   269  0004D9  BC                 	db	188
   270  0004DA  99                 	db	153
   271  0004DB  71                 	db	113
   272  0004DC  45                 	db	69
   273  0004DD  18                 	db	24
   274  0004DE  18                 	db	24
   275  0004DF  45                 	db	69
   276  0004E0  71                 	db	113
   277  0004E1  99                 	db	153
   278  0004E2  BC                 	db	188
   279  0004E3  D8                 	db	216
   280  0004E4  ED                 	db	237
   281  0004E5  FA                 	db	250
   282  0004E6  FA                 	db	250
   283  0004E7  ED                 	db	237
   284  0004E8  D8                 	db	216
   285  0004E9  BC                 	db	188
   286  0004EA  99                 	db	153
   287  0004EB  71                 	db	113
   288  0004EC  45                 	db	69
   289  0004ED  18                 	db	24
   290                           
   291                           	psect	nvCOMRAM
   292  000045                     __pnvCOMRAM:
   293                           	opt stack 0
   294  000045                     _TMR2_InterruptHandler:
   295                           	opt stack 0
   296  000045                     	ds	2
   297  000047                     _TMR6_InterruptHandler:
   298                           	opt stack 0
   299  000047                     	ds	2
   300  000049                     _EstadoActual:
   301                           	opt stack 0
   302  000049                     	ds	1
   303  0000                     _CCPTMRS0bits	set	3913
   304  0000                     _ANSELA	set	3896
   305  0000                     _ANSELE	set	3900
   306  0000                     _ANSELD	set	3899
   307  0000                     _ANSELB	set	3897
   308  0000                     _ANSELC	set	3898
   309  0000                     _CCPR5H	set	3926
   310  0000                     _CCPR5L	set	3925
   311  0000                     _CCP5CON	set	3924
   312  0000                     _T6CONbits	set	3914
   313  0000                     _TMR6	set	3916
   314  0000                     _PR6	set	3915
   315  0000                     _T6CON	set	3914
   316  0000                     _LATDbits	set	3980
   317  0000                     _LATCbits	set	3979
   318  0000                     _LATBbits	set	3978
   319  0000                     _TXREG1	set	4013
   320  0000                     _RCREG1	set	4014
   321  0000                     _RCSTA1bits	set	4011
   322  0000                     _SPBRGH1	set	4016
   323  0000                     _SPBRG1	set	4015
   324  0000                     _TXSTA1	set	4012
   325  0000                     _RCSTA1	set	4011
   326  0000                     _BAUDCON1	set	4024
   327  0000                     _OSCTUNE	set	3995
   328  0000                     _OSCCON2	set	4050
   329  0000                     _OSCCON	set	4051
   330  0000                     _INTCONbits	set	4082
   331  0000                     _RCONbits	set	4048
   332  0000                     _ADCON0bits	set	4034
   333  0000                     _ADRESH	set	4036
   334  0000                     _ADRESL	set	4035
   335  0000                     _ADCON2	set	4032
   336  0000                     _ADCON1	set	4033
   337  0000                     _ADCON0	set	4034
   338  0000                     _CCPR1H	set	4031
   339  0000                     _CCPR1L	set	4030
   340  0000                     _PSTR1CON	set	4025
   341  0000                     _PWM1CON	set	4023
   342  0000                     _ECCP1AS	set	4022
   343  0000                     _CCP1CON	set	4029
   344  0000                     _CCPR2H	set	3944
   345  0000                     _CCPR2L	set	3943
   346  0000                     _PSTR2CON	set	3939
   347  0000                     _PWM2CON	set	3941
   348  0000                     _ECCP2AS	set	3940
   349  0000                     _CCP2CON	set	3942
   350  0000                     _INTCON2bits	set	4081
   351  0000                     _WPUB	set	3937
   352  0000                     _TRISD	set	3989
   353  0000                     _TRISC	set	3988
   354  0000                     _TRISB	set	3987
   355  0000                     _TRISA	set	3986
   356  0000                     _TRISE	set	3990
   357  0000                     _LATC	set	3979
   358  0000                     _LATB	set	3978
   359  0000                     _LATA	set	3977
   360  0000                     _LATD	set	3980
   361  0000                     _LATE	set	3981
   362  0000                     _T2CONbits	set	4026
   363  0000                     _PIE1bits	set	3997
   364  0000                     _PIR1bits	set	3998
   365  0000                     _TMR2	set	4028
   366  0000                     _PR2	set	4027
   367  0000                     _T2CON	set	4026
   368  0000                     _PIE5bits	set	3965
   369  0000                     _PIR5bits	set	3966
   370                           
   371                           ; #config settings
   372  0000                     
   373                           	psect	cinit
   374  0004EE                     __pcinit:
   375                           	opt stack 0
   376  0004EE                     start_initialization:
   377                           	opt stack 0
   378  0004EE                     __initialization:
   379                           	opt stack 0
   380                           
   381                           ; Initialize objects allocated to BANK0 (160 bytes)
   382                           ; load TBLPTR registers with __pidataBANK0
   383  0004EE  0E4E               	movlw	low __pidataBANK0
   384  0004F0  6EF6               	movwf	tblptrl,c
   385  0004F2  0E04               	movlw	high __pidataBANK0
   386  0004F4  6EF7               	movwf	tblptrh,c
   387  0004F6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   388  0004F8  6EF8               	movwf	tblptru,c
   389  0004FA  EE00  F060         	lfsr	0,__pdataBANK0
   390  0004FE  EE10 F0A0          	lfsr	1,160
   391  000502                     copy_data0:
   392  000502  0009               	tblrd		*+
   393  000504  CFF5 FFEE          	movff	tablat,postinc0
   394  000508  50E5               	movf	postdec1,w,c
   395  00050A  50E1               	movf	fsr1l,w,c
   396  00050C  E1FA               	bnz	copy_data0
   397                           
   398                           ; Initialize objects allocated to COMRAM (32 bytes)
   399                           ; load TBLPTR registers with __pidataCOMRAM
   400  00050E  0E6C               	movlw	low __pidataCOMRAM
   401  000510  6EF6               	movwf	tblptrl,c
   402  000512  0E07               	movlw	high __pidataCOMRAM
   403  000514  6EF7               	movwf	tblptrh,c
   404  000516  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   405  000518  6EF8               	movwf	tblptru,c
   406  00051A  EE00  F001         	lfsr	0,__pdataCOMRAM
   407  00051E  EE10 F020          	lfsr	1,32
   408  000522                     copy_data1:
   409  000522  0009               	tblrd		*+
   410  000524  CFF5 FFEE          	movff	tablat,postinc0
   411  000528  50E5               	movf	postdec1,w,c
   412  00052A  50E1               	movf	fsr1l,w,c
   413  00052C  E1FA               	bnz	copy_data1
   414                           
   415                           ; Clear objects allocated to COMRAM (11 bytes)
   416  00052E  EE00  F03A         	lfsr	0,__pbssCOMRAM
   417  000532  0E0B               	movlw	11
   418  000534                     clear_0:
   419  000534  6AEE               	clrf	postinc0,c
   420  000536  06E8               	decf	wreg,f,c
   421  000538  E1FD               	bnz	clear_0
   422  00053A                     end_of_initialization:
   423                           	opt stack 0
   424  00053A                     __end_of__initialization:
   425                           	opt stack 0
   426  00053A  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   427  00053C  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   428  00053E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   429  000540  6EF8               	movwf	tblptru,c
   430  000542  0100               	movlb	0
   431  000544  EF36  F003         	goto	_main	;jump to C main() function
   432                           tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           tblptrl	equ	0xFF6
   435                           tablat	equ	0xFF5
   436                           postinc0	equ	0xFEE
   437                           wreg	equ	0xFE8
   438                           postdec1	equ	0xFE5
   439                           fsr1l	equ	0xFE1
   440                           
   441                           	psect	bssCOMRAM
   442  00003A                     __pbssCOMRAM:
   443                           	opt stack 0
   444  00003A                     _Timer2Tick_count:
   445                           	opt stack 0
   446  00003A                     	ds	2
   447  00003C                     _StepCount:
   448                           	opt stack 0
   449  00003C                     	ds	2
   450  00003E                     _ANALOG_1:
   451                           	opt stack 0
   452  00003E                     	ds	2
   453  000040                     _ANALOG_0:
   454                           	opt stack 0
   455  000040                     	ds	2
   456  000042                     	ds	1
   457  000043                     _Microstep:
   458                           	opt stack 0
   459  000043                     	ds	1
   460  000044                     _Timer2Ticked:
   461                           	opt stack 0
   462  000044                     	ds	1
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           postdec1	equ	0xFE5
   470                           fsr1l	equ	0xFE1
   471                           
   472                           	psect	dataCOMRAM
   473  000001                     __pdataCOMRAM:
   474                           	opt stack 0
   475  000001                     _LookUP_TABLE_COS:
   476                           	opt stack 0
   477  000001                     	ds	32
   478                           tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           postdec1	equ	0xFE5
   485                           fsr1l	equ	0xFE1
   486                           
   487                           	psect	dataBANK0
   488  000060                     __pdataBANK0:
   489                           	opt stack 0
   490  000060                     _LookUP_TABLE_SEN_16:
   491                           	opt stack 0
   492  000060                     	ds	64
   493  0000A0                     _LookUP_TABLE_COS_16:
   494                           	opt stack 0
   495  0000A0                     	ds	64
   496  0000E0                     _LookUP_TABLE_SEN:
   497                           	opt stack 0
   498  0000E0                     	ds	32
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	cstackCOMRAM
   509  000021                     __pcstackCOMRAM:
   510                           	opt stack 0
   511  000021                     ??_INTERRUPT_InterruptManager:
   512  000021                     
   513                           ; 1 bytes @ 0x0
   514  000021                     	ds	14
   515  00002F                     EUSART1_Write@txData:
   516                           	opt stack 0
   517  00002F                     TMR6_SetInterruptHandler@InterruptHandler:
   518                           	opt stack 0
   519  00002F                     TMR2_SetInterruptHandler@InterruptHandler:
   520                           	opt stack 0
   521  00002F                     EPWM2_LoadDutyValue@dutyValue:
   522                           	opt stack 0
   523  00002F                     EPWM1_LoadDutyValue@dutyValue:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0xE
   527  00002F                     	ds	2
   528  000031                     ??_EPWM2_LoadDutyValue:
   529  000031                     ??_EPWM1_LoadDutyValue:
   530  000031                     
   531                           ; 1 bytes @ 0x10
   532  000031                     	ds	2
   533  000033                     ??_State8MEF_act:
   534  000033                     ??_State16MEF_act:
   535                           
   536                           ; 1 bytes @ 0x12
   537  000033                     	ds	1
   538  000034                     StepMove@StepNumber:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x13
   542  000034                     	ds	2
   543  000036                     StepMove@Velocidad:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x15
   547  000036                     	ds	1
   548  000037                     StepMove@microstep_number:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x16
   552  000037                     	ds	1
   553  000038                     ??_StepMove:
   554                           
   555                           ; 1 bytes @ 0x17
   556  000038                     	ds	2
   557  00003A                     tblptru	equ	0xFF8
   558                           tblptrh	equ	0xFF7
   559                           tblptrl	equ	0xFF6
   560                           tablat	equ	0xFF5
   561                           postinc0	equ	0xFEE
   562                           wreg	equ	0xFE8
   563                           postdec1	equ	0xFE5
   564                           fsr1l	equ	0xFE1
   565                           
   566                           ; 1 bytes @ 0x19
   567 ;;
   568 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   569 ;;
   570 ;; *************** function _main *****************
   571 ;; Defined at:
   572 ;;		line 21 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;Total ram usage:        0 bytes
   591 ;; Hardware stack levels required when called:    7
   592 ;; This function calls:
   593 ;;		_SYSTEM_Initialize
   594 ;;		_StateMEF_ini
   595 ;;		_StepMove
   596 ;; This function is called by:
   597 ;;		Startup code after reset
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text0
   602  00066C                     __ptext0:
   603                           	opt stack 0
   604  00066C                     _main:
   605                           	opt stack 24
   606                           
   607                           ;main.c: 24: SYSTEM_Initialize();
   608                           
   609                           ;incstack = 0
   610  00066C  EC21  F003         	call	_SYSTEM_Initialize	;wreg free
   611                           
   612                           ;main.c: 25: StateMEF_ini();
   613  000670  ECF4  F003         	call	_StateMEF_ini	;wreg free
   614                           
   615                           ;main.c: 26: Timer2Ticked=0;
   616  000674  0E00               	movlw	0
   617  000676  6E44               	movwf	_Timer2Ticked,c	;volatile
   618                           
   619                           ;main.c: 27: do { LATBbits.LATB6 = 1; } while(0);
   620  000678  8C8A               	bsf	3978,6,c	;volatile
   621                           
   622                           ;main.c: 30: (INTCONbits.GIE = 1);
   623  00067A  8EF2               	bsf	intcon,7,c	;volatile
   624                           
   625                           ;main.c: 33: (INTCONbits.PEIE = 1);
   626  00067C  8CF2               	bsf	intcon,6,c	;volatile
   627  00067E                     l1827:
   628                           
   629                           ;main.c: 35: {
   630                           ;main.c: 36: StepMove(2500,8,16);
   631  00067E  0E09               	movlw	9
   632  000680  6E35               	movwf	StepMove@StepNumber+1,c
   633  000682  0EC4               	movlw	196
   634  000684  6E34               	movwf	StepMove@StepNumber,c
   635  000686  0E08               	movlw	8
   636  000688  6E36               	movwf	StepMove@Velocidad,c
   637  00068A  0E10               	movlw	16
   638  00068C  6E37               	movwf	StepMove@microstep_number,c
   639  00068E  ECA4  F002         	call	_StepMove	;wreg free
   640  000692  D7F5               	goto	l1827
   641  000694                     __end_of_main:
   642                           	opt stack 0
   643                           tblptru	equ	0xFF8
   644                           tblptrh	equ	0xFF7
   645                           tblptrl	equ	0xFF6
   646                           tablat	equ	0xFF5
   647                           intcon	equ	0xFF2
   648                           postinc0	equ	0xFEE
   649                           wreg	equ	0xFE8
   650                           postdec1	equ	0xFE5
   651                           fsr1l	equ	0xFE1
   652                           
   653 ;; *************** function _StepMove *****************
   654 ;; Defined at:
   655 ;;		line 215 in file "MotorDriver.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;  StepNumber      2   19[COMRAM] unsigned int 
   658 ;;  Velocidad       1   21[COMRAM] unsigned char 
   659 ;;  microstep_nu    1   22[COMRAM] unsigned char 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;Total ram usage:        6 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; Hardware stack levels required when called:    6
   678 ;; This function calls:
   679 ;;		_State16MEF_act
   680 ;;		_State8MEF_act
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text1
   687  000548                     __ptext1:
   688                           	opt stack 0
   689  000548                     _StepMove:
   690                           	opt stack 24
   691                           
   692                           ;MotorDriver.c: 217: if (StepCount<StepNumber)
   693                           
   694                           ;incstack = 0
   695  000548  5034               	movf	StepMove@StepNumber,w,c
   696  00054A  5C3C               	subwf	_StepCount,w,c
   697  00054C  5035               	movf	StepMove@StepNumber+1,w,c
   698  00054E  583D               	subwfb	_StepCount+1,w,c
   699  000550  B0D8               	btfsc	status,0,c
   700  000552  0012               	return	
   701                           
   702                           ;MotorDriver.c: 218: {
   703                           ;MotorDriver.c: 219: if (Timer2Ticked){
   704  000554  5044               	movf	_Timer2Ticked,w,c	;volatile
   705  000556  B4D8               	btfsc	status,2,c
   706  000558  0012               	return	
   707                           
   708                           ;MotorDriver.c: 220: Timer2Tick_count++;
   709  00055A  4A3A               	infsnz	_Timer2Tick_count,f,c
   710  00055C  2A3B               	incf	_Timer2Tick_count+1,f,c
   711                           
   712                           ;MotorDriver.c: 221: if (Timer2Tick_count == Velocidad){
   713  00055E  5036               	movf	StepMove@Velocidad,w,c
   714  000560  6E38               	movwf	??_StepMove& (0+255),c
   715  000562  6A39               	clrf	(??_StepMove+1)& (0+255),c
   716  000564  503A               	movf	_Timer2Tick_count,w,c
   717  000566  1838               	xorwf	??_StepMove,w,c
   718  000568  E113               	bnz	l1801
   719  00056A  503B               	movf	_Timer2Tick_count+1,w,c
   720  00056C  1839               	xorwf	??_StepMove+1,w,c
   721  00056E  A4D8               	btfss	status,2,c
   722  000570  D00F               	goto	l1801
   723                           
   724                           ;MotorDriver.c: 222: if (microstep_number==16){
   725  000572  0E10               	movlw	16
   726  000574  1837               	xorwf	StepMove@microstep_number,w,c
   727  000576  A4D8               	btfss	status,2,c
   728  000578  D003               	goto	l1795
   729                           
   730                           ;MotorDriver.c: 223: State16MEF_act();
   731  00057A  EC57  F000         	call	_State16MEF_act	;wreg free
   732                           
   733                           ;MotorDriver.c: 224: }
   734  00057E  D002               	goto	l1797
   735  000580                     l1795:
   736                           
   737                           ;MotorDriver.c: 225: else{
   738                           ;MotorDriver.c: 226: State8MEF_act();
   739  000580  EC54  F001         	call	_State8MEF_act	;wreg free
   740  000584                     l1797:
   741                           
   742                           ;MotorDriver.c: 227: }
   743                           ;MotorDriver.c: 228: StepCount++;
   744  000584  4A3C               	infsnz	_StepCount,f,c
   745  000586  2A3D               	incf	_StepCount+1,f,c
   746                           
   747                           ;MotorDriver.c: 229: Timer2Tick_count=0;
   748  000588  0E00               	movlw	0
   749  00058A  6E3B               	movwf	_Timer2Tick_count+1,c
   750  00058C  0E00               	movlw	0
   751  00058E  6E3A               	movwf	_Timer2Tick_count,c
   752  000590                     l1801:
   753                           
   754                           ;MotorDriver.c: 230: }
   755                           ;MotorDriver.c: 231: Timer2Ticked = 0;
   756  000590  0E00               	movlw	0
   757  000592  6E44               	movwf	_Timer2Ticked,c	;volatile
   758  000594  0012               	return	
   759  000596                     __end_of_StepMove:
   760                           	opt stack 0
   761                           tblptru	equ	0xFF8
   762                           tblptrh	equ	0xFF7
   763                           tblptrl	equ	0xFF6
   764                           tablat	equ	0xFF5
   765                           intcon	equ	0xFF2
   766                           postinc0	equ	0xFEE
   767                           wreg	equ	0xFE8
   768                           postdec1	equ	0xFE5
   769                           fsr1l	equ	0xFE1
   770                           status	equ	0xFD8
   771                           
   772 ;; *************** function _State8MEF_act *****************
   773 ;; Defined at:
   774 ;;		line 38 in file "MotorDriver.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  ANALOG_1        2    0        unsigned int 
   779 ;;  ANALOG_0        2    0        unsigned int 
   780 ;;  PWM2            1    0        unsigned char 
   781 ;;  PWM1            1    0        unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;Total ram usage:        1 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; Hardware stack levels required when called:    5
   798 ;; This function calls:
   799 ;;		_EPWM1_LoadDutyValue
   800 ;;		_EPWM2_LoadDutyValue
   801 ;; This function is called by:
   802 ;;		_StepMove
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text2
   807  0002A8                     __ptext2:
   808                           	opt stack 0
   809  0002A8                     _State8MEF_act:
   810                           	opt stack 24
   811                           
   812                           ;MotorDriver.c: 39: uint8_t PWM1,PWM2;
   813                           ;MotorDriver.c: 40: uint16_t ANALOG_0,ANALOG_1;
   814                           ;MotorDriver.c: 41: switch(EstadoActual) {
   815                           
   816                           ;incstack = 0
   817  0002A8  D0C1               	goto	l1657
   818  0002AA                     l1575:
   819                           
   820                           ;MotorDriver.c: 43: PSTR1CON = 0x00; PSTR2CON = 0x00;
   821  0002AA  0E00               	movlw	0
   822  0002AC  6EB9               	movwf	4025,c	;volatile
   823  0002AE  0E00               	movlw	0
   824  0002B0  6E63               	movwf	3939,c	;volatile
   825                           
   826                           ;MotorDriver.c: 44: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whil
      +                          e(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
   827  0002B2  948B               	bcf	3979,2,c	;volatile
   828  0002B4  9A8C               	bcf	3980,5,c	;volatile
   829  0002B6  928B               	bcf	3979,1,c	;volatile
   830  0002B8  908B               	bcf	3979,0,c	;volatile
   831                           
   832                           ;MotorDriver.c: 45: EstadoActual = STATE1;
   833  0002BA  0E01               	movlw	1
   834  0002BC  6E49               	movwf	_EstadoActual,c
   835                           
   836                           ;MotorDriver.c: 46: break;
   837  0002BE  0012               	return	
   838  0002C0                     l1585:
   839                           
   840                           ;MotorDriver.c: 48: PSTR1CON = 0x01; PSTR2CON = 0x01;
   841  0002C0  0E01               	movlw	1
   842  0002C2  6EB9               	movwf	4025,c	;volatile
   843  0002C4  0E01               	movlw	1
   844  0002C6  6E63               	movwf	3939,c	;volatile
   845                           
   846                           ;MotorDriver.c: 49: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
   847  0002C8  9A8C               	bcf	3980,5,c	;volatile
   848  0002CA  908B               	bcf	3979,0,c	;volatile
   849                           
   850                           ;MotorDriver.c: 50: if (Microstep<8){
   851  0002CC  5043               	movf	_Microstep,w,c
   852  0002CE  0A80               	xorlw	128
   853  0002D0  0F78               	addlw	-136
   854  0002D2  B0D8               	btfsc	status,0,c
   855  0002D4  0012               	return	
   856                           
   857                           ;MotorDriver.c: 62: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   858  0002D6  5043               	movf	_Microstep,w,c
   859  0002D8  0D01               	mullw	1
   860  0002DA  0E01               	movlw	low _LookUP_TABLE_COS
   861  0002DC  24F3               	addwf	prodl,w,c
   862  0002DE  6ED9               	movwf	fsr2l,c
   863  0002E0  0E00               	movlw	high _LookUP_TABLE_COS
   864  0002E2  20F4               	addwfc	prodh,w,c
   865  0002E4  6EDA               	movwf	fsr2h,c
   866  0002E6  50DF               	movf	indf2,w,c
   867  0002E8  6E33               	movwf	??_State8MEF_act& (0+255),c
   868  0002EA  5033               	movf	??_State8MEF_act,w,c
   869  0002EC  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   870  0002EE  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   871  0002F0  EC09  F003         	call	_EPWM1_LoadDutyValue	;wreg free
   872                           
   873                           ;MotorDriver.c: 63: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   874  0002F4  5043               	movf	_Microstep,w,c
   875  0002F6  0D01               	mullw	1
   876  0002F8  0EE0               	movlw	low _LookUP_TABLE_SEN
   877  0002FA  24F3               	addwf	prodl,w,c
   878  0002FC  6ED9               	movwf	fsr2l,c
   879  0002FE  0E00               	movlw	high _LookUP_TABLE_SEN
   880  000300  20F4               	addwfc	prodh,w,c
   881  000302  6EDA               	movwf	fsr2h,c
   882  000304  50DF               	movf	indf2,w,c
   883  000306  6E33               	movwf	??_State8MEF_act& (0+255),c
   884  000308  5033               	movf	??_State8MEF_act,w,c
   885  00030A  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   886  00030C  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   887  00030E  ECF1  F002         	call	_EPWM2_LoadDutyValue	;wreg free
   888                           
   889                           ;MotorDriver.c: 64: if (Microstep==7){
   890  000312  0E07               	movlw	7
   891  000314  1843               	xorwf	_Microstep,w,c
   892  000316  A4D8               	btfss	status,2,c
   893  000318  D002               	goto	l1599
   894                           
   895                           ;MotorDriver.c: 65: EstadoActual = STATE2;
   896  00031A  0E02               	movlw	2
   897  00031C  6E49               	movwf	_EstadoActual,c
   898  00031E                     l1599:
   899                           
   900                           ;MotorDriver.c: 66: }
   901                           ;MotorDriver.c: 67: Microstep++;
   902  00031E  2A43               	incf	_Microstep,f,c
   903                           
   904                           ;MotorDriver.c: 68: }
   905                           ;MotorDriver.c: 69: break;
   906  000320  0012               	return	
   907  000322                     l1601:
   908                           
   909                           ;MotorDriver.c: 71: PSTR1CON = 0x02; PSTR2CON = 0x01;
   910  000322  0E02               	movlw	2
   911  000324  6EB9               	movwf	4025,c	;volatile
   912  000326  0E01               	movlw	1
   913  000328  6E63               	movwf	3939,c	;volatile
   914                           
   915                           ;MotorDriver.c: 72: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
   916  00032A  948B               	bcf	3979,2,c	;volatile
   917  00032C  908B               	bcf	3979,0,c	;volatile
   918                           
   919                           ;MotorDriver.c: 73: if ((Microstep<16)&&(Microstep>7)){
   920  00032E  5043               	movf	_Microstep,w,c
   921  000330  0A80               	xorlw	128
   922  000332  0F70               	addlw	-144
   923  000334  B0D8               	btfsc	status,0,c
   924  000336  0012               	return	
   925  000338  5043               	movf	_Microstep,w,c
   926  00033A  0A80               	xorlw	128
   927  00033C  0F78               	addlw	-136
   928  00033E  A0D8               	btfss	status,0,c
   929  000340  0012               	return	
   930                           
   931                           ;MotorDriver.c: 88: if (Microstep==15){
   932  000342  0E0F               	movlw	15
   933  000344  1843               	xorwf	_Microstep,w,c
   934  000346  A4D8               	btfss	status,2,c
   935  000348  D002               	goto	l1615
   936                           
   937                           ;MotorDriver.c: 89: EstadoActual = STATE3;
   938  00034A  0E03               	movlw	3
   939  00034C  6E49               	movwf	_EstadoActual,c
   940  00034E                     l1615:
   941                           
   942                           ;MotorDriver.c: 90: }
   943                           ;MotorDriver.c: 91: Microstep++;
   944  00034E  2A43               	incf	_Microstep,f,c
   945                           
   946                           ;MotorDriver.c: 92: }
   947                           ;MotorDriver.c: 93: break;
   948  000350  0012               	return	
   949  000352                     l1617:
   950                           
   951                           ;MotorDriver.c: 95: PSTR1CON = 0x02; PSTR2CON = 0x02;
   952  000352  0E02               	movlw	2
   953  000354  6EB9               	movwf	4025,c	;volatile
   954  000356  0E02               	movlw	2
   955  000358  6E63               	movwf	3939,c	;volatile
   956                           
   957                           ;MotorDriver.c: 96: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
   958  00035A  948B               	bcf	3979,2,c	;volatile
   959  00035C  928B               	bcf	3979,1,c	;volatile
   960                           
   961                           ;MotorDriver.c: 97: if ((Microstep<24)&&(Microstep>15)){
   962  00035E  5043               	movf	_Microstep,w,c
   963  000360  0A80               	xorlw	128
   964  000362  0F68               	addlw	-152
   965  000364  B0D8               	btfsc	status,0,c
   966  000366  0012               	return	
   967  000368  5043               	movf	_Microstep,w,c
   968  00036A  0A80               	xorlw	128
   969  00036C  0F70               	addlw	-144
   970  00036E  A0D8               	btfss	status,0,c
   971  000370  0012               	return	
   972                           
   973                           ;MotorDriver.c: 109: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   974  000372  5043               	movf	_Microstep,w,c
   975  000374  0D01               	mullw	1
   976  000376  0E01               	movlw	low _LookUP_TABLE_COS
   977  000378  24F3               	addwf	prodl,w,c
   978  00037A  6ED9               	movwf	fsr2l,c
   979  00037C  0E00               	movlw	high _LookUP_TABLE_COS
   980  00037E  20F4               	addwfc	prodh,w,c
   981  000380  6EDA               	movwf	fsr2h,c
   982  000382  50DF               	movf	indf2,w,c
   983  000384  6E33               	movwf	??_State8MEF_act& (0+255),c
   984  000386  5033               	movf	??_State8MEF_act,w,c
   985  000388  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   986  00038A  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   987  00038C  EC09  F003         	call	_EPWM1_LoadDutyValue	;wreg free
   988                           
   989                           ;MotorDriver.c: 110: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   990  000390  5043               	movf	_Microstep,w,c
   991  000392  0D01               	mullw	1
   992  000394  0EE0               	movlw	low _LookUP_TABLE_SEN
   993  000396  24F3               	addwf	prodl,w,c
   994  000398  6ED9               	movwf	fsr2l,c
   995  00039A  0E00               	movlw	high _LookUP_TABLE_SEN
   996  00039C  20F4               	addwfc	prodh,w,c
   997  00039E  6EDA               	movwf	fsr2h,c
   998  0003A0  50DF               	movf	indf2,w,c
   999  0003A2  6E33               	movwf	??_State8MEF_act& (0+255),c
  1000  0003A4  5033               	movf	??_State8MEF_act,w,c
  1001  0003A6  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1002  0003A8  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1003  0003AA  ECF1  F002         	call	_EPWM2_LoadDutyValue	;wreg free
  1004                           
  1005                           ;MotorDriver.c: 112: if (Microstep==23){
  1006  0003AE  0E17               	movlw	23
  1007  0003B0  1843               	xorwf	_Microstep,w,c
  1008  0003B2  A4D8               	btfss	status,2,c
  1009  0003B4  D002               	goto	l1633
  1010                           
  1011                           ;MotorDriver.c: 113: EstadoActual = STATE4;
  1012  0003B6  0E04               	movlw	4
  1013  0003B8  6E49               	movwf	_EstadoActual,c
  1014  0003BA                     l1633:
  1015                           
  1016                           ;MotorDriver.c: 114: }
  1017                           ;MotorDriver.c: 115: Microstep++;
  1018  0003BA  2A43               	incf	_Microstep,f,c
  1019                           
  1020                           ;MotorDriver.c: 116: }
  1021                           ;MotorDriver.c: 117: break;
  1022  0003BC  0012               	return	
  1023  0003BE                     l1635:
  1024                           
  1025                           ;MotorDriver.c: 119: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1026  0003BE  0E01               	movlw	1
  1027  0003C0  6EB9               	movwf	4025,c	;volatile
  1028  0003C2  0E02               	movlw	2
  1029  0003C4  6E63               	movwf	3939,c	;volatile
  1030                           
  1031                           ;MotorDriver.c: 120: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1032  0003C6  9A8C               	bcf	3980,5,c	;volatile
  1033  0003C8  928B               	bcf	3979,1,c	;volatile
  1034                           
  1035                           ;MotorDriver.c: 121: if ((Microstep<32)&&(Microstep>23)){
  1036  0003CA  5043               	movf	_Microstep,w,c
  1037  0003CC  0A80               	xorlw	128
  1038  0003CE  0F60               	addlw	-160
  1039  0003D0  B0D8               	btfsc	status,0,c
  1040  0003D2  0012               	return	
  1041  0003D4  5043               	movf	_Microstep,w,c
  1042  0003D6  0A80               	xorlw	128
  1043  0003D8  0F68               	addlw	-152
  1044  0003DA  A0D8               	btfss	status,0,c
  1045  0003DC  0012               	return	
  1046                           
  1047                           ;MotorDriver.c: 133: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1048  0003DE  5043               	movf	_Microstep,w,c
  1049  0003E0  0D01               	mullw	1
  1050  0003E2  0E01               	movlw	low _LookUP_TABLE_COS
  1051  0003E4  24F3               	addwf	prodl,w,c
  1052  0003E6  6ED9               	movwf	fsr2l,c
  1053  0003E8  0E00               	movlw	high _LookUP_TABLE_COS
  1054  0003EA  20F4               	addwfc	prodh,w,c
  1055  0003EC  6EDA               	movwf	fsr2h,c
  1056  0003EE  50DF               	movf	indf2,w,c
  1057  0003F0  6E33               	movwf	??_State8MEF_act& (0+255),c
  1058  0003F2  5033               	movf	??_State8MEF_act,w,c
  1059  0003F4  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1060  0003F6  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1061  0003F8  EC09  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1062                           
  1063                           ;MotorDriver.c: 134: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1064  0003FC  5043               	movf	_Microstep,w,c
  1065  0003FE  0D01               	mullw	1
  1066  000400  0EE0               	movlw	low _LookUP_TABLE_SEN
  1067  000402  24F3               	addwf	prodl,w,c
  1068  000404  6ED9               	movwf	fsr2l,c
  1069  000406  0E00               	movlw	high _LookUP_TABLE_SEN
  1070  000408  20F4               	addwfc	prodh,w,c
  1071  00040A  6EDA               	movwf	fsr2h,c
  1072  00040C  50DF               	movf	indf2,w,c
  1073  00040E  6E33               	movwf	??_State8MEF_act& (0+255),c
  1074  000410  5033               	movf	??_State8MEF_act,w,c
  1075  000412  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1076  000414  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1077  000416  ECF1  F002         	call	_EPWM2_LoadDutyValue	;wreg free
  1078                           
  1079                           ;MotorDriver.c: 136: if (Microstep==31){
  1080  00041A  0E1F               	movlw	31
  1081  00041C  1843               	xorwf	_Microstep,w,c
  1082  00041E  A4D8               	btfss	status,2,c
  1083  000420  D003               	goto	l1653
  1084                           
  1085                           ;MotorDriver.c: 137: EstadoActual = STATE0;
  1086  000422  0E00               	movlw	0
  1087  000424  6E49               	movwf	_EstadoActual,c
  1088                           
  1089                           ;MotorDriver.c: 138: Microstep=-1;
  1090  000426  6843               	setf	_Microstep,c
  1091  000428                     l1653:
  1092                           
  1093                           ;MotorDriver.c: 139: }
  1094                           ;MotorDriver.c: 140: Microstep++;
  1095  000428  2A43               	incf	_Microstep,f,c
  1096                           
  1097                           ;MotorDriver.c: 146: }
  1098                           
  1099                           ;MotorDriver.c: 145: break;
  1100                           
  1101                           ;MotorDriver.c: 143: default:
  1102                           
  1103                           ;MotorDriver.c: 141: }
  1104                           ;MotorDriver.c: 142: break;
  1105  00042A  0012               	return	
  1106  00042C                     l1657:
  1107  00042C  5049               	movf	_EstadoActual,w,c
  1108                           
  1109                           ; Switch size 1, requested type "space"
  1110                           ; Number of cases is 5, Range of values is 0 to 4
  1111                           ; switch strategies available:
  1112                           ; Name         Instructions Cycles
  1113                           ; simple_byte           16     9 (average)
  1114                           ;	Chosen strategy is simple_byte
  1115  00042E  0A00               	xorlw	0	; case 0
  1116  000430  B4D8               	btfsc	status,2,c
  1117  000432  D73B               	goto	l1575
  1118  000434  0A01               	xorlw	1	; case 1
  1119  000436  B4D8               	btfsc	status,2,c
  1120  000438  D743               	goto	l1585
  1121  00043A  0A03               	xorlw	3	; case 2
  1122  00043C  B4D8               	btfsc	status,2,c
  1123  00043E  D771               	goto	l1601
  1124  000440  0A01               	xorlw	1	; case 3
  1125  000442  B4D8               	btfsc	status,2,c
  1126  000444  D786               	goto	l1617
  1127  000446  0A07               	xorlw	7	; case 4
  1128  000448  A4D8               	btfss	status,2,c
  1129  00044A  0012               	return	
  1130  00044C  D7B8               	goto	l1635
  1131  00044E                     __end_of_State8MEF_act:
  1132                           	opt stack 0
  1133                           tblptru	equ	0xFF8
  1134                           tblptrh	equ	0xFF7
  1135                           tblptrl	equ	0xFF6
  1136                           tablat	equ	0xFF5
  1137                           prodh	equ	0xFF4
  1138                           prodl	equ	0xFF3
  1139                           intcon	equ	0xFF2
  1140                           postinc0	equ	0xFEE
  1141                           wreg	equ	0xFE8
  1142                           postdec1	equ	0xFE5
  1143                           fsr1l	equ	0xFE1
  1144                           indf2	equ	0xFDF
  1145                           fsr2h	equ	0xFDA
  1146                           fsr2l	equ	0xFD9
  1147                           status	equ	0xFD8
  1148                           
  1149 ;; *************** function _State16MEF_act *****************
  1150 ;; Defined at:
  1151 ;;		line 149 in file "MotorDriver.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;		None
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;Total ram usage:        1 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    5
  1172 ;; This function calls:
  1173 ;;		_EPWM1_LoadDutyValue
  1174 ;;		_EPWM2_LoadDutyValue
  1175 ;;		_EUSART1_Write
  1176 ;; This function is called by:
  1177 ;;		_StepMove
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text3
  1182  0000AE                     __ptext3:
  1183                           	opt stack 0
  1184  0000AE                     _State16MEF_act:
  1185                           	opt stack 24
  1186                           
  1187                           ;MotorDriver.c: 150: switch(EstadoActual) {
  1188                           
  1189                           ;incstack = 0
  1190  0000AE  D0EB               	goto	l1761
  1191  0000B0                     l1661:
  1192                           
  1193                           ;MotorDriver.c: 152: PSTR1CON = 0x00; PSTR2CON = 0x00;
  1194  0000B0  0E00               	movlw	0
  1195  0000B2  6EB9               	movwf	4025,c	;volatile
  1196  0000B4  0E00               	movlw	0
  1197  0000B6  6E63               	movwf	3939,c	;volatile
  1198                           
  1199                           ;MotorDriver.c: 153: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  1200  0000B8  948B               	bcf	3979,2,c	;volatile
  1201  0000BA  9A8C               	bcf	3980,5,c	;volatile
  1202  0000BC  928B               	bcf	3979,1,c	;volatile
  1203  0000BE  908B               	bcf	3979,0,c	;volatile
  1204                           
  1205                           ;MotorDriver.c: 154: EstadoActual = STATE1;
  1206  0000C0  0E01               	movlw	1
  1207  0000C2  6E49               	movwf	_EstadoActual,c
  1208                           
  1209                           ;MotorDriver.c: 155: break;
  1210  0000C4  0012               	return	
  1211  0000C6                     l1671:
  1212                           
  1213                           ;MotorDriver.c: 157: PSTR1CON = 0x01; PSTR2CON = 0x01;
  1214  0000C6  0E01               	movlw	1
  1215  0000C8  6EB9               	movwf	4025,c	;volatile
  1216  0000CA  0E01               	movlw	1
  1217  0000CC  6E63               	movwf	3939,c	;volatile
  1218                           
  1219                           ;MotorDriver.c: 158: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1220  0000CE  9A8C               	bcf	3980,5,c	;volatile
  1221  0000D0  908B               	bcf	3979,0,c	;volatile
  1222                           
  1223                           ;MotorDriver.c: 159: if (Microstep<16){
  1224  0000D2  5043               	movf	_Microstep,w,c
  1225  0000D4  0A80               	xorlw	128
  1226  0000D6  0F70               	addlw	-144
  1227  0000D8  B0D8               	btfsc	status,0,c
  1228  0000DA  0012               	return	
  1229                           
  1230                           ;MotorDriver.c: 160: EUSART1_Write(Microstep);
  1231  0000DC  5043               	movf	_Microstep,w,c
  1232  0000DE  ECEE  F003         	call	_EUSART1_Write
  1233                           
  1234                           ;MotorDriver.c: 161: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1235  0000E2  5043               	movf	_Microstep,w,c
  1236  0000E4  0D01               	mullw	1
  1237  0000E6  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1238  0000E8  24F3               	addwf	prodl,w,c
  1239  0000EA  6ED9               	movwf	fsr2l,c
  1240  0000EC  0E00               	movlw	high _LookUP_TABLE_COS_16
  1241  0000EE  20F4               	addwfc	prodh,w,c
  1242  0000F0  6EDA               	movwf	fsr2h,c
  1243  0000F2  50DF               	movf	indf2,w,c
  1244  0000F4  6E33               	movwf	??_State16MEF_act& (0+255),c
  1245  0000F6  5033               	movf	??_State16MEF_act,w,c
  1246  0000F8  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1247  0000FA  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1248  0000FC  EC09  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1249                           
  1250                           ;MotorDriver.c: 162: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1251  000100  5043               	movf	_Microstep,w,c
  1252  000102  0D01               	mullw	1
  1253  000104  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1254  000106  24F3               	addwf	prodl,w,c
  1255  000108  6ED9               	movwf	fsr2l,c
  1256  00010A  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1257  00010C  20F4               	addwfc	prodh,w,c
  1258  00010E  6EDA               	movwf	fsr2h,c
  1259  000110  50DF               	movf	indf2,w,c
  1260  000112  6E33               	movwf	??_State16MEF_act& (0+255),c
  1261  000114  5033               	movf	??_State16MEF_act,w,c
  1262  000116  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1263  000118  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1264  00011A  ECF1  F002         	call	_EPWM2_LoadDutyValue	;wreg free
  1265                           
  1266                           ;MotorDriver.c: 163: if (Microstep==15){
  1267  00011E  0E0F               	movlw	15
  1268  000120  1843               	xorwf	_Microstep,w,c
  1269  000122  A4D8               	btfss	status,2,c
  1270  000124  D002               	goto	l1689
  1271                           
  1272                           ;MotorDriver.c: 164: EstadoActual = STATE2;
  1273  000126  0E02               	movlw	2
  1274  000128  6E49               	movwf	_EstadoActual,c
  1275  00012A                     l1689:
  1276                           
  1277                           ;MotorDriver.c: 165: }
  1278                           ;MotorDriver.c: 166: Microstep++;
  1279  00012A  2A43               	incf	_Microstep,f,c
  1280                           
  1281                           ;MotorDriver.c: 167: }
  1282                           ;MotorDriver.c: 168: break;
  1283  00012C  0012               	return	
  1284  00012E                     l1691:
  1285                           
  1286                           ;MotorDriver.c: 170: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1287  00012E  0E02               	movlw	2
  1288  000130  6EB9               	movwf	4025,c	;volatile
  1289  000132  0E01               	movlw	1
  1290  000134  6E63               	movwf	3939,c	;volatile
  1291                           
  1292                           ;MotorDriver.c: 171: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1293  000136  948B               	bcf	3979,2,c	;volatile
  1294  000138  908B               	bcf	3979,0,c	;volatile
  1295                           
  1296                           ;MotorDriver.c: 172: if ((Microstep<32)&&(Microstep>15)){
  1297  00013A  5043               	movf	_Microstep,w,c
  1298  00013C  0A80               	xorlw	128
  1299  00013E  0F60               	addlw	-160
  1300  000140  B0D8               	btfsc	status,0,c
  1301  000142  0012               	return	
  1302  000144  5043               	movf	_Microstep,w,c
  1303  000146  0A80               	xorlw	128
  1304  000148  0F70               	addlw	-144
  1305  00014A  A0D8               	btfss	status,0,c
  1306  00014C  0012               	return	
  1307                           
  1308                           ;MotorDriver.c: 173: EUSART1_Write(Microstep);
  1309  00014E  5043               	movf	_Microstep,w,c
  1310  000150  ECEE  F003         	call	_EUSART1_Write
  1311                           
  1312                           ;MotorDriver.c: 174: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1313  000154  5043               	movf	_Microstep,w,c
  1314  000156  0D01               	mullw	1
  1315  000158  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1316  00015A  24F3               	addwf	prodl,w,c
  1317  00015C  6ED9               	movwf	fsr2l,c
  1318  00015E  0E00               	movlw	high _LookUP_TABLE_COS_16
  1319  000160  20F4               	addwfc	prodh,w,c
  1320  000162  6EDA               	movwf	fsr2h,c
  1321  000164  50DF               	movf	indf2,w,c
  1322  000166  6E33               	movwf	??_State16MEF_act& (0+255),c
  1323  000168  5033               	movf	??_State16MEF_act,w,c
  1324  00016A  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1325  00016C  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1326  00016E  EC09  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1327                           
  1328                           ;MotorDriver.c: 175: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1329  000172  5043               	movf	_Microstep,w,c
  1330  000174  0D01               	mullw	1
  1331  000176  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1332  000178  24F3               	addwf	prodl,w,c
  1333  00017A  6ED9               	movwf	fsr2l,c
  1334  00017C  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1335  00017E  20F4               	addwfc	prodh,w,c
  1336  000180  6EDA               	movwf	fsr2h,c
  1337  000182  50DF               	movf	indf2,w,c
  1338  000184  6E33               	movwf	??_State16MEF_act& (0+255),c
  1339  000186  5033               	movf	??_State16MEF_act,w,c
  1340  000188  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1341  00018A  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1342  00018C  ECF1  F002         	call	_EPWM2_LoadDutyValue	;wreg free
  1343                           
  1344                           ;MotorDriver.c: 176: if (Microstep==31){
  1345  000190  0E1F               	movlw	31
  1346  000192  1843               	xorwf	_Microstep,w,c
  1347  000194  A4D8               	btfss	status,2,c
  1348  000196  D002               	goto	l1711
  1349                           
  1350                           ;MotorDriver.c: 177: EstadoActual = STATE3;
  1351  000198  0E03               	movlw	3
  1352  00019A  6E49               	movwf	_EstadoActual,c
  1353  00019C                     l1711:
  1354                           
  1355                           ;MotorDriver.c: 178: }
  1356                           ;MotorDriver.c: 179: Microstep++;
  1357  00019C  2A43               	incf	_Microstep,f,c
  1358                           
  1359                           ;MotorDriver.c: 180: }
  1360                           ;MotorDriver.c: 181: break;
  1361  00019E  0012               	return	
  1362  0001A0                     l1713:
  1363                           
  1364                           ;MotorDriver.c: 183: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1365  0001A0  0E02               	movlw	2
  1366  0001A2  6EB9               	movwf	4025,c	;volatile
  1367  0001A4  0E02               	movlw	2
  1368  0001A6  6E63               	movwf	3939,c	;volatile
  1369                           
  1370                           ;MotorDriver.c: 184: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1371  0001A8  948B               	bcf	3979,2,c	;volatile
  1372  0001AA  928B               	bcf	3979,1,c	;volatile
  1373                           
  1374                           ;MotorDriver.c: 185: if ((Microstep<48)&&(Microstep>31)){
  1375  0001AC  5043               	movf	_Microstep,w,c
  1376  0001AE  0A80               	xorlw	128
  1377  0001B0  0F50               	addlw	-176
  1378  0001B2  B0D8               	btfsc	status,0,c
  1379  0001B4  0012               	return	
  1380  0001B6  5043               	movf	_Microstep,w,c
  1381  0001B8  0A80               	xorlw	128
  1382  0001BA  0F60               	addlw	-160
  1383  0001BC  A0D8               	btfss	status,0,c
  1384  0001BE  0012               	return	
  1385                           
  1386                           ;MotorDriver.c: 186: EUSART1_Write(Microstep);
  1387  0001C0  5043               	movf	_Microstep,w,c
  1388  0001C2  ECEE  F003         	call	_EUSART1_Write
  1389                           
  1390                           ;MotorDriver.c: 187: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1391  0001C6  5043               	movf	_Microstep,w,c
  1392  0001C8  0D01               	mullw	1
  1393  0001CA  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1394  0001CC  24F3               	addwf	prodl,w,c
  1395  0001CE  6ED9               	movwf	fsr2l,c
  1396  0001D0  0E00               	movlw	high _LookUP_TABLE_COS_16
  1397  0001D2  20F4               	addwfc	prodh,w,c
  1398  0001D4  6EDA               	movwf	fsr2h,c
  1399  0001D6  50DF               	movf	indf2,w,c
  1400  0001D8  6E33               	movwf	??_State16MEF_act& (0+255),c
  1401  0001DA  5033               	movf	??_State16MEF_act,w,c
  1402  0001DC  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1403  0001DE  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1404  0001E0  EC09  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1405                           
  1406                           ;MotorDriver.c: 188: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1407  0001E4  5043               	movf	_Microstep,w,c
  1408  0001E6  0D01               	mullw	1
  1409  0001E8  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1410  0001EA  24F3               	addwf	prodl,w,c
  1411  0001EC  6ED9               	movwf	fsr2l,c
  1412  0001EE  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1413  0001F0  20F4               	addwfc	prodh,w,c
  1414  0001F2  6EDA               	movwf	fsr2h,c
  1415  0001F4  50DF               	movf	indf2,w,c
  1416  0001F6  6E33               	movwf	??_State16MEF_act& (0+255),c
  1417  0001F8  5033               	movf	??_State16MEF_act,w,c
  1418  0001FA  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1419  0001FC  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1420  0001FE  ECF1  F002         	call	_EPWM2_LoadDutyValue	;wreg free
  1421                           
  1422                           ;MotorDriver.c: 189: if (Microstep==47){
  1423  000202  0E2F               	movlw	47
  1424  000204  1843               	xorwf	_Microstep,w,c
  1425  000206  A4D8               	btfss	status,2,c
  1426  000208  D002               	goto	l1733
  1427                           
  1428                           ;MotorDriver.c: 190: EstadoActual = STATE4;
  1429  00020A  0E04               	movlw	4
  1430  00020C  6E49               	movwf	_EstadoActual,c
  1431  00020E                     l1733:
  1432                           
  1433                           ;MotorDriver.c: 191: }
  1434                           ;MotorDriver.c: 192: Microstep++;
  1435  00020E  2A43               	incf	_Microstep,f,c
  1436                           
  1437                           ;MotorDriver.c: 193: }
  1438                           ;MotorDriver.c: 194: break;
  1439  000210  0012               	return	
  1440  000212                     l1735:
  1441                           
  1442                           ;MotorDriver.c: 196: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1443  000212  0E01               	movlw	1
  1444  000214  6EB9               	movwf	4025,c	;volatile
  1445  000216  0E02               	movlw	2
  1446  000218  6E63               	movwf	3939,c	;volatile
  1447                           
  1448                           ;MotorDriver.c: 197: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1449  00021A  9A8C               	bcf	3980,5,c	;volatile
  1450  00021C  928B               	bcf	3979,1,c	;volatile
  1451                           
  1452                           ;MotorDriver.c: 198: if ((Microstep<64)&&(Microstep>47)){
  1453  00021E  5043               	movf	_Microstep,w,c
  1454  000220  0A80               	xorlw	128
  1455  000222  0F40               	addlw	-192
  1456  000224  B0D8               	btfsc	status,0,c
  1457  000226  0012               	return	
  1458  000228  5043               	movf	_Microstep,w,c
  1459  00022A  0A80               	xorlw	128
  1460  00022C  0F50               	addlw	-176
  1461  00022E  A0D8               	btfss	status,0,c
  1462  000230  0012               	return	
  1463                           
  1464                           ;MotorDriver.c: 199: EUSART1_Write(Microstep);
  1465  000232  5043               	movf	_Microstep,w,c
  1466  000234  ECEE  F003         	call	_EUSART1_Write
  1467                           
  1468                           ;MotorDriver.c: 200: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1469  000238  5043               	movf	_Microstep,w,c
  1470  00023A  0D01               	mullw	1
  1471  00023C  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1472  00023E  24F3               	addwf	prodl,w,c
  1473  000240  6ED9               	movwf	fsr2l,c
  1474  000242  0E00               	movlw	high _LookUP_TABLE_COS_16
  1475  000244  20F4               	addwfc	prodh,w,c
  1476  000246  6EDA               	movwf	fsr2h,c
  1477  000248  50DF               	movf	indf2,w,c
  1478  00024A  6E33               	movwf	??_State16MEF_act& (0+255),c
  1479  00024C  5033               	movf	??_State16MEF_act,w,c
  1480  00024E  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1481  000250  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1482  000252  EC09  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1483                           
  1484                           ;MotorDriver.c: 201: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1485  000256  5043               	movf	_Microstep,w,c
  1486  000258  0D01               	mullw	1
  1487  00025A  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1488  00025C  24F3               	addwf	prodl,w,c
  1489  00025E  6ED9               	movwf	fsr2l,c
  1490  000260  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1491  000262  20F4               	addwfc	prodh,w,c
  1492  000264  6EDA               	movwf	fsr2h,c
  1493  000266  50DF               	movf	indf2,w,c
  1494  000268  6E33               	movwf	??_State16MEF_act& (0+255),c
  1495  00026A  5033               	movf	??_State16MEF_act,w,c
  1496  00026C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1497  00026E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1498  000270  ECF1  F002         	call	_EPWM2_LoadDutyValue	;wreg free
  1499                           
  1500                           ;MotorDriver.c: 202: if (Microstep==63){
  1501  000274  0E3F               	movlw	63
  1502  000276  1843               	xorwf	_Microstep,w,c
  1503  000278  A4D8               	btfss	status,2,c
  1504  00027A  D003               	goto	l1757
  1505                           
  1506                           ;MotorDriver.c: 203: EstadoActual = STATE0;
  1507  00027C  0E00               	movlw	0
  1508  00027E  6E49               	movwf	_EstadoActual,c
  1509                           
  1510                           ;MotorDriver.c: 204: Microstep=-1;
  1511  000280  6843               	setf	_Microstep,c
  1512  000282                     l1757:
  1513                           
  1514                           ;MotorDriver.c: 205: }
  1515                           ;MotorDriver.c: 206: Microstep++;
  1516  000282  2A43               	incf	_Microstep,f,c
  1517                           
  1518                           ;MotorDriver.c: 212: }
  1519                           
  1520                           ;MotorDriver.c: 211: break;
  1521                           
  1522                           ;MotorDriver.c: 209: default:
  1523                           
  1524                           ;MotorDriver.c: 207: }
  1525                           ;MotorDriver.c: 208: break;
  1526  000284  0012               	return	
  1527  000286                     l1761:
  1528  000286  5049               	movf	_EstadoActual,w,c
  1529                           
  1530                           ; Switch size 1, requested type "space"
  1531                           ; Number of cases is 5, Range of values is 0 to 4
  1532                           ; switch strategies available:
  1533                           ; Name         Instructions Cycles
  1534                           ; simple_byte           16     9 (average)
  1535                           ;	Chosen strategy is simple_byte
  1536  000288  0A00               	xorlw	0	; case 0
  1537  00028A  B4D8               	btfsc	status,2,c
  1538  00028C  D711               	goto	l1661
  1539  00028E  0A01               	xorlw	1	; case 1
  1540  000290  B4D8               	btfsc	status,2,c
  1541  000292  D719               	goto	l1671
  1542  000294  0A03               	xorlw	3	; case 2
  1543  000296  B4D8               	btfsc	status,2,c
  1544  000298  D74A               	goto	l1691
  1545  00029A  0A01               	xorlw	1	; case 3
  1546  00029C  B4D8               	btfsc	status,2,c
  1547  00029E  D780               	goto	l1713
  1548  0002A0  0A07               	xorlw	7	; case 4
  1549  0002A2  A4D8               	btfss	status,2,c
  1550  0002A4  0012               	return	
  1551  0002A6  D7B5               	goto	l1735
  1552  0002A8                     __end_of_State16MEF_act:
  1553                           	opt stack 0
  1554                           tblptru	equ	0xFF8
  1555                           tblptrh	equ	0xFF7
  1556                           tblptrl	equ	0xFF6
  1557                           tablat	equ	0xFF5
  1558                           prodh	equ	0xFF4
  1559                           prodl	equ	0xFF3
  1560                           intcon	equ	0xFF2
  1561                           postinc0	equ	0xFEE
  1562                           wreg	equ	0xFE8
  1563                           postdec1	equ	0xFE5
  1564                           fsr1l	equ	0xFE1
  1565                           indf2	equ	0xFDF
  1566                           fsr2h	equ	0xFDA
  1567                           fsr2l	equ	0xFD9
  1568                           status	equ	0xFD8
  1569                           
  1570 ;; *************** function _EUSART1_Write *****************
  1571 ;; Defined at:
  1572 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  txData          1    wreg     unsigned char 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  txData          1   14[COMRAM] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;Total ram usage:        1 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    4
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_State16MEF_act
  1597 ;;		_ADC_Conversion
  1598 ;;		_controlador2
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text4
  1603  0007DC                     __ptext4:
  1604                           	opt stack 0
  1605  0007DC                     _EUSART1_Write:
  1606                           	opt stack 24
  1607                           
  1608                           ;incstack = 0
  1609                           ;EUSART1_Write@txData stored from wreg
  1610  0007DC  6E2F               	movwf	EUSART1_Write@txData,c
  1611  0007DE                     l337:
  1612  0007DE  A89E               	btfss	3998,4,c	;volatile
  1613  0007E0  D7FE               	goto	l337
  1614                           
  1615                           ;eusart1.c: 100: }
  1616                           ;eusart1.c: 102: TXREG1 = txData;
  1617  0007E2  C02F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1618  0007E6  0012               	return		;funcret
  1619  0007E8                     __end_of_EUSART1_Write:
  1620                           	opt stack 0
  1621                           tblptru	equ	0xFF8
  1622                           tblptrh	equ	0xFF7
  1623                           tblptrl	equ	0xFF6
  1624                           tablat	equ	0xFF5
  1625                           prodh	equ	0xFF4
  1626                           prodl	equ	0xFF3
  1627                           intcon	equ	0xFF2
  1628                           postinc0	equ	0xFEE
  1629                           wreg	equ	0xFE8
  1630                           postdec1	equ	0xFE5
  1631                           fsr1l	equ	0xFE1
  1632                           indf2	equ	0xFDF
  1633                           fsr2h	equ	0xFDA
  1634                           fsr2l	equ	0xFD9
  1635                           status	equ	0xFD8
  1636                           
  1637 ;; *************** function _EPWM2_LoadDutyValue *****************
  1638 ;; Defined at:
  1639 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;		None
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;Total ram usage:        4 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    4
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_State8MEF_act
  1664 ;;		_State16MEF_act
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text5
  1669  0005E2                     __ptext5:
  1670                           	opt stack 0
  1671  0005E2                     _EPWM2_LoadDutyValue:
  1672                           	opt stack 24
  1673                           
  1674                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  1675                           
  1676                           ;incstack = 0
  1677  0005E2  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1678  0005E6  C030  F032         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  1679  0005EA  90D8               	bcf	status,0,c
  1680  0005EC  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1681  0005EE  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1682  0005F0  90D8               	bcf	status,0,c
  1683  0005F2  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1684  0005F4  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1685  0005F6  5031               	movf	??_EPWM2_LoadDutyValue,w,c
  1686  0005F8  6E67               	movwf	3943,c	;volatile
  1687                           
  1688                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1689  0005FA  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1690  0005FE  0E03               	movlw	3
  1691  000600  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  1692  000602  3A31               	swapf	??_EPWM2_LoadDutyValue,f,c
  1693  000604  0EF0               	movlw	240
  1694  000606  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  1695  000608  5066               	movf	3942,w,c	;volatile
  1696  00060A  0BCF               	andlw	207
  1697  00060C  1031               	iorwf	??_EPWM2_LoadDutyValue,w,c
  1698  00060E  6E66               	movwf	3942,c	;volatile
  1699  000610  0012               	return		;funcret
  1700  000612                     __end_of_EPWM2_LoadDutyValue:
  1701                           	opt stack 0
  1702                           tblptru	equ	0xFF8
  1703                           tblptrh	equ	0xFF7
  1704                           tblptrl	equ	0xFF6
  1705                           tablat	equ	0xFF5
  1706                           prodh	equ	0xFF4
  1707                           prodl	equ	0xFF3
  1708                           intcon	equ	0xFF2
  1709                           postinc0	equ	0xFEE
  1710                           wreg	equ	0xFE8
  1711                           postdec1	equ	0xFE5
  1712                           fsr1l	equ	0xFE1
  1713                           indf2	equ	0xFDF
  1714                           fsr2h	equ	0xFDA
  1715                           fsr2l	equ	0xFD9
  1716                           status	equ	0xFD8
  1717                           
  1718 ;; *************** function _EPWM1_LoadDutyValue *****************
  1719 ;; Defined at:
  1720 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1737 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;Total ram usage:        4 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    4
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_State8MEF_act
  1745 ;;		_State16MEF_act
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text6
  1750  000612                     __ptext6:
  1751                           	opt stack 0
  1752  000612                     _EPWM1_LoadDutyValue:
  1753                           	opt stack 24
  1754                           
  1755                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  1756                           
  1757                           ;incstack = 0
  1758  000612  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1759  000616  C030  F032         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  1760  00061A  90D8               	bcf	status,0,c
  1761  00061C  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1762  00061E  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1763  000620  90D8               	bcf	status,0,c
  1764  000622  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1765  000624  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1766  000626  5031               	movf	??_EPWM1_LoadDutyValue,w,c
  1767  000628  6EBE               	movwf	4030,c	;volatile
  1768                           
  1769                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1770  00062A  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1771  00062E  0E03               	movlw	3
  1772  000630  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  1773  000632  3A31               	swapf	??_EPWM1_LoadDutyValue,f,c
  1774  000634  0EF0               	movlw	240
  1775  000636  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  1776  000638  50BD               	movf	4029,w,c	;volatile
  1777  00063A  0BCF               	andlw	207
  1778  00063C  1031               	iorwf	??_EPWM1_LoadDutyValue,w,c
  1779  00063E  6EBD               	movwf	4029,c	;volatile
  1780  000640  0012               	return		;funcret
  1781  000642                     __end_of_EPWM1_LoadDutyValue:
  1782                           	opt stack 0
  1783                           tblptru	equ	0xFF8
  1784                           tblptrh	equ	0xFF7
  1785                           tblptrl	equ	0xFF6
  1786                           tablat	equ	0xFF5
  1787                           prodh	equ	0xFF4
  1788                           prodl	equ	0xFF3
  1789                           intcon	equ	0xFF2
  1790                           postinc0	equ	0xFEE
  1791                           wreg	equ	0xFE8
  1792                           postdec1	equ	0xFE5
  1793                           fsr1l	equ	0xFE1
  1794                           indf2	equ	0xFDF
  1795                           fsr2h	equ	0xFDA
  1796                           fsr2l	equ	0xFD9
  1797                           status	equ	0xFD8
  1798                           
  1799 ;; *************** function _StateMEF_ini *****************
  1800 ;; Defined at:
  1801 ;;		line 33 in file "MotorDriver.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    4
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text7
  1830  0007E8                     __ptext7:
  1831                           	opt stack 0
  1832  0007E8                     _StateMEF_ini:
  1833                           	opt stack 26
  1834                           
  1835                           ;MotorDriver.c: 34: EstadoActual = STATE1;
  1836                           
  1837                           ;incstack = 0
  1838  0007E8  0E01               	movlw	1
  1839  0007EA  6E49               	movwf	_EstadoActual,c
  1840                           
  1841                           ;MotorDriver.c: 35: Microstep=0;
  1842  0007EC  0E00               	movlw	0
  1843  0007EE  6E43               	movwf	_Microstep,c
  1844  0007F0  0012               	return		;funcret
  1845  0007F2                     __end_of_StateMEF_ini:
  1846                           	opt stack 0
  1847                           tblptru	equ	0xFF8
  1848                           tblptrh	equ	0xFF7
  1849                           tblptrl	equ	0xFF6
  1850                           tablat	equ	0xFF5
  1851                           prodh	equ	0xFF4
  1852                           prodl	equ	0xFF3
  1853                           intcon	equ	0xFF2
  1854                           postinc0	equ	0xFEE
  1855                           wreg	equ	0xFE8
  1856                           postdec1	equ	0xFE5
  1857                           fsr1l	equ	0xFE1
  1858                           indf2	equ	0xFDF
  1859                           fsr2h	equ	0xFDA
  1860                           fsr2l	equ	0xFD9
  1861                           status	equ	0xFD8
  1862                           
  1863 ;; *************** function _SYSTEM_Initialize *****************
  1864 ;; Defined at:
  1865 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    6
  1886 ;; This function calls:
  1887 ;;		_ADC_Initialize
  1888 ;;		_CCP5_Initialize
  1889 ;;		_EPWM1_Initialize
  1890 ;;		_EPWM2_Initialize
  1891 ;;		_EUSART1_Initialize
  1892 ;;		_INTERRUPT_Initialize
  1893 ;;		_OSCILLATOR_Initialize
  1894 ;;		_PIN_MANAGER_Initialize
  1895 ;;		_TMR2_Initialize
  1896 ;;		_TMR6_Initialize
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text8
  1903  000642                     __ptext8:
  1904                           	opt stack 0
  1905  000642                     _SYSTEM_Initialize:
  1906                           	opt stack 24
  1907                           
  1908                           ;mcc.c: 114: INTERRUPT_Initialize();
  1909                           
  1910                           ;incstack = 0
  1911  000642  EC0C  F004         	call	_INTERRUPT_Initialize	;wreg free
  1912                           
  1913                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1914  000646  ECCB  F002         	call	_PIN_MANAGER_Initialize	;wreg free
  1915                           
  1916                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1917  00064A  ECE7  F003         	call	_OSCILLATOR_Initialize	;wreg free
  1918                           
  1919                           ;mcc.c: 117: TMR6_Initialize();
  1920  00064E  EC4A  F003         	call	_TMR6_Initialize	;wreg free
  1921                           
  1922                           ;mcc.c: 118: EPWM2_Initialize();
  1923  000652  EC5E  F003         	call	_EPWM2_Initialize	;wreg free
  1924                           
  1925                           ;mcc.c: 119: ADC_Initialize();
  1926  000656  ECC6  F003         	call	_ADC_Initialize	;wreg free
  1927                           
  1928                           ;mcc.c: 120: CCP5_Initialize();
  1929  00065A  ECDD  F003         	call	_CCP5_Initialize	;wreg free
  1930                           
  1931                           ;mcc.c: 121: EPWM1_Initialize();
  1932  00065E  EC70  F003         	call	_EPWM1_Initialize	;wreg free
  1933                           
  1934                           ;mcc.c: 122: TMR2_Initialize();
  1935  000662  EC94  F003         	call	_TMR2_Initialize	;wreg free
  1936                           
  1937                           ;mcc.c: 123: EUSART1_Initialize();
  1938  000666  ECD2  F003         	call	_EUSART1_Initialize	;wreg free
  1939  00066A  0012               	return		;funcret
  1940  00066C                     __end_of_SYSTEM_Initialize:
  1941                           	opt stack 0
  1942                           tblptru	equ	0xFF8
  1943                           tblptrh	equ	0xFF7
  1944                           tblptrl	equ	0xFF6
  1945                           tablat	equ	0xFF5
  1946                           prodh	equ	0xFF4
  1947                           prodl	equ	0xFF3
  1948                           intcon	equ	0xFF2
  1949                           postinc0	equ	0xFEE
  1950                           wreg	equ	0xFE8
  1951                           postdec1	equ	0xFE5
  1952                           fsr1l	equ	0xFE1
  1953                           indf2	equ	0xFDF
  1954                           fsr2h	equ	0xFDA
  1955                           fsr2l	equ	0xFD9
  1956                           status	equ	0xFD8
  1957                           
  1958 ;; *************** function _TMR6_Initialize *****************
  1959 ;; Defined at:
  1960 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2, status,0, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    5
  1981 ;; This function calls:
  1982 ;;		_TMR6_SetInterruptHandler
  1983 ;;		_TMR6_StartTimer
  1984 ;; This function is called by:
  1985 ;;		_SYSTEM_Initialize
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text9
  1990  000694                     __ptext9:
  1991                           	opt stack 0
  1992  000694                     _TMR6_Initialize:
  1993                           	opt stack 24
  1994                           
  1995                           ;tmr6.c: 68: T6CON = 0x01;
  1996                           
  1997                           ;incstack = 0
  1998  000694  0E01               	movlw	1
  1999  000696  010F               	movlb	15	; () banked
  2000  000698  6F4A               	movwf	74,b	;volatile
  2001                           
  2002                           ;tmr6.c: 71: PR6 = 0x3C;
  2003  00069A  0E3C               	movlw	60
  2004  00069C  010F               	movlb	15	; () banked
  2005  00069E  6F4B               	movwf	75,b	;volatile
  2006                           
  2007                           ;tmr6.c: 74: TMR6 = 0x00;
  2008  0006A0  0E00               	movlw	0
  2009  0006A2  010F               	movlb	15	; () banked
  2010  0006A4  6F4C               	movwf	76,b	;volatile
  2011                           
  2012                           ; BSR set to: 15
  2013                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
  2014  0006A6  947E               	bcf	3966,2,c	;volatile
  2015                           
  2016                           ; BSR set to: 15
  2017                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
  2018  0006A8  847D               	bsf	3965,2,c	;volatile
  2019                           
  2020                           ; BSR set to: 15
  2021                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  2022  0006AA  0E20               	movlw	low _TMR6_DefaultInterruptHandler
  2023  0006AC  6E2F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  2024  0006AE  0E08               	movlw	high _TMR6_DefaultInterruptHandler
  2025  0006B0  6E30               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  2026  0006B2  ECF9  F003         	call	_TMR6_SetInterruptHandler	;wreg free
  2027                           
  2028                           ;tmr6.c: 86: TMR6_StartTimer();
  2029  0006B6  EC07  F004         	call	_TMR6_StartTimer	;wreg free
  2030  0006BA  0012               	return		;funcret
  2031  0006BC                     __end_of_TMR6_Initialize:
  2032                           	opt stack 0
  2033                           tblptru	equ	0xFF8
  2034                           tblptrh	equ	0xFF7
  2035                           tblptrl	equ	0xFF6
  2036                           tablat	equ	0xFF5
  2037                           prodh	equ	0xFF4
  2038                           prodl	equ	0xFF3
  2039                           intcon	equ	0xFF2
  2040                           postinc0	equ	0xFEE
  2041                           wreg	equ	0xFE8
  2042                           postdec1	equ	0xFE5
  2043                           fsr1l	equ	0xFE1
  2044                           indf2	equ	0xFDF
  2045                           fsr2h	equ	0xFDA
  2046                           fsr2l	equ	0xFD9
  2047                           status	equ	0xFD8
  2048                           
  2049 ;; *************** function _TMR6_StartTimer *****************
  2050 ;; Defined at:
  2051 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		None
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;Total ram usage:        0 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    4
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_TMR6_Initialize
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text10
  2080  00080E                     __ptext10:
  2081                           	opt stack 0
  2082  00080E                     _TMR6_StartTimer:
  2083                           	opt stack 24
  2084                           
  2085                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  2086                           
  2087                           ;incstack = 0
  2088  00080E  010F               	movlb	15	; () banked
  2089  000810  854A               	bsf	74,2,b	;volatile
  2090                           
  2091                           ; BSR set to: 15
  2092  000812  0012               	return		;funcret
  2093  000814                     __end_of_TMR6_StartTimer:
  2094                           	opt stack 0
  2095                           tblptru	equ	0xFF8
  2096                           tblptrh	equ	0xFF7
  2097                           tblptrl	equ	0xFF6
  2098                           tablat	equ	0xFF5
  2099                           prodh	equ	0xFF4
  2100                           prodl	equ	0xFF3
  2101                           intcon	equ	0xFF2
  2102                           postinc0	equ	0xFEE
  2103                           wreg	equ	0xFE8
  2104                           postdec1	equ	0xFE5
  2105                           fsr1l	equ	0xFE1
  2106                           indf2	equ	0xFDF
  2107                           fsr2h	equ	0xFDA
  2108                           fsr2l	equ	0xFD9
  2109                           status	equ	0xFD8
  2110                           
  2111 ;; *************** function _TMR6_SetInterruptHandler *****************
  2112 ;; Defined at:
  2113 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  InterruptHan    2   14[COMRAM] PTR void 
  2116 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;Total ram usage:        2 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    4
  2135 ;; This function calls:
  2136 ;;		Nothing
  2137 ;; This function is called by:
  2138 ;;		_TMR6_Initialize
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text11
  2143  0007F2                     __ptext11:
  2144                           	opt stack 0
  2145  0007F2                     _TMR6_SetInterruptHandler:
  2146                           	opt stack 24
  2147                           
  2148                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  2149                           
  2150                           ; BSR set to: 15
  2151                           ;incstack = 0
  2152  0007F2  C02F  F047         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  2153  0007F6  C030  F048         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  2154  0007FA  0012               	return		;funcret
  2155  0007FC                     __end_of_TMR6_SetInterruptHandler:
  2156                           	opt stack 0
  2157                           tblptru	equ	0xFF8
  2158                           tblptrh	equ	0xFF7
  2159                           tblptrl	equ	0xFF6
  2160                           tablat	equ	0xFF5
  2161                           prodh	equ	0xFF4
  2162                           prodl	equ	0xFF3
  2163                           intcon	equ	0xFF2
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           postdec1	equ	0xFE5
  2167                           fsr1l	equ	0xFE1
  2168                           indf2	equ	0xFDF
  2169                           fsr2h	equ	0xFDA
  2170                           fsr2l	equ	0xFD9
  2171                           status	equ	0xFD8
  2172                           
  2173 ;; *************** function _TMR2_Initialize *****************
  2174 ;; Defined at:
  2175 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;Total ram usage:        0 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    5
  2196 ;; This function calls:
  2197 ;;		_TMR2_SetInterruptHandler
  2198 ;;		_TMR2_StartTimer
  2199 ;; This function is called by:
  2200 ;;		_SYSTEM_Initialize
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text12
  2205  000728                     __ptext12:
  2206                           	opt stack 0
  2207  000728                     _TMR2_Initialize:
  2208                           	opt stack 24
  2209                           
  2210                           ;tmr2.c: 69: T2CON = 0x02;
  2211                           
  2212                           ;incstack = 0
  2213  000728  0E02               	movlw	2
  2214  00072A  6EBA               	movwf	4026,c	;volatile
  2215                           
  2216                           ;tmr2.c: 72: PR2 = 0x0C;
  2217  00072C  0E0C               	movlw	12
  2218  00072E  6EBB               	movwf	4027,c	;volatile
  2219                           
  2220                           ;tmr2.c: 75: TMR2 = 0x00;
  2221  000730  0E00               	movlw	0
  2222  000732  6EBC               	movwf	4028,c	;volatile
  2223                           
  2224                           ;tmr2.c: 78: PIR1bits.TMR2IF = 0;
  2225  000734  929E               	bcf	3998,1,c	;volatile
  2226                           
  2227                           ;tmr2.c: 81: PIE1bits.TMR2IE = 1;
  2228  000736  829D               	bsf	3997,1,c	;volatile
  2229                           
  2230                           ;tmr2.c: 84: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  2231  000738  0E22               	movlw	low _TMR2_DefaultInterruptHandler
  2232  00073A  6E2F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  2233  00073C  0E08               	movlw	high _TMR2_DefaultInterruptHandler
  2234  00073E  6E30               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  2235  000740  ECFE  F003         	call	_TMR2_SetInterruptHandler	;wreg free
  2236                           
  2237                           ;tmr2.c: 87: TMR2_StartTimer();
  2238  000744  EC0A  F004         	call	_TMR2_StartTimer	;wreg free
  2239  000748  0012               	return		;funcret
  2240  00074A                     __end_of_TMR2_Initialize:
  2241                           	opt stack 0
  2242                           tblptru	equ	0xFF8
  2243                           tblptrh	equ	0xFF7
  2244                           tblptrl	equ	0xFF6
  2245                           tablat	equ	0xFF5
  2246                           prodh	equ	0xFF4
  2247                           prodl	equ	0xFF3
  2248                           intcon	equ	0xFF2
  2249                           postinc0	equ	0xFEE
  2250                           wreg	equ	0xFE8
  2251                           postdec1	equ	0xFE5
  2252                           fsr1l	equ	0xFE1
  2253                           indf2	equ	0xFDF
  2254                           fsr2h	equ	0xFDA
  2255                           fsr2l	equ	0xFD9
  2256                           status	equ	0xFD8
  2257                           
  2258 ;; *************** function _TMR2_StartTimer *****************
  2259 ;; Defined at:
  2260 ;;		line 90 in file "mcc_generated_files/tmr2.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		None
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    4
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_TMR2_Initialize
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text13
  2289  000814                     __ptext13:
  2290                           	opt stack 0
  2291  000814                     _TMR2_StartTimer:
  2292                           	opt stack 24
  2293                           
  2294                           ;tmr2.c: 93: T2CONbits.TMR2ON = 1;
  2295                           
  2296                           ;incstack = 0
  2297  000814  84BA               	bsf	4026,2,c	;volatile
  2298  000816  0012               	return		;funcret
  2299  000818                     __end_of_TMR2_StartTimer:
  2300                           	opt stack 0
  2301                           tblptru	equ	0xFF8
  2302                           tblptrh	equ	0xFF7
  2303                           tblptrl	equ	0xFF6
  2304                           tablat	equ	0xFF5
  2305                           prodh	equ	0xFF4
  2306                           prodl	equ	0xFF3
  2307                           intcon	equ	0xFF2
  2308                           postinc0	equ	0xFEE
  2309                           wreg	equ	0xFE8
  2310                           postdec1	equ	0xFE5
  2311                           fsr1l	equ	0xFE1
  2312                           indf2	equ	0xFDF
  2313                           fsr2h	equ	0xFDA
  2314                           fsr2l	equ	0xFD9
  2315                           status	equ	0xFD8
  2316                           
  2317 ;; *************** function _TMR2_SetInterruptHandler *****************
  2318 ;; Defined at:
  2319 ;;		line 144 in file "mcc_generated_files/tmr2.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;  InterruptHan    2   14[COMRAM] PTR void 
  2322 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;Total ram usage:        2 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    4
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_TMR2_Initialize
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text14
  2349  0007FC                     __ptext14:
  2350                           	opt stack 0
  2351  0007FC                     _TMR2_SetInterruptHandler:
  2352                           	opt stack 24
  2353                           
  2354                           ;tmr2.c: 145: TMR2_InterruptHandler = InterruptHandler;
  2355                           
  2356                           ;incstack = 0
  2357  0007FC  C02F  F045         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  2358  000800  C030  F046         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  2359  000804  0012               	return		;funcret
  2360  000806                     __end_of_TMR2_SetInterruptHandler:
  2361                           	opt stack 0
  2362                           tblptru	equ	0xFF8
  2363                           tblptrh	equ	0xFF7
  2364                           tblptrl	equ	0xFF6
  2365                           tablat	equ	0xFF5
  2366                           prodh	equ	0xFF4
  2367                           prodl	equ	0xFF3
  2368                           intcon	equ	0xFF2
  2369                           postinc0	equ	0xFEE
  2370                           wreg	equ	0xFE8
  2371                           postdec1	equ	0xFE5
  2372                           fsr1l	equ	0xFE1
  2373                           indf2	equ	0xFDF
  2374                           fsr2h	equ	0xFDA
  2375                           fsr2l	equ	0xFD9
  2376                           status	equ	0xFD8
  2377                           
  2378 ;; *************** function _PIN_MANAGER_Initialize *****************
  2379 ;; Defined at:
  2380 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;Total ram usage:        0 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    4
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_SYSTEM_Initialize
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text15
  2409  000596                     __ptext15:
  2410                           	opt stack 0
  2411  000596                     _PIN_MANAGER_Initialize:
  2412                           	opt stack 25
  2413                           
  2414                           ;pin_manager.c: 56: LATE = 0x00;
  2415                           
  2416                           ;incstack = 0
  2417  000596  0E00               	movlw	0
  2418  000598  6E8D               	movwf	3981,c	;volatile
  2419                           
  2420                           ;pin_manager.c: 57: LATD = 0x00;
  2421  00059A  0E00               	movlw	0
  2422  00059C  6E8C               	movwf	3980,c	;volatile
  2423                           
  2424                           ;pin_manager.c: 58: LATA = 0x00;
  2425  00059E  0E00               	movlw	0
  2426  0005A0  6E89               	movwf	3977,c	;volatile
  2427                           
  2428                           ;pin_manager.c: 59: LATB = 0x00;
  2429  0005A2  0E00               	movlw	0
  2430  0005A4  6E8A               	movwf	3978,c	;volatile
  2431                           
  2432                           ;pin_manager.c: 60: LATC = 0x00;
  2433  0005A6  0E00               	movlw	0
  2434  0005A8  6E8B               	movwf	3979,c	;volatile
  2435                           
  2436                           ;pin_manager.c: 65: TRISE = 0x07;
  2437  0005AA  0E07               	movlw	7
  2438  0005AC  6E96               	movwf	3990,c	;volatile
  2439                           
  2440                           ;pin_manager.c: 66: TRISA = 0xEB;
  2441  0005AE  0EEB               	movlw	235
  2442  0005B0  6E92               	movwf	3986,c	;volatile
  2443                           
  2444                           ;pin_manager.c: 67: TRISB = 0xBF;
  2445  0005B2  0EBF               	movlw	191
  2446  0005B4  6E93               	movwf	3987,c	;volatile
  2447                           
  2448                           ;pin_manager.c: 68: TRISC = 0xB8;
  2449  0005B6  0EB8               	movlw	184
  2450  0005B8  6E94               	movwf	3988,c	;volatile
  2451                           
  2452                           ;pin_manager.c: 69: TRISD = 0xDF;
  2453  0005BA  0EDF               	movlw	223
  2454  0005BC  6E95               	movwf	3989,c	;volatile
  2455                           
  2456                           ;pin_manager.c: 74: ANSELC = 0x38;
  2457  0005BE  0E38               	movlw	56
  2458  0005C0  010F               	movlb	15	; () banked
  2459  0005C2  6F3A               	movwf	58,b	;volatile
  2460                           
  2461                           ;pin_manager.c: 75: ANSELB = 0x3E;
  2462  0005C4  0E3E               	movlw	62
  2463  0005C6  010F               	movlb	15	; () banked
  2464  0005C8  6F39               	movwf	57,b	;volatile
  2465                           
  2466                           ;pin_manager.c: 76: ANSELD = 0xDF;
  2467  0005CA  0EDF               	movlw	223
  2468  0005CC  010F               	movlb	15	; () banked
  2469  0005CE  6F3B               	movwf	59,b	;volatile
  2470                           
  2471                           ;pin_manager.c: 77: ANSELE = 0x03;
  2472  0005D0  0E03               	movlw	3
  2473  0005D2  010F               	movlb	15	; () banked
  2474  0005D4  6F3C               	movwf	60,b	;volatile
  2475                           
  2476                           ;pin_manager.c: 78: ANSELA = 0x2B;
  2477  0005D6  0E2B               	movlw	43
  2478  0005D8  010F               	movlb	15	; () banked
  2479  0005DA  6F38               	movwf	56,b	;volatile
  2480                           
  2481                           ; BSR set to: 15
  2482                           ;pin_manager.c: 83: WPUB = 0xFF;
  2483  0005DC  6861               	setf	3937,c	;volatile
  2484                           
  2485                           ; BSR set to: 15
  2486                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  2487  0005DE  9EF1               	bcf	intcon2,7,c	;volatile
  2488                           
  2489                           ; BSR set to: 15
  2490  0005E0  0012               	return		;funcret
  2491  0005E2                     __end_of_PIN_MANAGER_Initialize:
  2492                           	opt stack 0
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           prodh	equ	0xFF4
  2498                           prodl	equ	0xFF3
  2499                           intcon	equ	0xFF2
  2500                           intcon2	equ	0xFF1
  2501                           postinc0	equ	0xFEE
  2502                           wreg	equ	0xFE8
  2503                           postdec1	equ	0xFE5
  2504                           fsr1l	equ	0xFE1
  2505                           indf2	equ	0xFDF
  2506                           fsr2h	equ	0xFDA
  2507                           fsr2l	equ	0xFD9
  2508                           status	equ	0xFD8
  2509                           
  2510 ;; *************** function _OSCILLATOR_Initialize *****************
  2511 ;; Defined at:
  2512 ;;		line 126 in file "mcc_generated_files/mcc.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;Total ram usage:        0 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    4
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_SYSTEM_Initialize
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text16
  2541  0007CE                     __ptext16:
  2542                           	opt stack 0
  2543  0007CE                     _OSCILLATOR_Initialize:
  2544                           	opt stack 25
  2545                           
  2546                           ;mcc.c: 129: OSCCON = 0x70;
  2547                           
  2548                           ; BSR set to: 15
  2549                           ;incstack = 0
  2550  0007CE  0E70               	movlw	112
  2551  0007D0  6ED3               	movwf	4051,c	;volatile
  2552                           
  2553                           ;mcc.c: 131: OSCCON2 = 0x04;
  2554  0007D2  0E04               	movlw	4
  2555  0007D4  6ED2               	movwf	4050,c	;volatile
  2556                           
  2557                           ;mcc.c: 133: OSCTUNE = 0x00;
  2558  0007D6  0E00               	movlw	0
  2559  0007D8  6E9B               	movwf	3995,c	;volatile
  2560  0007DA  0012               	return		;funcret
  2561  0007DC                     __end_of_OSCILLATOR_Initialize:
  2562                           	opt stack 0
  2563                           tblptru	equ	0xFF8
  2564                           tblptrh	equ	0xFF7
  2565                           tblptrl	equ	0xFF6
  2566                           tablat	equ	0xFF5
  2567                           prodh	equ	0xFF4
  2568                           prodl	equ	0xFF3
  2569                           intcon	equ	0xFF2
  2570                           intcon2	equ	0xFF1
  2571                           postinc0	equ	0xFEE
  2572                           wreg	equ	0xFE8
  2573                           postdec1	equ	0xFE5
  2574                           fsr1l	equ	0xFE1
  2575                           indf2	equ	0xFDF
  2576                           fsr2h	equ	0xFDA
  2577                           fsr2l	equ	0xFD9
  2578                           status	equ	0xFD8
  2579                           
  2580 ;; *************** function _INTERRUPT_Initialize *****************
  2581 ;; Defined at:
  2582 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		None
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;Total ram usage:        0 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    4
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_SYSTEM_Initialize
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text17
  2611  000818                     __ptext17:
  2612                           	opt stack 0
  2613  000818                     _INTERRUPT_Initialize:
  2614                           	opt stack 25
  2615                           
  2616                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2617                           
  2618                           ;incstack = 0
  2619  000818  9ED0               	bcf	4048,7,c	;volatile
  2620  00081A  0012               	return		;funcret
  2621  00081C                     __end_of_INTERRUPT_Initialize:
  2622                           	opt stack 0
  2623                           tblptru	equ	0xFF8
  2624                           tblptrh	equ	0xFF7
  2625                           tblptrl	equ	0xFF6
  2626                           tablat	equ	0xFF5
  2627                           prodh	equ	0xFF4
  2628                           prodl	equ	0xFF3
  2629                           intcon	equ	0xFF2
  2630                           intcon2	equ	0xFF1
  2631                           postinc0	equ	0xFEE
  2632                           wreg	equ	0xFE8
  2633                           postdec1	equ	0xFE5
  2634                           fsr1l	equ	0xFE1
  2635                           indf2	equ	0xFDF
  2636                           fsr2h	equ	0xFDA
  2637                           fsr2l	equ	0xFD9
  2638                           status	equ	0xFD8
  2639                           
  2640 ;; *************** function _EUSART1_Initialize *****************
  2641 ;; Defined at:
  2642 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;Total ram usage:        0 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    4
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_SYSTEM_Initialize
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text18
  2671  0007A4                     __ptext18:
  2672                           	opt stack 0
  2673  0007A4                     _EUSART1_Initialize:
  2674                           	opt stack 25
  2675                           
  2676                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  2677                           
  2678                           ;incstack = 0
  2679  0007A4  0E08               	movlw	8
  2680  0007A6  6EB8               	movwf	4024,c	;volatile
  2681                           
  2682                           ;eusart1.c: 63: RCSTA1 = 0x90;
  2683  0007A8  0E90               	movlw	144
  2684  0007AA  6EAB               	movwf	4011,c	;volatile
  2685                           
  2686                           ;eusart1.c: 66: TXSTA1 = 0x24;
  2687  0007AC  0E24               	movlw	36
  2688  0007AE  6EAC               	movwf	4012,c	;volatile
  2689                           
  2690                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  2691  0007B0  0EA0               	movlw	160
  2692  0007B2  6EAF               	movwf	4015,c	;volatile
  2693                           
  2694                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  2695  0007B4  0E01               	movlw	1
  2696  0007B6  6EB0               	movwf	4016,c	;volatile
  2697  0007B8  0012               	return		;funcret
  2698  0007BA                     __end_of_EUSART1_Initialize:
  2699                           	opt stack 0
  2700                           tblptru	equ	0xFF8
  2701                           tblptrh	equ	0xFF7
  2702                           tblptrl	equ	0xFF6
  2703                           tablat	equ	0xFF5
  2704                           prodh	equ	0xFF4
  2705                           prodl	equ	0xFF3
  2706                           intcon	equ	0xFF2
  2707                           intcon2	equ	0xFF1
  2708                           postinc0	equ	0xFEE
  2709                           wreg	equ	0xFE8
  2710                           postdec1	equ	0xFE5
  2711                           fsr1l	equ	0xFE1
  2712                           indf2	equ	0xFDF
  2713                           fsr2h	equ	0xFDA
  2714                           fsr2l	equ	0xFD9
  2715                           status	equ	0xFD8
  2716                           
  2717 ;; *************** function _EPWM2_Initialize *****************
  2718 ;; Defined at:
  2719 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;Total ram usage:        0 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    4
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_SYSTEM_Initialize
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text19
  2748  0006BC                     __ptext19:
  2749                           	opt stack 0
  2750  0006BC                     _EPWM2_Initialize:
  2751                           	opt stack 25
  2752                           
  2753                           ;epwm2.c: 68: CCP2CON = 0x0C;
  2754                           
  2755                           ;incstack = 0
  2756  0006BC  0E0C               	movlw	12
  2757  0006BE  6E66               	movwf	3942,c	;volatile
  2758                           
  2759                           ;epwm2.c: 71: ECCP2AS = 0x00;
  2760  0006C0  0E00               	movlw	0
  2761  0006C2  6E64               	movwf	3940,c	;volatile
  2762                           
  2763                           ;epwm2.c: 74: PWM2CON = 0x80;
  2764  0006C4  0E80               	movlw	128
  2765  0006C6  6E65               	movwf	3941,c	;volatile
  2766                           
  2767                           ;epwm2.c: 77: PSTR2CON = 0x03;
  2768  0006C8  0E03               	movlw	3
  2769  0006CA  6E63               	movwf	3939,c	;volatile
  2770                           
  2771                           ;epwm2.c: 80: CCPR2L = 0x0C;
  2772  0006CC  0E0C               	movlw	12
  2773  0006CE  6E67               	movwf	3943,c	;volatile
  2774                           
  2775                           ;epwm2.c: 83: CCPR2H = 0x00;
  2776  0006D0  0E00               	movlw	0
  2777  0006D2  6E68               	movwf	3944,c	;volatile
  2778                           
  2779                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  2780  0006D4  010F               	movlb	15	; () banked
  2781  0006D6  5149               	movf	73,w,b	;volatile
  2782  0006D8  0BE7               	andlw	-25
  2783  0006DA  0910               	iorlw	16
  2784  0006DC  6F49               	movwf	73,b	;volatile
  2785                           
  2786                           ; BSR set to: 15
  2787  0006DE  0012               	return		;funcret
  2788  0006E0                     __end_of_EPWM2_Initialize:
  2789                           	opt stack 0
  2790                           tblptru	equ	0xFF8
  2791                           tblptrh	equ	0xFF7
  2792                           tblptrl	equ	0xFF6
  2793                           tablat	equ	0xFF5
  2794                           prodh	equ	0xFF4
  2795                           prodl	equ	0xFF3
  2796                           intcon	equ	0xFF2
  2797                           intcon2	equ	0xFF1
  2798                           postinc0	equ	0xFEE
  2799                           wreg	equ	0xFE8
  2800                           postdec1	equ	0xFE5
  2801                           fsr1l	equ	0xFE1
  2802                           indf2	equ	0xFDF
  2803                           fsr2h	equ	0xFDA
  2804                           fsr2l	equ	0xFD9
  2805                           status	equ	0xFD8
  2806                           
  2807 ;; *************** function _EPWM1_Initialize *****************
  2808 ;; Defined at:
  2809 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;		None
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;Total ram usage:        0 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    4
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_SYSTEM_Initialize
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text20
  2838  0006E0                     __ptext20:
  2839                           	opt stack 0
  2840  0006E0                     _EPWM1_Initialize:
  2841                           	opt stack 25
  2842                           
  2843                           ;epwm1.c: 68: CCP1CON = 0x0C;
  2844                           
  2845                           ; BSR set to: 15
  2846                           ;incstack = 0
  2847  0006E0  0E0C               	movlw	12
  2848  0006E2  6EBD               	movwf	4029,c	;volatile
  2849                           
  2850                           ;epwm1.c: 71: ECCP1AS = 0x00;
  2851  0006E4  0E00               	movlw	0
  2852  0006E6  6EB6               	movwf	4022,c	;volatile
  2853                           
  2854                           ;epwm1.c: 74: PWM1CON = 0x80;
  2855  0006E8  0E80               	movlw	128
  2856  0006EA  6EB7               	movwf	4023,c	;volatile
  2857                           
  2858                           ;epwm1.c: 77: PSTR1CON = 0x03;
  2859  0006EC  0E03               	movlw	3
  2860  0006EE  6EB9               	movwf	4025,c	;volatile
  2861                           
  2862                           ;epwm1.c: 80: CCPR1L = 0x0C;
  2863  0006F0  0E0C               	movlw	12
  2864  0006F2  6EBE               	movwf	4030,c	;volatile
  2865                           
  2866                           ;epwm1.c: 83: CCPR1H = 0x00;
  2867  0006F4  0E00               	movlw	0
  2868  0006F6  6EBF               	movwf	4031,c	;volatile
  2869                           
  2870                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  2871  0006F8  010F               	movlb	15	; () banked
  2872  0006FA  5149               	movf	73,w,b	;volatile
  2873  0006FC  0BFC               	andlw	-4
  2874  0006FE  0902               	iorlw	2
  2875  000700  6F49               	movwf	73,b	;volatile
  2876                           
  2877                           ; BSR set to: 15
  2878  000702  0012               	return		;funcret
  2879  000704                     __end_of_EPWM1_Initialize:
  2880                           	opt stack 0
  2881                           tblptru	equ	0xFF8
  2882                           tblptrh	equ	0xFF7
  2883                           tblptrl	equ	0xFF6
  2884                           tablat	equ	0xFF5
  2885                           prodh	equ	0xFF4
  2886                           prodl	equ	0xFF3
  2887                           intcon	equ	0xFF2
  2888                           intcon2	equ	0xFF1
  2889                           postinc0	equ	0xFEE
  2890                           wreg	equ	0xFE8
  2891                           postdec1	equ	0xFE5
  2892                           fsr1l	equ	0xFE1
  2893                           indf2	equ	0xFDF
  2894                           fsr2h	equ	0xFDA
  2895                           fsr2l	equ	0xFD9
  2896                           status	equ	0xFD8
  2897                           
  2898 ;; *************** function _CCP5_Initialize *****************
  2899 ;; Defined at:
  2900 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;		None
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;		None
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;Total ram usage:        0 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    4
  2921 ;; This function calls:
  2922 ;;		Nothing
  2923 ;; This function is called by:
  2924 ;;		_SYSTEM_Initialize
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text21
  2929  0007BA                     __ptext21:
  2930                           	opt stack 0
  2931  0007BA                     _CCP5_Initialize:
  2932                           	opt stack 25
  2933                           
  2934                           ;ccp5.c: 60: CCP5CON = 0x00;
  2935                           
  2936                           ; BSR set to: 15
  2937                           ;incstack = 0
  2938  0007BA  0E00               	movlw	0
  2939  0007BC  010F               	movlb	15	; () banked
  2940  0007BE  6F54               	movwf	84,b	;volatile
  2941                           
  2942                           ;ccp5.c: 62: CCPR5L = 0x00;
  2943  0007C0  0E00               	movlw	0
  2944  0007C2  010F               	movlb	15	; () banked
  2945  0007C4  6F55               	movwf	85,b	;volatile
  2946                           
  2947                           ;ccp5.c: 64: CCPR5H = 0x00;
  2948  0007C6  0E00               	movlw	0
  2949  0007C8  010F               	movlb	15	; () banked
  2950  0007CA  6F56               	movwf	86,b	;volatile
  2951                           
  2952                           ; BSR set to: 15
  2953  0007CC  0012               	return		;funcret
  2954  0007CE                     __end_of_CCP5_Initialize:
  2955                           	opt stack 0
  2956                           tblptru	equ	0xFF8
  2957                           tblptrh	equ	0xFF7
  2958                           tblptrl	equ	0xFF6
  2959                           tablat	equ	0xFF5
  2960                           prodh	equ	0xFF4
  2961                           prodl	equ	0xFF3
  2962                           intcon	equ	0xFF2
  2963                           intcon2	equ	0xFF1
  2964                           postinc0	equ	0xFEE
  2965                           wreg	equ	0xFE8
  2966                           postdec1	equ	0xFE5
  2967                           fsr1l	equ	0xFE1
  2968                           indf2	equ	0xFDF
  2969                           fsr2h	equ	0xFDA
  2970                           fsr2l	equ	0xFD9
  2971                           status	equ	0xFD8
  2972                           
  2973 ;; *************** function _ADC_Initialize *****************
  2974 ;; Defined at:
  2975 ;;		line 61 in file "mcc_generated_files/adc.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;Total ram usage:        0 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    4
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_SYSTEM_Initialize
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text22
  3004  00078C                     __ptext22:
  3005                           	opt stack 0
  3006  00078C                     _ADC_Initialize:
  3007                           	opt stack 25
  3008                           
  3009                           ;adc.c: 66: ADCON0 = 0x01;
  3010                           
  3011                           ; BSR set to: 15
  3012                           ;incstack = 0
  3013  00078C  0E01               	movlw	1
  3014  00078E  6EC2               	movwf	4034,c	;volatile
  3015                           
  3016                           ;adc.c: 69: ADCON1 = 0x00;
  3017  000790  0E00               	movlw	0
  3018  000792  6EC1               	movwf	4033,c	;volatile
  3019                           
  3020                           ;adc.c: 72: ADCON2 = 0x05;
  3021  000794  0E05               	movlw	5
  3022  000796  6EC0               	movwf	4032,c	;volatile
  3023                           
  3024                           ;adc.c: 75: ADRESL = 0x00;
  3025  000798  0E00               	movlw	0
  3026  00079A  6EC3               	movwf	4035,c	;volatile
  3027                           
  3028                           ;adc.c: 78: ADRESH = 0x00;
  3029  00079C  0E00               	movlw	0
  3030  00079E  6EC4               	movwf	4036,c	;volatile
  3031                           
  3032                           ;adc.c: 81: PIE1bits.ADIE = 1;
  3033  0007A0  8C9D               	bsf	3997,6,c	;volatile
  3034  0007A2  0012               	return		;funcret
  3035  0007A4                     __end_of_ADC_Initialize:
  3036                           	opt stack 0
  3037                           tblptru	equ	0xFF8
  3038                           tblptrh	equ	0xFF7
  3039                           tblptrl	equ	0xFF6
  3040                           tablat	equ	0xFF5
  3041                           prodh	equ	0xFF4
  3042                           prodl	equ	0xFF3
  3043                           intcon	equ	0xFF2
  3044                           intcon2	equ	0xFF1
  3045                           postinc0	equ	0xFEE
  3046                           wreg	equ	0xFE8
  3047                           postdec1	equ	0xFE5
  3048                           fsr1l	equ	0xFE1
  3049                           indf2	equ	0xFDF
  3050                           fsr2h	equ	0xFDA
  3051                           fsr2l	equ	0xFD9
  3052                           status	equ	0xFD8
  3053                           
  3054 ;; *************** function _INTERRUPT_InterruptManager *****************
  3055 ;; Defined at:
  3056 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;		None
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;		None
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;Total ram usage:       14 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:    3
  3077 ;; This function calls:
  3078 ;;		_ADC_ISR
  3079 ;;		_TMR2_ISR
  3080 ;;		_TMR6_ISR
  3081 ;; This function is called by:
  3082 ;;		Interrupt level 2
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	intcode
  3087  000008                     __pintcode:
  3088                           	opt stack 0
  3089  000008                     _INTERRUPT_InterruptManager:
  3090                           	opt stack 24
  3091                           
  3092                           ;incstack = 0
  3093  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3094  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  3095  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3096  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3097  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3098  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3099  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3100  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3101  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3102  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3103  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3104  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3105  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3106  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3107  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3108                           
  3109                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  3110  000042  BCF2               	btfsc	intcon,6,c	;volatile
  3111  000044  AC9D               	btfss	3997,6,c	;volatile
  3112  000046  D005               	goto	i2l268
  3113  000048  AC9E               	btfss	3998,6,c	;volatile
  3114  00004A  D003               	goto	i2l268
  3115                           
  3116                           ;interrupt_manager.c: 61: {
  3117                           ;interrupt_manager.c: 62: ADC_ISR();
  3118  00004C  EC0E  F004         	call	_ADC_ISR	;wreg free
  3119                           
  3120                           ;interrupt_manager.c: 63: }
  3121  000050  D00E               	goto	i2l274
  3122  000052                     i2l268:
  3123                           
  3124                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  3125  000052  BCF2               	btfsc	intcon,6,c	;volatile
  3126  000054  A47D               	btfss	3965,2,c	;volatile
  3127  000056  D005               	goto	i2l270
  3128  000058  A47E               	btfss	3966,2,c	;volatile
  3129  00005A  D003               	goto	i2l270
  3130                           
  3131                           ;interrupt_manager.c: 65: {
  3132                           ;interrupt_manager.c: 66: TMR6_ISR();
  3133  00005C  ECA5  F003         	call	_TMR6_ISR	;wreg free
  3134                           
  3135                           ;interrupt_manager.c: 67: }
  3136  000060  D006               	goto	i2l274
  3137  000062                     i2l270:
  3138                           
  3139                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  3140  000062  BCF2               	btfsc	intcon,6,c	;volatile
  3141  000064  A29D               	btfss	3997,1,c	;volatile
  3142  000066  D003               	goto	i2l274
  3143  000068  B29E               	btfsc	3998,1,c	;volatile
  3144                           
  3145                           ;interrupt_manager.c: 69: {
  3146                           ;interrupt_manager.c: 70: TMR2_ISR();
  3147  00006A  EC03  F004         	call	_TMR2_ISR	;wreg free
  3148  00006E                     i2l274:
  3149  00006E  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3150  000072  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3151  000076  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3152  00007A  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3153  00007E  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3154  000082  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3155  000086  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3156  00008A  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3157  00008E  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3158  000092  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3159  000096  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3160  00009A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3161  00009E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3162  0000A2  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3163  0000A6  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3164  0000A8  0011               	retfie		f
  3165  0000AA                     __end_of_INTERRUPT_InterruptManager:
  3166                           	opt stack 0
  3167                           pclatu	equ	0xFFB
  3168                           pclath	equ	0xFFA
  3169                           tblptru	equ	0xFF8
  3170                           tblptrh	equ	0xFF7
  3171                           tblptrl	equ	0xFF6
  3172                           tablat	equ	0xFF5
  3173                           prodh	equ	0xFF4
  3174                           prodl	equ	0xFF3
  3175                           intcon	equ	0xFF2
  3176                           intcon2	equ	0xFF1
  3177                           postinc0	equ	0xFEE
  3178                           fsr0h	equ	0xFEA
  3179                           fsr0l	equ	0xFE9
  3180                           wreg	equ	0xFE8
  3181                           postdec1	equ	0xFE5
  3182                           fsr1h	equ	0xFE2
  3183                           fsr1l	equ	0xFE1
  3184                           indf2	equ	0xFDF
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           
  3189 ;; *************** function _TMR6_ISR *****************
  3190 ;; Defined at:
  3191 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;Total ram usage:        0 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    1
  3212 ;; This function calls:
  3213 ;;		Absolute function
  3214 ;;		_TMR6_DefaultInterruptHandler
  3215 ;; This function is called by:
  3216 ;;		_INTERRUPT_InterruptManager
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text24
  3221  00074A                     __ptext24:
  3222                           	opt stack 0
  3223  00074A                     _TMR6_ISR:
  3224                           	opt stack 25
  3225                           
  3226                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  3227                           
  3228                           ;incstack = 0
  3229  00074A  947E               	bcf	3966,2,c	;volatile
  3230                           
  3231                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  3232  00074C  5047               	movf	_TMR6_InterruptHandler,w,c
  3233  00074E  1048               	iorwf	_TMR6_InterruptHandler+1,w,c
  3234  000750  B4D8               	btfsc	status,2,c
  3235  000752  0012               	return	
  3236                           
  3237                           ;tmr6.c: 128: {
  3238                           ;tmr6.c: 129: TMR6_InterruptHandler();
  3239  000754  D801               	call	i2u27_48
  3240  000756  0012               	return	
  3241  000758                     i2u27_48:
  3242  000758  0005               	push	
  3243  00075A  6EFA               	movwf	pclath,c
  3244  00075C  5047               	movf	_TMR6_InterruptHandler,w,c
  3245  00075E  6EFD               	movwf	tosl,c
  3246  000760  5048               	movf	_TMR6_InterruptHandler+1,w,c
  3247  000762  6EFE               	movwf	tosh,c
  3248  000764  50F8               	movf	tblptru,w,c
  3249  000766  6EFF               	movwf	tosu,c
  3250  000768  50FA               	movf	pclath,w,c
  3251  00076A  0012               	return		;indir
  3252  00076C                     __end_of_TMR6_ISR:
  3253                           	opt stack 0
  3254                           tosu	equ	0xFFF
  3255                           tosh	equ	0xFFE
  3256                           tosl	equ	0xFFD
  3257                           pclatu	equ	0xFFB
  3258                           pclath	equ	0xFFA
  3259                           tblptru	equ	0xFF8
  3260                           tblptrh	equ	0xFF7
  3261                           tblptrl	equ	0xFF6
  3262                           tablat	equ	0xFF5
  3263                           prodh	equ	0xFF4
  3264                           prodl	equ	0xFF3
  3265                           intcon	equ	0xFF2
  3266                           intcon2	equ	0xFF1
  3267                           postinc0	equ	0xFEE
  3268                           fsr0h	equ	0xFEA
  3269                           fsr0l	equ	0xFE9
  3270                           wreg	equ	0xFE8
  3271                           postdec1	equ	0xFE5
  3272                           fsr1h	equ	0xFE2
  3273                           fsr1l	equ	0xFE1
  3274                           indf2	equ	0xFDF
  3275                           fsr2h	equ	0xFDA
  3276                           fsr2l	equ	0xFD9
  3277                           status	equ	0xFD8
  3278                           
  3279 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  3280 ;; Defined at:
  3281 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		None
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;Total ram usage:        0 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_TMR6_Initialize
  3305 ;;		_TMR6_ISR
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text25
  3310  000820                     __ptext25:
  3311                           	opt stack 0
  3312  000820                     _TMR6_DefaultInterruptHandler:
  3313                           	opt stack 25
  3314                           
  3315                           ;incstack = 0
  3316  000820  0012               	return		;funcret
  3317  000822                     __end_of_TMR6_DefaultInterruptHandler:
  3318                           	opt stack 0
  3319                           tosu	equ	0xFFF
  3320                           tosh	equ	0xFFE
  3321                           tosl	equ	0xFFD
  3322                           pclatu	equ	0xFFB
  3323                           pclath	equ	0xFFA
  3324                           tblptru	equ	0xFF8
  3325                           tblptrh	equ	0xFF7
  3326                           tblptrl	equ	0xFF6
  3327                           tablat	equ	0xFF5
  3328                           prodh	equ	0xFF4
  3329                           prodl	equ	0xFF3
  3330                           intcon	equ	0xFF2
  3331                           intcon2	equ	0xFF1
  3332                           postinc0	equ	0xFEE
  3333                           fsr0h	equ	0xFEA
  3334                           fsr0l	equ	0xFE9
  3335                           wreg	equ	0xFE8
  3336                           postdec1	equ	0xFE5
  3337                           fsr1h	equ	0xFE2
  3338                           fsr1l	equ	0xFE1
  3339                           indf2	equ	0xFDF
  3340                           fsr2h	equ	0xFDA
  3341                           fsr2l	equ	0xFD9
  3342                           status	equ	0xFD8
  3343                           
  3344 ;; *************** function _TMR2_ISR *****************
  3345 ;; Defined at:
  3346 ;;		line 122 in file "mcc_generated_files/tmr2.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;		None
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;Total ram usage:        0 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    2
  3367 ;; This function calls:
  3368 ;;		_TMR2_CallBack
  3369 ;; This function is called by:
  3370 ;;		_INTERRUPT_InterruptManager
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text26
  3375  000806                     __ptext26:
  3376                           	opt stack 0
  3377  000806                     _TMR2_ISR:
  3378                           	opt stack 24
  3379                           
  3380                           ;tmr2.c: 126: PIR1bits.TMR2IF = 0;
  3381                           
  3382                           ;incstack = 0
  3383  000806  929E               	bcf	3998,1,c	;volatile
  3384                           
  3385                           ;tmr2.c: 130: TMR2_CallBack();
  3386  000808  EC82  F003         	call	_TMR2_CallBack	;wreg free
  3387  00080C  0012               	return		;funcret
  3388  00080E                     __end_of_TMR2_ISR:
  3389                           	opt stack 0
  3390                           tosu	equ	0xFFF
  3391                           tosh	equ	0xFFE
  3392                           tosl	equ	0xFFD
  3393                           pclatu	equ	0xFFB
  3394                           pclath	equ	0xFFA
  3395                           tblptru	equ	0xFF8
  3396                           tblptrh	equ	0xFF7
  3397                           tblptrl	equ	0xFF6
  3398                           tablat	equ	0xFF5
  3399                           prodh	equ	0xFF4
  3400                           prodl	equ	0xFF3
  3401                           intcon	equ	0xFF2
  3402                           intcon2	equ	0xFF1
  3403                           postinc0	equ	0xFEE
  3404                           fsr0h	equ	0xFEA
  3405                           fsr0l	equ	0xFE9
  3406                           wreg	equ	0xFE8
  3407                           postdec1	equ	0xFE5
  3408                           fsr1h	equ	0xFE2
  3409                           fsr1l	equ	0xFE1
  3410                           indf2	equ	0xFDF
  3411                           fsr2h	equ	0xFDA
  3412                           fsr2l	equ	0xFD9
  3413                           status	equ	0xFD8
  3414                           
  3415 ;; *************** function _TMR2_CallBack *****************
  3416 ;; Defined at:
  3417 ;;		line 133 in file "mcc_generated_files/tmr2.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;		None
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;		None
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;Total ram usage:        0 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; Hardware stack levels required when called:    1
  3438 ;; This function calls:
  3439 ;;		Absolute function
  3440 ;;		_TMR2_DefaultInterruptHandler
  3441 ;; This function is called by:
  3442 ;;		_TMR2_ISR
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text27
  3447  000704                     __ptext27:
  3448                           	opt stack 0
  3449  000704                     _TMR2_CallBack:
  3450                           	opt stack 24
  3451                           
  3452                           ;tmr2.c: 136: Timer2Ticked=1;
  3453                           
  3454                           ;incstack = 0
  3455  000704  0E01               	movlw	1
  3456  000706  6E44               	movwf	_Timer2Ticked,c	;volatile
  3457                           
  3458                           ;tmr2.c: 138: if(TMR2_InterruptHandler)
  3459  000708  5045               	movf	_TMR2_InterruptHandler,w,c
  3460  00070A  1046               	iorwf	_TMR2_InterruptHandler+1,w,c
  3461  00070C  B4D8               	btfsc	status,2,c
  3462  00070E  0012               	return	
  3463                           
  3464                           ;tmr2.c: 139: {
  3465                           ;tmr2.c: 140: TMR2_InterruptHandler();
  3466  000710  D801               	call	i2u3_48
  3467  000712  0012               	return	
  3468  000714                     i2u3_48:
  3469  000714  0005               	push	
  3470  000716  6EFA               	movwf	pclath,c
  3471  000718  5045               	movf	_TMR2_InterruptHandler,w,c
  3472  00071A  6EFD               	movwf	tosl,c
  3473  00071C  5046               	movf	_TMR2_InterruptHandler+1,w,c
  3474  00071E  6EFE               	movwf	tosh,c
  3475  000720  50F8               	movf	tblptru,w,c
  3476  000722  6EFF               	movwf	tosu,c
  3477  000724  50FA               	movf	pclath,w,c
  3478  000726  0012               	return		;indir
  3479  000728                     __end_of_TMR2_CallBack:
  3480                           	opt stack 0
  3481                           tosu	equ	0xFFF
  3482                           tosh	equ	0xFFE
  3483                           tosl	equ	0xFFD
  3484                           pclatu	equ	0xFFB
  3485                           pclath	equ	0xFFA
  3486                           tblptru	equ	0xFF8
  3487                           tblptrh	equ	0xFF7
  3488                           tblptrl	equ	0xFF6
  3489                           tablat	equ	0xFF5
  3490                           prodh	equ	0xFF4
  3491                           prodl	equ	0xFF3
  3492                           intcon	equ	0xFF2
  3493                           intcon2	equ	0xFF1
  3494                           postinc0	equ	0xFEE
  3495                           fsr0h	equ	0xFEA
  3496                           fsr0l	equ	0xFE9
  3497                           wreg	equ	0xFE8
  3498                           postdec1	equ	0xFE5
  3499                           fsr1h	equ	0xFE2
  3500                           fsr1l	equ	0xFE1
  3501                           indf2	equ	0xFDF
  3502                           fsr2h	equ	0xFDA
  3503                           fsr2l	equ	0xFD9
  3504                           status	equ	0xFD8
  3505                           
  3506 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3507 ;; Defined at:
  3508 ;;		line 148 in file "mcc_generated_files/tmr2.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		None
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;Total ram usage:        0 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_TMR2_Initialize
  3532 ;;		_TMR2_CallBack
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text28
  3537  000822                     __ptext28:
  3538                           	opt stack 0
  3539  000822                     _TMR2_DefaultInterruptHandler:
  3540                           	opt stack 24
  3541                           
  3542                           ;incstack = 0
  3543  000822  0012               	return		;funcret
  3544  000824                     __end_of_TMR2_DefaultInterruptHandler:
  3545                           	opt stack 0
  3546                           tosu	equ	0xFFF
  3547                           tosh	equ	0xFFE
  3548                           tosl	equ	0xFFD
  3549                           pclatu	equ	0xFFB
  3550                           pclath	equ	0xFFA
  3551                           tblptru	equ	0xFF8
  3552                           tblptrh	equ	0xFF7
  3553                           tblptrl	equ	0xFF6
  3554                           tablat	equ	0xFF5
  3555                           prodh	equ	0xFF4
  3556                           prodl	equ	0xFF3
  3557                           intcon	equ	0xFF2
  3558                           intcon2	equ	0xFF1
  3559                           postinc0	equ	0xFEE
  3560                           fsr0h	equ	0xFEA
  3561                           fsr0l	equ	0xFE9
  3562                           wreg	equ	0xFE8
  3563                           postdec1	equ	0xFE5
  3564                           fsr1h	equ	0xFE2
  3565                           fsr1l	equ	0xFE1
  3566                           indf2	equ	0xFDF
  3567                           fsr2h	equ	0xFDA
  3568                           fsr2l	equ	0xFD9
  3569                           status	equ	0xFD8
  3570                           
  3571 ;; *************** function _ADC_ISR *****************
  3572 ;; Defined at:
  3573 ;;		line 144 in file "mcc_generated_files/adc.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		None
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;Total ram usage:        0 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_INTERRUPT_InterruptManager
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text29
  3601  00081C                     __ptext29:
  3602                           	opt stack 0
  3603  00081C                     _ADC_ISR:
  3604                           	opt stack 26
  3605                           
  3606                           ;adc.c: 149: PIR1bits.ADIF = 0;
  3607                           
  3608                           ;incstack = 0
  3609  00081C  9C9E               	bcf	3998,6,c	;volatile
  3610  00081E  0012               	return		;funcret
  3611  000820                     __end_of_ADC_ISR:
  3612                           	opt stack 0
  3613  0000                     tosu	equ	0xFFF
  3614                           tosh	equ	0xFFE
  3615                           tosl	equ	0xFFD
  3616                           pclatu	equ	0xFFB
  3617                           pclath	equ	0xFFA
  3618                           tblptru	equ	0xFF8
  3619                           tblptrh	equ	0xFF7
  3620                           tblptrl	equ	0xFF6
  3621                           tablat	equ	0xFF5
  3622                           prodh	equ	0xFF4
  3623                           prodl	equ	0xFF3
  3624                           intcon	equ	0xFF2
  3625                           intcon2	equ	0xFF1
  3626                           postinc0	equ	0xFEE
  3627                           fsr0h	equ	0xFEA
  3628                           fsr0l	equ	0xFE9
  3629                           wreg	equ	0xFE8
  3630                           postdec1	equ	0xFE5
  3631                           fsr1h	equ	0xFE2
  3632                           fsr1l	equ	0xFE1
  3633                           indf2	equ	0xFDF
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           tosu	equ	0xFFF
  3638                           tosh	equ	0xFFE
  3639                           tosl	equ	0xFFD
  3640                           pclatu	equ	0xFFB
  3641                           pclath	equ	0xFFA
  3642                           tblptru	equ	0xFF8
  3643                           tblptrh	equ	0xFF7
  3644                           tblptrl	equ	0xFF6
  3645                           tablat	equ	0xFF5
  3646                           prodh	equ	0xFF4
  3647                           prodl	equ	0xFF3
  3648                           intcon	equ	0xFF2
  3649                           intcon2	equ	0xFF1
  3650                           postinc0	equ	0xFEE
  3651                           fsr0h	equ	0xFEA
  3652                           fsr0l	equ	0xFE9
  3653                           wreg	equ	0xFE8
  3654                           postdec1	equ	0xFE5
  3655                           fsr1h	equ	0xFE2
  3656                           fsr1l	equ	0xFE1
  3657                           indf2	equ	0xFDF
  3658                           fsr2h	equ	0xFDA
  3659                           fsr2l	equ	0xFD9
  3660                           status	equ	0xFD8
  3661                           
  3662                           	psect	text30
  3663  000000                     __ptext30:
  3664                           	opt stack 0
  3665                           tosu	equ	0xFFF
  3666                           tosh	equ	0xFFE
  3667                           tosl	equ	0xFFD
  3668                           pclatu	equ	0xFFB
  3669                           pclath	equ	0xFFA
  3670                           tblptru	equ	0xFF8
  3671                           tblptrh	equ	0xFF7
  3672                           tblptrl	equ	0xFF6
  3673                           tablat	equ	0xFF5
  3674                           prodh	equ	0xFF4
  3675                           prodl	equ	0xFF3
  3676                           intcon	equ	0xFF2
  3677                           intcon2	equ	0xFF1
  3678                           postinc0	equ	0xFEE
  3679                           fsr0h	equ	0xFEA
  3680                           fsr0l	equ	0xFE9
  3681                           wreg	equ	0xFE8
  3682                           postdec1	equ	0xFE5
  3683                           fsr1h	equ	0xFE2
  3684                           fsr1l	equ	0xFE1
  3685                           indf2	equ	0xFDF
  3686                           fsr2h	equ	0xFDA
  3687                           fsr2l	equ	0xFD9
  3688                           status	equ	0xFD8
  3689                           
  3690                           	psect	rparam
  3691  0000                     tosu	equ	0xFFF
  3692                           tosh	equ	0xFFE
  3693                           tosl	equ	0xFFD
  3694                           pclatu	equ	0xFFB
  3695                           pclath	equ	0xFFA
  3696                           tblptru	equ	0xFF8
  3697                           tblptrh	equ	0xFF7
  3698                           tblptrl	equ	0xFF6
  3699                           tablat	equ	0xFF5
  3700                           prodh	equ	0xFF4
  3701                           prodl	equ	0xFF3
  3702                           intcon	equ	0xFF2
  3703                           intcon2	equ	0xFF1
  3704                           postinc0	equ	0xFEE
  3705                           fsr0h	equ	0xFEA
  3706                           fsr0l	equ	0xFE9
  3707                           wreg	equ	0xFE8
  3708                           postdec1	equ	0xFE5
  3709                           fsr1h	equ	0xFE2
  3710                           fsr1l	equ	0xFE1
  3711                           indf2	equ	0xFDF
  3712                           fsr2h	equ	0xFDA
  3713                           fsr2l	equ	0xFD9
  3714                           status	equ	0xFD8
  3715                           
  3716                           	psect	temp
  3717  00004A                     btemp:
  3718                           	opt stack 0
  3719  00004A                     	ds	1
  3720  0000                     int$flags	set	btemp
  3721                           tosu	equ	0xFFF
  3722                           tosh	equ	0xFFE
  3723                           tosl	equ	0xFFD
  3724                           pclatu	equ	0xFFB
  3725                           pclath	equ	0xFFA
  3726                           tblptru	equ	0xFF8
  3727                           tblptrh	equ	0xFF7
  3728                           tblptrl	equ	0xFF6
  3729                           tablat	equ	0xFF5
  3730                           prodh	equ	0xFF4
  3731                           prodl	equ	0xFF3
  3732                           intcon	equ	0xFF2
  3733                           intcon2	equ	0xFF1
  3734                           postinc0	equ	0xFEE
  3735                           fsr0h	equ	0xFEA
  3736                           fsr0l	equ	0xFE9
  3737                           wreg	equ	0xFE8
  3738                           postdec1	equ	0xFE5
  3739                           fsr1h	equ	0xFE2
  3740                           fsr1l	equ	0xFE1
  3741                           indf2	equ	0xFDF
  3742                           fsr2h	equ	0xFDA
  3743                           fsr2l	equ	0xFD9
  3744                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        192
    BSS         11
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      73
    BANK0           160      0     160
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StepMove
    _StepMove->_State16MEF_act
    _StepMove->_State8MEF_act
    _State8MEF_act->_EPWM1_LoadDutyValue
    _State8MEF_act->_EPWM2_LoadDutyValue
    _State16MEF_act->_EPWM1_LoadDutyValue
    _State16MEF_act->_EPWM2_LoadDutyValue
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2420
                  _SYSTEM_Initialize
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StepMove                                             6     2      4    2248
                                             19 COMRAM     6     2      4
                     _State16MEF_act
                      _State8MEF_act
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act                                        7     7      0     984
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act                                       1     1      0    1006
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2     492
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     492
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_ini
   _StepMove
     _State16MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _EUSART1_Write
     _State8MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      49       1       77.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E9      12        0.0%
DATA                 0      0      E9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Jun 09 11:44:57 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 0806  
                       ??_TMR6_StartTimer 002F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l337 07DE                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _PR6 000F4B                           __end_of_ADC_ISR 0820  
                         _TMR2_Initialize 0728                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                __end_of_EPWM2_Initialize 06E0                           _CCP5_Initialize 07BA  
                                    l1601 0322                                      l1711 019C  
                                    l1615 034E                                      l1713 01A0  
                                    l1633 03BA                                      l1617 0352  
                                    l1801 0590                                      l1635 03BE  
                                    l1733 020E                                      l1661 00B0  
                                    l1653 0428                                      l1735 0212  
                                    l1671 00C6                                      l1575 02AA  
                                    l1761 0286                                      l1585 02C0  
                                    l1657 042C                                      l1691 012E  
                                    l1827 067E                                      l1757 0282  
                                    l1599 031E                                      l1689 012A  
                                    l1795 0580                                      l1797 0584  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _TMR2 000FBC  
                                    _TMR6 000F4C                                      _WPUB 000F61  
                           _EUSART1_Write 07DC                                      _main 066C  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 004A  
                           __CFG_BORV$190 000000                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00AA  
                           __CFG_IESO$OFF 000000                     ??_EPWM1_LoadDutyValue 0031  
                            ___param_bank 000000            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 07DC                                     ?_main 0021  
                                   _T2CON 000FBA                                     _T6CON 000F4A  
                          __CFG_DEBUG$OFF 000000                                     i2l270 0062  
                                   i2l274 006E                                     i2l268 0052  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000         __size_of_TMR6_SetInterruptHandler 000A  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                 ?_TMR6_SetInterruptHandler 002F  
                        __end_of_TMR2_ISR 080E                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                        __end_of_TMR6_ISR 076C                            __CFG_EBTRB$OFF 000000  
                        _LookUP_TABLE_COS 0001                          _LookUP_TABLE_SEN 00E0  
                      __CFG_MCLRE$EXTMCLR 000000                        StepMove@StepNumber 0034  
                          ?_EUSART1_Write 0021                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 0814  
                          __CFG_PBADEN$ON 000000            ??_TMR6_DefaultInterruptHandler 0021  
                         __initialization 04EE                __end_of_EUSART1_Initialize 07BA  
                            __end_of_main 0694                   __end_of_TMR2_Initialize 074A  
                               ??_ADC_ISR 0021               ?_INTERRUPT_InterruptManager 0021  
                _TMR2_SetInterruptHandler 07FC                                    ??_main 003A  
                 __end_of_CCP5_Initialize 07CE                             __activetblptr 000002  
                         _TMR6_Initialize 0694                          __end_of_StepMove 0596  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1H 000FBF  
                                  _CCPR2H 000F68                                    _CCPR1L 000FBE  
                                  _CCPR2L 000F67                                    _CCPR5H 000F56  
                                  _CCPR5L 000F55                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAE  
                                  _RCSTA1 000FAB                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                    i2u3_48 0714  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                          __CFG_XINST$OFF 000000                              _CCPTMRS0bits 000F49  
                          __CFG_STVREN$ON 000000                   __size_of_State16MEF_act 01FA  
                                  clear_0 0534                              __pdataCOMRAM 0001  
                StepMove@microstep_number 0037                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                         ??_EUSART1_Write 002F                       _EPWM2_LoadDutyValue 05E2  
                 __end_of_TMR2_StartTimer 0818  TMR2_SetInterruptHandler@InterruptHandler 002F  
TMR6_SetInterruptHandler@InterruptHandler 002F             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 0642                                __accesstop 0060  
                 __end_of__initialization 053A                     __end_of_TMR2_CallBack 0728  
                      ?_SYSTEM_Initialize 0021                           _TMR6_StartTimer 080E  
                           ___rparam_used 000001                         ?_EPWM1_Initialize 0021  
                          __pcstackCOMRAM 0021                      ?_EPWM2_LoadDutyValue 002F  
                            __pidataBANK0 044E                       ??_SYSTEM_Initialize 0031  
                   __end_of_State8MEF_act 044E                                 ?_TMR2_ISR 0021  
                               ?_TMR6_ISR 0021                        ??_EPWM1_Initialize 002F  
                        ?_TMR2_Initialize 0021                   __end_of_TMR6_Initialize 06BC  
                        ?_CCP5_Initialize 0021                         ?_EPWM2_Initialize 0021  
               __end_of_SYSTEM_Initialize 066C                        ??_EPWM2_Initialize 002F  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 0045  
                      __CFG_CCP2MX$PORTC1 000000                     ??_EPWM2_LoadDutyValue 0031  
        __end_of_TMR6_SetInterruptHandler 07FC                                ??_TMR2_ISR 0021  
                      __CFG_CCP3MX$PORTB5 000000                                 ?_StepMove 0034  
                              ??_TMR6_ISR 0021                                   _CCP1CON 000FBD  
                                 _CCP2CON 000F66                                   _CCP5CON 000F54  
                                 _ECCP1AS 000FB6                                   _ECCP2AS 000F64  
                                 _ADC_ISR 081C                   __size_of_ADC_Initialize 0018  
                                 _OSCCON2 000FD2                                   i2u27_48 0758  
                                 _OSCTUNE 000F9B                                   _PWM1CON 000FB7  
                                 _PWM2CON 000F65                                   _SPBRGH1 000FB0  
                        ?_TMR2_StartTimer 0021                   __end_of_TMR6_StartTimer 0814  
             __end_of_EPWM1_LoadDutyValue 0642                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 0031                                ??_StepMove 0038  
                          _State16MEF_act 00AE                                   __pcinit 04EE  
                        ?_TMR6_Initialize 0021                                   __ramtop 1000  
                                 __ptext0 066C                                   __ptext1 0548  
                                 __ptext2 02A8                                   __ptext3 00AE  
                                 __ptext4 07DC                                   __ptext5 05E2  
                                 __ptext6 0612                                   __ptext7 07E8  
                                 __ptext8 0642                                   __ptext9 0694  
                   _OSCILLATOR_Initialize 07CE                                 _T2CONbits 000FBA  
                           ?_StateMEF_ini 0021                        _EUSART1_Initialize 07A4  
                ??_PIN_MANAGER_Initialize 002F                                 _T6CONbits 000F4A  
              __size_of_SYSTEM_Initialize 002A                      end_of_initialization 053A  
                     ?_EUSART1_Initialize 0021                             __Lmediumconst 0000  
                  __end_of_State16MEF_act 02A8                                   postdec1 000FE5  
                                 postinc0 000FEE                      ??_EUSART1_Initialize 002F  
                _TMR6_SetInterruptHandler 07F2                            ??_StateMEF_ini 002F  
                     EUSART1_Write@txData 002F                          ?_TMR6_StartTimer 0021  
                            _EstadoActual 0049                           ?_State16MEF_act 0021  
            __end_of_INTERRUPT_Initialize 081C                                 _Direccion 0042  
    __end_of_TMR2_DefaultInterruptHandler 0824     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 0822                         StepMove@Velocidad 0036  
                           __pidataCOMRAM 076C                         __size_of_TMR2_ISR 0008  
                          _ADC_Initialize 078C                         __size_of_TMR6_ISR 0022  
                  ?_OSCILLATOR_Initialize 0021                       start_initialization 04EE  
               __size_of_EPWM1_Initialize 0024           __size_of_PIN_MANAGER_Initialize 004C  
                               _Microstep 0043              EPWM1_LoadDutyValue@dutyValue 002F  
                   __end_of_EUSART1_Write 07E8                 __size_of_EPWM2_Initialize 0024  
                  __end_of_ADC_Initialize 07A4                               __pdataBANK0 0060  
                                ?_ADC_ISR 0021                                 _StepCount 003C  
           ?_TMR2_DefaultInterruptHandler 0021                         __size_of_StepMove 004E  
                  __size_of_TMR2_CallBack 0024                               __pbssCOMRAM 003A  
                __size_of_TMR2_Initialize 0022                  __size_of_CCP5_Initialize 0014  
                  __size_of_State8MEF_act 01A6               __end_of_EPWM2_LoadDutyValue 0612  
                   _TMR6_InterruptHandler 0047                      __end_of_StateMEF_ini 07F2  
                  _PIN_MANAGER_Initialize 0596                                 __pintcode 0008  
                         ?_ADC_Initialize 0021              ??_INTERRUPT_InterruptManager 0021  
                        __CFG_PRICLKEN$ON 000000                                  _BAUDCON1 000FB8  
                                _ANALOG_0 0040                                  _ANALOG_1 003E  
                    _INTERRUPT_Initialize 0818                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                           _TMR2_CallBack 0704                                  _PIE1bits 000F9D  
                                _PIE5bits 000F7D                  __size_of_TMR2_StartTimer 0004  
     __size_of_INTERRUPT_InterruptManager 00A2                                  _PIR1bits 000F9E  
                                _PIR5bits 000F7E              __size_of_EPWM1_LoadDutyValue 0030  
              ??_TMR6_SetInterruptHandler 0031                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR2_ISR 0806  
                                _PSTR1CON 000FB9                                  _PSTR2CON 000F63  
                                _TMR6_ISR 074A                             _State8MEF_act 02A8  
                        _Timer2Tick_count 003A                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2            ??_TMR2_DefaultInterruptHandler 0021  
                        _EPWM1_Initialize 06E0         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 002F                  __size_of_TMR6_Initialize 0028  
                             _INTCON2bits 000FF1                                 copy_data0 0502  
                               copy_data1 0522                     ?_INTERRUPT_Initialize 0021  
                       ??_TMR2_Initialize 0031                            ?_TMR2_CallBack 0021  
                        ??_State16MEF_act 0033                         ??_CCP5_Initialize 002F  
                                __Hrparam 0000                              _Timer2Ticked 0044  
                        _EPWM2_Initialize 06BC                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTC0 000000  
                          ?_State8MEF_act 0021                                  _StepMove 0548  
                 ??_OSCILLATOR_Initialize 002F               __size_of_EUSART1_Initialize 0016  
                                __ptext10 080E                                  __ptext11 07F2  
                                __ptext20 06E0                                  __ptext12 0728  
                                __ptext21 07BA                                  __ptext13 0814  
                                __ptext30 0000                                  __ptext22 078C  
                                __ptext14 07FC                                  __ptext15 0596  
                                __ptext24 074A                                  __ptext16 07CE  
                                __ptext25 0820                                  __ptext17 0818  
                                __ptext26 0806                                  __ptext18 07A4  
                                __ptext27 0704                                  __ptext19 06BC  
                                __ptext28 0822                                  __ptext29 081C  
                   __size_of_StateMEF_ini 000A                             __size_of_main 0028  
                     _LookUP_TABLE_COS_16 00A0                       _LookUP_TABLE_SEN_16 0060  
                __size_of_TMR6_StartTimer 0006                                  int$flags 004A  
                       ??_TMR2_StartTimer 002F        __end_of_INTERRUPT_InterruptManager 00AA  
              _INTERRUPT_InterruptManager 0008                                _INTCONbits 000FF2  
                            _StateMEF_ini 07E8                    ??_INTERRUPT_Initialize 002F  
    __end_of_TMR6_DefaultInterruptHandler 0822     __size_of_TMR6_DefaultInterruptHandler 0002  
            _TMR6_DefaultInterruptHandler 0820                                  intlevel2 0000  
                         ??_TMR2_CallBack 0021              EPWM2_LoadDutyValue@dutyValue 002F  
                 ?_PIN_MANAGER_Initialize 0021                         ??_TMR6_Initialize 0031  
                              _RCSTA1bits 000FAB                          ??_ADC_Initialize 002F  
                         ??_State8MEF_act 0033                    __size_of_EUSART1_Write 000C  
                       __CFG_T3CMX$PORTC0 000000                       _EPWM1_LoadDutyValue 0612  
          __end_of_PIN_MANAGER_Initialize 05E2             ?_TMR6_DefaultInterruptHandler 0021  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 0045  
                __end_of_EPWM1_Initialize 0704                      ?_EPWM1_LoadDutyValue 002F  
