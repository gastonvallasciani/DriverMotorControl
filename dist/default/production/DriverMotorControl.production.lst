

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Jun 15 11:43:53 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           ; Version 1.41
    54                           ; Generated 25/01/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F46K22 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataCOMRAM
    89  000C66                     __pidataCOMRAM:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _LookUP_TABLE_COS
    93  000C66  7D                 	db	125
    94  000C67  76                 	db	118
    95  000C68  6C                 	db	108
    96  000C69  5E                 	db	94
    97  000C6A  4D                 	db	77
    98  000C6B  39                 	db	57
    99  000C6C  22                 	db	34
   100  000C6D  0C                 	db	12
   101  000C6E  0C                 	db	12
   102  000C6F  22                 	db	34
   103  000C70  39                 	db	57
   104  000C71  4D                 	db	77
   105  000C72  5E                 	db	94
   106  000C73  6C                 	db	108
   107  000C74  76                 	db	118
   108  000C75  7D                 	db	125
   109  000C76  7D                 	db	125
   110  000C77  76                 	db	118
   111  000C78  6C                 	db	108
   112  000C79  5E                 	db	94
   113  000C7A  4D                 	db	77
   114  000C7B  39                 	db	57
   115  000C7C  22                 	db	34
   116  000C7D  0C                 	db	12
   117  000C7E  0C                 	db	12
   118  000C7F  22                 	db	34
   119  000C80  39                 	db	57
   120  000C81  4D                 	db	77
   121  000C82  5E                 	db	94
   122  000C83  6C                 	db	108
   123  000C84  76                 	db	118
   124  000C85  7D                 	db	125
   125                           
   126                           	psect	idataBANK0
   127  00086E                     __pidataBANK0:
   128                           	opt stack 0
   129                           
   130                           ;initializer for _LookUP_TABLE_SEN_16
   131  00086E  06                 	db	6
   132  00086F  12                 	db	18
   133  000870  1D                 	db	29
   134  000871  2A                 	db	42
   135  000872  35                 	db	53
   136  000873  3F                 	db	63
   137  000874  49                 	db	73
   138  000875  53                 	db	83
   139  000876  5B                 	db	91
   140  000877  63                 	db	99
   141  000878  6A                 	db	106
   142  000879  70                 	db	112
   143  00087A  75                 	db	117
   144  00087B  79                 	db	121
   145  00087C  7C                 	db	124
   146  00087D  7E                 	db	126
   147  00087E  7E                 	db	126
   148  00087F  7C                 	db	124
   149  000880  79                 	db	121
   150  000881  75                 	db	117
   151  000882  70                 	db	112
   152  000883  6A                 	db	106
   153  000884  63                 	db	99
   154  000885  5B                 	db	91
   155  000886  53                 	db	83
   156  000887  49                 	db	73
   157  000888  3F                 	db	63
   158  000889  35                 	db	53
   159  00088A  2A                 	db	42
   160  00088B  1D                 	db	29
   161  00088C  12                 	db	18
   162  00088D  06                 	db	6
   163  00088E  06                 	db	6
   164  00088F  12                 	db	18
   165  000890  1D                 	db	29
   166  000891  2A                 	db	42
   167  000892  35                 	db	53
   168  000893  3F                 	db	63
   169  000894  49                 	db	73
   170  000895  53                 	db	83
   171  000896  5B                 	db	91
   172  000897  63                 	db	99
   173  000898  6A                 	db	106
   174  000899  70                 	db	112
   175  00089A  75                 	db	117
   176  00089B  79                 	db	121
   177  00089C  7C                 	db	124
   178  00089D  7E                 	db	126
   179  00089E  7E                 	db	126
   180  00089F  7C                 	db	124
   181  0008A0  79                 	db	121
   182  0008A1  75                 	db	117
   183  0008A2  70                 	db	112
   184  0008A3  6A                 	db	106
   185  0008A4  63                 	db	99
   186  0008A5  5B                 	db	91
   187  0008A6  53                 	db	83
   188  0008A7  49                 	db	73
   189  0008A8  3F                 	db	63
   190  0008A9  35                 	db	53
   191  0008AA  2A                 	db	42
   192  0008AB  1D                 	db	29
   193  0008AC  12                 	db	18
   194  0008AD  06                 	db	6
   195                           
   196                           ;initializer for _LookUP_TABLE_COS_16
   197  0008AE  7E                 	db	126
   198  0008AF  7C                 	db	124
   199  0008B0  79                 	db	121
   200  0008B1  75                 	db	117
   201  0008B2  70                 	db	112
   202  0008B3  6A                 	db	106
   203  0008B4  63                 	db	99
   204  0008B5  5B                 	db	91
   205  0008B6  53                 	db	83
   206  0008B7  49                 	db	73
   207  0008B8  3F                 	db	63
   208  0008B9  35                 	db	53
   209  0008BA  2A                 	db	42
   210  0008BB  1D                 	db	29
   211  0008BC  12                 	db	18
   212  0008BD  06                 	db	6
   213  0008BE  06                 	db	6
   214  0008BF  12                 	db	18
   215  0008C0  1D                 	db	29
   216  0008C1  2A                 	db	42
   217  0008C2  35                 	db	53
   218  0008C3  3F                 	db	63
   219  0008C4  49                 	db	73
   220  0008C5  53                 	db	83
   221  0008C6  5B                 	db	91
   222  0008C7  63                 	db	99
   223  0008C8  6A                 	db	106
   224  0008C9  70                 	db	112
   225  0008CA  75                 	db	117
   226  0008CB  79                 	db	121
   227  0008CC  7C                 	db	124
   228  0008CD  7E                 	db	126
   229  0008CE  7E                 	db	126
   230  0008CF  7C                 	db	124
   231  0008D0  79                 	db	121
   232  0008D1  75                 	db	117
   233  0008D2  70                 	db	112
   234  0008D3  6A                 	db	106
   235  0008D4  63                 	db	99
   236  0008D5  5B                 	db	91
   237  0008D6  53                 	db	83
   238  0008D7  49                 	db	73
   239  0008D8  3F                 	db	63
   240  0008D9  35                 	db	53
   241  0008DA  2A                 	db	42
   242  0008DB  1D                 	db	29
   243  0008DC  12                 	db	18
   244  0008DD  06                 	db	6
   245  0008DE  06                 	db	6
   246  0008DF  12                 	db	18
   247  0008E0  1D                 	db	29
   248  0008E1  2A                 	db	42
   249  0008E2  35                 	db	53
   250  0008E3  3F                 	db	63
   251  0008E4  49                 	db	73
   252  0008E5  53                 	db	83
   253  0008E6  5B                 	db	91
   254  0008E7  63                 	db	99
   255  0008E8  6A                 	db	106
   256  0008E9  70                 	db	112
   257  0008EA  75                 	db	117
   258  0008EB  79                 	db	121
   259  0008EC  7C                 	db	124
   260  0008ED  7E                 	db	126
   261                           
   262                           ;initializer for _LookUP_TABLE_SEN
   263  0008EE  0C                 	db	12
   264  0008EF  22                 	db	34
   265  0008F0  39                 	db	57
   266  0008F1  4D                 	db	77
   267  0008F2  5E                 	db	94
   268  0008F3  6C                 	db	108
   269  0008F4  76                 	db	118
   270  0008F5  7D                 	db	125
   271  0008F6  7D                 	db	125
   272  0008F7  76                 	db	118
   273  0008F8  6C                 	db	108
   274  0008F9  5E                 	db	94
   275  0008FA  4D                 	db	77
   276  0008FB  39                 	db	57
   277  0008FC  22                 	db	34
   278  0008FD  0C                 	db	12
   279  0008FE  0C                 	db	12
   280  0008FF  22                 	db	34
   281  000900  39                 	db	57
   282  000901  4D                 	db	77
   283  000902  5E                 	db	94
   284  000903  6C                 	db	108
   285  000904  76                 	db	118
   286  000905  7D                 	db	125
   287  000906  7D                 	db	125
   288  000907  76                 	db	118
   289  000908  6C                 	db	108
   290  000909  5E                 	db	94
   291  00090A  4D                 	db	77
   292  00090B  39                 	db	57
   293  00090C  22                 	db	34
   294  00090D  0C                 	db	12
   295                           
   296                           	psect	nvCOMRAM
   297  000048                     __pnvCOMRAM:
   298                           	opt stack 0
   299  000048                     _TMR2_InterruptHandler:
   300                           	opt stack 0
   301  000048                     	ds	2
   302  00004A                     _TMR6_InterruptHandler:
   303                           	opt stack 0
   304  00004A                     	ds	2
   305  00004C                     _EstadoActual:
   306                           	opt stack 0
   307  00004C                     	ds	1
   308  0000                     _CCPTMRS0bits	set	3913
   309  0000                     _ANSELA	set	3896
   310  0000                     _ANSELE	set	3900
   311  0000                     _ANSELD	set	3899
   312  0000                     _ANSELB	set	3897
   313  0000                     _ANSELC	set	3898
   314  0000                     _CCPR5H	set	3926
   315  0000                     _CCPR5L	set	3925
   316  0000                     _CCP5CON	set	3924
   317  0000                     _T6CONbits	set	3914
   318  0000                     _TMR6	set	3916
   319  0000                     _PR6	set	3915
   320  0000                     _T6CON	set	3914
   321  0000                     _LATDbits	set	3980
   322  0000                     _LATCbits	set	3979
   323  0000                     _LATBbits	set	3978
   324  0000                     _TXREG1	set	4013
   325  0000                     _RCREG1	set	4014
   326  0000                     _RCSTA1bits	set	4011
   327  0000                     _SPBRGH1	set	4016
   328  0000                     _SPBRG1	set	4015
   329  0000                     _TXSTA1	set	4012
   330  0000                     _RCSTA1	set	4011
   331  0000                     _BAUDCON1	set	4024
   332  0000                     _OSCTUNE	set	3995
   333  0000                     _OSCCON2	set	4050
   334  0000                     _OSCCON	set	4051
   335  0000                     _INTCONbits	set	4082
   336  0000                     _RCONbits	set	4048
   337  0000                     _ADCON0bits	set	4034
   338  0000                     _ADRESH	set	4036
   339  0000                     _ADRESL	set	4035
   340  0000                     _ADCON2	set	4032
   341  0000                     _ADCON1	set	4033
   342  0000                     _ADCON0	set	4034
   343  0000                     _CCPR1H	set	4031
   344  0000                     _CCPR1L	set	4030
   345  0000                     _PSTR1CON	set	4025
   346  0000                     _PWM1CON	set	4023
   347  0000                     _ECCP1AS	set	4022
   348  0000                     _CCP1CON	set	4029
   349  0000                     _CCPR2H	set	3944
   350  0000                     _CCPR2L	set	3943
   351  0000                     _PSTR2CON	set	3939
   352  0000                     _PWM2CON	set	3941
   353  0000                     _ECCP2AS	set	3940
   354  0000                     _CCP2CON	set	3942
   355  0000                     _INTCON2bits	set	4081
   356  0000                     _WPUB	set	3937
   357  0000                     _TRISD	set	3989
   358  0000                     _TRISC	set	3988
   359  0000                     _TRISB	set	3987
   360  0000                     _TRISA	set	3986
   361  0000                     _TRISE	set	3990
   362  0000                     _LATC	set	3979
   363  0000                     _LATB	set	3978
   364  0000                     _LATA	set	3977
   365  0000                     _LATD	set	3980
   366  0000                     _LATE	set	3981
   367  0000                     _T2CONbits	set	4026
   368  0000                     _PIE1bits	set	3997
   369  0000                     _PIR1bits	set	3998
   370  0000                     _TMR2	set	4028
   371  0000                     _PR2	set	4027
   372  0000                     _T2CON	set	4026
   373  0000                     _PIE5bits	set	3965
   374  0000                     _PIR5bits	set	3966
   375                           
   376                           ; #config settings
   377  0000                     
   378                           	psect	cinit
   379  000A04                     __pcinit:
   380                           	opt stack 0
   381  000A04                     start_initialization:
   382                           	opt stack 0
   383  000A04                     __initialization:
   384                           	opt stack 0
   385                           
   386                           ; Initialize objects allocated to BANK0 (160 bytes)
   387                           ; load TBLPTR registers with __pidataBANK0
   388  000A04  0E6E               	movlw	low __pidataBANK0
   389  000A06  6EF6               	movwf	tblptrl,c
   390  000A08  0E08               	movlw	high __pidataBANK0
   391  000A0A  6EF7               	movwf	tblptrh,c
   392  000A0C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   393  000A0E  6EF8               	movwf	tblptru,c
   394  000A10  EE00  F060         	lfsr	0,__pdataBANK0
   395  000A14  EE10 F0A0          	lfsr	1,160
   396  000A18                     copy_data0:
   397  000A18  0009               	tblrd		*+
   398  000A1A  CFF5 FFEE          	movff	tablat,postinc0
   399  000A1E  50E5               	movf	postdec1,w,c
   400  000A20  50E1               	movf	fsr1l,w,c
   401  000A22  E1FA               	bnz	copy_data0
   402                           
   403                           ; Initialize objects allocated to COMRAM (32 bytes)
   404                           ; load TBLPTR registers with __pidataCOMRAM
   405  000A24  0E66               	movlw	low __pidataCOMRAM
   406  000A26  6EF6               	movwf	tblptrl,c
   407  000A28  0E0C               	movlw	high __pidataCOMRAM
   408  000A2A  6EF7               	movwf	tblptrh,c
   409  000A2C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   410  000A2E  6EF8               	movwf	tblptru,c
   411  000A30  EE00  F001         	lfsr	0,__pdataCOMRAM
   412  000A34  EE10 F020          	lfsr	1,32
   413  000A38                     copy_data1:
   414  000A38  0009               	tblrd		*+
   415  000A3A  CFF5 FFEE          	movff	tablat,postinc0
   416  000A3E  50E5               	movf	postdec1,w,c
   417  000A40  50E1               	movf	fsr1l,w,c
   418  000A42  E1FA               	bnz	copy_data1
   419                           
   420                           ; Clear objects allocated to COMRAM (13 bytes)
   421  000A44  EE00  F03B         	lfsr	0,__pbssCOMRAM
   422  000A48  0E0D               	movlw	13
   423  000A4A                     clear_0:
   424  000A4A  6AEE               	clrf	postinc0,c
   425  000A4C  06E8               	decf	wreg,f,c
   426  000A4E  E1FD               	bnz	clear_0
   427  000A50                     end_of_initialization:
   428                           	opt stack 0
   429  000A50                     __end_of__initialization:
   430                           	opt stack 0
   431  000A50  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   432  000A52  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   433  000A54  0E00               	movlw	low (__Lmediumconst shr (0+16))
   434  000A56  6EF8               	movwf	tblptru,c
   435  000A58  0100               	movlb	0
   436  000A5A  EFC8  F004         	goto	_main	;jump to C main() function
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           postdec1	equ	0xFE5
   444                           fsr1l	equ	0xFE1
   445                           
   446                           	psect	bssCOMRAM
   447  00003B                     __pbssCOMRAM:
   448                           	opt stack 0
   449  00003B                     _Timer2Tick_count:
   450                           	opt stack 0
   451  00003B                     	ds	2
   452  00003D                     _StepCount:
   453                           	opt stack 0
   454  00003D                     	ds	2
   455  00003F                     _ANALOG_1:
   456                           	opt stack 0
   457  00003F                     	ds	2
   458  000041                     _ANALOG_0:
   459                           	opt stack 0
   460  000041                     	ds	2
   461  000043                     	ds	1
   462  000044                     _Microstep:
   463                           	opt stack 0
   464  000044                     	ds	1
   465  000045                     _StepsComplete:
   466                           	opt stack 0
   467  000045                     	ds	1
   468  000046                     _DelayTimerTicked:
   469                           	opt stack 0
   470  000046                     	ds	1
   471  000047                     _Timer2Ticked:
   472                           	opt stack 0
   473  000047                     	ds	1
   474                           tblptru	equ	0xFF8
   475                           tblptrh	equ	0xFF7
   476                           tblptrl	equ	0xFF6
   477                           tablat	equ	0xFF5
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           postdec1	equ	0xFE5
   481                           fsr1l	equ	0xFE1
   482                           
   483                           	psect	dataCOMRAM
   484  000001                     __pdataCOMRAM:
   485                           	opt stack 0
   486  000001                     _LookUP_TABLE_COS:
   487                           	opt stack 0
   488  000001                     	ds	32
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           postinc0	equ	0xFEE
   494                           wreg	equ	0xFE8
   495                           postdec1	equ	0xFE5
   496                           fsr1l	equ	0xFE1
   497                           
   498                           	psect	dataBANK0
   499  000060                     __pdataBANK0:
   500                           	opt stack 0
   501  000060                     _LookUP_TABLE_SEN_16:
   502                           	opt stack 0
   503  000060                     	ds	64
   504  0000A0                     _LookUP_TABLE_COS_16:
   505                           	opt stack 0
   506  0000A0                     	ds	64
   507  0000E0                     _LookUP_TABLE_SEN:
   508                           	opt stack 0
   509  0000E0                     	ds	32
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           postinc0	equ	0xFEE
   515                           wreg	equ	0xFE8
   516                           postdec1	equ	0xFE5
   517                           fsr1l	equ	0xFE1
   518                           
   519                           	psect	cstackCOMRAM
   520  000021                     __pcstackCOMRAM:
   521                           	opt stack 0
   522  000021                     ??_INTERRUPT_InterruptManager:
   523  000021                     
   524                           ; 1 bytes @ 0x0
   525  000021                     	ds	14
   526  00002F                     EUSART1_Write@txData:
   527                           	opt stack 0
   528  00002F                     TMR6_SetInterruptHandler@InterruptHandler:
   529                           	opt stack 0
   530  00002F                     TMR2_SetInterruptHandler@InterruptHandler:
   531                           	opt stack 0
   532  00002F                     EPWM2_LoadDutyValue@dutyValue:
   533                           	opt stack 0
   534  00002F                     EPWM1_LoadDutyValue@dutyValue:
   535                           	opt stack 0
   536  00002F                     DelayTmr2@Timeout:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0xE
   540  00002F                     	ds	2
   541  000031                     ??_EPWM2_LoadDutyValue:
   542  000031                     ??_EPWM1_LoadDutyValue:
   543  000031                     
   544                           ; 1 bytes @ 0x10
   545  000031                     	ds	2
   546  000033                     ??_State8MEF_act:
   547  000033                     ??_State16MEF_act:
   548  000033                     ??_State16MEF_act_Backward:
   549  000033                     ??_State8MEF_act_Backward:
   550                           
   551                           ; 1 bytes @ 0x12
   552  000033                     	ds	1
   553  000034                     StepMove@StepNumber:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x13
   557  000034                     	ds	2
   558  000036                     StepMove@Velocidad:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x15
   562  000036                     	ds	1
   563  000037                     StepMove@microstep_number:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x16
   567  000037                     	ds	1
   568  000038                     StepMove@direccion:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x17
   572  000038                     	ds	1
   573  000039                     ??_StepMove:
   574                           
   575                           ; 1 bytes @ 0x18
   576  000039                     	ds	2
   577  00003B                     tblptru	equ	0xFF8
   578                           tblptrh	equ	0xFF7
   579                           tblptrl	equ	0xFF6
   580                           tablat	equ	0xFF5
   581                           postinc0	equ	0xFEE
   582                           wreg	equ	0xFE8
   583                           postdec1	equ	0xFE5
   584                           fsr1l	equ	0xFE1
   585                           
   586                           ; 1 bytes @ 0x1A
   587 ;;
   588 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   589 ;;
   590 ;; *************** function _main *****************
   591 ;; Defined at:
   592 ;;		line 23 in file "main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;Total ram usage:        0 bytes
   611 ;; Hardware stack levels required when called:    7
   612 ;; This function calls:
   613 ;;		_DelayTmr2
   614 ;;		_Motor_Stop
   615 ;;		_SYSTEM_Initialize
   616 ;;		_StateMEF_ini
   617 ;;		_StepMove
   618 ;; This function is called by:
   619 ;;		Startup code after reset
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           	psect	text0
   624  000990                     __ptext0:
   625                           	opt stack 0
   626  000990                     _main:
   627                           	opt stack 24
   628                           
   629                           ;main.c: 26: SYSTEM_Initialize();
   630                           
   631                           ;incstack = 0
   632  000990  ECB0  F005         	call	_SYSTEM_Initialize	;wreg free
   633                           
   634                           ;main.c: 27: StateMEF_ini();
   635  000994  EC88  F006         	call	_StateMEF_ini	;wreg free
   636                           
   637                           ;main.c: 28: Timer2Ticked=0;
   638  000998  0E00               	movlw	0
   639  00099A  6E47               	movwf	_Timer2Ticked,c	;volatile
   640                           
   641                           ;main.c: 29: DelayTimerTicked=0;
   642  00099C  0E00               	movlw	0
   643  00099E  6E46               	movwf	_DelayTimerTicked,c	;volatile
   644                           
   645                           ;main.c: 30: do { LATBbits.LATB6 = 1; } while(0);
   646  0009A0  8C8A               	bsf	3978,6,c	;volatile
   647                           
   648                           ;main.c: 33: (INTCONbits.GIE = 1);
   649  0009A2  8EF2               	bsf	intcon,7,c	;volatile
   650                           
   651                           ;main.c: 36: (INTCONbits.PEIE = 1);
   652  0009A4  8CF2               	bsf	intcon,6,c	;volatile
   653  0009A6                     l2386:
   654  0009A6  0E07               	movlw	7
   655  0009A8  6E35               	movwf	StepMove@StepNumber+1,c
   656  0009AA  0ED0               	movlw	208
   657  0009AC  6E34               	movwf	StepMove@StepNumber,c
   658  0009AE  0E03               	movlw	3
   659  0009B0  6E36               	movwf	StepMove@Velocidad,c
   660  0009B2  0E08               	movlw	8
   661  0009B4  6E37               	movwf	StepMove@microstep_number,c
   662  0009B6  0E01               	movlw	1
   663  0009B8  6E38               	movwf	StepMove@direccion,c
   664  0009BA  EC87  F004         	call	_StepMove	;wreg free
   665  0009BE  0900               	iorlw	0
   666  0009C0  B4D8               	btfsc	status,2,c
   667  0009C2  D7F1               	goto	l2386
   668                           
   669                           ;main.c: 43: Motor_Stop();
   670  0009C4  EC72  F006         	call	_Motor_Stop	;wreg free
   671                           
   672                           ;main.c: 45: DelayTmr2(19230);
   673  0009C8  0E4B               	movlw	75
   674  0009CA  6E30               	movwf	DelayTmr2@Timeout+1,c
   675  0009CC  0E1E               	movlw	30
   676  0009CE  6E2F               	movwf	DelayTmr2@Timeout,c
   677  0009D0  EC43  F006         	call	_DelayTmr2	;wreg free
   678  0009D4                     l2392:
   679  0009D4  0E07               	movlw	7
   680  0009D6  6E35               	movwf	StepMove@StepNumber+1,c
   681  0009D8  0ED0               	movlw	208
   682  0009DA  6E34               	movwf	StepMove@StepNumber,c
   683  0009DC  0E03               	movlw	3
   684  0009DE  6E36               	movwf	StepMove@Velocidad,c
   685  0009E0  0E08               	movlw	8
   686  0009E2  6E37               	movwf	StepMove@microstep_number,c
   687  0009E4  0E00               	movlw	0
   688  0009E6  6E38               	movwf	StepMove@direccion,c
   689  0009E8  EC87  F004         	call	_StepMove	;wreg free
   690  0009EC  0900               	iorlw	0
   691  0009EE  B4D8               	btfsc	status,2,c
   692  0009F0  D7F1               	goto	l2392
   693                           
   694                           ;main.c: 49: Motor_Stop();
   695  0009F2  EC72  F006         	call	_Motor_Stop	;wreg free
   696                           
   697                           ;main.c: 51: DelayTmr2(19230);
   698  0009F6  0E4B               	movlw	75
   699  0009F8  6E30               	movwf	DelayTmr2@Timeout+1,c
   700  0009FA  0E1E               	movlw	30
   701  0009FC  6E2F               	movwf	DelayTmr2@Timeout,c
   702  0009FE  EC43  F006         	call	_DelayTmr2	;wreg free
   703  000A02  D7D1               	goto	l2386
   704  000A04                     __end_of_main:
   705                           	opt stack 0
   706                           tblptru	equ	0xFF8
   707                           tblptrh	equ	0xFF7
   708                           tblptrl	equ	0xFF6
   709                           tablat	equ	0xFF5
   710                           intcon	equ	0xFF2
   711                           postinc0	equ	0xFEE
   712                           wreg	equ	0xFE8
   713                           postdec1	equ	0xFE5
   714                           fsr1l	equ	0xFE1
   715                           status	equ	0xFD8
   716                           
   717 ;; *************** function _StepMove *****************
   718 ;; Defined at:
   719 ;;		line 331 in file "MotorDriver.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  StepNumber      2   19[COMRAM] unsigned int 
   722 ;;  Velocidad       1   21[COMRAM] unsigned char 
   723 ;;  microstep_nu    1   22[COMRAM] unsigned char 
   724 ;;  direccion       1   23[COMRAM] unsigned char 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      unsigned char 
   729 ;; Registers used:
   730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   736 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;Total ram usage:        7 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    6
   743 ;; This function calls:
   744 ;;		_State16MEF_act
   745 ;;		_State16MEF_act_Backward
   746 ;;		_State8MEF_act
   747 ;;		_State8MEF_act_Backward
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text1
   754  00090E                     __ptext1:
   755                           	opt stack 0
   756  00090E                     _StepMove:
   757                           	opt stack 24
   758                           
   759                           ;MotorDriver.c: 333: if ((StepCount<StepNumber)){
   760                           
   761                           ;incstack = 0
   762  00090E  5034               	movf	StepMove@StepNumber,w,c
   763  000910  5C3D               	subwf	_StepCount,w,c
   764  000912  5035               	movf	StepMove@StepNumber+1,w,c
   765  000914  583E               	subwfb	_StepCount+1,w,c
   766  000916  B0D8               	btfsc	status,0,c
   767  000918  D033               	goto	l2346
   768                           
   769                           ;MotorDriver.c: 334: if (Timer2Ticked){
   770  00091A  5047               	movf	_Timer2Ticked,w,c	;volatile
   771  00091C  B4D8               	btfsc	status,2,c
   772  00091E  D02D               	goto	l2344
   773                           
   774                           ;MotorDriver.c: 335: Timer2Tick_count++;
   775  000920  4A3B               	infsnz	_Timer2Tick_count,f,c
   776  000922  2A3C               	incf	_Timer2Tick_count+1,f,c
   777                           
   778                           ;MotorDriver.c: 336: if (Timer2Tick_count == Velocidad){
   779  000924  5036               	movf	StepMove@Velocidad,w,c
   780  000926  6E39               	movwf	??_StepMove& (0+255),c
   781  000928  6A3A               	clrf	(??_StepMove+1)& (0+255),c
   782  00092A  503B               	movf	_Timer2Tick_count,w,c
   783  00092C  1839               	xorwf	??_StepMove,w,c
   784  00092E  E123               	bnz	l2342
   785  000930  503C               	movf	_Timer2Tick_count+1,w,c
   786  000932  183A               	xorwf	??_StepMove+1,w,c
   787  000934  A4D8               	btfss	status,2,c
   788  000936  D01F               	goto	l2342
   789                           
   790                           ;MotorDriver.c: 337: if (direccion == 1){
   791  000938  0438               	decf	StepMove@direccion,w,c
   792  00093A  A4D8               	btfss	status,2,c
   793  00093C  D00A               	goto	l2330
   794                           
   795                           ;MotorDriver.c: 338: if (microstep_number==16){
   796  00093E  0E10               	movlw	16
   797  000940  1837               	xorwf	StepMove@microstep_number,w,c
   798  000942  A4D8               	btfss	status,2,c
   799  000944  D003               	goto	l2328
   800                           
   801                           ;MotorDriver.c: 339: State16MEF_act();
   802  000946  EC5C  F001         	call	_State16MEF_act	;wreg free
   803                           
   804                           ;MotorDriver.c: 340: }
   805  00094A  D00F               	goto	l2338
   806  00094C                     l2328:
   807                           
   808                           ;MotorDriver.c: 341: else{
   809                           ;MotorDriver.c: 342: State8MEF_act();
   810  00094C  EC46  F003         	call	_State8MEF_act	;wreg free
   811                           
   812                           ;MotorDriver.c: 343: }
   813                           ;MotorDriver.c: 344: }
   814  000950  D00C               	goto	l2338
   815  000952                     l2330:
   816                           
   817                           ;MotorDriver.c: 345: else if (direccion == 0){
   818  000952  5038               	movf	StepMove@direccion,w,c
   819  000954  A4D8               	btfss	status,2,c
   820  000956  D009               	goto	l2338
   821                           
   822                           ;MotorDriver.c: 346: if (microstep_number==16){
   823  000958  0E10               	movlw	16
   824  00095A  1837               	xorwf	StepMove@microstep_number,w,c
   825  00095C  A4D8               	btfss	status,2,c
   826  00095E  D003               	goto	l2336
   827                           
   828                           ;MotorDriver.c: 347: State16MEF_act_Backward();
   829  000960  EC57  F000         	call	_State16MEF_act_Backward	;wreg free
   830                           
   831                           ;MotorDriver.c: 348: }
   832  000964  D002               	goto	l2338
   833  000966                     l2336:
   834                           
   835                           ;MotorDriver.c: 349: else{
   836                           ;MotorDriver.c: 350: State8MEF_act_Backward();
   837  000966  EC53  F002         	call	_State8MEF_act_Backward	;wreg free
   838  00096A                     l2338:
   839                           
   840                           ;MotorDriver.c: 351: }
   841                           ;MotorDriver.c: 352: }
   842                           ;MotorDriver.c: 354: StepCount++;
   843  00096A  4A3D               	infsnz	_StepCount,f,c
   844  00096C  2A3E               	incf	_StepCount+1,f,c
   845                           
   846                           ;MotorDriver.c: 355: Timer2Tick_count=0;
   847  00096E  0E00               	movlw	0
   848  000970  6E3C               	movwf	_Timer2Tick_count+1,c
   849  000972  0E00               	movlw	0
   850  000974  6E3B               	movwf	_Timer2Tick_count,c
   851  000976                     l2342:
   852                           
   853                           ;MotorDriver.c: 356: }
   854                           ;MotorDriver.c: 357: Timer2Ticked = 0;
   855  000976  0E00               	movlw	0
   856  000978  6E47               	movwf	_Timer2Ticked,c	;volatile
   857  00097A                     l2344:
   858                           
   859                           ;MotorDriver.c: 358: }
   860                           ;MotorDriver.c: 359: StepsComplete=0;
   861  00097A  0E00               	movlw	0
   862  00097C  6E45               	movwf	_StepsComplete,c
   863                           
   864                           ;MotorDriver.c: 361: }
   865  00097E  D006               	goto	l604
   866  000980                     l2346:
   867                           
   868                           ;MotorDriver.c: 362: else{
   869                           ;MotorDriver.c: 363: StepsComplete=1;
   870  000980  0E01               	movlw	1
   871  000982  6E45               	movwf	_StepsComplete,c
   872                           
   873                           ;MotorDriver.c: 364: StepCount=0;
   874  000984  0E00               	movlw	0
   875  000986  6E3E               	movwf	_StepCount+1,c
   876  000988  0E00               	movlw	0
   877  00098A  6E3D               	movwf	_StepCount,c
   878  00098C                     l604:
   879                           
   880                           ;MotorDriver.c: 366: }
   881                           ;MotorDriver.c: 367: return(StepsComplete);
   882  00098C  5045               	movf	_StepsComplete,w,c
   883  00098E  0012               	return	
   884  000990                     __end_of_StepMove:
   885                           	opt stack 0
   886                           tblptru	equ	0xFF8
   887                           tblptrh	equ	0xFF7
   888                           tblptrl	equ	0xFF6
   889                           tablat	equ	0xFF5
   890                           intcon	equ	0xFF2
   891                           postinc0	equ	0xFEE
   892                           wreg	equ	0xFE8
   893                           postdec1	equ	0xFE5
   894                           fsr1l	equ	0xFE1
   895                           status	equ	0xFD8
   896                           
   897 ;; *************** function _State8MEF_act_Backward *****************
   898 ;; Defined at:
   899 ;;		line 260 in file "MotorDriver.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;Total ram usage:        1 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; Hardware stack levels required when called:    5
   920 ;; This function calls:
   921 ;;		_EPWM1_LoadDutyValue
   922 ;;		_EPWM2_LoadDutyValue
   923 ;; This function is called by:
   924 ;;		_StepMove
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text2
   929  0004A6                     __ptext2:
   930                           	opt stack 0
   931  0004A6                     _State8MEF_act_Backward:
   932                           	opt stack 24
   933                           
   934                           ;MotorDriver.c: 261: switch(EstadoActual){
   935                           
   936                           ;incstack = 0
   937  0004A6  D0E1               	goto	l2292
   938  0004A8                     l2210:
   939                           
   940                           ;MotorDriver.c: 263: PSTR1CON = 0x00; PSTR2CON = 0x00;
   941  0004A8  0E00               	movlw	0
   942  0004AA  6EB9               	movwf	4025,c	;volatile
   943  0004AC  0E00               	movlw	0
   944  0004AE  6E63               	movwf	3939,c	;volatile
   945                           
   946                           ;MotorDriver.c: 264: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
   947  0004B0  948B               	bcf	3979,2,c	;volatile
   948  0004B2  9A8C               	bcf	3980,5,c	;volatile
   949  0004B4  928B               	bcf	3979,1,c	;volatile
   950  0004B6  908B               	bcf	3979,0,c	;volatile
   951                           
   952                           ;MotorDriver.c: 265: EstadoActual = STATE1;
   953  0004B8  0E01               	movlw	1
   954  0004BA  6E4C               	movwf	_EstadoActual,c
   955                           
   956                           ;MotorDriver.c: 266: break;
   957  0004BC  0012               	return	
   958  0004BE                     l2220:
   959                           
   960                           ;MotorDriver.c: 268: PSTR1CON = 0x01; PSTR2CON = 0x01;
   961  0004BE  0E01               	movlw	1
   962  0004C0  6EB9               	movwf	4025,c	;volatile
   963  0004C2  0E01               	movlw	1
   964  0004C4  6E63               	movwf	3939,c	;volatile
   965                           
   966                           ;MotorDriver.c: 269: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
   967  0004C6  9A8C               	bcf	3980,5,c	;volatile
   968  0004C8  908B               	bcf	3979,0,c	;volatile
   969                           
   970                           ;MotorDriver.c: 270: if (Microstep<8){
   971  0004CA  5044               	movf	_Microstep,w,c
   972  0004CC  0A80               	xorlw	128
   973  0004CE  0F78               	addlw	-136
   974  0004D0  B0D8               	btfsc	status,0,c
   975  0004D2  0012               	return	
   976                           
   977                           ;MotorDriver.c: 273: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   978  0004D4  5044               	movf	_Microstep,w,c
   979  0004D6  0D01               	mullw	1
   980  0004D8  0E01               	movlw	low _LookUP_TABLE_COS
   981  0004DA  24F3               	addwf	prodl,w,c
   982  0004DC  6ED9               	movwf	fsr2l,c
   983  0004DE  0E00               	movlw	high _LookUP_TABLE_COS
   984  0004E0  20F4               	addwfc	prodh,w,c
   985  0004E2  6EDA               	movwf	fsr2h,c
   986  0004E4  50DF               	movf	indf2,w,c
   987  0004E6  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
   988  0004E8  5033               	movf	??_State8MEF_act_Backward,w,c
   989  0004EA  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   990  0004EC  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   991  0004EE  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
   992                           
   993                           ;MotorDriver.c: 274: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   994  0004F2  5044               	movf	_Microstep,w,c
   995  0004F4  0D01               	mullw	1
   996  0004F6  0EE0               	movlw	low _LookUP_TABLE_SEN
   997  0004F8  24F3               	addwf	prodl,w,c
   998  0004FA  6ED9               	movwf	fsr2l,c
   999  0004FC  0E00               	movlw	high _LookUP_TABLE_SEN
  1000  0004FE  20F4               	addwfc	prodh,w,c
  1001  000500  6EDA               	movwf	fsr2h,c
  1002  000502  50DF               	movf	indf2,w,c
  1003  000504  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1004  000506  5033               	movf	??_State8MEF_act_Backward,w,c
  1005  000508  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1006  00050A  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1007  00050C  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1008                           
  1009                           ;MotorDriver.c: 275: if (Microstep==0){
  1010  000510  5044               	movf	_Microstep,w,c
  1011  000512  A4D8               	btfss	status,2,c
  1012  000514  D004               	goto	l2234
  1013                           
  1014                           ;MotorDriver.c: 276: EstadoActual = STATE4;
  1015  000516  0E04               	movlw	4
  1016  000518  6E4C               	movwf	_EstadoActual,c
  1017                           
  1018                           ;MotorDriver.c: 277: Microstep=31;
  1019  00051A  0E1F               	movlw	31
  1020  00051C  6E44               	movwf	_Microstep,c
  1021  00051E                     l2234:
  1022                           
  1023                           ;MotorDriver.c: 278: }
  1024                           ;MotorDriver.c: 279: Microstep--;
  1025  00051E  0644               	decf	_Microstep,f,c
  1026                           
  1027                           ;MotorDriver.c: 280: }
  1028                           ;MotorDriver.c: 281: break;
  1029  000520  0012               	return	
  1030  000522                     l2236:
  1031                           
  1032                           ;MotorDriver.c: 283: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1033  000522  0E02               	movlw	2
  1034  000524  6EB9               	movwf	4025,c	;volatile
  1035  000526  0E01               	movlw	1
  1036  000528  6E63               	movwf	3939,c	;volatile
  1037                           
  1038                           ;MotorDriver.c: 284: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1039  00052A  948B               	bcf	3979,2,c	;volatile
  1040  00052C  908B               	bcf	3979,0,c	;volatile
  1041                           
  1042                           ;MotorDriver.c: 286: if ((Microstep<16)&&(Microstep>7)){
  1043  00052E  5044               	movf	_Microstep,w,c
  1044  000530  0A80               	xorlw	128
  1045  000532  0F70               	addlw	-144
  1046  000534  B0D8               	btfsc	status,0,c
  1047  000536  0012               	return	
  1048  000538  5044               	movf	_Microstep,w,c
  1049  00053A  0A80               	xorlw	128
  1050  00053C  0F78               	addlw	-136
  1051  00053E  A0D8               	btfss	status,0,c
  1052  000540  0012               	return	
  1053                           
  1054                           ;MotorDriver.c: 288: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1055  000542  5044               	movf	_Microstep,w,c
  1056  000544  0D01               	mullw	1
  1057  000546  0E01               	movlw	low _LookUP_TABLE_COS
  1058  000548  24F3               	addwf	prodl,w,c
  1059  00054A  6ED9               	movwf	fsr2l,c
  1060  00054C  0E00               	movlw	high _LookUP_TABLE_COS
  1061  00054E  20F4               	addwfc	prodh,w,c
  1062  000550  6EDA               	movwf	fsr2h,c
  1063  000552  50DF               	movf	indf2,w,c
  1064  000554  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1065  000556  5033               	movf	??_State8MEF_act_Backward,w,c
  1066  000558  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1067  00055A  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1068  00055C  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1069                           
  1070                           ;MotorDriver.c: 289: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1071  000560  5044               	movf	_Microstep,w,c
  1072  000562  0D01               	mullw	1
  1073  000564  0EE0               	movlw	low _LookUP_TABLE_SEN
  1074  000566  24F3               	addwf	prodl,w,c
  1075  000568  6ED9               	movwf	fsr2l,c
  1076  00056A  0E00               	movlw	high _LookUP_TABLE_SEN
  1077  00056C  20F4               	addwfc	prodh,w,c
  1078  00056E  6EDA               	movwf	fsr2h,c
  1079  000570  50DF               	movf	indf2,w,c
  1080  000572  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1081  000574  5033               	movf	??_State8MEF_act_Backward,w,c
  1082  000576  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1083  000578  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1084  00057A  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1085                           
  1086                           ;MotorDriver.c: 290: if (Microstep==8){
  1087  00057E  0E08               	movlw	8
  1088  000580  1844               	xorwf	_Microstep,w,c
  1089  000582  A4D8               	btfss	status,2,c
  1090  000584  D002               	goto	l2252
  1091                           
  1092                           ;MotorDriver.c: 291: EstadoActual = STATE1;
  1093  000586  0E01               	movlw	1
  1094  000588  6E4C               	movwf	_EstadoActual,c
  1095  00058A                     l2252:
  1096                           
  1097                           ;MotorDriver.c: 292: }
  1098                           ;MotorDriver.c: 293: Microstep--;
  1099  00058A  0644               	decf	_Microstep,f,c
  1100                           
  1101                           ;MotorDriver.c: 294: }
  1102                           ;MotorDriver.c: 295: break;
  1103  00058C  0012               	return	
  1104  00058E                     l2254:
  1105                           
  1106                           ;MotorDriver.c: 297: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1107  00058E  0E02               	movlw	2
  1108  000590  6EB9               	movwf	4025,c	;volatile
  1109  000592  0E02               	movlw	2
  1110  000594  6E63               	movwf	3939,c	;volatile
  1111                           
  1112                           ;MotorDriver.c: 298: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1113  000596  948B               	bcf	3979,2,c	;volatile
  1114  000598  928B               	bcf	3979,1,c	;volatile
  1115                           
  1116                           ;MotorDriver.c: 300: if ((Microstep<24)&&(Microstep>15)){
  1117  00059A  5044               	movf	_Microstep,w,c
  1118  00059C  0A80               	xorlw	128
  1119  00059E  0F68               	addlw	-152
  1120  0005A0  B0D8               	btfsc	status,0,c
  1121  0005A2  0012               	return	
  1122  0005A4  5044               	movf	_Microstep,w,c
  1123  0005A6  0A80               	xorlw	128
  1124  0005A8  0F70               	addlw	-144
  1125  0005AA  A0D8               	btfss	status,0,c
  1126  0005AC  0012               	return	
  1127                           
  1128                           ;MotorDriver.c: 302: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1129  0005AE  5044               	movf	_Microstep,w,c
  1130  0005B0  0D01               	mullw	1
  1131  0005B2  0E01               	movlw	low _LookUP_TABLE_COS
  1132  0005B4  24F3               	addwf	prodl,w,c
  1133  0005B6  6ED9               	movwf	fsr2l,c
  1134  0005B8  0E00               	movlw	high _LookUP_TABLE_COS
  1135  0005BA  20F4               	addwfc	prodh,w,c
  1136  0005BC  6EDA               	movwf	fsr2h,c
  1137  0005BE  50DF               	movf	indf2,w,c
  1138  0005C0  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1139  0005C2  5033               	movf	??_State8MEF_act_Backward,w,c
  1140  0005C4  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1141  0005C6  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1142  0005C8  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1143                           
  1144                           ;MotorDriver.c: 303: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1145  0005CC  5044               	movf	_Microstep,w,c
  1146  0005CE  0D01               	mullw	1
  1147  0005D0  0EE0               	movlw	low _LookUP_TABLE_SEN
  1148  0005D2  24F3               	addwf	prodl,w,c
  1149  0005D4  6ED9               	movwf	fsr2l,c
  1150  0005D6  0E00               	movlw	high _LookUP_TABLE_SEN
  1151  0005D8  20F4               	addwfc	prodh,w,c
  1152  0005DA  6EDA               	movwf	fsr2h,c
  1153  0005DC  50DF               	movf	indf2,w,c
  1154  0005DE  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1155  0005E0  5033               	movf	??_State8MEF_act_Backward,w,c
  1156  0005E2  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1157  0005E4  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1158  0005E6  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1159                           
  1160                           ;MotorDriver.c: 304: if (Microstep==16){
  1161  0005EA  0E10               	movlw	16
  1162  0005EC  1844               	xorwf	_Microstep,w,c
  1163  0005EE  A4D8               	btfss	status,2,c
  1164  0005F0  D002               	goto	l2270
  1165                           
  1166                           ;MotorDriver.c: 305: EstadoActual = STATE2;
  1167  0005F2  0E02               	movlw	2
  1168  0005F4  6E4C               	movwf	_EstadoActual,c
  1169  0005F6                     l2270:
  1170                           
  1171                           ;MotorDriver.c: 306: }
  1172                           ;MotorDriver.c: 307: Microstep--;
  1173  0005F6  0644               	decf	_Microstep,f,c
  1174                           
  1175                           ;MotorDriver.c: 308: }
  1176                           ;MotorDriver.c: 309: break;
  1177  0005F8  0012               	return	
  1178  0005FA                     l2272:
  1179                           
  1180                           ;MotorDriver.c: 311: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1181  0005FA  0E01               	movlw	1
  1182  0005FC  6EB9               	movwf	4025,c	;volatile
  1183  0005FE  0E02               	movlw	2
  1184  000600  6E63               	movwf	3939,c	;volatile
  1185                           
  1186                           ;MotorDriver.c: 312: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1187  000602  9A8C               	bcf	3980,5,c	;volatile
  1188  000604  928B               	bcf	3979,1,c	;volatile
  1189                           
  1190                           ;MotorDriver.c: 313: if ((Microstep<32)&&(Microstep>23)){
  1191  000606  5044               	movf	_Microstep,w,c
  1192  000608  0A80               	xorlw	128
  1193  00060A  0F60               	addlw	-160
  1194  00060C  B0D8               	btfsc	status,0,c
  1195  00060E  0012               	return	
  1196  000610  5044               	movf	_Microstep,w,c
  1197  000612  0A80               	xorlw	128
  1198  000614  0F68               	addlw	-152
  1199  000616  A0D8               	btfss	status,0,c
  1200  000618  0012               	return	
  1201                           
  1202                           ;MotorDriver.c: 316: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1203  00061A  5044               	movf	_Microstep,w,c
  1204  00061C  0D01               	mullw	1
  1205  00061E  0E01               	movlw	low _LookUP_TABLE_COS
  1206  000620  24F3               	addwf	prodl,w,c
  1207  000622  6ED9               	movwf	fsr2l,c
  1208  000624  0E00               	movlw	high _LookUP_TABLE_COS
  1209  000626  20F4               	addwfc	prodh,w,c
  1210  000628  6EDA               	movwf	fsr2h,c
  1211  00062A  50DF               	movf	indf2,w,c
  1212  00062C  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1213  00062E  5033               	movf	??_State8MEF_act_Backward,w,c
  1214  000630  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1215  000632  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1216  000634  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1217                           
  1218                           ;MotorDriver.c: 317: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1219  000638  5044               	movf	_Microstep,w,c
  1220  00063A  0D01               	mullw	1
  1221  00063C  0EE0               	movlw	low _LookUP_TABLE_SEN
  1222  00063E  24F3               	addwf	prodl,w,c
  1223  000640  6ED9               	movwf	fsr2l,c
  1224  000642  0E00               	movlw	high _LookUP_TABLE_SEN
  1225  000644  20F4               	addwfc	prodh,w,c
  1226  000646  6EDA               	movwf	fsr2h,c
  1227  000648  50DF               	movf	indf2,w,c
  1228  00064A  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1229  00064C  5033               	movf	??_State8MEF_act_Backward,w,c
  1230  00064E  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1231  000650  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1232  000652  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1233                           
  1234                           ;MotorDriver.c: 318: if (Microstep==24){
  1235  000656  0E18               	movlw	24
  1236  000658  1844               	xorwf	_Microstep,w,c
  1237  00065A  A4D8               	btfss	status,2,c
  1238  00065C  D004               	goto	l2288
  1239                           
  1240                           ;MotorDriver.c: 319: EstadoActual = STATE0;
  1241  00065E  0E00               	movlw	0
  1242  000660  6E4C               	movwf	_EstadoActual,c
  1243                           
  1244                           ;MotorDriver.c: 320: EstadoActual = STATE3;
  1245  000662  0E03               	movlw	3
  1246  000664  6E4C               	movwf	_EstadoActual,c
  1247  000666                     l2288:
  1248                           
  1249                           ;MotorDriver.c: 321: }
  1250                           ;MotorDriver.c: 322: Microstep--;
  1251  000666  0644               	decf	_Microstep,f,c
  1252                           
  1253                           ;MotorDriver.c: 328: }
  1254                           
  1255                           ;MotorDriver.c: 327: break;
  1256                           
  1257                           ;MotorDriver.c: 325: default:
  1258                           
  1259                           ;MotorDriver.c: 323: }
  1260                           ;MotorDriver.c: 324: break;
  1261  000668  0012               	return	
  1262  00066A                     l2292:
  1263  00066A  504C               	movf	_EstadoActual,w,c
  1264                           
  1265                           ; Switch size 1, requested type "space"
  1266                           ; Number of cases is 5, Range of values is 0 to 4
  1267                           ; switch strategies available:
  1268                           ; Name         Instructions Cycles
  1269                           ; simple_byte           16     9 (average)
  1270                           ;	Chosen strategy is simple_byte
  1271  00066C  0A00               	xorlw	0	; case 0
  1272  00066E  B4D8               	btfsc	status,2,c
  1273  000670  D71B               	goto	l2210
  1274  000672  0A01               	xorlw	1	; case 1
  1275  000674  B4D8               	btfsc	status,2,c
  1276  000676  D723               	goto	l2220
  1277  000678  0A03               	xorlw	3	; case 2
  1278  00067A  B4D8               	btfsc	status,2,c
  1279  00067C  D752               	goto	l2236
  1280  00067E  0A01               	xorlw	1	; case 3
  1281  000680  B4D8               	btfsc	status,2,c
  1282  000682  D785               	goto	l2254
  1283  000684  0A07               	xorlw	7	; case 4
  1284  000686  A4D8               	btfss	status,2,c
  1285  000688  0012               	return	
  1286  00068A  D7B7               	goto	l2272
  1287  00068C                     __end_of_State8MEF_act_Backward:
  1288                           	opt stack 0
  1289                           tblptru	equ	0xFF8
  1290                           tblptrh	equ	0xFF7
  1291                           tblptrl	equ	0xFF6
  1292                           tablat	equ	0xFF5
  1293                           prodh	equ	0xFF4
  1294                           prodl	equ	0xFF3
  1295                           intcon	equ	0xFF2
  1296                           postinc0	equ	0xFEE
  1297                           wreg	equ	0xFE8
  1298                           postdec1	equ	0xFE5
  1299                           fsr1l	equ	0xFE1
  1300                           indf2	equ	0xFDF
  1301                           fsr2h	equ	0xFDA
  1302                           fsr2l	equ	0xFD9
  1303                           status	equ	0xFD8
  1304                           
  1305 ;; *************** function _State8MEF_act *****************
  1306 ;; Defined at:
  1307 ;;		line 42 in file "MotorDriver.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;Total ram usage:        1 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:    5
  1328 ;; This function calls:
  1329 ;;		_EPWM1_LoadDutyValue
  1330 ;;		_EPWM2_LoadDutyValue
  1331 ;; This function is called by:
  1332 ;;		_StepMove
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text3
  1337  00068C                     __ptext3:
  1338                           	opt stack 0
  1339  00068C                     _State8MEF_act:
  1340                           	opt stack 24
  1341                           
  1342                           ;MotorDriver.c: 44: switch(EstadoActual) {
  1343                           
  1344                           ;incstack = 0
  1345  00068C  D0DF               	goto	l2006
  1346  00068E                     l1922:
  1347                           
  1348                           ;MotorDriver.c: 46: PSTR1CON = 0x00; PSTR2CON = 0x00;
  1349  00068E  0E00               	movlw	0
  1350  000690  6EB9               	movwf	4025,c	;volatile
  1351  000692  0E00               	movlw	0
  1352  000694  6E63               	movwf	3939,c	;volatile
  1353                           
  1354                           ;MotorDriver.c: 47: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whil
      +                          e(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  1355  000696  948B               	bcf	3979,2,c	;volatile
  1356  000698  9A8C               	bcf	3980,5,c	;volatile
  1357  00069A  928B               	bcf	3979,1,c	;volatile
  1358  00069C  908B               	bcf	3979,0,c	;volatile
  1359                           
  1360                           ;MotorDriver.c: 48: EstadoActual = STATE1;
  1361  00069E  0E01               	movlw	1
  1362  0006A0  6E4C               	movwf	_EstadoActual,c
  1363                           
  1364                           ;MotorDriver.c: 49: break;
  1365  0006A2  0012               	return	
  1366  0006A4                     l1932:
  1367                           
  1368                           ;MotorDriver.c: 51: PSTR1CON = 0x01; PSTR2CON = 0x01;
  1369  0006A4  0E01               	movlw	1
  1370  0006A6  6EB9               	movwf	4025,c	;volatile
  1371  0006A8  0E01               	movlw	1
  1372  0006AA  6E63               	movwf	3939,c	;volatile
  1373                           
  1374                           ;MotorDriver.c: 52: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  1375  0006AC  9A8C               	bcf	3980,5,c	;volatile
  1376  0006AE  908B               	bcf	3979,0,c	;volatile
  1377                           
  1378                           ;MotorDriver.c: 53: if (Microstep<8){
  1379  0006B0  5044               	movf	_Microstep,w,c
  1380  0006B2  0A80               	xorlw	128
  1381  0006B4  0F78               	addlw	-136
  1382  0006B6  B0D8               	btfsc	status,0,c
  1383  0006B8  0012               	return	
  1384                           
  1385                           ;MotorDriver.c: 57: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1386  0006BA  5044               	movf	_Microstep,w,c
  1387  0006BC  0D01               	mullw	1
  1388  0006BE  0E01               	movlw	low _LookUP_TABLE_COS
  1389  0006C0  24F3               	addwf	prodl,w,c
  1390  0006C2  6ED9               	movwf	fsr2l,c
  1391  0006C4  0E00               	movlw	high _LookUP_TABLE_COS
  1392  0006C6  20F4               	addwfc	prodh,w,c
  1393  0006C8  6EDA               	movwf	fsr2h,c
  1394  0006CA  50DF               	movf	indf2,w,c
  1395  0006CC  6E33               	movwf	??_State8MEF_act& (0+255),c
  1396  0006CE  5033               	movf	??_State8MEF_act,w,c
  1397  0006D0  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1398  0006D2  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1399  0006D4  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1400                           
  1401                           ;MotorDriver.c: 58: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1402  0006D8  5044               	movf	_Microstep,w,c
  1403  0006DA  0D01               	mullw	1
  1404  0006DC  0EE0               	movlw	low _LookUP_TABLE_SEN
  1405  0006DE  24F3               	addwf	prodl,w,c
  1406  0006E0  6ED9               	movwf	fsr2l,c
  1407  0006E2  0E00               	movlw	high _LookUP_TABLE_SEN
  1408  0006E4  20F4               	addwfc	prodh,w,c
  1409  0006E6  6EDA               	movwf	fsr2h,c
  1410  0006E8  50DF               	movf	indf2,w,c
  1411  0006EA  6E33               	movwf	??_State8MEF_act& (0+255),c
  1412  0006EC  5033               	movf	??_State8MEF_act,w,c
  1413  0006EE  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1414  0006F0  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1415  0006F2  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1416                           
  1417                           ;MotorDriver.c: 59: if (Microstep==7){
  1418  0006F6  0E07               	movlw	7
  1419  0006F8  1844               	xorwf	_Microstep,w,c
  1420  0006FA  A4D8               	btfss	status,2,c
  1421  0006FC  D002               	goto	l1946
  1422                           
  1423                           ;MotorDriver.c: 60: EstadoActual = STATE2;
  1424  0006FE  0E02               	movlw	2
  1425  000700  6E4C               	movwf	_EstadoActual,c
  1426  000702                     l1946:
  1427                           
  1428                           ;MotorDriver.c: 61: }
  1429                           ;MotorDriver.c: 62: Microstep++;
  1430  000702  2A44               	incf	_Microstep,f,c
  1431                           
  1432                           ;MotorDriver.c: 63: }
  1433                           ;MotorDriver.c: 64: break;
  1434  000704  0012               	return	
  1435  000706                     l1948:
  1436                           
  1437                           ;MotorDriver.c: 66: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1438  000706  0E02               	movlw	2
  1439  000708  6EB9               	movwf	4025,c	;volatile
  1440  00070A  0E01               	movlw	1
  1441  00070C  6E63               	movwf	3939,c	;volatile
  1442                           
  1443                           ;MotorDriver.c: 67: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  1444  00070E  948B               	bcf	3979,2,c	;volatile
  1445  000710  908B               	bcf	3979,0,c	;volatile
  1446                           
  1447                           ;MotorDriver.c: 68: if ((Microstep<16)&&(Microstep>7)){
  1448  000712  5044               	movf	_Microstep,w,c
  1449  000714  0A80               	xorlw	128
  1450  000716  0F70               	addlw	-144
  1451  000718  B0D8               	btfsc	status,0,c
  1452  00071A  0012               	return	
  1453  00071C  5044               	movf	_Microstep,w,c
  1454  00071E  0A80               	xorlw	128
  1455  000720  0F78               	addlw	-136
  1456  000722  A0D8               	btfss	status,0,c
  1457  000724  0012               	return	
  1458                           
  1459                           ;MotorDriver.c: 71: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1460  000726  5044               	movf	_Microstep,w,c
  1461  000728  0D01               	mullw	1
  1462  00072A  0E01               	movlw	low _LookUP_TABLE_COS
  1463  00072C  24F3               	addwf	prodl,w,c
  1464  00072E  6ED9               	movwf	fsr2l,c
  1465  000730  0E00               	movlw	high _LookUP_TABLE_COS
  1466  000732  20F4               	addwfc	prodh,w,c
  1467  000734  6EDA               	movwf	fsr2h,c
  1468  000736  50DF               	movf	indf2,w,c
  1469  000738  6E33               	movwf	??_State8MEF_act& (0+255),c
  1470  00073A  5033               	movf	??_State8MEF_act,w,c
  1471  00073C  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1472  00073E  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1473  000740  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1474                           
  1475                           ;MotorDriver.c: 72: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1476  000744  5044               	movf	_Microstep,w,c
  1477  000746  0D01               	mullw	1
  1478  000748  0EE0               	movlw	low _LookUP_TABLE_SEN
  1479  00074A  24F3               	addwf	prodl,w,c
  1480  00074C  6ED9               	movwf	fsr2l,c
  1481  00074E  0E00               	movlw	high _LookUP_TABLE_SEN
  1482  000750  20F4               	addwfc	prodh,w,c
  1483  000752  6EDA               	movwf	fsr2h,c
  1484  000754  50DF               	movf	indf2,w,c
  1485  000756  6E33               	movwf	??_State8MEF_act& (0+255),c
  1486  000758  5033               	movf	??_State8MEF_act,w,c
  1487  00075A  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1488  00075C  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1489  00075E  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1490                           
  1491                           ;MotorDriver.c: 74: if (Microstep==15){
  1492  000762  0E0F               	movlw	15
  1493  000764  1844               	xorwf	_Microstep,w,c
  1494  000766  A4D8               	btfss	status,2,c
  1495  000768  D002               	goto	l1964
  1496                           
  1497                           ;MotorDriver.c: 75: EstadoActual = STATE3;
  1498  00076A  0E03               	movlw	3
  1499  00076C  6E4C               	movwf	_EstadoActual,c
  1500  00076E                     l1964:
  1501                           
  1502                           ;MotorDriver.c: 76: }
  1503                           ;MotorDriver.c: 77: Microstep++;
  1504  00076E  2A44               	incf	_Microstep,f,c
  1505                           
  1506                           ;MotorDriver.c: 78: }
  1507                           ;MotorDriver.c: 79: break;
  1508  000770  0012               	return	
  1509  000772                     l1966:
  1510                           
  1511                           ;MotorDriver.c: 81: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1512  000772  0E02               	movlw	2
  1513  000774  6EB9               	movwf	4025,c	;volatile
  1514  000776  0E02               	movlw	2
  1515  000778  6E63               	movwf	3939,c	;volatile
  1516                           
  1517                           ;MotorDriver.c: 82: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
  1518  00077A  948B               	bcf	3979,2,c	;volatile
  1519  00077C  928B               	bcf	3979,1,c	;volatile
  1520                           
  1521                           ;MotorDriver.c: 83: if ((Microstep<24)&&(Microstep>15)){
  1522  00077E  5044               	movf	_Microstep,w,c
  1523  000780  0A80               	xorlw	128
  1524  000782  0F68               	addlw	-152
  1525  000784  B0D8               	btfsc	status,0,c
  1526  000786  0012               	return	
  1527  000788  5044               	movf	_Microstep,w,c
  1528  00078A  0A80               	xorlw	128
  1529  00078C  0F70               	addlw	-144
  1530  00078E  A0D8               	btfss	status,0,c
  1531  000790  0012               	return	
  1532                           
  1533                           ;MotorDriver.c: 87: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1534  000792  5044               	movf	_Microstep,w,c
  1535  000794  0D01               	mullw	1
  1536  000796  0E01               	movlw	low _LookUP_TABLE_COS
  1537  000798  24F3               	addwf	prodl,w,c
  1538  00079A  6ED9               	movwf	fsr2l,c
  1539  00079C  0E00               	movlw	high _LookUP_TABLE_COS
  1540  00079E  20F4               	addwfc	prodh,w,c
  1541  0007A0  6EDA               	movwf	fsr2h,c
  1542  0007A2  50DF               	movf	indf2,w,c
  1543  0007A4  6E33               	movwf	??_State8MEF_act& (0+255),c
  1544  0007A6  5033               	movf	??_State8MEF_act,w,c
  1545  0007A8  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1546  0007AA  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1547  0007AC  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1548                           
  1549                           ;MotorDriver.c: 88: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1550  0007B0  5044               	movf	_Microstep,w,c
  1551  0007B2  0D01               	mullw	1
  1552  0007B4  0EE0               	movlw	low _LookUP_TABLE_SEN
  1553  0007B6  24F3               	addwf	prodl,w,c
  1554  0007B8  6ED9               	movwf	fsr2l,c
  1555  0007BA  0E00               	movlw	high _LookUP_TABLE_SEN
  1556  0007BC  20F4               	addwfc	prodh,w,c
  1557  0007BE  6EDA               	movwf	fsr2h,c
  1558  0007C0  50DF               	movf	indf2,w,c
  1559  0007C2  6E33               	movwf	??_State8MEF_act& (0+255),c
  1560  0007C4  5033               	movf	??_State8MEF_act,w,c
  1561  0007C6  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1562  0007C8  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1563  0007CA  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1564                           
  1565                           ;MotorDriver.c: 90: if (Microstep==23){
  1566  0007CE  0E17               	movlw	23
  1567  0007D0  1844               	xorwf	_Microstep,w,c
  1568  0007D2  A4D8               	btfss	status,2,c
  1569  0007D4  D002               	goto	l1982
  1570                           
  1571                           ;MotorDriver.c: 91: EstadoActual = STATE4;
  1572  0007D6  0E04               	movlw	4
  1573  0007D8  6E4C               	movwf	_EstadoActual,c
  1574  0007DA                     l1982:
  1575                           
  1576                           ;MotorDriver.c: 92: }
  1577                           ;MotorDriver.c: 93: Microstep++;
  1578  0007DA  2A44               	incf	_Microstep,f,c
  1579                           
  1580                           ;MotorDriver.c: 94: }
  1581                           ;MotorDriver.c: 95: break;
  1582  0007DC  0012               	return	
  1583  0007DE                     l1984:
  1584                           
  1585                           ;MotorDriver.c: 97: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1586  0007DE  0E01               	movlw	1
  1587  0007E0  6EB9               	movwf	4025,c	;volatile
  1588  0007E2  0E02               	movlw	2
  1589  0007E4  6E63               	movwf	3939,c	;volatile
  1590                           
  1591                           ;MotorDriver.c: 98: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
  1592  0007E6  9A8C               	bcf	3980,5,c	;volatile
  1593  0007E8  928B               	bcf	3979,1,c	;volatile
  1594                           
  1595                           ;MotorDriver.c: 99: if ((Microstep<32)&&(Microstep>23)){
  1596  0007EA  5044               	movf	_Microstep,w,c
  1597  0007EC  0A80               	xorlw	128
  1598  0007EE  0F60               	addlw	-160
  1599  0007F0  B0D8               	btfsc	status,0,c
  1600  0007F2  0012               	return	
  1601  0007F4  5044               	movf	_Microstep,w,c
  1602  0007F6  0A80               	xorlw	128
  1603  0007F8  0F68               	addlw	-152
  1604  0007FA  A0D8               	btfss	status,0,c
  1605  0007FC  0012               	return	
  1606                           
  1607                           ;MotorDriver.c: 103: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1608  0007FE  5044               	movf	_Microstep,w,c
  1609  000800  0D01               	mullw	1
  1610  000802  0E01               	movlw	low _LookUP_TABLE_COS
  1611  000804  24F3               	addwf	prodl,w,c
  1612  000806  6ED9               	movwf	fsr2l,c
  1613  000808  0E00               	movlw	high _LookUP_TABLE_COS
  1614  00080A  20F4               	addwfc	prodh,w,c
  1615  00080C  6EDA               	movwf	fsr2h,c
  1616  00080E  50DF               	movf	indf2,w,c
  1617  000810  6E33               	movwf	??_State8MEF_act& (0+255),c
  1618  000812  5033               	movf	??_State8MEF_act,w,c
  1619  000814  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1620  000816  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1621  000818  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1622                           
  1623                           ;MotorDriver.c: 104: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1624  00081C  5044               	movf	_Microstep,w,c
  1625  00081E  0D01               	mullw	1
  1626  000820  0EE0               	movlw	low _LookUP_TABLE_SEN
  1627  000822  24F3               	addwf	prodl,w,c
  1628  000824  6ED9               	movwf	fsr2l,c
  1629  000826  0E00               	movlw	high _LookUP_TABLE_SEN
  1630  000828  20F4               	addwfc	prodh,w,c
  1631  00082A  6EDA               	movwf	fsr2h,c
  1632  00082C  50DF               	movf	indf2,w,c
  1633  00082E  6E33               	movwf	??_State8MEF_act& (0+255),c
  1634  000830  5033               	movf	??_State8MEF_act,w,c
  1635  000832  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1636  000834  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1637  000836  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1638                           
  1639                           ;MotorDriver.c: 106: if (Microstep==31){
  1640  00083A  0E1F               	movlw	31
  1641  00083C  1844               	xorwf	_Microstep,w,c
  1642  00083E  A4D8               	btfss	status,2,c
  1643  000840  D003               	goto	l2002
  1644                           
  1645                           ;MotorDriver.c: 108: EstadoActual = STATE1;
  1646  000842  0E01               	movlw	1
  1647  000844  6E4C               	movwf	_EstadoActual,c
  1648                           
  1649                           ;MotorDriver.c: 109: Microstep=-1;
  1650  000846  6844               	setf	_Microstep,c
  1651  000848                     l2002:
  1652                           
  1653                           ;MotorDriver.c: 110: }
  1654                           ;MotorDriver.c: 111: Microstep++;
  1655  000848  2A44               	incf	_Microstep,f,c
  1656                           
  1657                           ;MotorDriver.c: 117: }
  1658                           
  1659                           ;MotorDriver.c: 116: break;
  1660                           
  1661                           ;MotorDriver.c: 114: default:
  1662                           
  1663                           ;MotorDriver.c: 112: }
  1664                           ;MotorDriver.c: 113: break;
  1665  00084A  0012               	return	
  1666  00084C                     l2006:
  1667  00084C  504C               	movf	_EstadoActual,w,c
  1668                           
  1669                           ; Switch size 1, requested type "space"
  1670                           ; Number of cases is 5, Range of values is 0 to 4
  1671                           ; switch strategies available:
  1672                           ; Name         Instructions Cycles
  1673                           ; simple_byte           16     9 (average)
  1674                           ;	Chosen strategy is simple_byte
  1675  00084E  0A00               	xorlw	0	; case 0
  1676  000850  B4D8               	btfsc	status,2,c
  1677  000852  D71D               	goto	l1922
  1678  000854  0A01               	xorlw	1	; case 1
  1679  000856  B4D8               	btfsc	status,2,c
  1680  000858  D725               	goto	l1932
  1681  00085A  0A03               	xorlw	3	; case 2
  1682  00085C  B4D8               	btfsc	status,2,c
  1683  00085E  D753               	goto	l1948
  1684  000860  0A01               	xorlw	1	; case 3
  1685  000862  B4D8               	btfsc	status,2,c
  1686  000864  D786               	goto	l1966
  1687  000866  0A07               	xorlw	7	; case 4
  1688  000868  A4D8               	btfss	status,2,c
  1689  00086A  0012               	return	
  1690  00086C  D7B8               	goto	l1984
  1691  00086E                     __end_of_State8MEF_act:
  1692                           	opt stack 0
  1693                           tblptru	equ	0xFF8
  1694                           tblptrh	equ	0xFF7
  1695                           tblptrl	equ	0xFF6
  1696                           tablat	equ	0xFF5
  1697                           prodh	equ	0xFF4
  1698                           prodl	equ	0xFF3
  1699                           intcon	equ	0xFF2
  1700                           postinc0	equ	0xFEE
  1701                           wreg	equ	0xFE8
  1702                           postdec1	equ	0xFE5
  1703                           fsr1l	equ	0xFE1
  1704                           indf2	equ	0xFDF
  1705                           fsr2h	equ	0xFDA
  1706                           fsr2l	equ	0xFD9
  1707                           status	equ	0xFD8
  1708                           
  1709 ;; *************** function _State16MEF_act_Backward *****************
  1710 ;; Defined at:
  1711 ;;		line 190 in file "MotorDriver.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;Total ram usage:        1 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    5
  1732 ;; This function calls:
  1733 ;;		_EPWM1_LoadDutyValue
  1734 ;;		_EPWM2_LoadDutyValue
  1735 ;;		_EUSART1_Write
  1736 ;;		_limitar_corriente
  1737 ;; This function is called by:
  1738 ;;		_StepMove
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text4
  1743  0000AE                     __ptext4:
  1744                           	opt stack 0
  1745  0000AE                     _State16MEF_act_Backward:
  1746                           	opt stack 24
  1747                           
  1748                           ;MotorDriver.c: 191: switch(EstadoActual){
  1749                           
  1750                           ;incstack = 0
  1751  0000AE  D0F3               	goto	l2206
  1752  0000B0                     l2102:
  1753                           
  1754                           ;MotorDriver.c: 193: PSTR1CON = 0x00; PSTR2CON = 0x00;
  1755  0000B0  0E00               	movlw	0
  1756  0000B2  6EB9               	movwf	4025,c	;volatile
  1757  0000B4  0E00               	movlw	0
  1758  0000B6  6E63               	movwf	3939,c	;volatile
  1759                           
  1760                           ;MotorDriver.c: 194: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  1761  0000B8  948B               	bcf	3979,2,c	;volatile
  1762  0000BA  9A8C               	bcf	3980,5,c	;volatile
  1763  0000BC  928B               	bcf	3979,1,c	;volatile
  1764  0000BE  908B               	bcf	3979,0,c	;volatile
  1765                           
  1766                           ;MotorDriver.c: 195: EstadoActual = STATE1;
  1767  0000C0  0E01               	movlw	1
  1768  0000C2  6E4C               	movwf	_EstadoActual,c
  1769                           
  1770                           ;MotorDriver.c: 196: break;
  1771  0000C4  0012               	return	
  1772  0000C6                     l2112:
  1773                           
  1774                           ;MotorDriver.c: 198: PSTR1CON = 0x01; PSTR2CON = 0x01;
  1775  0000C6  0E01               	movlw	1
  1776  0000C8  6EB9               	movwf	4025,c	;volatile
  1777  0000CA  0E01               	movlw	1
  1778  0000CC  6E63               	movwf	3939,c	;volatile
  1779                           
  1780                           ;MotorDriver.c: 199: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1781  0000CE  9A8C               	bcf	3980,5,c	;volatile
  1782  0000D0  908B               	bcf	3979,0,c	;volatile
  1783                           
  1784                           ;MotorDriver.c: 200: if (Microstep<16){
  1785  0000D2  5044               	movf	_Microstep,w,c
  1786  0000D4  0A80               	xorlw	128
  1787  0000D6  0F70               	addlw	-144
  1788  0000D8  B0D8               	btfsc	status,0,c
  1789  0000DA  0012               	return	
  1790                           
  1791                           ;MotorDriver.c: 201: EUSART1_Write(Microstep);
  1792  0000DC  5044               	movf	_Microstep,w,c
  1793  0000DE  EC82  F006         	call	_EUSART1_Write
  1794                           
  1795                           ;MotorDriver.c: 202: limitar_corriente();
  1796  0000E2  EC2F  F005         	call	_limitar_corriente	;wreg free
  1797                           
  1798                           ;MotorDriver.c: 203: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1799  0000E6  5044               	movf	_Microstep,w,c
  1800  0000E8  0D01               	mullw	1
  1801  0000EA  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1802  0000EC  24F3               	addwf	prodl,w,c
  1803  0000EE  6ED9               	movwf	fsr2l,c
  1804  0000F0  0E00               	movlw	high _LookUP_TABLE_COS_16
  1805  0000F2  20F4               	addwfc	prodh,w,c
  1806  0000F4  6EDA               	movwf	fsr2h,c
  1807  0000F6  50DF               	movf	indf2,w,c
  1808  0000F8  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1809  0000FA  5033               	movf	??_State16MEF_act_Backward,w,c
  1810  0000FC  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1811  0000FE  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1812  000100  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1813                           
  1814                           ;MotorDriver.c: 204: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1815  000104  5044               	movf	_Microstep,w,c
  1816  000106  0D01               	mullw	1
  1817  000108  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1818  00010A  24F3               	addwf	prodl,w,c
  1819  00010C  6ED9               	movwf	fsr2l,c
  1820  00010E  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1821  000110  20F4               	addwfc	prodh,w,c
  1822  000112  6EDA               	movwf	fsr2h,c
  1823  000114  50DF               	movf	indf2,w,c
  1824  000116  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1825  000118  5033               	movf	??_State16MEF_act_Backward,w,c
  1826  00011A  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1827  00011C  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1828  00011E  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1829                           
  1830                           ;MotorDriver.c: 205: if (Microstep==0){
  1831  000122  5044               	movf	_Microstep,w,c
  1832  000124  A4D8               	btfss	status,2,c
  1833  000126  D004               	goto	l2132
  1834                           
  1835                           ;MotorDriver.c: 206: EstadoActual = STATE4;
  1836  000128  0E04               	movlw	4
  1837  00012A  6E4C               	movwf	_EstadoActual,c
  1838                           
  1839                           ;MotorDriver.c: 207: Microstep=63;
  1840  00012C  0E3F               	movlw	63
  1841  00012E  6E44               	movwf	_Microstep,c
  1842  000130                     l2132:
  1843                           
  1844                           ;MotorDriver.c: 208: }
  1845                           ;MotorDriver.c: 209: Microstep--;
  1846  000130  0644               	decf	_Microstep,f,c
  1847                           
  1848                           ;MotorDriver.c: 210: }
  1849                           ;MotorDriver.c: 211: break;
  1850  000132  0012               	return	
  1851  000134                     l2134:
  1852                           
  1853                           ;MotorDriver.c: 213: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1854  000134  0E02               	movlw	2
  1855  000136  6EB9               	movwf	4025,c	;volatile
  1856  000138  0E01               	movlw	1
  1857  00013A  6E63               	movwf	3939,c	;volatile
  1858                           
  1859                           ;MotorDriver.c: 214: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1860  00013C  948B               	bcf	3979,2,c	;volatile
  1861  00013E  908B               	bcf	3979,0,c	;volatile
  1862                           
  1863                           ;MotorDriver.c: 215: limitar_corriente();
  1864  000140  EC2F  F005         	call	_limitar_corriente	;wreg free
  1865                           
  1866                           ;MotorDriver.c: 216: if ((Microstep<32)&&(Microstep>15)){
  1867  000144  5044               	movf	_Microstep,w,c
  1868  000146  0A80               	xorlw	128
  1869  000148  0F60               	addlw	-160
  1870  00014A  B0D8               	btfsc	status,0,c
  1871  00014C  0012               	return	
  1872  00014E  5044               	movf	_Microstep,w,c
  1873  000150  0A80               	xorlw	128
  1874  000152  0F70               	addlw	-144
  1875  000154  A0D8               	btfss	status,0,c
  1876  000156  0012               	return	
  1877                           
  1878                           ;MotorDriver.c: 217: EUSART1_Write(Microstep);
  1879  000158  5044               	movf	_Microstep,w,c
  1880  00015A  EC82  F006         	call	_EUSART1_Write
  1881                           
  1882                           ;MotorDriver.c: 218: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1883  00015E  5044               	movf	_Microstep,w,c
  1884  000160  0D01               	mullw	1
  1885  000162  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1886  000164  24F3               	addwf	prodl,w,c
  1887  000166  6ED9               	movwf	fsr2l,c
  1888  000168  0E00               	movlw	high _LookUP_TABLE_COS_16
  1889  00016A  20F4               	addwfc	prodh,w,c
  1890  00016C  6EDA               	movwf	fsr2h,c
  1891  00016E  50DF               	movf	indf2,w,c
  1892  000170  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1893  000172  5033               	movf	??_State16MEF_act_Backward,w,c
  1894  000174  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1895  000176  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1896  000178  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1897                           
  1898                           ;MotorDriver.c: 219: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1899  00017C  5044               	movf	_Microstep,w,c
  1900  00017E  0D01               	mullw	1
  1901  000180  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1902  000182  24F3               	addwf	prodl,w,c
  1903  000184  6ED9               	movwf	fsr2l,c
  1904  000186  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1905  000188  20F4               	addwfc	prodh,w,c
  1906  00018A  6EDA               	movwf	fsr2h,c
  1907  00018C  50DF               	movf	indf2,w,c
  1908  00018E  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1909  000190  5033               	movf	??_State16MEF_act_Backward,w,c
  1910  000192  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1911  000194  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1912  000196  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1913                           
  1914                           ;MotorDriver.c: 220: if (Microstep==16){
  1915  00019A  0E10               	movlw	16
  1916  00019C  1844               	xorwf	_Microstep,w,c
  1917  00019E  A4D8               	btfss	status,2,c
  1918  0001A0  D002               	goto	l2156
  1919                           
  1920                           ;MotorDriver.c: 221: EstadoActual = STATE1;
  1921  0001A2  0E01               	movlw	1
  1922  0001A4  6E4C               	movwf	_EstadoActual,c
  1923  0001A6                     l2156:
  1924                           
  1925                           ;MotorDriver.c: 222: }
  1926                           ;MotorDriver.c: 223: Microstep--;
  1927  0001A6  0644               	decf	_Microstep,f,c
  1928                           
  1929                           ;MotorDriver.c: 224: }
  1930                           ;MotorDriver.c: 225: break;
  1931  0001A8  0012               	return	
  1932  0001AA                     l2158:
  1933                           
  1934                           ;MotorDriver.c: 227: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1935  0001AA  0E02               	movlw	2
  1936  0001AC  6EB9               	movwf	4025,c	;volatile
  1937  0001AE  0E02               	movlw	2
  1938  0001B0  6E63               	movwf	3939,c	;volatile
  1939                           
  1940                           ;MotorDriver.c: 228: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1941  0001B2  948B               	bcf	3979,2,c	;volatile
  1942  0001B4  928B               	bcf	3979,1,c	;volatile
  1943                           
  1944                           ;MotorDriver.c: 229: limitar_corriente();
  1945  0001B6  EC2F  F005         	call	_limitar_corriente	;wreg free
  1946                           
  1947                           ;MotorDriver.c: 230: if ((Microstep<48)&&(Microstep>31)){
  1948  0001BA  5044               	movf	_Microstep,w,c
  1949  0001BC  0A80               	xorlw	128
  1950  0001BE  0F50               	addlw	-176
  1951  0001C0  B0D8               	btfsc	status,0,c
  1952  0001C2  0012               	return	
  1953  0001C4  5044               	movf	_Microstep,w,c
  1954  0001C6  0A80               	xorlw	128
  1955  0001C8  0F60               	addlw	-160
  1956  0001CA  A0D8               	btfss	status,0,c
  1957  0001CC  0012               	return	
  1958                           
  1959                           ;MotorDriver.c: 231: EUSART1_Write(Microstep);
  1960  0001CE  5044               	movf	_Microstep,w,c
  1961  0001D0  EC82  F006         	call	_EUSART1_Write
  1962                           
  1963                           ;MotorDriver.c: 232: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1964  0001D4  5044               	movf	_Microstep,w,c
  1965  0001D6  0D01               	mullw	1
  1966  0001D8  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1967  0001DA  24F3               	addwf	prodl,w,c
  1968  0001DC  6ED9               	movwf	fsr2l,c
  1969  0001DE  0E00               	movlw	high _LookUP_TABLE_COS_16
  1970  0001E0  20F4               	addwfc	prodh,w,c
  1971  0001E2  6EDA               	movwf	fsr2h,c
  1972  0001E4  50DF               	movf	indf2,w,c
  1973  0001E6  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1974  0001E8  5033               	movf	??_State16MEF_act_Backward,w,c
  1975  0001EA  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1976  0001EC  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1977  0001EE  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1978                           
  1979                           ;MotorDriver.c: 233: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1980  0001F2  5044               	movf	_Microstep,w,c
  1981  0001F4  0D01               	mullw	1
  1982  0001F6  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1983  0001F8  24F3               	addwf	prodl,w,c
  1984  0001FA  6ED9               	movwf	fsr2l,c
  1985  0001FC  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1986  0001FE  20F4               	addwfc	prodh,w,c
  1987  000200  6EDA               	movwf	fsr2h,c
  1988  000202  50DF               	movf	indf2,w,c
  1989  000204  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1990  000206  5033               	movf	??_State16MEF_act_Backward,w,c
  1991  000208  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1992  00020A  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1993  00020C  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1994                           
  1995                           ;MotorDriver.c: 234: if (Microstep==32){
  1996  000210  0E20               	movlw	32
  1997  000212  1844               	xorwf	_Microstep,w,c
  1998  000214  A4D8               	btfss	status,2,c
  1999  000216  D002               	goto	l2180
  2000                           
  2001                           ;MotorDriver.c: 235: EstadoActual = STATE2;
  2002  000218  0E02               	movlw	2
  2003  00021A  6E4C               	movwf	_EstadoActual,c
  2004  00021C                     l2180:
  2005                           
  2006                           ;MotorDriver.c: 236: }
  2007                           ;MotorDriver.c: 237: Microstep--;
  2008  00021C  0644               	decf	_Microstep,f,c
  2009                           
  2010                           ;MotorDriver.c: 238: }
  2011                           ;MotorDriver.c: 239: break;
  2012  00021E  0012               	return	
  2013  000220                     l2182:
  2014                           
  2015                           ;MotorDriver.c: 241: PSTR1CON = 0x01; PSTR2CON = 0x02;
  2016  000220  0E01               	movlw	1
  2017  000222  6EB9               	movwf	4025,c	;volatile
  2018  000224  0E02               	movlw	2
  2019  000226  6E63               	movwf	3939,c	;volatile
  2020                           
  2021                           ;MotorDriver.c: 242: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2022  000228  9A8C               	bcf	3980,5,c	;volatile
  2023  00022A  928B               	bcf	3979,1,c	;volatile
  2024                           
  2025                           ;MotorDriver.c: 243: if ((Microstep<64)&&(Microstep>47)){
  2026  00022C  5044               	movf	_Microstep,w,c
  2027  00022E  0A80               	xorlw	128
  2028  000230  0F40               	addlw	-192
  2029  000232  B0D8               	btfsc	status,0,c
  2030  000234  0012               	return	
  2031  000236  5044               	movf	_Microstep,w,c
  2032  000238  0A80               	xorlw	128
  2033  00023A  0F50               	addlw	-176
  2034  00023C  A0D8               	btfss	status,0,c
  2035  00023E  0012               	return	
  2036                           
  2037                           ;MotorDriver.c: 244: EUSART1_Write(Microstep);
  2038  000240  5044               	movf	_Microstep,w,c
  2039  000242  EC82  F006         	call	_EUSART1_Write
  2040                           
  2041                           ;MotorDriver.c: 245: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2042  000246  5044               	movf	_Microstep,w,c
  2043  000248  0D01               	mullw	1
  2044  00024A  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2045  00024C  24F3               	addwf	prodl,w,c
  2046  00024E  6ED9               	movwf	fsr2l,c
  2047  000250  0E00               	movlw	high _LookUP_TABLE_COS_16
  2048  000252  20F4               	addwfc	prodh,w,c
  2049  000254  6EDA               	movwf	fsr2h,c
  2050  000256  50DF               	movf	indf2,w,c
  2051  000258  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  2052  00025A  5033               	movf	??_State16MEF_act_Backward,w,c
  2053  00025C  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2054  00025E  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2055  000260  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2056                           
  2057                           ;MotorDriver.c: 246: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2058  000264  5044               	movf	_Microstep,w,c
  2059  000266  0D01               	mullw	1
  2060  000268  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2061  00026A  24F3               	addwf	prodl,w,c
  2062  00026C  6ED9               	movwf	fsr2l,c
  2063  00026E  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2064  000270  20F4               	addwfc	prodh,w,c
  2065  000272  6EDA               	movwf	fsr2h,c
  2066  000274  50DF               	movf	indf2,w,c
  2067  000276  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  2068  000278  5033               	movf	??_State16MEF_act_Backward,w,c
  2069  00027A  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2070  00027C  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2071  00027E  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2072                           
  2073                           ;MotorDriver.c: 247: if (Microstep==48){
  2074  000282  0E30               	movlw	48
  2075  000284  1844               	xorwf	_Microstep,w,c
  2076  000286  A4D8               	btfss	status,2,c
  2077  000288  D004               	goto	l2202
  2078                           
  2079                           ;MotorDriver.c: 248: EstadoActual = STATE0;
  2080  00028A  0E00               	movlw	0
  2081  00028C  6E4C               	movwf	_EstadoActual,c
  2082                           
  2083                           ;MotorDriver.c: 249: EstadoActual = STATE3;
  2084  00028E  0E03               	movlw	3
  2085  000290  6E4C               	movwf	_EstadoActual,c
  2086  000292                     l2202:
  2087                           
  2088                           ;MotorDriver.c: 250: }
  2089                           ;MotorDriver.c: 251: Microstep--;
  2090  000292  0644               	decf	_Microstep,f,c
  2091                           
  2092                           ;MotorDriver.c: 257: }
  2093                           
  2094                           ;MotorDriver.c: 256: break;
  2095                           
  2096                           ;MotorDriver.c: 254: default:
  2097                           
  2098                           ;MotorDriver.c: 252: }
  2099                           ;MotorDriver.c: 253: break;
  2100  000294  0012               	return	
  2101  000296                     l2206:
  2102  000296  504C               	movf	_EstadoActual,w,c
  2103                           
  2104                           ; Switch size 1, requested type "space"
  2105                           ; Number of cases is 5, Range of values is 0 to 4
  2106                           ; switch strategies available:
  2107                           ; Name         Instructions Cycles
  2108                           ; simple_byte           16     9 (average)
  2109                           ;	Chosen strategy is simple_byte
  2110  000298  0A00               	xorlw	0	; case 0
  2111  00029A  B4D8               	btfsc	status,2,c
  2112  00029C  D709               	goto	l2102
  2113  00029E  0A01               	xorlw	1	; case 1
  2114  0002A0  B4D8               	btfsc	status,2,c
  2115  0002A2  D711               	goto	l2112
  2116  0002A4  0A03               	xorlw	3	; case 2
  2117  0002A6  B4D8               	btfsc	status,2,c
  2118  0002A8  D745               	goto	l2134
  2119  0002AA  0A01               	xorlw	1	; case 3
  2120  0002AC  B4D8               	btfsc	status,2,c
  2121  0002AE  D77D               	goto	l2158
  2122  0002B0  0A07               	xorlw	7	; case 4
  2123  0002B2  A4D8               	btfss	status,2,c
  2124  0002B4  0012               	return	
  2125  0002B6  D7B4               	goto	l2182
  2126  0002B8                     __end_of_State16MEF_act_Backward:
  2127                           	opt stack 0
  2128                           tblptru	equ	0xFF8
  2129                           tblptrh	equ	0xFF7
  2130                           tblptrl	equ	0xFF6
  2131                           tablat	equ	0xFF5
  2132                           prodh	equ	0xFF4
  2133                           prodl	equ	0xFF3
  2134                           intcon	equ	0xFF2
  2135                           postinc0	equ	0xFEE
  2136                           wreg	equ	0xFE8
  2137                           postdec1	equ	0xFE5
  2138                           fsr1l	equ	0xFE1
  2139                           indf2	equ	0xFDF
  2140                           fsr2h	equ	0xFDA
  2141                           fsr2l	equ	0xFD9
  2142                           status	equ	0xFD8
  2143                           
  2144 ;; *************** function _EUSART1_Write *****************
  2145 ;; Defined at:
  2146 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  txData          1    wreg     unsigned char 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  txData          1   14[COMRAM] unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;Total ram usage:        1 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    4
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_State16MEF_act_Backward
  2171 ;;		_ADC_Conversion
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text5
  2176  000D04                     __ptext5:
  2177                           	opt stack 0
  2178  000D04                     _EUSART1_Write:
  2179                           	opt stack 24
  2180                           
  2181                           ;incstack = 0
  2182                           ;EUSART1_Write@txData stored from wreg
  2183  000D04  6E2F               	movwf	EUSART1_Write@txData,c
  2184  000D06                     l339:
  2185  000D06  A89E               	btfss	3998,4,c	;volatile
  2186  000D08  D7FE               	goto	l339
  2187                           
  2188                           ;eusart1.c: 100: }
  2189                           ;eusart1.c: 102: TXREG1 = txData;
  2190  000D0A  C02F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2191  000D0E  0012               	return		;funcret
  2192  000D10                     __end_of_EUSART1_Write:
  2193                           	opt stack 0
  2194                           tblptru	equ	0xFF8
  2195                           tblptrh	equ	0xFF7
  2196                           tblptrl	equ	0xFF6
  2197                           tablat	equ	0xFF5
  2198                           prodh	equ	0xFF4
  2199                           prodl	equ	0xFF3
  2200                           intcon	equ	0xFF2
  2201                           postinc0	equ	0xFEE
  2202                           wreg	equ	0xFE8
  2203                           postdec1	equ	0xFE5
  2204                           fsr1l	equ	0xFE1
  2205                           indf2	equ	0xFDF
  2206                           fsr2h	equ	0xFDA
  2207                           fsr2l	equ	0xFD9
  2208                           status	equ	0xFD8
  2209                           
  2210 ;; *************** function _State16MEF_act *****************
  2211 ;; Defined at:
  2212 ;;		line 120 in file "MotorDriver.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;Total ram usage:        1 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    5
  2233 ;; This function calls:
  2234 ;;		_EPWM1_LoadDutyValue
  2235 ;;		_EPWM2_LoadDutyValue
  2236 ;;		_limitar_corriente
  2237 ;; This function is called by:
  2238 ;;		_StepMove
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text6
  2243  0002B8                     __ptext6:
  2244                           	opt stack 0
  2245  0002B8                     _State16MEF_act:
  2246                           	opt stack 24
  2247                           
  2248                           ;MotorDriver.c: 121: switch(EstadoActual) {
  2249                           
  2250                           ;incstack = 0
  2251  0002B8  D0E5               	goto	l2098
  2252  0002BA                     l2010:
  2253                           
  2254                           ;MotorDriver.c: 123: PSTR1CON = 0x00; PSTR2CON = 0x00;
  2255  0002BA  0E00               	movlw	0
  2256  0002BC  6EB9               	movwf	4025,c	;volatile
  2257  0002BE  0E00               	movlw	0
  2258  0002C0  6E63               	movwf	3939,c	;volatile
  2259                           
  2260                           ;MotorDriver.c: 124: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  2261  0002C2  948B               	bcf	3979,2,c	;volatile
  2262  0002C4  9A8C               	bcf	3980,5,c	;volatile
  2263  0002C6  928B               	bcf	3979,1,c	;volatile
  2264  0002C8  908B               	bcf	3979,0,c	;volatile
  2265                           
  2266                           ;MotorDriver.c: 125: EstadoActual = STATE1;
  2267  0002CA  0E01               	movlw	1
  2268  0002CC  6E4C               	movwf	_EstadoActual,c
  2269                           
  2270                           ;MotorDriver.c: 126: break;
  2271  0002CE  0012               	return	
  2272  0002D0                     l2020:
  2273                           
  2274                           ;MotorDriver.c: 128: PSTR1CON = 0x01; PSTR2CON = 0x01;
  2275  0002D0  0E01               	movlw	1
  2276  0002D2  6EB9               	movwf	4025,c	;volatile
  2277  0002D4  0E01               	movlw	1
  2278  0002D6  6E63               	movwf	3939,c	;volatile
  2279                           
  2280                           ;MotorDriver.c: 129: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2281  0002D8  9A8C               	bcf	3980,5,c	;volatile
  2282  0002DA  908B               	bcf	3979,0,c	;volatile
  2283                           
  2284                           ;MotorDriver.c: 130: if (Microstep<16){
  2285  0002DC  5044               	movf	_Microstep,w,c
  2286  0002DE  0A80               	xorlw	128
  2287  0002E0  0F70               	addlw	-144
  2288  0002E2  B0D8               	btfsc	status,0,c
  2289  0002E4  0012               	return	
  2290                           
  2291                           ;MotorDriver.c: 132: limitar_corriente();
  2292  0002E6  EC2F  F005         	call	_limitar_corriente	;wreg free
  2293                           
  2294                           ;MotorDriver.c: 133: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2295  0002EA  5044               	movf	_Microstep,w,c
  2296  0002EC  0D01               	mullw	1
  2297  0002EE  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2298  0002F0  24F3               	addwf	prodl,w,c
  2299  0002F2  6ED9               	movwf	fsr2l,c
  2300  0002F4  0E00               	movlw	high _LookUP_TABLE_COS_16
  2301  0002F6  20F4               	addwfc	prodh,w,c
  2302  0002F8  6EDA               	movwf	fsr2h,c
  2303  0002FA  50DF               	movf	indf2,w,c
  2304  0002FC  6E33               	movwf	??_State16MEF_act& (0+255),c
  2305  0002FE  5033               	movf	??_State16MEF_act,w,c
  2306  000300  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2307  000302  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2308  000304  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2309                           
  2310                           ;MotorDriver.c: 134: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2311  000308  5044               	movf	_Microstep,w,c
  2312  00030A  0D01               	mullw	1
  2313  00030C  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2314  00030E  24F3               	addwf	prodl,w,c
  2315  000310  6ED9               	movwf	fsr2l,c
  2316  000312  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2317  000314  20F4               	addwfc	prodh,w,c
  2318  000316  6EDA               	movwf	fsr2h,c
  2319  000318  50DF               	movf	indf2,w,c
  2320  00031A  6E33               	movwf	??_State16MEF_act& (0+255),c
  2321  00031C  5033               	movf	??_State16MEF_act,w,c
  2322  00031E  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2323  000320  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2324  000322  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2325                           
  2326                           ;MotorDriver.c: 135: if (Microstep==15){
  2327  000326  0E0F               	movlw	15
  2328  000328  1844               	xorwf	_Microstep,w,c
  2329  00032A  A4D8               	btfss	status,2,c
  2330  00032C  D002               	goto	l2034
  2331                           
  2332                           ;MotorDriver.c: 136: EstadoActual = STATE2;
  2333  00032E  0E02               	movlw	2
  2334  000330  6E4C               	movwf	_EstadoActual,c
  2335  000332                     l2034:
  2336                           
  2337                           ;MotorDriver.c: 137: }
  2338                           ;MotorDriver.c: 138: Microstep++;
  2339  000332  2A44               	incf	_Microstep,f,c
  2340                           
  2341                           ;MotorDriver.c: 139: }
  2342                           ;MotorDriver.c: 140: break;
  2343  000334  0012               	return	
  2344  000336                     l2036:
  2345                           
  2346                           ;MotorDriver.c: 142: PSTR1CON = 0x02; PSTR2CON = 0x01;
  2347  000336  0E02               	movlw	2
  2348  000338  6EB9               	movwf	4025,c	;volatile
  2349  00033A  0E01               	movlw	1
  2350  00033C  6E63               	movwf	3939,c	;volatile
  2351                           
  2352                           ;MotorDriver.c: 143: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2353  00033E  948B               	bcf	3979,2,c	;volatile
  2354  000340  908B               	bcf	3979,0,c	;volatile
  2355                           
  2356                           ;MotorDriver.c: 144: limitar_corriente();
  2357  000342  EC2F  F005         	call	_limitar_corriente	;wreg free
  2358                           
  2359                           ;MotorDriver.c: 145: if ((Microstep<32)&&(Microstep>15)){
  2360  000346  5044               	movf	_Microstep,w,c
  2361  000348  0A80               	xorlw	128
  2362  00034A  0F60               	addlw	-160
  2363  00034C  B0D8               	btfsc	status,0,c
  2364  00034E  0012               	return	
  2365  000350  5044               	movf	_Microstep,w,c
  2366  000352  0A80               	xorlw	128
  2367  000354  0F70               	addlw	-144
  2368  000356  A0D8               	btfss	status,0,c
  2369  000358  0012               	return	
  2370                           
  2371                           ;MotorDriver.c: 147: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2372  00035A  5044               	movf	_Microstep,w,c
  2373  00035C  0D01               	mullw	1
  2374  00035E  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2375  000360  24F3               	addwf	prodl,w,c
  2376  000362  6ED9               	movwf	fsr2l,c
  2377  000364  0E00               	movlw	high _LookUP_TABLE_COS_16
  2378  000366  20F4               	addwfc	prodh,w,c
  2379  000368  6EDA               	movwf	fsr2h,c
  2380  00036A  50DF               	movf	indf2,w,c
  2381  00036C  6E33               	movwf	??_State16MEF_act& (0+255),c
  2382  00036E  5033               	movf	??_State16MEF_act,w,c
  2383  000370  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2384  000372  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2385  000374  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2386                           
  2387                           ;MotorDriver.c: 148: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2388  000378  5044               	movf	_Microstep,w,c
  2389  00037A  0D01               	mullw	1
  2390  00037C  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2391  00037E  24F3               	addwf	prodl,w,c
  2392  000380  6ED9               	movwf	fsr2l,c
  2393  000382  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2394  000384  20F4               	addwfc	prodh,w,c
  2395  000386  6EDA               	movwf	fsr2h,c
  2396  000388  50DF               	movf	indf2,w,c
  2397  00038A  6E33               	movwf	??_State16MEF_act& (0+255),c
  2398  00038C  5033               	movf	??_State16MEF_act,w,c
  2399  00038E  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2400  000390  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2401  000392  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2402                           
  2403                           ;MotorDriver.c: 149: if (Microstep==31){
  2404  000396  0E1F               	movlw	31
  2405  000398  1844               	xorwf	_Microstep,w,c
  2406  00039A  A4D8               	btfss	status,2,c
  2407  00039C  D002               	goto	l2054
  2408                           
  2409                           ;MotorDriver.c: 150: EstadoActual = STATE3;
  2410  00039E  0E03               	movlw	3
  2411  0003A0  6E4C               	movwf	_EstadoActual,c
  2412  0003A2                     l2054:
  2413                           
  2414                           ;MotorDriver.c: 151: }
  2415                           ;MotorDriver.c: 152: Microstep++;
  2416  0003A2  2A44               	incf	_Microstep,f,c
  2417                           
  2418                           ;MotorDriver.c: 153: }
  2419                           ;MotorDriver.c: 154: break;
  2420  0003A4  0012               	return	
  2421  0003A6                     l2056:
  2422                           
  2423                           ;MotorDriver.c: 156: PSTR1CON = 0x02; PSTR2CON = 0x02;
  2424  0003A6  0E02               	movlw	2
  2425  0003A8  6EB9               	movwf	4025,c	;volatile
  2426  0003AA  0E02               	movlw	2
  2427  0003AC  6E63               	movwf	3939,c	;volatile
  2428                           
  2429                           ;MotorDriver.c: 157: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2430  0003AE  948B               	bcf	3979,2,c	;volatile
  2431  0003B0  928B               	bcf	3979,1,c	;volatile
  2432                           
  2433                           ;MotorDriver.c: 158: limitar_corriente();
  2434  0003B2  EC2F  F005         	call	_limitar_corriente	;wreg free
  2435                           
  2436                           ;MotorDriver.c: 159: if ((Microstep<48)&&(Microstep>31)){
  2437  0003B6  5044               	movf	_Microstep,w,c
  2438  0003B8  0A80               	xorlw	128
  2439  0003BA  0F50               	addlw	-176
  2440  0003BC  B0D8               	btfsc	status,0,c
  2441  0003BE  0012               	return	
  2442  0003C0  5044               	movf	_Microstep,w,c
  2443  0003C2  0A80               	xorlw	128
  2444  0003C4  0F60               	addlw	-160
  2445  0003C6  A0D8               	btfss	status,0,c
  2446  0003C8  0012               	return	
  2447                           
  2448                           ;MotorDriver.c: 161: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2449  0003CA  5044               	movf	_Microstep,w,c
  2450  0003CC  0D01               	mullw	1
  2451  0003CE  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2452  0003D0  24F3               	addwf	prodl,w,c
  2453  0003D2  6ED9               	movwf	fsr2l,c
  2454  0003D4  0E00               	movlw	high _LookUP_TABLE_COS_16
  2455  0003D6  20F4               	addwfc	prodh,w,c
  2456  0003D8  6EDA               	movwf	fsr2h,c
  2457  0003DA  50DF               	movf	indf2,w,c
  2458  0003DC  6E33               	movwf	??_State16MEF_act& (0+255),c
  2459  0003DE  5033               	movf	??_State16MEF_act,w,c
  2460  0003E0  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2461  0003E2  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2462  0003E4  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2463                           
  2464                           ;MotorDriver.c: 162: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2465  0003E8  5044               	movf	_Microstep,w,c
  2466  0003EA  0D01               	mullw	1
  2467  0003EC  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2468  0003EE  24F3               	addwf	prodl,w,c
  2469  0003F0  6ED9               	movwf	fsr2l,c
  2470  0003F2  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2471  0003F4  20F4               	addwfc	prodh,w,c
  2472  0003F6  6EDA               	movwf	fsr2h,c
  2473  0003F8  50DF               	movf	indf2,w,c
  2474  0003FA  6E33               	movwf	??_State16MEF_act& (0+255),c
  2475  0003FC  5033               	movf	??_State16MEF_act,w,c
  2476  0003FE  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2477  000400  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2478  000402  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2479                           
  2480                           ;MotorDriver.c: 163: if (Microstep==47){
  2481  000406  0E2F               	movlw	47
  2482  000408  1844               	xorwf	_Microstep,w,c
  2483  00040A  A4D8               	btfss	status,2,c
  2484  00040C  D002               	goto	l2074
  2485                           
  2486                           ;MotorDriver.c: 164: EstadoActual = STATE4;
  2487  00040E  0E04               	movlw	4
  2488  000410  6E4C               	movwf	_EstadoActual,c
  2489  000412                     l2074:
  2490                           
  2491                           ;MotorDriver.c: 165: }
  2492                           ;MotorDriver.c: 166: Microstep++;
  2493  000412  2A44               	incf	_Microstep,f,c
  2494                           
  2495                           ;MotorDriver.c: 167: }
  2496                           ;MotorDriver.c: 168: break;
  2497  000414  0012               	return	
  2498  000416                     l2076:
  2499                           
  2500                           ;MotorDriver.c: 170: PSTR1CON = 0x01; PSTR2CON = 0x02;
  2501  000416  0E01               	movlw	1
  2502  000418  6EB9               	movwf	4025,c	;volatile
  2503  00041A  0E02               	movlw	2
  2504  00041C  6E63               	movwf	3939,c	;volatile
  2505                           
  2506                           ;MotorDriver.c: 171: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2507  00041E  9A8C               	bcf	3980,5,c	;volatile
  2508  000420  928B               	bcf	3979,1,c	;volatile
  2509                           
  2510                           ;MotorDriver.c: 172: if ((Microstep<64)&&(Microstep>47)){
  2511  000422  5044               	movf	_Microstep,w,c
  2512  000424  0A80               	xorlw	128
  2513  000426  0F40               	addlw	-192
  2514  000428  B0D8               	btfsc	status,0,c
  2515  00042A  0012               	return	
  2516  00042C  5044               	movf	_Microstep,w,c
  2517  00042E  0A80               	xorlw	128
  2518  000430  0F50               	addlw	-176
  2519  000432  A0D8               	btfss	status,0,c
  2520  000434  0012               	return	
  2521                           
  2522                           ;MotorDriver.c: 174: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2523  000436  5044               	movf	_Microstep,w,c
  2524  000438  0D01               	mullw	1
  2525  00043A  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2526  00043C  24F3               	addwf	prodl,w,c
  2527  00043E  6ED9               	movwf	fsr2l,c
  2528  000440  0E00               	movlw	high _LookUP_TABLE_COS_16
  2529  000442  20F4               	addwfc	prodh,w,c
  2530  000444  6EDA               	movwf	fsr2h,c
  2531  000446  50DF               	movf	indf2,w,c
  2532  000448  6E33               	movwf	??_State16MEF_act& (0+255),c
  2533  00044A  5033               	movf	??_State16MEF_act,w,c
  2534  00044C  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2535  00044E  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2536  000450  EC98  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2537                           
  2538                           ;MotorDriver.c: 175: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2539  000454  5044               	movf	_Microstep,w,c
  2540  000456  0D01               	mullw	1
  2541  000458  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2542  00045A  24F3               	addwf	prodl,w,c
  2543  00045C  6ED9               	movwf	fsr2l,c
  2544  00045E  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2545  000460  20F4               	addwfc	prodh,w,c
  2546  000462  6EDA               	movwf	fsr2h,c
  2547  000464  50DF               	movf	indf2,w,c
  2548  000466  6E33               	movwf	??_State16MEF_act& (0+255),c
  2549  000468  5033               	movf	??_State16MEF_act,w,c
  2550  00046A  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2551  00046C  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2552  00046E  EC80  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2553                           
  2554                           ;MotorDriver.c: 176: if (Microstep==63){
  2555  000472  0E3F               	movlw	63
  2556  000474  1844               	xorwf	_Microstep,w,c
  2557  000476  A4D8               	btfss	status,2,c
  2558  000478  D003               	goto	l2094
  2559                           
  2560                           ;MotorDriver.c: 178: EstadoActual = STATE1;
  2561  00047A  0E01               	movlw	1
  2562  00047C  6E4C               	movwf	_EstadoActual,c
  2563                           
  2564                           ;MotorDriver.c: 179: Microstep=-1;
  2565  00047E  6844               	setf	_Microstep,c
  2566  000480                     l2094:
  2567                           
  2568                           ;MotorDriver.c: 180: }
  2569                           ;MotorDriver.c: 181: Microstep++;
  2570  000480  2A44               	incf	_Microstep,f,c
  2571                           
  2572                           ;MotorDriver.c: 187: }
  2573                           
  2574                           ;MotorDriver.c: 186: break;
  2575                           
  2576                           ;MotorDriver.c: 184: default:
  2577                           
  2578                           ;MotorDriver.c: 182: }
  2579                           ;MotorDriver.c: 183: break;
  2580  000482  0012               	return	
  2581  000484                     l2098:
  2582  000484  504C               	movf	_EstadoActual,w,c
  2583                           
  2584                           ; Switch size 1, requested type "space"
  2585                           ; Number of cases is 5, Range of values is 0 to 4
  2586                           ; switch strategies available:
  2587                           ; Name         Instructions Cycles
  2588                           ; simple_byte           16     9 (average)
  2589                           ;	Chosen strategy is simple_byte
  2590  000486  0A00               	xorlw	0	; case 0
  2591  000488  B4D8               	btfsc	status,2,c
  2592  00048A  D717               	goto	l2010
  2593  00048C  0A01               	xorlw	1	; case 1
  2594  00048E  B4D8               	btfsc	status,2,c
  2595  000490  D71F               	goto	l2020
  2596  000492  0A03               	xorlw	3	; case 2
  2597  000494  B4D8               	btfsc	status,2,c
  2598  000496  D74F               	goto	l2036
  2599  000498  0A01               	xorlw	1	; case 3
  2600  00049A  B4D8               	btfsc	status,2,c
  2601  00049C  D784               	goto	l2056
  2602  00049E  0A07               	xorlw	7	; case 4
  2603  0004A0  A4D8               	btfss	status,2,c
  2604  0004A2  0012               	return	
  2605  0004A4  D7B8               	goto	l2076
  2606  0004A6                     __end_of_State16MEF_act:
  2607                           	opt stack 0
  2608                           tblptru	equ	0xFF8
  2609                           tblptrh	equ	0xFF7
  2610                           tblptrl	equ	0xFF6
  2611                           tablat	equ	0xFF5
  2612                           prodh	equ	0xFF4
  2613                           prodl	equ	0xFF3
  2614                           intcon	equ	0xFF2
  2615                           postinc0	equ	0xFEE
  2616                           wreg	equ	0xFE8
  2617                           postdec1	equ	0xFE5
  2618                           fsr1l	equ	0xFE1
  2619                           indf2	equ	0xFDF
  2620                           fsr2h	equ	0xFDA
  2621                           fsr2l	equ	0xFD9
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _limitar_corriente *****************
  2625 ;; Defined at:
  2626 ;;		line 370 in file "MotorDriver.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2642 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;Total ram usage:        1 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    4
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_State16MEF_act
  2651 ;;		_State16MEF_act_Backward
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text7
  2656  000A5E                     __ptext7:
  2657                           	opt stack 0
  2658  000A5E                     _limitar_corriente:
  2659                           	opt stack 24
  2660                           
  2661                           ;MotorDriver.c: 371: if ((LookUP_TABLE_COS[Microstep])>115){
  2662                           
  2663                           ;incstack = 0
  2664  000A5E  5044               	movf	_Microstep,w,c
  2665  000A60  0D01               	mullw	1
  2666  000A62  0E01               	movlw	low _LookUP_TABLE_COS
  2667  000A64  24F3               	addwf	prodl,w,c
  2668  000A66  6ED9               	movwf	fsr2l,c
  2669  000A68  0E00               	movlw	high _LookUP_TABLE_COS
  2670  000A6A  20F4               	addwfc	prodh,w,c
  2671  000A6C  6EDA               	movwf	fsr2h,c
  2672  000A6E  0E73               	movlw	115
  2673  000A70  64DF               	cpfsgt	indf2,c
  2674  000A72  D00A               	goto	l608
  2675                           
  2676                           ;MotorDriver.c: 372: LookUP_TABLE_COS[Microstep]=115;
  2677  000A74  5044               	movf	_Microstep,w,c
  2678  000A76  0D01               	mullw	1
  2679  000A78  0E01               	movlw	low _LookUP_TABLE_COS
  2680  000A7A  24F3               	addwf	prodl,w,c
  2681  000A7C  6ED9               	movwf	fsr2l,c
  2682  000A7E  0E00               	movlw	high _LookUP_TABLE_COS
  2683  000A80  20F4               	addwfc	prodh,w,c
  2684  000A82  6EDA               	movwf	fsr2h,c
  2685  000A84  0E73               	movlw	115
  2686  000A86  6EDF               	movwf	indf2,c
  2687  000A88                     l608:
  2688                           
  2689                           ;MotorDriver.c: 373: }
  2690                           ;MotorDriver.c: 374: if ((LookUP_TABLE_SEN[Microstep])>115){
  2691  000A88  5044               	movf	_Microstep,w,c
  2692  000A8A  0D01               	mullw	1
  2693  000A8C  0EE0               	movlw	low _LookUP_TABLE_SEN
  2694  000A8E  24F3               	addwf	prodl,w,c
  2695  000A90  6ED9               	movwf	fsr2l,c
  2696  000A92  0E00               	movlw	high _LookUP_TABLE_SEN
  2697  000A94  20F4               	addwfc	prodh,w,c
  2698  000A96  6EDA               	movwf	fsr2h,c
  2699  000A98  0E73               	movlw	115
  2700  000A9A  64DF               	cpfsgt	indf2,c
  2701  000A9C  0012               	return	
  2702                           
  2703                           ;MotorDriver.c: 375: LookUP_TABLE_SEN[Microstep]=115;
  2704  000A9E  5044               	movf	_Microstep,w,c
  2705  000AA0  0D01               	mullw	1
  2706  000AA2  0EE0               	movlw	low _LookUP_TABLE_SEN
  2707  000AA4  24F3               	addwf	prodl,w,c
  2708  000AA6  6ED9               	movwf	fsr2l,c
  2709  000AA8  0E00               	movlw	high _LookUP_TABLE_SEN
  2710  000AAA  20F4               	addwfc	prodh,w,c
  2711  000AAC  6EDA               	movwf	fsr2h,c
  2712  000AAE  0E73               	movlw	115
  2713  000AB0  6EDF               	movwf	indf2,c
  2714  000AB2  0012               	return	
  2715  000AB4                     __end_of_limitar_corriente:
  2716                           	opt stack 0
  2717                           tblptru	equ	0xFF8
  2718                           tblptrh	equ	0xFF7
  2719                           tblptrl	equ	0xFF6
  2720                           tablat	equ	0xFF5
  2721                           prodh	equ	0xFF4
  2722                           prodl	equ	0xFF3
  2723                           intcon	equ	0xFF2
  2724                           postinc0	equ	0xFEE
  2725                           wreg	equ	0xFE8
  2726                           postdec1	equ	0xFE5
  2727                           fsr1l	equ	0xFE1
  2728                           indf2	equ	0xFDF
  2729                           fsr2h	equ	0xFDA
  2730                           fsr2l	equ	0xFD9
  2731                           status	equ	0xFD8
  2732                           
  2733 ;; *************** function _EPWM2_LoadDutyValue *****************
  2734 ;; Defined at:
  2735 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  dutyValue       2   14[COMRAM] unsigned int 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;Total ram usage:        4 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    4
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_State8MEF_act
  2760 ;;		_State16MEF_act
  2761 ;;		_State16MEF_act_Backward
  2762 ;;		_State8MEF_act_Backward
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text8
  2767  000B00                     __ptext8:
  2768                           	opt stack 0
  2769  000B00                     _EPWM2_LoadDutyValue:
  2770                           	opt stack 24
  2771                           
  2772                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  2773                           
  2774                           ;incstack = 0
  2775  000B00  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  2776  000B04  C030  F032         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  2777  000B08  90D8               	bcf	status,0,c
  2778  000B0A  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  2779  000B0C  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  2780  000B0E  90D8               	bcf	status,0,c
  2781  000B10  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  2782  000B12  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  2783  000B14  5031               	movf	??_EPWM2_LoadDutyValue,w,c
  2784  000B16  6E67               	movwf	3943,c	;volatile
  2785                           
  2786                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2787  000B18  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  2788  000B1C  0E03               	movlw	3
  2789  000B1E  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  2790  000B20  3A31               	swapf	??_EPWM2_LoadDutyValue,f,c
  2791  000B22  0EF0               	movlw	240
  2792  000B24  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  2793  000B26  5066               	movf	3942,w,c	;volatile
  2794  000B28  0BCF               	andlw	207
  2795  000B2A  1031               	iorwf	??_EPWM2_LoadDutyValue,w,c
  2796  000B2C  6E66               	movwf	3942,c	;volatile
  2797  000B2E  0012               	return		;funcret
  2798  000B30                     __end_of_EPWM2_LoadDutyValue:
  2799                           	opt stack 0
  2800                           tblptru	equ	0xFF8
  2801                           tblptrh	equ	0xFF7
  2802                           tblptrl	equ	0xFF6
  2803                           tablat	equ	0xFF5
  2804                           prodh	equ	0xFF4
  2805                           prodl	equ	0xFF3
  2806                           intcon	equ	0xFF2
  2807                           postinc0	equ	0xFEE
  2808                           wreg	equ	0xFE8
  2809                           postdec1	equ	0xFE5
  2810                           fsr1l	equ	0xFE1
  2811                           indf2	equ	0xFDF
  2812                           fsr2h	equ	0xFDA
  2813                           fsr2l	equ	0xFD9
  2814                           status	equ	0xFD8
  2815                           
  2816 ;; *************** function _EPWM1_LoadDutyValue *****************
  2817 ;; Defined at:
  2818 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  dutyValue       2   14[COMRAM] unsigned int 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;Total ram usage:        4 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    4
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_State8MEF_act
  2843 ;;		_State16MEF_act
  2844 ;;		_State16MEF_act_Backward
  2845 ;;		_State8MEF_act_Backward
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text9
  2850  000B30                     __ptext9:
  2851                           	opt stack 0
  2852  000B30                     _EPWM1_LoadDutyValue:
  2853                           	opt stack 24
  2854                           
  2855                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  2856                           
  2857                           ;incstack = 0
  2858  000B30  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  2859  000B34  C030  F032         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  2860  000B38  90D8               	bcf	status,0,c
  2861  000B3A  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  2862  000B3C  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  2863  000B3E  90D8               	bcf	status,0,c
  2864  000B40  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  2865  000B42  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  2866  000B44  5031               	movf	??_EPWM1_LoadDutyValue,w,c
  2867  000B46  6EBE               	movwf	4030,c	;volatile
  2868                           
  2869                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2870  000B48  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  2871  000B4C  0E03               	movlw	3
  2872  000B4E  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  2873  000B50  3A31               	swapf	??_EPWM1_LoadDutyValue,f,c
  2874  000B52  0EF0               	movlw	240
  2875  000B54  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  2876  000B56  50BD               	movf	4029,w,c	;volatile
  2877  000B58  0BCF               	andlw	207
  2878  000B5A  1031               	iorwf	??_EPWM1_LoadDutyValue,w,c
  2879  000B5C  6EBD               	movwf	4029,c	;volatile
  2880  000B5E  0012               	return		;funcret
  2881  000B60                     __end_of_EPWM1_LoadDutyValue:
  2882                           	opt stack 0
  2883                           tblptru	equ	0xFF8
  2884                           tblptrh	equ	0xFF7
  2885                           tblptrl	equ	0xFF6
  2886                           tablat	equ	0xFF5
  2887                           prodh	equ	0xFF4
  2888                           prodl	equ	0xFF3
  2889                           intcon	equ	0xFF2
  2890                           postinc0	equ	0xFEE
  2891                           wreg	equ	0xFE8
  2892                           postdec1	equ	0xFE5
  2893                           fsr1l	equ	0xFE1
  2894                           indf2	equ	0xFDF
  2895                           fsr2h	equ	0xFDA
  2896                           fsr2l	equ	0xFD9
  2897                           status	equ	0xFD8
  2898                           
  2899 ;; *************** function _StateMEF_ini *****************
  2900 ;; Defined at:
  2901 ;;		line 36 in file "MotorDriver.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;		None
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;		None
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;Total ram usage:        0 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    4
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text10
  2930  000D10                     __ptext10:
  2931                           	opt stack 0
  2932  000D10                     _StateMEF_ini:
  2933                           	opt stack 26
  2934                           
  2935                           ;MotorDriver.c: 38: EstadoActual = STATE1;
  2936                           
  2937                           ;incstack = 0
  2938  000D10  0E01               	movlw	1
  2939  000D12  6E4C               	movwf	_EstadoActual,c
  2940                           
  2941                           ;MotorDriver.c: 39: Microstep=0;
  2942  000D14  0E00               	movlw	0
  2943  000D16  6E44               	movwf	_Microstep,c
  2944  000D18  0012               	return		;funcret
  2945  000D1A                     __end_of_StateMEF_ini:
  2946                           	opt stack 0
  2947                           tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           prodh	equ	0xFF4
  2952                           prodl	equ	0xFF3
  2953                           intcon	equ	0xFF2
  2954                           postinc0	equ	0xFEE
  2955                           wreg	equ	0xFE8
  2956                           postdec1	equ	0xFE5
  2957                           fsr1l	equ	0xFE1
  2958                           indf2	equ	0xFDF
  2959                           fsr2h	equ	0xFDA
  2960                           fsr2l	equ	0xFD9
  2961                           status	equ	0xFD8
  2962                           
  2963 ;; *************** function _SYSTEM_Initialize *****************
  2964 ;; Defined at:
  2965 ;;		line 111 in file "mcc_generated_files/mcc.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;Total ram usage:        0 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    6
  2986 ;; This function calls:
  2987 ;;		_ADC_Initialize
  2988 ;;		_CCP5_Initialize
  2989 ;;		_EPWM1_Initialize
  2990 ;;		_EPWM2_Initialize
  2991 ;;		_EUSART1_Initialize
  2992 ;;		_INTERRUPT_Initialize
  2993 ;;		_OSCILLATOR_Initialize
  2994 ;;		_PIN_MANAGER_Initialize
  2995 ;;		_TMR2_Initialize
  2996 ;;		_TMR6_Initialize
  2997 ;; This function is called by:
  2998 ;;		_main
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text11
  3003  000B60                     __ptext11:
  3004                           	opt stack 0
  3005  000B60                     _SYSTEM_Initialize:
  3006                           	opt stack 24
  3007                           
  3008                           ;mcc.c: 114: INTERRUPT_Initialize();
  3009                           
  3010                           ;incstack = 0
  3011  000B60  ECA0  F006         	call	_INTERRUPT_Initialize	;wreg free
  3012                           
  3013                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  3014  000B64  EC5A  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  3015                           
  3016                           ;mcc.c: 116: OSCILLATOR_Initialize();
  3017  000B68  EC7B  F006         	call	_OSCILLATOR_Initialize	;wreg free
  3018                           
  3019                           ;mcc.c: 117: TMR6_Initialize();
  3020  000B6C  ECC5  F005         	call	_TMR6_Initialize	;wreg free
  3021                           
  3022                           ;mcc.c: 118: EPWM2_Initialize();
  3023  000B70  ECED  F005         	call	_EPWM2_Initialize	;wreg free
  3024                           
  3025                           ;mcc.c: 119: CCP5_Initialize();
  3026  000B74  EC68  F006         	call	_CCP5_Initialize	;wreg free
  3027                           
  3028                           ;mcc.c: 120: ADC_Initialize();
  3029  000B78  EC51  F006         	call	_ADC_Initialize	;wreg free
  3030                           
  3031                           ;mcc.c: 121: EPWM1_Initialize();
  3032  000B7C  ECFF  F005         	call	_EPWM1_Initialize	;wreg free
  3033                           
  3034                           ;mcc.c: 122: TMR2_Initialize();
  3035  000B80  EC11  F006         	call	_TMR2_Initialize	;wreg free
  3036                           
  3037                           ;mcc.c: 123: EUSART1_Initialize();
  3038  000B84  EC5D  F006         	call	_EUSART1_Initialize	;wreg free
  3039  000B88  0012               	return		;funcret
  3040  000B8A                     __end_of_SYSTEM_Initialize:
  3041                           	opt stack 0
  3042                           tblptru	equ	0xFF8
  3043                           tblptrh	equ	0xFF7
  3044                           tblptrl	equ	0xFF6
  3045                           tablat	equ	0xFF5
  3046                           prodh	equ	0xFF4
  3047                           prodl	equ	0xFF3
  3048                           intcon	equ	0xFF2
  3049                           postinc0	equ	0xFEE
  3050                           wreg	equ	0xFE8
  3051                           postdec1	equ	0xFE5
  3052                           fsr1l	equ	0xFE1
  3053                           indf2	equ	0xFDF
  3054                           fsr2h	equ	0xFDA
  3055                           fsr2l	equ	0xFD9
  3056                           status	equ	0xFD8
  3057                           
  3058 ;; *************** function _TMR6_Initialize *****************
  3059 ;; Defined at:
  3060 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  1    wreg      void 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0, cstack
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;Total ram usage:        0 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    5
  3081 ;; This function calls:
  3082 ;;		_TMR6_SetInterruptHandler
  3083 ;;		_TMR6_StartTimer
  3084 ;; This function is called by:
  3085 ;;		_SYSTEM_Initialize
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text12
  3090  000B8A                     __ptext12:
  3091                           	opt stack 0
  3092  000B8A                     _TMR6_Initialize:
  3093                           	opt stack 24
  3094                           
  3095                           ;tmr6.c: 68: T6CON = 0x01;
  3096                           
  3097                           ;incstack = 0
  3098  000B8A  0E01               	movlw	1
  3099  000B8C  010F               	movlb	15	; () banked
  3100  000B8E  6F4A               	movwf	74,b	;volatile
  3101                           
  3102                           ;tmr6.c: 71: PR6 = 0x45;
  3103  000B90  0E45               	movlw	69
  3104  000B92  010F               	movlb	15	; () banked
  3105  000B94  6F4B               	movwf	75,b	;volatile
  3106                           
  3107                           ;tmr6.c: 74: TMR6 = 0x00;
  3108  000B96  0E00               	movlw	0
  3109  000B98  010F               	movlb	15	; () banked
  3110  000B9A  6F4C               	movwf	76,b	;volatile
  3111                           
  3112                           ; BSR set to: 15
  3113                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
  3114  000B9C  947E               	bcf	3966,2,c	;volatile
  3115                           
  3116                           ; BSR set to: 15
  3117                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
  3118  000B9E  847D               	bsf	3965,2,c	;volatile
  3119                           
  3120                           ; BSR set to: 15
  3121                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  3122  000BA0  0E48               	movlw	low _TMR6_DefaultInterruptHandler
  3123  000BA2  6E2F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  3124  000BA4  0E0D               	movlw	high _TMR6_DefaultInterruptHandler
  3125  000BA6  6E30               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  3126  000BA8  EC8D  F006         	call	_TMR6_SetInterruptHandler	;wreg free
  3127                           
  3128                           ;tmr6.c: 86: TMR6_StartTimer();
  3129  000BAC  EC9B  F006         	call	_TMR6_StartTimer	;wreg free
  3130  000BB0  0012               	return		;funcret
  3131  000BB2                     __end_of_TMR6_Initialize:
  3132                           	opt stack 0
  3133                           tblptru	equ	0xFF8
  3134                           tblptrh	equ	0xFF7
  3135                           tblptrl	equ	0xFF6
  3136                           tablat	equ	0xFF5
  3137                           prodh	equ	0xFF4
  3138                           prodl	equ	0xFF3
  3139                           intcon	equ	0xFF2
  3140                           postinc0	equ	0xFEE
  3141                           wreg	equ	0xFE8
  3142                           postdec1	equ	0xFE5
  3143                           fsr1l	equ	0xFE1
  3144                           indf2	equ	0xFDF
  3145                           fsr2h	equ	0xFDA
  3146                           fsr2l	equ	0xFD9
  3147                           status	equ	0xFD8
  3148                           
  3149 ;; *************** function _TMR6_StartTimer *****************
  3150 ;; Defined at:
  3151 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  1    wreg      void 
  3158 ;; Registers used:
  3159 ;;		None
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;Total ram usage:        0 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    4
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_TMR6_Initialize
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text13
  3180  000D36                     __ptext13:
  3181                           	opt stack 0
  3182  000D36                     _TMR6_StartTimer:
  3183                           	opt stack 24
  3184                           
  3185                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  3186                           
  3187                           ;incstack = 0
  3188  000D36  010F               	movlb	15	; () banked
  3189  000D38  854A               	bsf	74,2,b	;volatile
  3190                           
  3191                           ; BSR set to: 15
  3192  000D3A  0012               	return		;funcret
  3193  000D3C                     __end_of_TMR6_StartTimer:
  3194                           	opt stack 0
  3195                           tblptru	equ	0xFF8
  3196                           tblptrh	equ	0xFF7
  3197                           tblptrl	equ	0xFF6
  3198                           tablat	equ	0xFF5
  3199                           prodh	equ	0xFF4
  3200                           prodl	equ	0xFF3
  3201                           intcon	equ	0xFF2
  3202                           postinc0	equ	0xFEE
  3203                           wreg	equ	0xFE8
  3204                           postdec1	equ	0xFE5
  3205                           fsr1l	equ	0xFE1
  3206                           indf2	equ	0xFDF
  3207                           fsr2h	equ	0xFDA
  3208                           fsr2l	equ	0xFD9
  3209                           status	equ	0xFD8
  3210                           
  3211 ;; *************** function _TMR6_SetInterruptHandler *****************
  3212 ;; Defined at:
  3213 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  InterruptHan    2   14[COMRAM] PTR void 
  3216 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3228 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;Total ram usage:        2 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    4
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_TMR6_Initialize
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text14
  3243  000D1A                     __ptext14:
  3244                           	opt stack 0
  3245  000D1A                     _TMR6_SetInterruptHandler:
  3246                           	opt stack 24
  3247                           
  3248                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  3249                           
  3250                           ; BSR set to: 15
  3251                           ;incstack = 0
  3252  000D1A  C02F  F04A         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  3253  000D1E  C030  F04B         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  3254  000D22  0012               	return		;funcret
  3255  000D24                     __end_of_TMR6_SetInterruptHandler:
  3256                           	opt stack 0
  3257                           tblptru	equ	0xFF8
  3258                           tblptrh	equ	0xFF7
  3259                           tblptrl	equ	0xFF6
  3260                           tablat	equ	0xFF5
  3261                           prodh	equ	0xFF4
  3262                           prodl	equ	0xFF3
  3263                           intcon	equ	0xFF2
  3264                           postinc0	equ	0xFEE
  3265                           wreg	equ	0xFE8
  3266                           postdec1	equ	0xFE5
  3267                           fsr1l	equ	0xFE1
  3268                           indf2	equ	0xFDF
  3269                           fsr2h	equ	0xFDA
  3270                           fsr2l	equ	0xFD9
  3271                           status	equ	0xFD8
  3272                           
  3273 ;; *************** function _TMR2_Initialize *****************
  3274 ;; Defined at:
  3275 ;;		line 68 in file "mcc_generated_files/tmr2.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;Total ram usage:        0 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    5
  3296 ;; This function calls:
  3297 ;;		_TMR2_SetInterruptHandler
  3298 ;;		_TMR2_StartTimer
  3299 ;; This function is called by:
  3300 ;;		_SYSTEM_Initialize
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text15
  3305  000C22                     __ptext15:
  3306                           	opt stack 0
  3307  000C22                     _TMR2_Initialize:
  3308                           	opt stack 24
  3309                           
  3310                           ;tmr2.c: 73: T2CON = 0x02;
  3311                           
  3312                           ;incstack = 0
  3313  000C22  0E02               	movlw	2
  3314  000C24  6EBA               	movwf	4026,c	;volatile
  3315                           
  3316                           ;tmr2.c: 76: PR2 = 0x0C;
  3317  000C26  0E0C               	movlw	12
  3318  000C28  6EBB               	movwf	4027,c	;volatile
  3319                           
  3320                           ;tmr2.c: 79: TMR2 = 0x00;
  3321  000C2A  0E00               	movlw	0
  3322  000C2C  6EBC               	movwf	4028,c	;volatile
  3323                           
  3324                           ;tmr2.c: 82: PIR1bits.TMR2IF = 0;
  3325  000C2E  929E               	bcf	3998,1,c	;volatile
  3326                           
  3327                           ;tmr2.c: 85: PIE1bits.TMR2IE = 1;
  3328  000C30  829D               	bsf	3997,1,c	;volatile
  3329                           
  3330                           ;tmr2.c: 88: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  3331  000C32  0E4A               	movlw	low _TMR2_DefaultInterruptHandler
  3332  000C34  6E2F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  3333  000C36  0E0D               	movlw	high _TMR2_DefaultInterruptHandler
  3334  000C38  6E30               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  3335  000C3A  EC92  F006         	call	_TMR2_SetInterruptHandler	;wreg free
  3336                           
  3337                           ;tmr2.c: 91: TMR2_StartTimer();
  3338  000C3E  EC9E  F006         	call	_TMR2_StartTimer	;wreg free
  3339  000C42  0012               	return		;funcret
  3340  000C44                     __end_of_TMR2_Initialize:
  3341                           	opt stack 0
  3342                           tblptru	equ	0xFF8
  3343                           tblptrh	equ	0xFF7
  3344                           tblptrl	equ	0xFF6
  3345                           tablat	equ	0xFF5
  3346                           prodh	equ	0xFF4
  3347                           prodl	equ	0xFF3
  3348                           intcon	equ	0xFF2
  3349                           postinc0	equ	0xFEE
  3350                           wreg	equ	0xFE8
  3351                           postdec1	equ	0xFE5
  3352                           fsr1l	equ	0xFE1
  3353                           indf2	equ	0xFDF
  3354                           fsr2h	equ	0xFDA
  3355                           fsr2l	equ	0xFD9
  3356                           status	equ	0xFD8
  3357                           
  3358 ;; *************** function _TMR2_StartTimer *****************
  3359 ;; Defined at:
  3360 ;;		line 94 in file "mcc_generated_files/tmr2.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;		None
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;		None
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		None
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;Total ram usage:        0 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    4
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_TMR2_Initialize
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text16
  3389  000D3C                     __ptext16:
  3390                           	opt stack 0
  3391  000D3C                     _TMR2_StartTimer:
  3392                           	opt stack 24
  3393                           
  3394                           ;tmr2.c: 97: T2CONbits.TMR2ON = 1;
  3395                           
  3396                           ;incstack = 0
  3397  000D3C  84BA               	bsf	4026,2,c	;volatile
  3398  000D3E  0012               	return		;funcret
  3399  000D40                     __end_of_TMR2_StartTimer:
  3400                           	opt stack 0
  3401                           tblptru	equ	0xFF8
  3402                           tblptrh	equ	0xFF7
  3403                           tblptrl	equ	0xFF6
  3404                           tablat	equ	0xFF5
  3405                           prodh	equ	0xFF4
  3406                           prodl	equ	0xFF3
  3407                           intcon	equ	0xFF2
  3408                           postinc0	equ	0xFEE
  3409                           wreg	equ	0xFE8
  3410                           postdec1	equ	0xFE5
  3411                           fsr1l	equ	0xFE1
  3412                           indf2	equ	0xFDF
  3413                           fsr2h	equ	0xFDA
  3414                           fsr2l	equ	0xFD9
  3415                           status	equ	0xFD8
  3416                           
  3417 ;; *************** function _TMR2_SetInterruptHandler *****************
  3418 ;; Defined at:
  3419 ;;		line 150 in file "mcc_generated_files/tmr2.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;  InterruptHan    2   14[COMRAM] PTR void 
  3422 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;		None
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  1    wreg      void 
  3427 ;; Registers used:
  3428 ;;		wreg, status,2, status,0
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;Total ram usage:        2 bytes
  3439 ;; Hardware stack levels used:    1
  3440 ;; Hardware stack levels required when called:    4
  3441 ;; This function calls:
  3442 ;;		Nothing
  3443 ;; This function is called by:
  3444 ;;		_TMR2_Initialize
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text17
  3449  000D24                     __ptext17:
  3450                           	opt stack 0
  3451  000D24                     _TMR2_SetInterruptHandler:
  3452                           	opt stack 24
  3453                           
  3454                           ;tmr2.c: 151: TMR2_InterruptHandler = InterruptHandler;
  3455                           
  3456                           ;incstack = 0
  3457  000D24  C02F  F048         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  3458  000D28  C030  F049         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  3459  000D2C  0012               	return		;funcret
  3460  000D2E                     __end_of_TMR2_SetInterruptHandler:
  3461                           	opt stack 0
  3462                           tblptru	equ	0xFF8
  3463                           tblptrh	equ	0xFF7
  3464                           tblptrl	equ	0xFF6
  3465                           tablat	equ	0xFF5
  3466                           prodh	equ	0xFF4
  3467                           prodl	equ	0xFF3
  3468                           intcon	equ	0xFF2
  3469                           postinc0	equ	0xFEE
  3470                           wreg	equ	0xFE8
  3471                           postdec1	equ	0xFE5
  3472                           fsr1l	equ	0xFE1
  3473                           indf2	equ	0xFDF
  3474                           fsr2h	equ	0xFDA
  3475                           fsr2l	equ	0xFD9
  3476                           status	equ	0xFD8
  3477                           
  3478 ;; *************** function _PIN_MANAGER_Initialize *****************
  3479 ;; Defined at:
  3480 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;Total ram usage:        0 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:    4
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_SYSTEM_Initialize
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text18
  3509  000AB4                     __ptext18:
  3510                           	opt stack 0
  3511  000AB4                     _PIN_MANAGER_Initialize:
  3512                           	opt stack 25
  3513                           
  3514                           ;pin_manager.c: 56: LATE = 0x00;
  3515                           
  3516                           ;incstack = 0
  3517  000AB4  0E00               	movlw	0
  3518  000AB6  6E8D               	movwf	3981,c	;volatile
  3519                           
  3520                           ;pin_manager.c: 57: LATD = 0x00;
  3521  000AB8  0E00               	movlw	0
  3522  000ABA  6E8C               	movwf	3980,c	;volatile
  3523                           
  3524                           ;pin_manager.c: 58: LATA = 0x00;
  3525  000ABC  0E00               	movlw	0
  3526  000ABE  6E89               	movwf	3977,c	;volatile
  3527                           
  3528                           ;pin_manager.c: 59: LATB = 0x00;
  3529  000AC0  0E00               	movlw	0
  3530  000AC2  6E8A               	movwf	3978,c	;volatile
  3531                           
  3532                           ;pin_manager.c: 60: LATC = 0x00;
  3533  000AC4  0E00               	movlw	0
  3534  000AC6  6E8B               	movwf	3979,c	;volatile
  3535                           
  3536                           ;pin_manager.c: 65: TRISE = 0x07;
  3537  000AC8  0E07               	movlw	7
  3538  000ACA  6E96               	movwf	3990,c	;volatile
  3539                           
  3540                           ;pin_manager.c: 66: TRISA = 0xEB;
  3541  000ACC  0EEB               	movlw	235
  3542  000ACE  6E92               	movwf	3986,c	;volatile
  3543                           
  3544                           ;pin_manager.c: 67: TRISB = 0xBF;
  3545  000AD0  0EBF               	movlw	191
  3546  000AD2  6E93               	movwf	3987,c	;volatile
  3547                           
  3548                           ;pin_manager.c: 68: TRISC = 0xB8;
  3549  000AD4  0EB8               	movlw	184
  3550  000AD6  6E94               	movwf	3988,c	;volatile
  3551                           
  3552                           ;pin_manager.c: 69: TRISD = 0xDF;
  3553  000AD8  0EDF               	movlw	223
  3554  000ADA  6E95               	movwf	3989,c	;volatile
  3555                           
  3556                           ;pin_manager.c: 74: ANSELC = 0x38;
  3557  000ADC  0E38               	movlw	56
  3558  000ADE  010F               	movlb	15	; () banked
  3559  000AE0  6F3A               	movwf	58,b	;volatile
  3560                           
  3561                           ;pin_manager.c: 75: ANSELB = 0x3E;
  3562  000AE2  0E3E               	movlw	62
  3563  000AE4  010F               	movlb	15	; () banked
  3564  000AE6  6F39               	movwf	57,b	;volatile
  3565                           
  3566                           ;pin_manager.c: 76: ANSELD = 0xDF;
  3567  000AE8  0EDF               	movlw	223
  3568  000AEA  010F               	movlb	15	; () banked
  3569  000AEC  6F3B               	movwf	59,b	;volatile
  3570                           
  3571                           ;pin_manager.c: 77: ANSELE = 0x03;
  3572  000AEE  0E03               	movlw	3
  3573  000AF0  010F               	movlb	15	; () banked
  3574  000AF2  6F3C               	movwf	60,b	;volatile
  3575                           
  3576                           ;pin_manager.c: 78: ANSELA = 0x2B;
  3577  000AF4  0E2B               	movlw	43
  3578  000AF6  010F               	movlb	15	; () banked
  3579  000AF8  6F38               	movwf	56,b	;volatile
  3580                           
  3581                           ; BSR set to: 15
  3582                           ;pin_manager.c: 83: WPUB = 0xFF;
  3583  000AFA  6861               	setf	3937,c	;volatile
  3584                           
  3585                           ; BSR set to: 15
  3586                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  3587  000AFC  9EF1               	bcf	intcon2,7,c	;volatile
  3588                           
  3589                           ; BSR set to: 15
  3590  000AFE  0012               	return		;funcret
  3591  000B00                     __end_of_PIN_MANAGER_Initialize:
  3592                           	opt stack 0
  3593                           tblptru	equ	0xFF8
  3594                           tblptrh	equ	0xFF7
  3595                           tblptrl	equ	0xFF6
  3596                           tablat	equ	0xFF5
  3597                           prodh	equ	0xFF4
  3598                           prodl	equ	0xFF3
  3599                           intcon	equ	0xFF2
  3600                           intcon2	equ	0xFF1
  3601                           postinc0	equ	0xFEE
  3602                           wreg	equ	0xFE8
  3603                           postdec1	equ	0xFE5
  3604                           fsr1l	equ	0xFE1
  3605                           indf2	equ	0xFDF
  3606                           fsr2h	equ	0xFDA
  3607                           fsr2l	equ	0xFD9
  3608                           status	equ	0xFD8
  3609                           
  3610 ;; *************** function _OSCILLATOR_Initialize *****************
  3611 ;; Defined at:
  3612 ;;		line 126 in file "mcc_generated_files/mcc.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;		None
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      void 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;Total ram usage:        0 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    4
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		_SYSTEM_Initialize
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text19
  3641  000CF6                     __ptext19:
  3642                           	opt stack 0
  3643  000CF6                     _OSCILLATOR_Initialize:
  3644                           	opt stack 25
  3645                           
  3646                           ;mcc.c: 129: OSCCON = 0x70;
  3647                           
  3648                           ; BSR set to: 15
  3649                           ;incstack = 0
  3650  000CF6  0E70               	movlw	112
  3651  000CF8  6ED3               	movwf	4051,c	;volatile
  3652                           
  3653                           ;mcc.c: 131: OSCCON2 = 0x04;
  3654  000CFA  0E04               	movlw	4
  3655  000CFC  6ED2               	movwf	4050,c	;volatile
  3656                           
  3657                           ;mcc.c: 133: OSCTUNE = 0x00;
  3658  000CFE  0E00               	movlw	0
  3659  000D00  6E9B               	movwf	3995,c	;volatile
  3660  000D02  0012               	return		;funcret
  3661  000D04                     __end_of_OSCILLATOR_Initialize:
  3662                           	opt stack 0
  3663                           tblptru	equ	0xFF8
  3664                           tblptrh	equ	0xFF7
  3665                           tblptrl	equ	0xFF6
  3666                           tablat	equ	0xFF5
  3667                           prodh	equ	0xFF4
  3668                           prodl	equ	0xFF3
  3669                           intcon	equ	0xFF2
  3670                           intcon2	equ	0xFF1
  3671                           postinc0	equ	0xFEE
  3672                           wreg	equ	0xFE8
  3673                           postdec1	equ	0xFE5
  3674                           fsr1l	equ	0xFE1
  3675                           indf2	equ	0xFDF
  3676                           fsr2h	equ	0xFDA
  3677                           fsr2l	equ	0xFD9
  3678                           status	equ	0xFD8
  3679                           
  3680 ;; *************** function _INTERRUPT_Initialize *****************
  3681 ;; Defined at:
  3682 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;		None
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;		None
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		None
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;Total ram usage:        0 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; Hardware stack levels required when called:    4
  3703 ;; This function calls:
  3704 ;;		Nothing
  3705 ;; This function is called by:
  3706 ;;		_SYSTEM_Initialize
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           	psect	text20
  3711  000D40                     __ptext20:
  3712                           	opt stack 0
  3713  000D40                     _INTERRUPT_Initialize:
  3714                           	opt stack 25
  3715                           
  3716                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  3717                           
  3718                           ;incstack = 0
  3719  000D40  9ED0               	bcf	4048,7,c	;volatile
  3720  000D42  0012               	return		;funcret
  3721  000D44                     __end_of_INTERRUPT_Initialize:
  3722                           	opt stack 0
  3723                           tblptru	equ	0xFF8
  3724                           tblptrh	equ	0xFF7
  3725                           tblptrl	equ	0xFF6
  3726                           tablat	equ	0xFF5
  3727                           prodh	equ	0xFF4
  3728                           prodl	equ	0xFF3
  3729                           intcon	equ	0xFF2
  3730                           intcon2	equ	0xFF1
  3731                           postinc0	equ	0xFEE
  3732                           wreg	equ	0xFE8
  3733                           postdec1	equ	0xFE5
  3734                           fsr1l	equ	0xFE1
  3735                           indf2	equ	0xFDF
  3736                           fsr2h	equ	0xFDA
  3737                           fsr2l	equ	0xFD9
  3738                           status	equ	0xFD8
  3739                           
  3740 ;; *************** function _EUSART1_Initialize *****************
  3741 ;; Defined at:
  3742 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;Total ram usage:        0 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    4
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_SYSTEM_Initialize
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text21
  3771  000CBA                     __ptext21:
  3772                           	opt stack 0
  3773  000CBA                     _EUSART1_Initialize:
  3774                           	opt stack 25
  3775                           
  3776                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  3777                           
  3778                           ;incstack = 0
  3779  000CBA  0E08               	movlw	8
  3780  000CBC  6EB8               	movwf	4024,c	;volatile
  3781                           
  3782                           ;eusart1.c: 63: RCSTA1 = 0x90;
  3783  000CBE  0E90               	movlw	144
  3784  000CC0  6EAB               	movwf	4011,c	;volatile
  3785                           
  3786                           ;eusart1.c: 66: TXSTA1 = 0x24;
  3787  000CC2  0E24               	movlw	36
  3788  000CC4  6EAC               	movwf	4012,c	;volatile
  3789                           
  3790                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  3791  000CC6  0EA0               	movlw	160
  3792  000CC8  6EAF               	movwf	4015,c	;volatile
  3793                           
  3794                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  3795  000CCA  0E01               	movlw	1
  3796  000CCC  6EB0               	movwf	4016,c	;volatile
  3797  000CCE  0012               	return		;funcret
  3798  000CD0                     __end_of_EUSART1_Initialize:
  3799                           	opt stack 0
  3800                           tblptru	equ	0xFF8
  3801                           tblptrh	equ	0xFF7
  3802                           tblptrl	equ	0xFF6
  3803                           tablat	equ	0xFF5
  3804                           prodh	equ	0xFF4
  3805                           prodl	equ	0xFF3
  3806                           intcon	equ	0xFF2
  3807                           intcon2	equ	0xFF1
  3808                           postinc0	equ	0xFEE
  3809                           wreg	equ	0xFE8
  3810                           postdec1	equ	0xFE5
  3811                           fsr1l	equ	0xFE1
  3812                           indf2	equ	0xFDF
  3813                           fsr2h	equ	0xFDA
  3814                           fsr2l	equ	0xFD9
  3815                           status	equ	0xFD8
  3816                           
  3817 ;; *************** function _EPWM2_Initialize *****************
  3818 ;; Defined at:
  3819 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, status,2
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;Total ram usage:        0 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    4
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_SYSTEM_Initialize
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text22
  3848  000BDA                     __ptext22:
  3849                           	opt stack 0
  3850  000BDA                     _EPWM2_Initialize:
  3851                           	opt stack 25
  3852                           
  3853                           ;epwm2.c: 68: CCP2CON = 0x3C;
  3854                           
  3855                           ;incstack = 0
  3856  000BDA  0E3C               	movlw	60
  3857  000BDC  6E66               	movwf	3942,c	;volatile
  3858                           
  3859                           ;epwm2.c: 71: ECCP2AS = 0x00;
  3860  000BDE  0E00               	movlw	0
  3861  000BE0  6E64               	movwf	3940,c	;volatile
  3862                           
  3863                           ;epwm2.c: 74: PWM2CON = 0x80;
  3864  000BE2  0E80               	movlw	128
  3865  000BE4  6E65               	movwf	3941,c	;volatile
  3866                           
  3867                           ;epwm2.c: 77: PSTR2CON = 0x03;
  3868  000BE6  0E03               	movlw	3
  3869  000BE8  6E63               	movwf	3939,c	;volatile
  3870                           
  3871                           ;epwm2.c: 80: CCPR2L = 0x14;
  3872  000BEA  0E14               	movlw	20
  3873  000BEC  6E67               	movwf	3943,c	;volatile
  3874                           
  3875                           ;epwm2.c: 83: CCPR2H = 0x00;
  3876  000BEE  0E00               	movlw	0
  3877  000BF0  6E68               	movwf	3944,c	;volatile
  3878                           
  3879                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  3880  000BF2  010F               	movlb	15	; () banked
  3881  000BF4  5149               	movf	73,w,b	;volatile
  3882  000BF6  0BE7               	andlw	-25
  3883  000BF8  0910               	iorlw	16
  3884  000BFA  6F49               	movwf	73,b	;volatile
  3885                           
  3886                           ; BSR set to: 15
  3887  000BFC  0012               	return		;funcret
  3888  000BFE                     __end_of_EPWM2_Initialize:
  3889                           	opt stack 0
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           prodh	equ	0xFF4
  3895                           prodl	equ	0xFF3
  3896                           intcon	equ	0xFF2
  3897                           intcon2	equ	0xFF1
  3898                           postinc0	equ	0xFEE
  3899                           wreg	equ	0xFE8
  3900                           postdec1	equ	0xFE5
  3901                           fsr1l	equ	0xFE1
  3902                           indf2	equ	0xFDF
  3903                           fsr2h	equ	0xFDA
  3904                           fsr2l	equ	0xFD9
  3905                           status	equ	0xFD8
  3906                           
  3907 ;; *************** function _EPWM1_Initialize *****************
  3908 ;; Defined at:
  3909 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;Total ram usage:        0 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    4
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_SYSTEM_Initialize
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text23
  3938  000BFE                     __ptext23:
  3939                           	opt stack 0
  3940  000BFE                     _EPWM1_Initialize:
  3941                           	opt stack 25
  3942                           
  3943                           ;epwm1.c: 68: CCP1CON = 0x3C;
  3944                           
  3945                           ; BSR set to: 15
  3946                           ;incstack = 0
  3947  000BFE  0E3C               	movlw	60
  3948  000C00  6EBD               	movwf	4029,c	;volatile
  3949                           
  3950                           ;epwm1.c: 71: ECCP1AS = 0x00;
  3951  000C02  0E00               	movlw	0
  3952  000C04  6EB6               	movwf	4022,c	;volatile
  3953                           
  3954                           ;epwm1.c: 74: PWM1CON = 0x80;
  3955  000C06  0E80               	movlw	128
  3956  000C08  6EB7               	movwf	4023,c	;volatile
  3957                           
  3958                           ;epwm1.c: 77: PSTR1CON = 0x03;
  3959  000C0A  0E03               	movlw	3
  3960  000C0C  6EB9               	movwf	4025,c	;volatile
  3961                           
  3962                           ;epwm1.c: 80: CCPR1L = 0x14;
  3963  000C0E  0E14               	movlw	20
  3964  000C10  6EBE               	movwf	4030,c	;volatile
  3965                           
  3966                           ;epwm1.c: 83: CCPR1H = 0x00;
  3967  000C12  0E00               	movlw	0
  3968  000C14  6EBF               	movwf	4031,c	;volatile
  3969                           
  3970                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  3971  000C16  010F               	movlb	15	; () banked
  3972  000C18  5149               	movf	73,w,b	;volatile
  3973  000C1A  0BFC               	andlw	-4
  3974  000C1C  0902               	iorlw	2
  3975  000C1E  6F49               	movwf	73,b	;volatile
  3976                           
  3977                           ; BSR set to: 15
  3978  000C20  0012               	return		;funcret
  3979  000C22                     __end_of_EPWM1_Initialize:
  3980                           	opt stack 0
  3981                           tblptru	equ	0xFF8
  3982                           tblptrh	equ	0xFF7
  3983                           tblptrl	equ	0xFF6
  3984                           tablat	equ	0xFF5
  3985                           prodh	equ	0xFF4
  3986                           prodl	equ	0xFF3
  3987                           intcon	equ	0xFF2
  3988                           intcon2	equ	0xFF1
  3989                           postinc0	equ	0xFEE
  3990                           wreg	equ	0xFE8
  3991                           postdec1	equ	0xFE5
  3992                           fsr1l	equ	0xFE1
  3993                           indf2	equ	0xFDF
  3994                           fsr2h	equ	0xFDA
  3995                           fsr2l	equ	0xFD9
  3996                           status	equ	0xFD8
  3997                           
  3998 ;; *************** function _CCP5_Initialize *****************
  3999 ;; Defined at:
  4000 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;		None
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;Total ram usage:        0 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    4
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_SYSTEM_Initialize
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text24
  4029  000CD0                     __ptext24:
  4030                           	opt stack 0
  4031  000CD0                     _CCP5_Initialize:
  4032                           	opt stack 25
  4033                           
  4034                           ;ccp5.c: 60: CCP5CON = 0x00;
  4035                           
  4036                           ; BSR set to: 15
  4037                           ;incstack = 0
  4038  000CD0  0E00               	movlw	0
  4039  000CD2  010F               	movlb	15	; () banked
  4040  000CD4  6F54               	movwf	84,b	;volatile
  4041                           
  4042                           ;ccp5.c: 62: CCPR5L = 0x00;
  4043  000CD6  0E00               	movlw	0
  4044  000CD8  010F               	movlb	15	; () banked
  4045  000CDA  6F55               	movwf	85,b	;volatile
  4046                           
  4047                           ;ccp5.c: 64: CCPR5H = 0x00;
  4048  000CDC  0E00               	movlw	0
  4049  000CDE  010F               	movlb	15	; () banked
  4050  000CE0  6F56               	movwf	86,b	;volatile
  4051                           
  4052                           ; BSR set to: 15
  4053  000CE2  0012               	return		;funcret
  4054  000CE4                     __end_of_CCP5_Initialize:
  4055                           	opt stack 0
  4056                           tblptru	equ	0xFF8
  4057                           tblptrh	equ	0xFF7
  4058                           tblptrl	equ	0xFF6
  4059                           tablat	equ	0xFF5
  4060                           prodh	equ	0xFF4
  4061                           prodl	equ	0xFF3
  4062                           intcon	equ	0xFF2
  4063                           intcon2	equ	0xFF1
  4064                           postinc0	equ	0xFEE
  4065                           wreg	equ	0xFE8
  4066                           postdec1	equ	0xFE5
  4067                           fsr1l	equ	0xFE1
  4068                           indf2	equ	0xFDF
  4069                           fsr2h	equ	0xFDA
  4070                           fsr2l	equ	0xFD9
  4071                           status	equ	0xFD8
  4072                           
  4073 ;; *************** function _ADC_Initialize *****************
  4074 ;; Defined at:
  4075 ;;		line 61 in file "mcc_generated_files/adc.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;		None
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      void 
  4082 ;; Registers used:
  4083 ;;		wreg, status,2
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;Total ram usage:        0 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:    4
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_SYSTEM_Initialize
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text25
  4104  000CA2                     __ptext25:
  4105                           	opt stack 0
  4106  000CA2                     _ADC_Initialize:
  4107                           	opt stack 25
  4108                           
  4109                           ;adc.c: 66: ADCON0 = 0x01;
  4110                           
  4111                           ; BSR set to: 15
  4112                           ;incstack = 0
  4113  000CA2  0E01               	movlw	1
  4114  000CA4  6EC2               	movwf	4034,c	;volatile
  4115                           
  4116                           ;adc.c: 69: ADCON1 = 0x00;
  4117  000CA6  0E00               	movlw	0
  4118  000CA8  6EC1               	movwf	4033,c	;volatile
  4119                           
  4120                           ;adc.c: 72: ADCON2 = 0x05;
  4121  000CAA  0E05               	movlw	5
  4122  000CAC  6EC0               	movwf	4032,c	;volatile
  4123                           
  4124                           ;adc.c: 75: ADRESL = 0x00;
  4125  000CAE  0E00               	movlw	0
  4126  000CB0  6EC3               	movwf	4035,c	;volatile
  4127                           
  4128                           ;adc.c: 78: ADRESH = 0x00;
  4129  000CB2  0E00               	movlw	0
  4130  000CB4  6EC4               	movwf	4036,c	;volatile
  4131                           
  4132                           ;adc.c: 81: PIE1bits.ADIE = 1;
  4133  000CB6  8C9D               	bsf	3997,6,c	;volatile
  4134  000CB8  0012               	return		;funcret
  4135  000CBA                     __end_of_ADC_Initialize:
  4136                           	opt stack 0
  4137                           tblptru	equ	0xFF8
  4138                           tblptrh	equ	0xFF7
  4139                           tblptrl	equ	0xFF6
  4140                           tablat	equ	0xFF5
  4141                           prodh	equ	0xFF4
  4142                           prodl	equ	0xFF3
  4143                           intcon	equ	0xFF2
  4144                           intcon2	equ	0xFF1
  4145                           postinc0	equ	0xFEE
  4146                           wreg	equ	0xFE8
  4147                           postdec1	equ	0xFE5
  4148                           fsr1l	equ	0xFE1
  4149                           indf2	equ	0xFDF
  4150                           fsr2h	equ	0xFDA
  4151                           fsr2l	equ	0xFD9
  4152                           status	equ	0xFD8
  4153                           
  4154 ;; *************** function _Motor_Stop *****************
  4155 ;; Defined at:
  4156 ;;		line 380 in file "MotorDriver.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;Total ram usage:        0 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    4
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_main
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text26
  4185  000CE4                     __ptext26:
  4186                           	opt stack 0
  4187  000CE4                     _Motor_Stop:
  4188                           	opt stack 26
  4189                           
  4190                           ;MotorDriver.c: 381: PSTR1CON = 0x00; PSTR2CON = 0x00;
  4191                           
  4192                           ;incstack = 0
  4193  000CE4  0E00               	movlw	0
  4194  000CE6  6EB9               	movwf	4025,c	;volatile
  4195  000CE8  0E00               	movlw	0
  4196  000CEA  6E63               	movwf	3939,c	;volatile
  4197                           
  4198                           ;MotorDriver.c: 382: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  4199  000CEC  948B               	bcf	3979,2,c	;volatile
  4200  000CEE  9A8C               	bcf	3980,5,c	;volatile
  4201  000CF0  928B               	bcf	3979,1,c	;volatile
  4202  000CF2  908B               	bcf	3979,0,c	;volatile
  4203  000CF4  0012               	return	
  4204  000CF6                     __end_of_Motor_Stop:
  4205                           	opt stack 0
  4206                           tblptru	equ	0xFF8
  4207                           tblptrh	equ	0xFF7
  4208                           tblptrl	equ	0xFF6
  4209                           tablat	equ	0xFF5
  4210                           prodh	equ	0xFF4
  4211                           prodl	equ	0xFF3
  4212                           intcon	equ	0xFF2
  4213                           intcon2	equ	0xFF1
  4214                           postinc0	equ	0xFEE
  4215                           wreg	equ	0xFE8
  4216                           postdec1	equ	0xFE5
  4217                           fsr1l	equ	0xFE1
  4218                           indf2	equ	0xFDF
  4219                           fsr2h	equ	0xFDA
  4220                           fsr2l	equ	0xFD9
  4221                           status	equ	0xFD8
  4222                           
  4223 ;; *************** function _DelayTmr2 *****************
  4224 ;; Defined at:
  4225 ;;		line 385 in file "MotorDriver.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  Timeout         2   14[COMRAM] unsigned int 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, status,2, status,0
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;Total ram usage:        2 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:    4
  4246 ;; This function calls:
  4247 ;;		Nothing
  4248 ;; This function is called by:
  4249 ;;		_main
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           	psect	text27
  4254  000C86                     __ptext27:
  4255                           	opt stack 0
  4256  000C86                     _DelayTmr2:
  4257                           	opt stack 0
  4258                           
  4259                           ;incstack = 0
  4260  000C86  D006               	goto	l2356
  4261  000C88                     l2352:
  4262                           
  4263                           ;MotorDriver.c: 392: {
  4264                           ;MotorDriver.c: 393: if (DelayTimerTicked)
  4265  000C88  5046               	movf	_DelayTimerTicked,w,c	;volatile
  4266  000C8A  B4D8               	btfsc	status,2,c
  4267  000C8C  D005               	goto	l2358
  4268                           
  4269                           ;MotorDriver.c: 394: {
  4270                           ;MotorDriver.c: 395: Timeout--;
  4271  000C8E  062F               	decf	DelayTmr2@Timeout,f,c
  4272  000C90  A0D8               	btfss	status,0,c
  4273  000C92  0630               	decf	DelayTmr2@Timeout+1,f,c
  4274  000C94                     l2356:
  4275                           
  4276                           ;MotorDriver.c: 396: DelayTimerTicked = 0;
  4277  000C94  0E00               	movlw	0
  4278  000C96  6E46               	movwf	_DelayTimerTicked,c	;volatile
  4279  000C98                     l2358:
  4280  000C98  502F               	movf	DelayTmr2@Timeout,w,c
  4281  000C9A  1030               	iorwf	DelayTmr2@Timeout+1,w,c
  4282  000C9C  B4D8               	btfsc	status,2,c
  4283  000C9E  0012               	return	
  4284  000CA0  D7F3               	goto	l2352
  4285  000CA2                     __end_of_DelayTmr2:
  4286                           	opt stack 0
  4287                           tblptru	equ	0xFF8
  4288                           tblptrh	equ	0xFF7
  4289                           tblptrl	equ	0xFF6
  4290                           tablat	equ	0xFF5
  4291                           prodh	equ	0xFF4
  4292                           prodl	equ	0xFF3
  4293                           intcon	equ	0xFF2
  4294                           intcon2	equ	0xFF1
  4295                           postinc0	equ	0xFEE
  4296                           wreg	equ	0xFE8
  4297                           postdec1	equ	0xFE5
  4298                           fsr1l	equ	0xFE1
  4299                           indf2	equ	0xFDF
  4300                           fsr2h	equ	0xFDA
  4301                           fsr2l	equ	0xFD9
  4302                           status	equ	0xFD8
  4303                           
  4304 ;; *************** function _INTERRUPT_InterruptManager *****************
  4305 ;; Defined at:
  4306 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;Total ram usage:       14 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    3
  4327 ;; This function calls:
  4328 ;;		_ADC_ISR
  4329 ;;		_TMR2_ISR
  4330 ;;		_TMR6_ISR
  4331 ;; This function is called by:
  4332 ;;		Interrupt level 2
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	intcode
  4337  000008                     __pintcode:
  4338                           	opt stack 0
  4339  000008                     _INTERRUPT_InterruptManager:
  4340                           	opt stack 24
  4341                           
  4342                           ;incstack = 0
  4343  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4344  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  4345  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4346  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4347  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4348  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4349  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4350  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4351  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4352  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4353  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4354  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4355  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4356  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4357  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4358                           
  4359                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  4360  000042  BCF2               	btfsc	intcon,6,c	;volatile
  4361  000044  AC9D               	btfss	3997,6,c	;volatile
  4362  000046  D005               	goto	i2l270
  4363  000048  AC9E               	btfss	3998,6,c	;volatile
  4364  00004A  D003               	goto	i2l270
  4365                           
  4366                           ;interrupt_manager.c: 61: {
  4367                           ;interrupt_manager.c: 62: ADC_ISR();
  4368  00004C  ECA2  F006         	call	_ADC_ISR	;wreg free
  4369                           
  4370                           ;interrupt_manager.c: 63: }
  4371  000050  D00E               	goto	i2l276
  4372  000052                     i2l270:
  4373                           
  4374                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  4375  000052  BCF2               	btfsc	intcon,6,c	;volatile
  4376  000054  A47D               	btfss	3965,2,c	;volatile
  4377  000056  D005               	goto	i2l272
  4378  000058  A47E               	btfss	3966,2,c	;volatile
  4379  00005A  D003               	goto	i2l272
  4380                           
  4381                           ;interrupt_manager.c: 65: {
  4382                           ;interrupt_manager.c: 66: TMR6_ISR();
  4383  00005C  EC22  F006         	call	_TMR6_ISR	;wreg free
  4384                           
  4385                           ;interrupt_manager.c: 67: }
  4386  000060  D006               	goto	i2l276
  4387  000062                     i2l272:
  4388                           
  4389                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  4390  000062  BCF2               	btfsc	intcon,6,c	;volatile
  4391  000064  A29D               	btfss	3997,1,c	;volatile
  4392  000066  D003               	goto	i2l276
  4393  000068  B29E               	btfsc	3998,1,c	;volatile
  4394                           
  4395                           ;interrupt_manager.c: 69: {
  4396                           ;interrupt_manager.c: 70: TMR2_ISR();
  4397  00006A  EC97  F006         	call	_TMR2_ISR	;wreg free
  4398  00006E                     i2l276:
  4399  00006E  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4400  000072  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4401  000076  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4402  00007A  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4403  00007E  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4404  000082  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4405  000086  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4406  00008A  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4407  00008E  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4408  000092  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4409  000096  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4410  00009A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4411  00009E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4412  0000A2  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4413  0000A6  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4414  0000A8  0011               	retfie		f
  4415  0000AA                     __end_of_INTERRUPT_InterruptManager:
  4416                           	opt stack 0
  4417                           pclatu	equ	0xFFB
  4418                           pclath	equ	0xFFA
  4419                           tblptru	equ	0xFF8
  4420                           tblptrh	equ	0xFF7
  4421                           tblptrl	equ	0xFF6
  4422                           tablat	equ	0xFF5
  4423                           prodh	equ	0xFF4
  4424                           prodl	equ	0xFF3
  4425                           intcon	equ	0xFF2
  4426                           intcon2	equ	0xFF1
  4427                           postinc0	equ	0xFEE
  4428                           fsr0h	equ	0xFEA
  4429                           fsr0l	equ	0xFE9
  4430                           wreg	equ	0xFE8
  4431                           postdec1	equ	0xFE5
  4432                           fsr1h	equ	0xFE2
  4433                           fsr1l	equ	0xFE1
  4434                           indf2	equ	0xFDF
  4435                           fsr2h	equ	0xFDA
  4436                           fsr2l	equ	0xFD9
  4437                           status	equ	0xFD8
  4438                           
  4439 ;; *************** function _TMR6_ISR *****************
  4440 ;; Defined at:
  4441 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;		None
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  1    wreg      void 
  4448 ;; Registers used:
  4449 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;Total ram usage:        0 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    1
  4462 ;; This function calls:
  4463 ;;		Absolute function
  4464 ;;		_TMR6_DefaultInterruptHandler
  4465 ;; This function is called by:
  4466 ;;		_INTERRUPT_InterruptManager
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text29
  4471  000C44                     __ptext29:
  4472                           	opt stack 0
  4473  000C44                     _TMR6_ISR:
  4474                           	opt stack 25
  4475                           
  4476                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  4477                           
  4478                           ;incstack = 0
  4479  000C44  947E               	bcf	3966,2,c	;volatile
  4480                           
  4481                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  4482  000C46  504A               	movf	_TMR6_InterruptHandler,w,c
  4483  000C48  104B               	iorwf	_TMR6_InterruptHandler+1,w,c
  4484  000C4A  B4D8               	btfsc	status,2,c
  4485  000C4C  0012               	return	
  4486                           
  4487                           ;tmr6.c: 128: {
  4488                           ;tmr6.c: 129: TMR6_InterruptHandler();
  4489  000C4E  D801               	call	i2u51_48
  4490  000C50  0012               	return	
  4491  000C52                     i2u51_48:
  4492  000C52  0005               	push	
  4493  000C54  6EFA               	movwf	pclath,c
  4494  000C56  504A               	movf	_TMR6_InterruptHandler,w,c
  4495  000C58  6EFD               	movwf	tosl,c
  4496  000C5A  504B               	movf	_TMR6_InterruptHandler+1,w,c
  4497  000C5C  6EFE               	movwf	tosh,c
  4498  000C5E  50F8               	movf	tblptru,w,c
  4499  000C60  6EFF               	movwf	tosu,c
  4500  000C62  50FA               	movf	pclath,w,c
  4501  000C64  0012               	return		;indir
  4502  000C66                     __end_of_TMR6_ISR:
  4503                           	opt stack 0
  4504                           tosu	equ	0xFFF
  4505                           tosh	equ	0xFFE
  4506                           tosl	equ	0xFFD
  4507                           pclatu	equ	0xFFB
  4508                           pclath	equ	0xFFA
  4509                           tblptru	equ	0xFF8
  4510                           tblptrh	equ	0xFF7
  4511                           tblptrl	equ	0xFF6
  4512                           tablat	equ	0xFF5
  4513                           prodh	equ	0xFF4
  4514                           prodl	equ	0xFF3
  4515                           intcon	equ	0xFF2
  4516                           intcon2	equ	0xFF1
  4517                           postinc0	equ	0xFEE
  4518                           fsr0h	equ	0xFEA
  4519                           fsr0l	equ	0xFE9
  4520                           wreg	equ	0xFE8
  4521                           postdec1	equ	0xFE5
  4522                           fsr1h	equ	0xFE2
  4523                           fsr1l	equ	0xFE1
  4524                           indf2	equ	0xFDF
  4525                           fsr2h	equ	0xFDA
  4526                           fsr2l	equ	0xFD9
  4527                           status	equ	0xFD8
  4528                           
  4529 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  4530 ;; Defined at:
  4531 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;		None
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;		None
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  1    wreg      void 
  4538 ;; Registers used:
  4539 ;;		None
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;Total ram usage:        0 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_TMR6_Initialize
  4555 ;;		_TMR6_ISR
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text30
  4560  000D48                     __ptext30:
  4561                           	opt stack 0
  4562  000D48                     _TMR6_DefaultInterruptHandler:
  4563                           	opt stack 25
  4564                           
  4565                           ;incstack = 0
  4566  000D48  0012               	return		;funcret
  4567  000D4A                     __end_of_TMR6_DefaultInterruptHandler:
  4568                           	opt stack 0
  4569                           tosu	equ	0xFFF
  4570                           tosh	equ	0xFFE
  4571                           tosl	equ	0xFFD
  4572                           pclatu	equ	0xFFB
  4573                           pclath	equ	0xFFA
  4574                           tblptru	equ	0xFF8
  4575                           tblptrh	equ	0xFF7
  4576                           tblptrl	equ	0xFF6
  4577                           tablat	equ	0xFF5
  4578                           prodh	equ	0xFF4
  4579                           prodl	equ	0xFF3
  4580                           intcon	equ	0xFF2
  4581                           intcon2	equ	0xFF1
  4582                           postinc0	equ	0xFEE
  4583                           fsr0h	equ	0xFEA
  4584                           fsr0l	equ	0xFE9
  4585                           wreg	equ	0xFE8
  4586                           postdec1	equ	0xFE5
  4587                           fsr1h	equ	0xFE2
  4588                           fsr1l	equ	0xFE1
  4589                           indf2	equ	0xFDF
  4590                           fsr2h	equ	0xFDA
  4591                           fsr2l	equ	0xFD9
  4592                           status	equ	0xFD8
  4593                           
  4594 ;; *************** function _TMR2_ISR *****************
  4595 ;; Defined at:
  4596 ;;		line 126 in file "mcc_generated_files/tmr2.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;		None
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;Total ram usage:        0 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    2
  4617 ;; This function calls:
  4618 ;;		_TMR2_CallBack
  4619 ;; This function is called by:
  4620 ;;		_INTERRUPT_InterruptManager
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text31
  4625  000D2E                     __ptext31:
  4626                           	opt stack 0
  4627  000D2E                     _TMR2_ISR:
  4628                           	opt stack 24
  4629                           
  4630                           ;tmr2.c: 130: PIR1bits.TMR2IF = 0;
  4631                           
  4632                           ;incstack = 0
  4633  000D2E  929E               	bcf	3998,1,c	;volatile
  4634                           
  4635                           ;tmr2.c: 134: TMR2_CallBack();
  4636  000D30  ECD9  F005         	call	_TMR2_CallBack	;wreg free
  4637  000D34  0012               	return		;funcret
  4638  000D36                     __end_of_TMR2_ISR:
  4639                           	opt stack 0
  4640                           tosu	equ	0xFFF
  4641                           tosh	equ	0xFFE
  4642                           tosl	equ	0xFFD
  4643                           pclatu	equ	0xFFB
  4644                           pclath	equ	0xFFA
  4645                           tblptru	equ	0xFF8
  4646                           tblptrh	equ	0xFF7
  4647                           tblptrl	equ	0xFF6
  4648                           tablat	equ	0xFF5
  4649                           prodh	equ	0xFF4
  4650                           prodl	equ	0xFF3
  4651                           intcon	equ	0xFF2
  4652                           intcon2	equ	0xFF1
  4653                           postinc0	equ	0xFEE
  4654                           fsr0h	equ	0xFEA
  4655                           fsr0l	equ	0xFE9
  4656                           wreg	equ	0xFE8
  4657                           postdec1	equ	0xFE5
  4658                           fsr1h	equ	0xFE2
  4659                           fsr1l	equ	0xFE1
  4660                           indf2	equ	0xFDF
  4661                           fsr2h	equ	0xFDA
  4662                           fsr2l	equ	0xFD9
  4663                           status	equ	0xFD8
  4664                           
  4665 ;; *************** function _TMR2_CallBack *****************
  4666 ;; Defined at:
  4667 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      void 
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;Total ram usage:        0 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:    1
  4688 ;; This function calls:
  4689 ;;		Absolute function
  4690 ;;		_TMR2_DefaultInterruptHandler
  4691 ;; This function is called by:
  4692 ;;		_TMR2_ISR
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text32
  4697  000BB2                     __ptext32:
  4698                           	opt stack 0
  4699  000BB2                     _TMR2_CallBack:
  4700                           	opt stack 24
  4701                           
  4702                           ;tmr2.c: 140: Timer2Ticked = 1;
  4703                           
  4704                           ;incstack = 0
  4705  000BB2  0E01               	movlw	1
  4706  000BB4  6E47               	movwf	_Timer2Ticked,c	;volatile
  4707                           
  4708                           ;tmr2.c: 141: DelayTimerTicked = 1;
  4709  000BB6  0E01               	movlw	1
  4710  000BB8  6E46               	movwf	_DelayTimerTicked,c	;volatile
  4711                           
  4712                           ;tmr2.c: 144: if(TMR2_InterruptHandler)
  4713  000BBA  5048               	movf	_TMR2_InterruptHandler,w,c
  4714  000BBC  1049               	iorwf	_TMR2_InterruptHandler+1,w,c
  4715  000BBE  B4D8               	btfsc	status,2,c
  4716  000BC0  0012               	return	
  4717                           
  4718                           ;tmr2.c: 145: {
  4719                           ;tmr2.c: 146: TMR2_InterruptHandler();
  4720  000BC2  D801               	call	i2u5_48
  4721  000BC4  0012               	return	
  4722  000BC6                     i2u5_48:
  4723  000BC6  0005               	push	
  4724  000BC8  6EFA               	movwf	pclath,c
  4725  000BCA  5048               	movf	_TMR2_InterruptHandler,w,c
  4726  000BCC  6EFD               	movwf	tosl,c
  4727  000BCE  5049               	movf	_TMR2_InterruptHandler+1,w,c
  4728  000BD0  6EFE               	movwf	tosh,c
  4729  000BD2  50F8               	movf	tblptru,w,c
  4730  000BD4  6EFF               	movwf	tosu,c
  4731  000BD6  50FA               	movf	pclath,w,c
  4732  000BD8  0012               	return		;indir
  4733  000BDA                     __end_of_TMR2_CallBack:
  4734                           	opt stack 0
  4735                           tosu	equ	0xFFF
  4736                           tosh	equ	0xFFE
  4737                           tosl	equ	0xFFD
  4738                           pclatu	equ	0xFFB
  4739                           pclath	equ	0xFFA
  4740                           tblptru	equ	0xFF8
  4741                           tblptrh	equ	0xFF7
  4742                           tblptrl	equ	0xFF6
  4743                           tablat	equ	0xFF5
  4744                           prodh	equ	0xFF4
  4745                           prodl	equ	0xFF3
  4746                           intcon	equ	0xFF2
  4747                           intcon2	equ	0xFF1
  4748                           postinc0	equ	0xFEE
  4749                           fsr0h	equ	0xFEA
  4750                           fsr0l	equ	0xFE9
  4751                           wreg	equ	0xFE8
  4752                           postdec1	equ	0xFE5
  4753                           fsr1h	equ	0xFE2
  4754                           fsr1l	equ	0xFE1
  4755                           indf2	equ	0xFDF
  4756                           fsr2h	equ	0xFDA
  4757                           fsr2l	equ	0xFD9
  4758                           status	equ	0xFD8
  4759                           
  4760 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4761 ;; Defined at:
  4762 ;;		line 154 in file "mcc_generated_files/tmr2.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;		None
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;		None
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      void 
  4769 ;; Registers used:
  4770 ;;		None
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;Total ram usage:        0 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_TMR2_Initialize
  4786 ;;		_TMR2_CallBack
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text33
  4791  000D4A                     __ptext33:
  4792                           	opt stack 0
  4793  000D4A                     _TMR2_DefaultInterruptHandler:
  4794                           	opt stack 24
  4795                           
  4796                           ;incstack = 0
  4797  000D4A  0012               	return		;funcret
  4798  000D4C                     __end_of_TMR2_DefaultInterruptHandler:
  4799                           	opt stack 0
  4800                           tosu	equ	0xFFF
  4801                           tosh	equ	0xFFE
  4802                           tosl	equ	0xFFD
  4803                           pclatu	equ	0xFFB
  4804                           pclath	equ	0xFFA
  4805                           tblptru	equ	0xFF8
  4806                           tblptrh	equ	0xFF7
  4807                           tblptrl	equ	0xFF6
  4808                           tablat	equ	0xFF5
  4809                           prodh	equ	0xFF4
  4810                           prodl	equ	0xFF3
  4811                           intcon	equ	0xFF2
  4812                           intcon2	equ	0xFF1
  4813                           postinc0	equ	0xFEE
  4814                           fsr0h	equ	0xFEA
  4815                           fsr0l	equ	0xFE9
  4816                           wreg	equ	0xFE8
  4817                           postdec1	equ	0xFE5
  4818                           fsr1h	equ	0xFE2
  4819                           fsr1l	equ	0xFE1
  4820                           indf2	equ	0xFDF
  4821                           fsr2h	equ	0xFDA
  4822                           fsr2l	equ	0xFD9
  4823                           status	equ	0xFD8
  4824                           
  4825 ;; *************** function _ADC_ISR *****************
  4826 ;; Defined at:
  4827 ;;		line 144 in file "mcc_generated_files/adc.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		None
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4845 ;;Total ram usage:        0 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; This function calls:
  4848 ;;		Nothing
  4849 ;; This function is called by:
  4850 ;;		_INTERRUPT_InterruptManager
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text34
  4855  000D44                     __ptext34:
  4856                           	opt stack 0
  4857  000D44                     _ADC_ISR:
  4858                           	opt stack 26
  4859                           
  4860                           ;adc.c: 149: PIR1bits.ADIF = 0;
  4861                           
  4862                           ;incstack = 0
  4863  000D44  9C9E               	bcf	3998,6,c	;volatile
  4864  000D46  0012               	return		;funcret
  4865  000D48                     __end_of_ADC_ISR:
  4866                           	opt stack 0
  4867  0000                     tosu	equ	0xFFF
  4868                           tosh	equ	0xFFE
  4869                           tosl	equ	0xFFD
  4870                           pclatu	equ	0xFFB
  4871                           pclath	equ	0xFFA
  4872                           tblptru	equ	0xFF8
  4873                           tblptrh	equ	0xFF7
  4874                           tblptrl	equ	0xFF6
  4875                           tablat	equ	0xFF5
  4876                           prodh	equ	0xFF4
  4877                           prodl	equ	0xFF3
  4878                           intcon	equ	0xFF2
  4879                           intcon2	equ	0xFF1
  4880                           postinc0	equ	0xFEE
  4881                           fsr0h	equ	0xFEA
  4882                           fsr0l	equ	0xFE9
  4883                           wreg	equ	0xFE8
  4884                           postdec1	equ	0xFE5
  4885                           fsr1h	equ	0xFE2
  4886                           fsr1l	equ	0xFE1
  4887                           indf2	equ	0xFDF
  4888                           fsr2h	equ	0xFDA
  4889                           fsr2l	equ	0xFD9
  4890                           status	equ	0xFD8
  4891                           tosu	equ	0xFFF
  4892                           tosh	equ	0xFFE
  4893                           tosl	equ	0xFFD
  4894                           pclatu	equ	0xFFB
  4895                           pclath	equ	0xFFA
  4896                           tblptru	equ	0xFF8
  4897                           tblptrh	equ	0xFF7
  4898                           tblptrl	equ	0xFF6
  4899                           tablat	equ	0xFF5
  4900                           prodh	equ	0xFF4
  4901                           prodl	equ	0xFF3
  4902                           intcon	equ	0xFF2
  4903                           intcon2	equ	0xFF1
  4904                           postinc0	equ	0xFEE
  4905                           fsr0h	equ	0xFEA
  4906                           fsr0l	equ	0xFE9
  4907                           wreg	equ	0xFE8
  4908                           postdec1	equ	0xFE5
  4909                           fsr1h	equ	0xFE2
  4910                           fsr1l	equ	0xFE1
  4911                           indf2	equ	0xFDF
  4912                           fsr2h	equ	0xFDA
  4913                           fsr2l	equ	0xFD9
  4914                           status	equ	0xFD8
  4915                           
  4916                           	psect	text35
  4917  000000                     __ptext35:
  4918                           	opt stack 0
  4919                           tosu	equ	0xFFF
  4920                           tosh	equ	0xFFE
  4921                           tosl	equ	0xFFD
  4922                           pclatu	equ	0xFFB
  4923                           pclath	equ	0xFFA
  4924                           tblptru	equ	0xFF8
  4925                           tblptrh	equ	0xFF7
  4926                           tblptrl	equ	0xFF6
  4927                           tablat	equ	0xFF5
  4928                           prodh	equ	0xFF4
  4929                           prodl	equ	0xFF3
  4930                           intcon	equ	0xFF2
  4931                           intcon2	equ	0xFF1
  4932                           postinc0	equ	0xFEE
  4933                           fsr0h	equ	0xFEA
  4934                           fsr0l	equ	0xFE9
  4935                           wreg	equ	0xFE8
  4936                           postdec1	equ	0xFE5
  4937                           fsr1h	equ	0xFE2
  4938                           fsr1l	equ	0xFE1
  4939                           indf2	equ	0xFDF
  4940                           fsr2h	equ	0xFDA
  4941                           fsr2l	equ	0xFD9
  4942                           status	equ	0xFD8
  4943                           
  4944                           	psect	rparam
  4945  0000                     tosu	equ	0xFFF
  4946                           tosh	equ	0xFFE
  4947                           tosl	equ	0xFFD
  4948                           pclatu	equ	0xFFB
  4949                           pclath	equ	0xFFA
  4950                           tblptru	equ	0xFF8
  4951                           tblptrh	equ	0xFF7
  4952                           tblptrl	equ	0xFF6
  4953                           tablat	equ	0xFF5
  4954                           prodh	equ	0xFF4
  4955                           prodl	equ	0xFF3
  4956                           intcon	equ	0xFF2
  4957                           intcon2	equ	0xFF1
  4958                           postinc0	equ	0xFEE
  4959                           fsr0h	equ	0xFEA
  4960                           fsr0l	equ	0xFE9
  4961                           wreg	equ	0xFE8
  4962                           postdec1	equ	0xFE5
  4963                           fsr1h	equ	0xFE2
  4964                           fsr1l	equ	0xFE1
  4965                           indf2	equ	0xFDF
  4966                           fsr2h	equ	0xFDA
  4967                           fsr2l	equ	0xFD9
  4968                           status	equ	0xFD8
  4969                           
  4970                           	psect	temp
  4971  00004D                     btemp:
  4972                           	opt stack 0
  4973  00004D                     	ds	1
  4974  0000                     int$flags	set	btemp
  4975                           tosu	equ	0xFFF
  4976                           tosh	equ	0xFFE
  4977                           tosl	equ	0xFFD
  4978                           pclatu	equ	0xFFB
  4979                           pclath	equ	0xFFA
  4980                           tblptru	equ	0xFF8
  4981                           tblptrh	equ	0xFF7
  4982                           tblptrl	equ	0xFF6
  4983                           tablat	equ	0xFF5
  4984                           prodh	equ	0xFF4
  4985                           prodl	equ	0xFF3
  4986                           intcon	equ	0xFF2
  4987                           intcon2	equ	0xFF1
  4988                           postinc0	equ	0xFEE
  4989                           fsr0h	equ	0xFEA
  4990                           fsr0l	equ	0xFE9
  4991                           wreg	equ	0xFE8
  4992                           postdec1	equ	0xFE5
  4993                           fsr1h	equ	0xFE2
  4994                           fsr1l	equ	0xFE1
  4995                           indf2	equ	0xFDF
  4996                           fsr2h	equ	0xFDA
  4997                           fsr2l	equ	0xFD9
  4998                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        192
    BSS         13
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      76
    BANK0           160      0     160
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StepMove
    _StepMove->_State16MEF_act
    _StepMove->_State16MEF_act_Backward
    _StepMove->_State8MEF_act
    _StepMove->_State8MEF_act_Backward
    _State8MEF_act_Backward->_EPWM1_LoadDutyValue
    _State8MEF_act_Backward->_EPWM2_LoadDutyValue
    _State8MEF_act->_EPWM1_LoadDutyValue
    _State8MEF_act->_EPWM2_LoadDutyValue
    _State16MEF_act_Backward->_EPWM1_LoadDutyValue
    _State16MEF_act_Backward->_EPWM2_LoadDutyValue
    _State16MEF_act->_EPWM1_LoadDutyValue
    _State16MEF_act->_EPWM2_LoadDutyValue
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9533
                          _DelayTmr2
                         _Motor_Stop
                  _SYSTEM_Initialize
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StepMove                                             7     2      5    9210
                                             19 COMRAM     7     2      5
                     _State16MEF_act
            _State16MEF_act_Backward
                      _State8MEF_act
             _State8MEF_act_Backward
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act_Backward                               1     1      0    2136
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act                                        1     1      0    2136
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act_Backward                              1     1      0    2158
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                      _EUSART1_Write
                  _limitar_corriente
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act                                       1     1      0    2136
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                  _limitar_corriente
 ---------------------------------------------------------------------------------
 (3) _limitar_corriente                                    1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2    1068
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2    1068
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayTmr2                                            2     0      2     151
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayTmr2
   _Motor_Stop
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_ini
   _StepMove
     _State16MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _limitar_corriente
     _State16MEF_act_Backward
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _EUSART1_Write
       _limitar_corriente
     _State8MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
     _State8MEF_act_Backward
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      4C       1       80.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EC      12        0.0%
DATA                 0      0      EC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Jun 15 11:43:53 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 0D2E  
                       ??_TMR6_StartTimer 002F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l339 0D06                                       l604 098C  
                                     l608 0A88                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _PR6 000F4B                           __end_of_ADC_ISR 0D48  
                         _TMR2_Initialize 0C22                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                __end_of_EPWM2_Initialize 0BFE                           _CCP5_Initialize 0CD0  
                                    l2010 02BA                                      l2002 0848  
                                    l2020 02D0                                      l2102 00B0  
                                    l2006 084C                                      l2112 00C6  
                                    l2034 0332                                      l2202 0292  
                                    l2210 04A8                                      l2036 0336  
                                    l2132 0130                                      l2220 04BE  
                                    l2054 03A2                                      l2134 0134  
                                    l2206 0296                                      l2056 03A6  
                                    l2074 0412                                      l2234 051E  
                                    l2330 0952                                      l2076 0416  
                                    l2180 021C                                      l2156 01A6  
                                    l2252 058A                                      l2236 0522  
                                    l2094 0480                                      l2182 0220  
                                    l2158 01AA                                      l2270 05F6  
                                    l2254 058E                                      l2342 0976  
                                    l2352 0C88                                      l2272 05FA  
                                    l2336 0966                                      l2328 094C  
                                    l2344 097A                                      l2098 0484  
                                    l2338 096A                                      l2346 0980  
                                    l2356 0C94                                      l2292 066A  
                                    l2358 0C98                                      l2288 0666  
                                    l2392 09D4                                      l1922 068E  
                                    l2386 09A6                                      l1932 06A4  
                                    l1946 0702                                      l1964 076E  
                                    l1948 0706                                      l1982 07DA  
                                    l1966 0772                                      l1984 07DE  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _TMR2 000FBC  
                                    _TMR6 000F4C                                      _WPUB 000F61  
                           _EUSART1_Write 0D04                                      _main 0990  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 004D  
                           __CFG_BORV$190 000000                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00AA  
                           __CFG_IESO$OFF 000000                     ??_EPWM1_LoadDutyValue 0031  
                            ___param_bank 000000            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 0D04                                     ?_main 0021  
                                   _T2CON 000FBA                                     _T6CON 000F4A  
                          __CFG_DEBUG$OFF 000000                                     i2l270 0052  
                                   i2l272 0062                                     i2l276 006E  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000         __size_of_TMR6_SetInterruptHandler 000A  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                 ?_TMR6_SetInterruptHandler 002F  
                        __end_of_TMR2_ISR 0D36                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                        __end_of_TMR6_ISR 0C66                            __CFG_EBTRB$OFF 000000  
                 _State16MEF_act_Backward 00AE                          _LookUP_TABLE_COS 0001  
                        _LookUP_TABLE_SEN 00E0                        __CFG_MCLRE$EXTMCLR 000000  
                      StepMove@StepNumber 0034                            ?_EUSART1_Write 0021  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 0D3C                            __CFG_PBADEN$ON 000000  
          ??_TMR6_DefaultInterruptHandler 0021                           __initialization 0A04  
              __end_of_EUSART1_Initialize 0CD0                              __end_of_main 0A04  
                 ?_State8MEF_act_Backward 0021                   __end_of_TMR2_Initialize 0C44  
                               ??_ADC_ISR 0021                        __size_of_DelayTmr2 001C  
             ?_INTERRUPT_InterruptManager 0021                  _TMR2_SetInterruptHandler 0D24  
                                  ??_main 003B                   __end_of_CCP5_Initialize 0CE4  
                           __activetblptr 000002                          DelayTmr2@Timeout 002F  
                         _TMR6_Initialize 0B8A                          __end_of_StepMove 0990  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1H 000FBF  
                                  _CCPR2H 000F68                                    _CCPR1L 000FBE  
                                  _CCPR2L 000F67                                    _CCPR5H 000F56  
                                  _CCPR5L 000F55                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAE  
                                  _RCSTA1 000FAB                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                    i2u5_48 0BC6  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                          __CFG_XINST$OFF 000000                              _CCPTMRS0bits 000F49  
                              _Motor_Stop 0CE4            __end_of_State8MEF_act_Backward 068C  
                          __CFG_STVREN$ON 000000                   __size_of_State16MEF_act 01EE  
                                  clear_0 0A4A                         _limitar_corriente 0A5E  
                            __pdataCOMRAM 0001                  StepMove@microstep_number 0037  
               ??_State16MEF_act_Backward 0033                        ?_limitar_corriente 0021  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                           ??_EUSART1_Write 002F  
                     _EPWM2_LoadDutyValue 0B00                   __end_of_TMR2_StartTimer 0D40  
TMR2_SetInterruptHandler@InterruptHandler 002F  TMR6_SetInterruptHandler@InterruptHandler 002F  
           __size_of_INTERRUPT_Initialize 0004                       ??_limitar_corriente 002F  
                       __end_of_DelayTmr2 0CA2                         _SYSTEM_Initialize 0B60  
                              __accesstop 0060                   __end_of__initialization 0A50  
                   __end_of_TMR2_CallBack 0BDA                        ?_SYSTEM_Initialize 0021  
                         _TMR6_StartTimer 0D36                             ___rparam_used 000001  
                       ?_EPWM1_Initialize 0021                            __pcstackCOMRAM 0021  
                    ?_EPWM2_LoadDutyValue 002F                              __pidataBANK0 086E  
                     ??_SYSTEM_Initialize 0031                     __end_of_State8MEF_act 086E  
                               ?_TMR2_ISR 0021                                 ?_TMR6_ISR 0021  
                      ??_EPWM1_Initialize 002F                          ?_TMR2_Initialize 0021  
               __end_of_limitar_corriente 0AB4                   __end_of_TMR6_Initialize 0BB2  
                        ?_CCP5_Initialize 0021                         ?_EPWM2_Initialize 0021  
               __end_of_SYSTEM_Initialize 0B8A                        ??_EPWM2_Initialize 002F  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 0048  
                      __CFG_CCP2MX$PORTC1 000000                     ??_EPWM2_LoadDutyValue 0031  
                             ?_Motor_Stop 0021          __end_of_TMR6_SetInterruptHandler 0D24  
                              ??_TMR2_ISR 0021                        __CFG_CCP3MX$PORTB5 000000  
                               ?_StepMove 0034                                ??_TMR6_ISR 0021  
                                 _CCP1CON 000FBD                                   _CCP2CON 000F66  
                                 _CCP5CON 000F54                                   _ECCP1AS 000FB6  
                                 _ECCP2AS 000F64                                   _ADC_ISR 0D44  
                 __size_of_ADC_Initialize 0018                                   _OSCCON2 000FD2  
                                 i2u51_48 0C52                                   _OSCTUNE 000F9B  
                                 _PWM1CON 000FB7                                   _PWM2CON 000F65  
                                 _SPBRGH1 000FB0                          ?_TMR2_StartTimer 0021  
                 __end_of_TMR6_StartTimer 0D3C               __end_of_EPWM1_LoadDutyValue 0B60  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0031  
                              ??_StepMove 0039                            _State16MEF_act 02B8  
              __size_of_limitar_corriente 0056                                   __pcinit 0A04  
                        ?_TMR6_Initialize 0021                                   __ramtop 1000  
                                 __ptext0 0990                                   __ptext1 090E  
                                 __ptext2 04A6                                   __ptext3 068C  
                                 __ptext4 00AE                                   __ptext5 0D04  
                                 __ptext6 02B8                                   __ptext7 0A5E  
                                 __ptext8 0B00                                   __ptext9 0B30  
                   _OSCILLATOR_Initialize 0CF6                                 _T2CONbits 000FBA  
                           ?_StateMEF_ini 0021                        _EUSART1_Initialize 0CBA  
                ??_PIN_MANAGER_Initialize 002F                                 _T6CONbits 000F4A  
              __size_of_SYSTEM_Initialize 002A                       __size_of_Motor_Stop 0012  
                    end_of_initialization 0A50                       ?_EUSART1_Initialize 0021  
                           __Lmediumconst 0000                    __end_of_State16MEF_act 04A6  
                                 postdec1 000FE5                                   postinc0 000FEE  
                    ??_EUSART1_Initialize 002F                  _TMR6_SetInterruptHandler 0D1A  
                          ??_StateMEF_ini 002F                       EUSART1_Write@txData 002F  
                        ?_TMR6_StartTimer 0021                              _EstadoActual 004C  
                               _DelayTmr2 0C86                           ?_State16MEF_act 0021  
            __end_of_INTERRUPT_Initialize 0D44      __end_of_TMR2_DefaultInterruptHandler 0D4C  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 0D4A  
                       StepMove@Velocidad 0036                             __pidataCOMRAM 0C66  
                       __size_of_TMR2_ISR 0008                            _ADC_Initialize 0CA2  
                       __size_of_TMR6_ISR 0022                    ?_OSCILLATOR_Initialize 0021  
                     start_initialization 0A04                 __size_of_EPWM1_Initialize 0024  
         __size_of_PIN_MANAGER_Initialize 004C                                 _Microstep 0044  
            EPWM1_LoadDutyValue@dutyValue 002F                     __end_of_EUSART1_Write 0D10  
                              ?_DelayTmr2 002F                 __size_of_EPWM2_Initialize 0024  
                            ??_Motor_Stop 002F                          _DelayTimerTicked 0046  
                  __end_of_ADC_Initialize 0CBA                               __pdataBANK0 0060  
                                ?_ADC_ISR 0021                                 _StepCount 003D  
                       StepMove@direccion 0038             ?_TMR2_DefaultInterruptHandler 0021  
                ?_State16MEF_act_Backward 0021                         __size_of_StepMove 0082  
                  __size_of_TMR2_CallBack 0028                               __pbssCOMRAM 003B  
                __size_of_TMR2_Initialize 0022                  __size_of_CCP5_Initialize 0014  
                      __end_of_Motor_Stop 0CF6                    __size_of_State8MEF_act 01E2  
             __end_of_EPWM2_LoadDutyValue 0B30                  ??_State8MEF_act_Backward 0033  
                   _TMR6_InterruptHandler 004A                      __end_of_StateMEF_ini 0D1A  
                  _PIN_MANAGER_Initialize 0AB4                                 __pintcode 0008  
                         ?_ADC_Initialize 0021              ??_INTERRUPT_InterruptManager 0021  
                        __CFG_PRICLKEN$ON 000000                                  _BAUDCON1 000FB8  
                                _ANALOG_0 0041                                  _ANALOG_1 003F  
                    _INTERRUPT_Initialize 0D40                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                           _TMR2_CallBack 0BB2                                  _PIE1bits 000F9D  
                                _PIE5bits 000F7D                               ??_DelayTmr2 0031  
                __size_of_TMR2_StartTimer 0004       __size_of_INTERRUPT_InterruptManager 00A2  
                                _PIR1bits 000F9E                                  _PIR5bits 000F7E  
            __size_of_EPWM1_LoadDutyValue 0030                ??_TMR6_SetInterruptHandler 0031  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
         __end_of_State16MEF_act_Backward 02B8                                  _TMR2_ISR 0D2E  
                                _PSTR1CON 000FB9                                  _PSTR2CON 000F63  
                                _TMR6_ISR 0C44                             _State8MEF_act 068C  
                        _Timer2Tick_count 003B                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2            ??_TMR2_DefaultInterruptHandler 0021  
                        _EPWM1_Initialize 0BFE         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 002F                  __size_of_TMR6_Initialize 0028  
                             _INTCON2bits 000FF1                                 copy_data0 0A18  
                               copy_data1 0A38                     ?_INTERRUPT_Initialize 0021  
                       ??_TMR2_Initialize 0031                            ?_TMR2_CallBack 0021  
                        ??_State16MEF_act 0033           __size_of_State8MEF_act_Backward 01E6  
                       ??_CCP5_Initialize 002F                                  _MoveDone 0043  
                                __Hrparam 0000                              _Timer2Ticked 0047  
                        _EPWM2_Initialize 0BDA                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTC0 000000  
                          ?_State8MEF_act 0021                                  _StepMove 090E  
                 ??_OSCILLATOR_Initialize 002F               __size_of_EUSART1_Initialize 0016  
                                __ptext10 0D10                                  __ptext11 0B60  
                                __ptext20 0D40                                  __ptext12 0B8A  
                                __ptext21 0CBA                                  __ptext13 0D36  
                                __ptext30 0D48                                  __ptext22 0BDA  
                                __ptext14 0D1A                                  __ptext31 0D2E  
                                __ptext23 0BFE                                  __ptext15 0C22  
                                __ptext32 0BB2                                  __ptext24 0CD0  
                                __ptext16 0D3C                                  __ptext33 0D4A  
                                __ptext25 0CA2                                  __ptext17 0D24  
                                __ptext34 0D44                                  __ptext26 0CE4  
                                __ptext18 0AB4                                  __ptext35 0000  
                                __ptext27 0C86                                  __ptext19 0CF6  
                                __ptext29 0C44                     __size_of_StateMEF_ini 000A  
                           __size_of_main 0074                       _LookUP_TABLE_COS_16 00A0  
                     _LookUP_TABLE_SEN_16 0060                  __size_of_TMR6_StartTimer 0006  
                                int$flags 004D                         ??_TMR2_StartTimer 002F  
      __end_of_INTERRUPT_InterruptManager 00AA                _INTERRUPT_InterruptManager 0008  
                  _State8MEF_act_Backward 04A6                                _INTCONbits 000FF2  
                            _StateMEF_ini 0D10                    ??_INTERRUPT_Initialize 002F  
    __end_of_TMR6_DefaultInterruptHandler 0D4A     __size_of_TMR6_DefaultInterruptHandler 0002  
            _TMR6_DefaultInterruptHandler 0D48          __size_of_State16MEF_act_Backward 020A  
                                intlevel2 0000                           ??_TMR2_CallBack 0021  
            EPWM2_LoadDutyValue@dutyValue 002F                   ?_PIN_MANAGER_Initialize 0021  
                       ??_TMR6_Initialize 0031                                _RCSTA1bits 000FAB  
                        ??_ADC_Initialize 002F                             _StepsComplete 0045  
                         ??_State8MEF_act 0033                    __size_of_EUSART1_Write 000C  
                       __CFG_T3CMX$PORTC0 000000                       _EPWM1_LoadDutyValue 0B30  
          __end_of_PIN_MANAGER_Initialize 0B00             ?_TMR6_DefaultInterruptHandler 0021  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 0048  
                __end_of_EPWM1_Initialize 0C22                      ?_EPWM1_LoadDutyValue 002F  
