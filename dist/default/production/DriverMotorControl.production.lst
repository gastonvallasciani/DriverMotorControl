

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Jun 05 11:50:12 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 1.41
    47                           ; Generated 25/01/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F46K22 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataCOMRAM
    82  000508                     __pidataCOMRAM:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _LookUP_TABLE_COS
    86  000508  FA                 	db	250
    87  000509  ED                 	db	237
    88  00050A  D8                 	db	216
    89  00050B  BC                 	db	188
    90  00050C  99                 	db	153
    91  00050D  71                 	db	113
    92  00050E  45                 	db	69
    93  00050F  18                 	db	24
    94  000510  18                 	db	24
    95  000511  45                 	db	69
    96  000512  71                 	db	113
    97  000513  99                 	db	153
    98  000514  BC                 	db	188
    99  000515  D8                 	db	216
   100  000516  ED                 	db	237
   101  000517  FA                 	db	250
   102  000518  FA                 	db	250
   103  000519  ED                 	db	237
   104  00051A  D8                 	db	216
   105  00051B  BC                 	db	188
   106  00051C  99                 	db	153
   107  00051D  71                 	db	113
   108  00051E  45                 	db	69
   109  00051F  18                 	db	24
   110  000520  18                 	db	24
   111  000521  45                 	db	69
   112  000522  71                 	db	113
   113  000523  99                 	db	153
   114  000524  BC                 	db	188
   115  000525  D8                 	db	216
   116  000526  ED                 	db	237
   117  000527  FA                 	db	250
   118                           
   119                           	psect	idataBANK0
   120  000528                     __pidataBANK0:
   121                           	opt stack 0
   122                           
   123                           ;initializer for _LookUP_TABLE_SEN
   124  000528  18                 	db	24
   125  000529  45                 	db	69
   126  00052A  71                 	db	113
   127  00052B  99                 	db	153
   128  00052C  BC                 	db	188
   129  00052D  D8                 	db	216
   130  00052E  ED                 	db	237
   131  00052F  FA                 	db	250
   132  000530  FA                 	db	250
   133  000531  ED                 	db	237
   134  000532  D8                 	db	216
   135  000533  BC                 	db	188
   136  000534  99                 	db	153
   137  000535  71                 	db	113
   138  000536  45                 	db	69
   139  000537  18                 	db	24
   140  000538  18                 	db	24
   141  000539  45                 	db	69
   142  00053A  71                 	db	113
   143  00053B  99                 	db	153
   144  00053C  BC                 	db	188
   145  00053D  D8                 	db	216
   146  00053E  ED                 	db	237
   147  00053F  FA                 	db	250
   148  000540  FA                 	db	250
   149  000541  ED                 	db	237
   150  000542  D8                 	db	216
   151  000543  BC                 	db	188
   152  000544  99                 	db	153
   153  000545  71                 	db	113
   154  000546  45                 	db	69
   155  000547  18                 	db	24
   156                           
   157                           	psect	nvCOMRAM
   158  00003E                     __pnvCOMRAM:
   159                           	opt stack 0
   160  00003E                     _TMR2_InterruptHandler:
   161                           	opt stack 0
   162  00003E                     	ds	2
   163  000040                     _TMR6_InterruptHandler:
   164                           	opt stack 0
   165  000040                     	ds	2
   166  0000                     _CCPTMRS0bits	set	3913
   167  0000                     _ANSELA	set	3896
   168  0000                     _ANSELE	set	3900
   169  0000                     _ANSELD	set	3899
   170  0000                     _ANSELB	set	3897
   171  0000                     _ANSELC	set	3898
   172  0000                     _CCPR5H	set	3926
   173  0000                     _CCPR5L	set	3925
   174  0000                     _CCP5CON	set	3924
   175  0000                     _T6CONbits	set	3914
   176  0000                     _TMR6	set	3916
   177  0000                     _PR6	set	3915
   178  0000                     _T6CON	set	3914
   179  0000                     _LATDbits	set	3980
   180  0000                     _LATCbits	set	3979
   181  0000                     _LATBbits	set	3978
   182  0000                     _TXREG1	set	4013
   183  0000                     _RCREG1	set	4014
   184  0000                     _RCSTA1bits	set	4011
   185  0000                     _SPBRGH1	set	4016
   186  0000                     _SPBRG1	set	4015
   187  0000                     _TXSTA1	set	4012
   188  0000                     _RCSTA1	set	4011
   189  0000                     _BAUDCON1	set	4024
   190  0000                     _OSCTUNE	set	3995
   191  0000                     _OSCCON2	set	4050
   192  0000                     _OSCCON	set	4051
   193  0000                     _INTCONbits	set	4082
   194  0000                     _RCONbits	set	4048
   195  0000                     _ADCON0bits	set	4034
   196  0000                     _ADRESH	set	4036
   197  0000                     _ADRESL	set	4035
   198  0000                     _ADCON2	set	4032
   199  0000                     _ADCON1	set	4033
   200  0000                     _ADCON0	set	4034
   201  0000                     _CCPR1H	set	4031
   202  0000                     _CCPR1L	set	4030
   203  0000                     _PSTR1CON	set	4025
   204  0000                     _PWM1CON	set	4023
   205  0000                     _ECCP1AS	set	4022
   206  0000                     _CCP1CON	set	4029
   207  0000                     _CCPR2H	set	3944
   208  0000                     _CCPR2L	set	3943
   209  0000                     _PSTR2CON	set	3939
   210  0000                     _PWM2CON	set	3941
   211  0000                     _ECCP2AS	set	3940
   212  0000                     _CCP2CON	set	3942
   213  0000                     _INTCON2bits	set	4081
   214  0000                     _WPUB	set	3937
   215  0000                     _TRISD	set	3989
   216  0000                     _TRISC	set	3988
   217  0000                     _TRISB	set	3987
   218  0000                     _TRISA	set	3986
   219  0000                     _TRISE	set	3990
   220  0000                     _LATC	set	3979
   221  0000                     _LATB	set	3978
   222  0000                     _LATA	set	3977
   223  0000                     _LATD	set	3980
   224  0000                     _LATE	set	3981
   225  0000                     _T2CONbits	set	4026
   226  0000                     _PIE1bits	set	3997
   227  0000                     _PIR1bits	set	3998
   228  0000                     _TMR2	set	4028
   229  0000                     _PR2	set	4027
   230  0000                     _T2CON	set	4026
   231  0000                     _PIE5bits	set	3965
   232  0000                     _PIR5bits	set	3966
   233                           
   234                           ; #config settings
   235  0000                     
   236                           	psect	cinit
   237  0002A8                     __pcinit:
   238                           	opt stack 0
   239  0002A8                     start_initialization:
   240                           	opt stack 0
   241  0002A8                     __initialization:
   242                           	opt stack 0
   243                           
   244                           ; Initialize objects allocated to BANK0 (32 bytes)
   245                           ; load TBLPTR registers with __pidataBANK0
   246  0002A8  0E28               	movlw	low __pidataBANK0
   247  0002AA  6EF6               	movwf	tblptrl,c
   248  0002AC  0E05               	movlw	high __pidataBANK0
   249  0002AE  6EF7               	movwf	tblptrh,c
   250  0002B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   251  0002B2  6EF8               	movwf	tblptru,c
   252  0002B4  EE00  F060         	lfsr	0,__pdataBANK0
   253  0002B8  EE10 F020          	lfsr	1,32
   254  0002BC                     copy_data0:
   255  0002BC  0009               	tblrd		*+
   256  0002BE  CFF5 FFEE          	movff	tablat,postinc0
   257  0002C2  50E5               	movf	postdec1,w,c
   258  0002C4  50E1               	movf	fsr1l,w,c
   259  0002C6  E1FA               	bnz	copy_data0
   260                           
   261                           ; Initialize objects allocated to COMRAM (32 bytes)
   262                           ; load TBLPTR registers with __pidataCOMRAM
   263  0002C8  0E08               	movlw	low __pidataCOMRAM
   264  0002CA  6EF6               	movwf	tblptrl,c
   265  0002CC  0E05               	movlw	high __pidataCOMRAM
   266  0002CE  6EF7               	movwf	tblptrh,c
   267  0002D0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   268  0002D2  6EF8               	movwf	tblptru,c
   269  0002D4  EE00  F001         	lfsr	0,__pdataCOMRAM
   270  0002D8  EE10 F020          	lfsr	1,32
   271  0002DC                     copy_data1:
   272  0002DC  0009               	tblrd		*+
   273  0002DE  CFF5 FFEE          	movff	tablat,postinc0
   274  0002E2  50E5               	movf	postdec1,w,c
   275  0002E4  50E1               	movf	fsr1l,w,c
   276  0002E6  E1FA               	bnz	copy_data1
   277                           
   278                           ; Clear objects allocated to COMRAM (10 bytes)
   279  0002E8  EE00  F034         	lfsr	0,__pbssCOMRAM
   280  0002EC  0E0A               	movlw	10
   281  0002EE                     clear_0:
   282  0002EE  6AEE               	clrf	postinc0,c
   283  0002F0  06E8               	decf	wreg,f,c
   284  0002F2  E1FD               	bnz	clear_0
   285  0002F4                     end_of_initialization:
   286                           	opt stack 0
   287  0002F4                     __end_of__initialization:
   288                           	opt stack 0
   289  0002F4  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   290  0002F6  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   291  0002F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   292  0002FA  6EF8               	movwf	tblptru,c
   293  0002FC  0100               	movlb	0
   294  0002FE  EF81  F001         	goto	_main	;jump to C main() function
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           postdec1	equ	0xFE5
   302                           fsr1l	equ	0xFE1
   303                           
   304                           	psect	bssCOMRAM
   305  000034                     __pbssCOMRAM:
   306                           	opt stack 0
   307  000034                     _StepCount:
   308                           	opt stack 0
   309  000034                     	ds	2
   310  000036                     _Timer2Tick_count:
   311                           	opt stack 0
   312  000036                     	ds	2
   313  000038                     TMR2_ISR@CountCallBack:
   314                           	opt stack 0
   315  000038                     	ds	2
   316  00003A                     _EstadoActual:
   317                           	opt stack 0
   318  00003A                     	ds	1
   319  00003B                     _Direccion:
   320                           	opt stack 0
   321  00003B                     	ds	1
   322  00003C                     _Microstep:
   323                           	opt stack 0
   324  00003C                     	ds	1
   325  00003D                     _Timer2Ticked:
   326                           	opt stack 0
   327  00003D                     	ds	1
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           postdec1	equ	0xFE5
   335                           fsr1l	equ	0xFE1
   336                           
   337                           	psect	dataCOMRAM
   338  000001                     __pdataCOMRAM:
   339                           	opt stack 0
   340  000001                     _LookUP_TABLE_COS:
   341                           	opt stack 0
   342  000001                     	ds	32
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           postinc0	equ	0xFEE
   348                           wreg	equ	0xFE8
   349                           postdec1	equ	0xFE5
   350                           fsr1l	equ	0xFE1
   351                           
   352                           	psect	dataBANK0
   353  000060                     __pdataBANK0:
   354                           	opt stack 0
   355  000060                     _LookUP_TABLE_SEN:
   356                           	opt stack 0
   357  000060                     	ds	32
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367                           	psect	cstackCOMRAM
   368  000021                     __pcstackCOMRAM:
   369                           	opt stack 0
   370  000021                     ??_INTERRUPT_InterruptManager:
   371  000021                     
   372                           ; 1 bytes @ 0x0
   373  000021                     	ds	14
   374  00002F                     EUSART1_Write@txData:
   375                           	opt stack 0
   376  00002F                     TMR6_SetInterruptHandler@InterruptHandler:
   377                           	opt stack 0
   378  00002F                     TMR2_SetInterruptHandler@InterruptHandler:
   379                           	opt stack 0
   380  00002F                     EPWM2_LoadDutyValue@dutyValue:
   381                           	opt stack 0
   382  00002F                     EPWM1_LoadDutyValue@dutyValue:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0xE
   386  00002F                     	ds	2
   387  000031                     ??_EPWM2_LoadDutyValue:
   388  000031                     ??_EPWM1_LoadDutyValue:
   389  000031                     
   390                           ; 1 bytes @ 0x10
   391  000031                     	ds	2
   392  000033                     ??_StateMEF_act:
   393                           
   394                           ; 1 bytes @ 0x12
   395  000033                     	ds	1
   396  000034                     tblptru	equ	0xFF8
   397                           tblptrh	equ	0xFF7
   398                           tblptrl	equ	0xFF6
   399                           tablat	equ	0xFF5
   400                           postinc0	equ	0xFEE
   401                           wreg	equ	0xFE8
   402                           postdec1	equ	0xFE5
   403                           fsr1l	equ	0xFE1
   404                           
   405                           ; 1 bytes @ 0x13
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 24 in file "main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels required when called:    7
   431 ;; This function calls:
   432 ;;		_SYSTEM_Initialize
   433 ;;		_StateMEF_act
   434 ;;		_StateMEF_ini
   435 ;; This function is called by:
   436 ;;		Startup code after reset
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text0
   441  000302                     __ptext0:
   442                           	opt stack 0
   443  000302                     _main:
   444                           	opt stack 24
   445                           
   446                           ;main.c: 27: SYSTEM_Initialize();
   447                           
   448                           ;incstack = 0
   449  000302  EC03  F002         	call	_SYSTEM_Initialize	;wreg free
   450                           
   451                           ;main.c: 28: StateMEF_ini();
   452  000306  ECB4  F002         	call	_StateMEF_ini	;wreg free
   453                           
   454                           ;main.c: 29: do { LATBbits.LATB6 = 1; } while(0);
   455  00030A  8C8A               	bsf	3978,6,c	;volatile
   456                           
   457                           ;main.c: 30: Timer2Tick_count=0;
   458  00030C  0E00               	movlw	0
   459  00030E  6E37               	movwf	_Timer2Tick_count+1,c
   460  000310  0E00               	movlw	0
   461  000312  6E36               	movwf	_Timer2Tick_count,c
   462                           
   463                           ;main.c: 31: StepCount=0;
   464  000314  0E00               	movlw	0
   465  000316  6E35               	movwf	_StepCount+1,c
   466  000318  0E00               	movlw	0
   467  00031A  6E34               	movwf	_StepCount,c
   468                           
   469                           ;main.c: 33: (INTCONbits.GIE = 1);
   470  00031C  8EF2               	bsf	intcon,7,c	;volatile
   471                           
   472                           ;main.c: 36: (INTCONbits.PEIE = 1);
   473  00031E  8CF2               	bsf	intcon,6,c	;volatile
   474  000320                     l1502:
   475                           
   476                           ;main.c: 38: {
   477                           ;main.c: 39: if (StepCount<500)
   478  000320  BE35               	btfsc	_StepCount+1,7,c
   479  000322  D006               	goto	l1504
   480  000324  0EF4               	movlw	244
   481  000326  5C34               	subwf	_StepCount,w,c
   482  000328  0E01               	movlw	1
   483  00032A  5835               	subwfb	_StepCount+1,w,c
   484  00032C  B0D8               	btfsc	status,0,c
   485  00032E  D7F8               	goto	l1502
   486  000330                     l1504:
   487                           
   488                           ;main.c: 40: {
   489                           ;main.c: 41: if (Timer2Ticked){
   490  000330  503D               	movf	_Timer2Ticked,w,c	;volatile
   491  000332  B4D8               	btfsc	status,2,c
   492  000334  D7F5               	goto	l1502
   493                           
   494                           ;main.c: 42: Timer2Tick_count++;
   495  000336  4A36               	infsnz	_Timer2Tick_count,f,c
   496  000338  2A37               	incf	_Timer2Tick_count+1,f,c
   497                           
   498                           ;main.c: 43: if (Timer2Tick_count==5){
   499  00033A  0E05               	movlw	5
   500  00033C  1836               	xorwf	_Timer2Tick_count,w,c
   501  00033E  1037               	iorwf	_Timer2Tick_count+1,w,c
   502  000340  A4D8               	btfss	status,2,c
   503  000342  D008               	goto	l1516
   504                           
   505                           ;main.c: 44: StateMEF_act();
   506  000344  EC57  F000         	call	_StateMEF_act	;wreg free
   507                           
   508                           ;main.c: 45: StepCount++;
   509  000348  4A34               	infsnz	_StepCount,f,c
   510  00034A  2A35               	incf	_StepCount+1,f,c
   511                           
   512                           ;main.c: 46: Timer2Tick_count=0;
   513  00034C  0E00               	movlw	0
   514  00034E  6E37               	movwf	_Timer2Tick_count+1,c
   515  000350  0E00               	movlw	0
   516  000352  6E36               	movwf	_Timer2Tick_count,c
   517  000354                     l1516:
   518                           
   519                           ;main.c: 47: }
   520                           ;main.c: 48: Timer2Ticked = 0;
   521  000354  0E00               	movlw	0
   522  000356  6E3D               	movwf	_Timer2Ticked,c	;volatile
   523  000358  D7E3               	goto	l1502
   524  00035A                     __end_of_main:
   525                           	opt stack 0
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           intcon	equ	0xFF2
   531                           postinc0	equ	0xFEE
   532                           wreg	equ	0xFE8
   533                           postdec1	equ	0xFE5
   534                           fsr1l	equ	0xFE1
   535                           status	equ	0xFD8
   536                           
   537 ;; *************** function _StateMEF_ini *****************
   538 ;; Defined at:
   539 ;;		line 22 in file "MotorDriver.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2, status,0
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; Hardware stack levels required when called:    4
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text1
   568  000568                     __ptext1:
   569                           	opt stack 0
   570  000568                     _StateMEF_ini:
   571                           	opt stack 26
   572                           
   573                           ;MotorDriver.c: 23: if (Direccion == 1)
   574                           
   575                           ;incstack = 0
   576  000568  043B               	decf	_Direccion,w,c
   577  00056A  A4D8               	btfss	status,2,c
   578  00056C  D005               	goto	l1148
   579                           
   580                           ;MotorDriver.c: 24: {
   581                           ;MotorDriver.c: 25: EstadoActual = STATE1;
   582  00056E  0E01               	movlw	1
   583  000570  6E3A               	movwf	_EstadoActual,c
   584                           
   585                           ;MotorDriver.c: 26: Microstep=0;
   586  000572  0E00               	movlw	0
   587  000574  6E3C               	movwf	_Microstep,c
   588                           
   589                           ;MotorDriver.c: 27: }
   590  000576  0012               	return	
   591  000578                     l1148:
   592                           
   593                           ;MotorDriver.c: 28: else{
   594                           ;MotorDriver.c: 29: EstadoActual = STATE4;
   595  000578  0E04               	movlw	4
   596  00057A  6E3A               	movwf	_EstadoActual,c
   597                           
   598                           ;MotorDriver.c: 30: Microstep = 31;
   599  00057C  0E1F               	movlw	31
   600  00057E  6E3C               	movwf	_Microstep,c
   601  000580  0012               	return	
   602  000582                     __end_of_StateMEF_ini:
   603                           	opt stack 0
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           intcon	equ	0xFF2
   609                           postinc0	equ	0xFEE
   610                           wreg	equ	0xFE8
   611                           postdec1	equ	0xFE5
   612                           fsr1l	equ	0xFE1
   613                           status	equ	0xFD8
   614                           
   615 ;; *************** function _StateMEF_act *****************
   616 ;; Defined at:
   617 ;;		line 34 in file "MotorDriver.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;Total ram usage:        1 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; Hardware stack levels required when called:    5
   638 ;; This function calls:
   639 ;;		_EPWM1_LoadDutyValue
   640 ;;		_EPWM2_LoadDutyValue
   641 ;;		_EUSART1_Write
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text2
   648  0000AE                     __ptext2:
   649                           	opt stack 0
   650  0000AE                     _StateMEF_act:
   651                           	opt stack 25
   652                           
   653                           ;MotorDriver.c: 35: switch(EstadoActual) {
   654                           
   655                           ;incstack = 0
   656  0000AE  D0EB               	goto	l1488
   657  0000B0                     l1396:
   658                           
   659                           ;MotorDriver.c: 37: PSTR1CON = 0x00; PSTR2CON = 0x00;
   660  0000B0  0E00               	movlw	0
   661  0000B2  6EB9               	movwf	4025,c	;volatile
   662  0000B4  0E00               	movlw	0
   663  0000B6  6E63               	movwf	3939,c	;volatile
   664                           
   665                           ;MotorDriver.c: 38: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whil
      +                          e(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
   666  0000B8  948B               	bcf	3979,2,c	;volatile
   667  0000BA  9A8C               	bcf	3980,5,c	;volatile
   668  0000BC  928B               	bcf	3979,1,c	;volatile
   669  0000BE  908B               	bcf	3979,0,c	;volatile
   670                           
   671                           ;MotorDriver.c: 39: EstadoActual = STATE1;
   672  0000C0  0E01               	movlw	1
   673  0000C2  6E3A               	movwf	_EstadoActual,c
   674                           
   675                           ;MotorDriver.c: 40: break;
   676  0000C4  0012               	return	
   677  0000C6                     l1406:
   678                           
   679                           ;MotorDriver.c: 42: PSTR1CON = 0x01; PSTR2CON = 0x01;
   680  0000C6  0E01               	movlw	1
   681  0000C8  6EB9               	movwf	4025,c	;volatile
   682  0000CA  0E01               	movlw	1
   683  0000CC  6E63               	movwf	3939,c	;volatile
   684                           
   685                           ;MotorDriver.c: 43: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
   686  0000CE  9A8C               	bcf	3980,5,c	;volatile
   687  0000D0  908B               	bcf	3979,0,c	;volatile
   688                           
   689                           ;MotorDriver.c: 44: EUSART1_Write(Microstep);
   690  0000D2  503C               	movf	_Microstep,w,c
   691  0000D4  ECE9  F002         	call	_EUSART1_Write
   692                           
   693                           ;MotorDriver.c: 45: if (Microstep<8){
   694  0000D8  503C               	movf	_Microstep,w,c
   695  0000DA  0A80               	xorlw	128
   696  0000DC  0F78               	addlw	-136
   697  0000DE  B0D8               	btfsc	status,0,c
   698  0000E0  0012               	return	
   699                           
   700                           ;MotorDriver.c: 46: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   701  0000E2  503C               	movf	_Microstep,w,c
   702  0000E4  0D01               	mullw	1
   703  0000E6  0E01               	movlw	low _LookUP_TABLE_COS
   704  0000E8  24F3               	addwf	prodl,w,c
   705  0000EA  6ED9               	movwf	fsr2l,c
   706  0000EC  0E00               	movlw	high _LookUP_TABLE_COS
   707  0000EE  20F4               	addwfc	prodh,w,c
   708  0000F0  6EDA               	movwf	fsr2h,c
   709  0000F2  50DF               	movf	indf2,w,c
   710  0000F4  6E33               	movwf	??_StateMEF_act& (0+255),c
   711  0000F6  5033               	movf	??_StateMEF_act,w,c
   712  0000F8  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   713  0000FA  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   714  0000FC  ECEB  F001         	call	_EPWM1_LoadDutyValue	;wreg free
   715                           
   716                           ;MotorDriver.c: 47: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   717  000100  503C               	movf	_Microstep,w,c
   718  000102  0D01               	mullw	1
   719  000104  0E60               	movlw	low _LookUP_TABLE_SEN
   720  000106  24F3               	addwf	prodl,w,c
   721  000108  6ED9               	movwf	fsr2l,c
   722  00010A  0E00               	movlw	high _LookUP_TABLE_SEN
   723  00010C  20F4               	addwfc	prodh,w,c
   724  00010E  6EDA               	movwf	fsr2h,c
   725  000110  50DF               	movf	indf2,w,c
   726  000112  6E33               	movwf	??_StateMEF_act& (0+255),c
   727  000114  5033               	movf	??_StateMEF_act,w,c
   728  000116  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   729  000118  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   730  00011A  ECD3  F001         	call	_EPWM2_LoadDutyValue	;wreg free
   731                           
   732                           ;MotorDriver.c: 48: if (Microstep==7){
   733  00011E  0E07               	movlw	7
   734  000120  183C               	xorwf	_Microstep,w,c
   735  000122  A4D8               	btfss	status,2,c
   736  000124  D002               	goto	l1422
   737                           
   738                           ;MotorDriver.c: 49: EstadoActual = STATE2;
   739  000126  0E02               	movlw	2
   740  000128  6E3A               	movwf	_EstadoActual,c
   741  00012A                     l1422:
   742                           
   743                           ;MotorDriver.c: 50: }
   744                           ;MotorDriver.c: 51: Microstep++;
   745  00012A  2A3C               	incf	_Microstep,f,c
   746                           
   747                           ;MotorDriver.c: 52: }
   748                           ;MotorDriver.c: 53: break;
   749  00012C  0012               	return	
   750  00012E                     l1424:
   751                           
   752                           ;MotorDriver.c: 55: PSTR1CON = 0x02; PSTR2CON = 0x01;
   753  00012E  0E02               	movlw	2
   754  000130  6EB9               	movwf	4025,c	;volatile
   755  000132  0E01               	movlw	1
   756  000134  6E63               	movwf	3939,c	;volatile
   757                           
   758                           ;MotorDriver.c: 56: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
   759  000136  948B               	bcf	3979,2,c	;volatile
   760  000138  908B               	bcf	3979,0,c	;volatile
   761                           
   762                           ;MotorDriver.c: 57: EUSART1_Write(Microstep);
   763  00013A  503C               	movf	_Microstep,w,c
   764  00013C  ECE9  F002         	call	_EUSART1_Write
   765                           
   766                           ;MotorDriver.c: 58: if ((Microstep<16)&&(Microstep>7)){
   767  000140  503C               	movf	_Microstep,w,c
   768  000142  0A80               	xorlw	128
   769  000144  0F70               	addlw	-144
   770  000146  B0D8               	btfsc	status,0,c
   771  000148  0012               	return	
   772  00014A  503C               	movf	_Microstep,w,c
   773  00014C  0A80               	xorlw	128
   774  00014E  0F78               	addlw	-136
   775  000150  A0D8               	btfss	status,0,c
   776  000152  0012               	return	
   777                           
   778                           ;MotorDriver.c: 59: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   779  000154  503C               	movf	_Microstep,w,c
   780  000156  0D01               	mullw	1
   781  000158  0E01               	movlw	low _LookUP_TABLE_COS
   782  00015A  24F3               	addwf	prodl,w,c
   783  00015C  6ED9               	movwf	fsr2l,c
   784  00015E  0E00               	movlw	high _LookUP_TABLE_COS
   785  000160  20F4               	addwfc	prodh,w,c
   786  000162  6EDA               	movwf	fsr2h,c
   787  000164  50DF               	movf	indf2,w,c
   788  000166  6E33               	movwf	??_StateMEF_act& (0+255),c
   789  000168  5033               	movf	??_StateMEF_act,w,c
   790  00016A  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   791  00016C  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   792  00016E  ECEB  F001         	call	_EPWM1_LoadDutyValue	;wreg free
   793                           
   794                           ;MotorDriver.c: 60: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   795  000172  503C               	movf	_Microstep,w,c
   796  000174  0D01               	mullw	1
   797  000176  0E60               	movlw	low _LookUP_TABLE_SEN
   798  000178  24F3               	addwf	prodl,w,c
   799  00017A  6ED9               	movwf	fsr2l,c
   800  00017C  0E00               	movlw	high _LookUP_TABLE_SEN
   801  00017E  20F4               	addwfc	prodh,w,c
   802  000180  6EDA               	movwf	fsr2h,c
   803  000182  50DF               	movf	indf2,w,c
   804  000184  6E33               	movwf	??_StateMEF_act& (0+255),c
   805  000186  5033               	movf	??_StateMEF_act,w,c
   806  000188  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   807  00018A  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   808  00018C  ECD3  F001         	call	_EPWM2_LoadDutyValue	;wreg free
   809                           
   810                           ;MotorDriver.c: 61: if (Microstep==15){
   811  000190  0E0F               	movlw	15
   812  000192  183C               	xorwf	_Microstep,w,c
   813  000194  A4D8               	btfss	status,2,c
   814  000196  D002               	goto	l1442
   815                           
   816                           ;MotorDriver.c: 62: EstadoActual = STATE3;
   817  000198  0E03               	movlw	3
   818  00019A  6E3A               	movwf	_EstadoActual,c
   819  00019C                     l1442:
   820                           
   821                           ;MotorDriver.c: 63: }
   822                           ;MotorDriver.c: 64: Microstep++;
   823  00019C  2A3C               	incf	_Microstep,f,c
   824                           
   825                           ;MotorDriver.c: 65: }
   826                           ;MotorDriver.c: 66: break;
   827  00019E  0012               	return	
   828  0001A0                     l1444:
   829                           
   830                           ;MotorDriver.c: 68: PSTR1CON = 0x02; PSTR2CON = 0x02;
   831  0001A0  0E02               	movlw	2
   832  0001A2  6EB9               	movwf	4025,c	;volatile
   833  0001A4  0E02               	movlw	2
   834  0001A6  6E63               	movwf	3939,c	;volatile
   835                           
   836                           ;MotorDriver.c: 69: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
   837  0001A8  948B               	bcf	3979,2,c	;volatile
   838  0001AA  928B               	bcf	3979,1,c	;volatile
   839                           
   840                           ;MotorDriver.c: 70: EUSART1_Write(Microstep);
   841  0001AC  503C               	movf	_Microstep,w,c
   842  0001AE  ECE9  F002         	call	_EUSART1_Write
   843                           
   844                           ;MotorDriver.c: 71: if ((Microstep<24)&&(Microstep>15)){
   845  0001B2  503C               	movf	_Microstep,w,c
   846  0001B4  0A80               	xorlw	128
   847  0001B6  0F68               	addlw	-152
   848  0001B8  B0D8               	btfsc	status,0,c
   849  0001BA  0012               	return	
   850  0001BC  503C               	movf	_Microstep,w,c
   851  0001BE  0A80               	xorlw	128
   852  0001C0  0F70               	addlw	-144
   853  0001C2  A0D8               	btfss	status,0,c
   854  0001C4  0012               	return	
   855                           
   856                           ;MotorDriver.c: 72: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   857  0001C6  503C               	movf	_Microstep,w,c
   858  0001C8  0D01               	mullw	1
   859  0001CA  0E01               	movlw	low _LookUP_TABLE_COS
   860  0001CC  24F3               	addwf	prodl,w,c
   861  0001CE  6ED9               	movwf	fsr2l,c
   862  0001D0  0E00               	movlw	high _LookUP_TABLE_COS
   863  0001D2  20F4               	addwfc	prodh,w,c
   864  0001D4  6EDA               	movwf	fsr2h,c
   865  0001D6  50DF               	movf	indf2,w,c
   866  0001D8  6E33               	movwf	??_StateMEF_act& (0+255),c
   867  0001DA  5033               	movf	??_StateMEF_act,w,c
   868  0001DC  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   869  0001DE  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   870  0001E0  ECEB  F001         	call	_EPWM1_LoadDutyValue	;wreg free
   871                           
   872                           ;MotorDriver.c: 73: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   873  0001E4  503C               	movf	_Microstep,w,c
   874  0001E6  0D01               	mullw	1
   875  0001E8  0E60               	movlw	low _LookUP_TABLE_SEN
   876  0001EA  24F3               	addwf	prodl,w,c
   877  0001EC  6ED9               	movwf	fsr2l,c
   878  0001EE  0E00               	movlw	high _LookUP_TABLE_SEN
   879  0001F0  20F4               	addwfc	prodh,w,c
   880  0001F2  6EDA               	movwf	fsr2h,c
   881  0001F4  50DF               	movf	indf2,w,c
   882  0001F6  6E33               	movwf	??_StateMEF_act& (0+255),c
   883  0001F8  5033               	movf	??_StateMEF_act,w,c
   884  0001FA  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   885  0001FC  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   886  0001FE  ECD3  F001         	call	_EPWM2_LoadDutyValue	;wreg free
   887                           
   888                           ;MotorDriver.c: 74: if (Microstep==23){
   889  000202  0E17               	movlw	23
   890  000204  183C               	xorwf	_Microstep,w,c
   891  000206  A4D8               	btfss	status,2,c
   892  000208  D002               	goto	l1462
   893                           
   894                           ;MotorDriver.c: 75: EstadoActual = STATE4;
   895  00020A  0E04               	movlw	4
   896  00020C  6E3A               	movwf	_EstadoActual,c
   897  00020E                     l1462:
   898                           
   899                           ;MotorDriver.c: 76: }
   900                           ;MotorDriver.c: 77: Microstep++;
   901  00020E  2A3C               	incf	_Microstep,f,c
   902                           
   903                           ;MotorDriver.c: 78: }
   904                           ;MotorDriver.c: 79: break;
   905  000210  0012               	return	
   906  000212                     l1464:
   907                           
   908                           ;MotorDriver.c: 81: PSTR1CON = 0x01; PSTR2CON = 0x02;
   909  000212  0E01               	movlw	1
   910  000214  6EB9               	movwf	4025,c	;volatile
   911  000216  0E02               	movlw	2
   912  000218  6E63               	movwf	3939,c	;volatile
   913                           
   914                           ;MotorDriver.c: 82: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
   915  00021A  9A8C               	bcf	3980,5,c	;volatile
   916  00021C  928B               	bcf	3979,1,c	;volatile
   917                           
   918                           ;MotorDriver.c: 83: EUSART1_Write(Microstep);
   919  00021E  503C               	movf	_Microstep,w,c
   920  000220  ECE9  F002         	call	_EUSART1_Write
   921                           
   922                           ;MotorDriver.c: 84: if ((Microstep<32)&&(Microstep>23)){
   923  000224  503C               	movf	_Microstep,w,c
   924  000226  0A80               	xorlw	128
   925  000228  0F60               	addlw	-160
   926  00022A  B0D8               	btfsc	status,0,c
   927  00022C  0012               	return	
   928  00022E  503C               	movf	_Microstep,w,c
   929  000230  0A80               	xorlw	128
   930  000232  0F68               	addlw	-152
   931  000234  A0D8               	btfss	status,0,c
   932  000236  0012               	return	
   933                           
   934                           ;MotorDriver.c: 85: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   935  000238  503C               	movf	_Microstep,w,c
   936  00023A  0D01               	mullw	1
   937  00023C  0E01               	movlw	low _LookUP_TABLE_COS
   938  00023E  24F3               	addwf	prodl,w,c
   939  000240  6ED9               	movwf	fsr2l,c
   940  000242  0E00               	movlw	high _LookUP_TABLE_COS
   941  000244  20F4               	addwfc	prodh,w,c
   942  000246  6EDA               	movwf	fsr2h,c
   943  000248  50DF               	movf	indf2,w,c
   944  00024A  6E33               	movwf	??_StateMEF_act& (0+255),c
   945  00024C  5033               	movf	??_StateMEF_act,w,c
   946  00024E  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   947  000250  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   948  000252  ECEB  F001         	call	_EPWM1_LoadDutyValue	;wreg free
   949                           
   950                           ;MotorDriver.c: 86: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   951  000256  503C               	movf	_Microstep,w,c
   952  000258  0D01               	mullw	1
   953  00025A  0E60               	movlw	low _LookUP_TABLE_SEN
   954  00025C  24F3               	addwf	prodl,w,c
   955  00025E  6ED9               	movwf	fsr2l,c
   956  000260  0E00               	movlw	high _LookUP_TABLE_SEN
   957  000262  20F4               	addwfc	prodh,w,c
   958  000264  6EDA               	movwf	fsr2h,c
   959  000266  50DF               	movf	indf2,w,c
   960  000268  6E33               	movwf	??_StateMEF_act& (0+255),c
   961  00026A  5033               	movf	??_StateMEF_act,w,c
   962  00026C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   963  00026E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   964  000270  ECD3  F001         	call	_EPWM2_LoadDutyValue	;wreg free
   965                           
   966                           ;MotorDriver.c: 87: if (Microstep==31){
   967  000274  0E1F               	movlw	31
   968  000276  183C               	xorwf	_Microstep,w,c
   969  000278  A4D8               	btfss	status,2,c
   970  00027A  D003               	goto	l1484
   971                           
   972                           ;MotorDriver.c: 88: EstadoActual = STATE0;
   973  00027C  0E00               	movlw	0
   974  00027E  6E3A               	movwf	_EstadoActual,c
   975                           
   976                           ;MotorDriver.c: 89: Microstep=-1;
   977  000280  683C               	setf	_Microstep,c
   978  000282                     l1484:
   979                           
   980                           ;MotorDriver.c: 90: }
   981                           ;MotorDriver.c: 91: Microstep++;
   982  000282  2A3C               	incf	_Microstep,f,c
   983                           
   984                           ;MotorDriver.c: 97: }
   985                           
   986                           ;MotorDriver.c: 96: break;
   987                           
   988                           ;MotorDriver.c: 94: default:
   989                           
   990                           ;MotorDriver.c: 92: }
   991                           ;MotorDriver.c: 93: break;
   992  000284  0012               	return	
   993  000286                     l1488:
   994  000286  503A               	movf	_EstadoActual,w,c
   995                           
   996                           ; Switch size 1, requested type "space"
   997                           ; Number of cases is 5, Range of values is 0 to 4
   998                           ; switch strategies available:
   999                           ; Name         Instructions Cycles
  1000                           ; simple_byte           16     9 (average)
  1001                           ;	Chosen strategy is simple_byte
  1002  000288  0A00               	xorlw	0	; case 0
  1003  00028A  B4D8               	btfsc	status,2,c
  1004  00028C  D711               	goto	l1396
  1005  00028E  0A01               	xorlw	1	; case 1
  1006  000290  B4D8               	btfsc	status,2,c
  1007  000292  D719               	goto	l1406
  1008  000294  0A03               	xorlw	3	; case 2
  1009  000296  B4D8               	btfsc	status,2,c
  1010  000298  D74A               	goto	l1424
  1011  00029A  0A01               	xorlw	1	; case 3
  1012  00029C  B4D8               	btfsc	status,2,c
  1013  00029E  D780               	goto	l1444
  1014  0002A0  0A07               	xorlw	7	; case 4
  1015  0002A2  A4D8               	btfss	status,2,c
  1016  0002A4  0012               	return	
  1017  0002A6  D7B5               	goto	l1464
  1018  0002A8                     __end_of_StateMEF_act:
  1019                           	opt stack 0
  1020                           tblptru	equ	0xFF8
  1021                           tblptrh	equ	0xFF7
  1022                           tblptrl	equ	0xFF6
  1023                           tablat	equ	0xFF5
  1024                           prodh	equ	0xFF4
  1025                           prodl	equ	0xFF3
  1026                           intcon	equ	0xFF2
  1027                           postinc0	equ	0xFEE
  1028                           wreg	equ	0xFE8
  1029                           postdec1	equ	0xFE5
  1030                           fsr1l	equ	0xFE1
  1031                           indf2	equ	0xFDF
  1032                           fsr2h	equ	0xFDA
  1033                           fsr2l	equ	0xFD9
  1034                           status	equ	0xFD8
  1035                           
  1036 ;; *************** function _EUSART1_Write *****************
  1037 ;; Defined at:
  1038 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  txData          1    wreg     unsigned char 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  txData          1   14[COMRAM] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;Total ram usage:        1 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    4
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_StateMEF_act
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text3
  1067  0005D2                     __ptext3:
  1068                           	opt stack 0
  1069  0005D2                     _EUSART1_Write:
  1070                           	opt stack 25
  1071                           
  1072                           ;incstack = 0
  1073                           ;EUSART1_Write@txData stored from wreg
  1074  0005D2  6E2F               	movwf	EUSART1_Write@txData,c
  1075  0005D4                     l328:
  1076  0005D4  A89E               	btfss	3998,4,c	;volatile
  1077  0005D6  D7FE               	goto	l328
  1078                           
  1079                           ;eusart1.c: 100: }
  1080                           ;eusart1.c: 102: TXREG1 = txData;
  1081  0005D8  C02F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1082  0005DC  0012               	return		;funcret
  1083  0005DE                     __end_of_EUSART1_Write:
  1084                           	opt stack 0
  1085                           tblptru	equ	0xFF8
  1086                           tblptrh	equ	0xFF7
  1087                           tblptrl	equ	0xFF6
  1088                           tablat	equ	0xFF5
  1089                           prodh	equ	0xFF4
  1090                           prodl	equ	0xFF3
  1091                           intcon	equ	0xFF2
  1092                           postinc0	equ	0xFEE
  1093                           wreg	equ	0xFE8
  1094                           postdec1	equ	0xFE5
  1095                           fsr1l	equ	0xFE1
  1096                           indf2	equ	0xFDF
  1097                           fsr2h	equ	0xFDA
  1098                           fsr2l	equ	0xFD9
  1099                           status	equ	0xFD8
  1100                           
  1101 ;; *************** function _EPWM2_LoadDutyValue *****************
  1102 ;; Defined at:
  1103 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;Total ram usage:        4 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    4
  1124 ;; This function calls:
  1125 ;;		Nothing
  1126 ;; This function is called by:
  1127 ;;		_StateMEF_act
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text4
  1132  0003A6                     __ptext4:
  1133                           	opt stack 0
  1134  0003A6                     _EPWM2_LoadDutyValue:
  1135                           	opt stack 25
  1136                           
  1137                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  1138                           
  1139                           ;incstack = 0
  1140  0003A6  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1141  0003AA  C030  F032         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  1142  0003AE  90D8               	bcf	status,0,c
  1143  0003B0  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1144  0003B2  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1145  0003B4  90D8               	bcf	status,0,c
  1146  0003B6  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1147  0003B8  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1148  0003BA  5031               	movf	??_EPWM2_LoadDutyValue,w,c
  1149  0003BC  6E67               	movwf	3943,c	;volatile
  1150                           
  1151                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1152  0003BE  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1153  0003C2  0E03               	movlw	3
  1154  0003C4  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  1155  0003C6  3A31               	swapf	??_EPWM2_LoadDutyValue,f,c
  1156  0003C8  0EF0               	movlw	240
  1157  0003CA  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  1158  0003CC  5066               	movf	3942,w,c	;volatile
  1159  0003CE  0BCF               	andlw	207
  1160  0003D0  1031               	iorwf	??_EPWM2_LoadDutyValue,w,c
  1161  0003D2  6E66               	movwf	3942,c	;volatile
  1162  0003D4  0012               	return		;funcret
  1163  0003D6                     __end_of_EPWM2_LoadDutyValue:
  1164                           	opt stack 0
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           tblptrl	equ	0xFF6
  1168                           tablat	equ	0xFF5
  1169                           prodh	equ	0xFF4
  1170                           prodl	equ	0xFF3
  1171                           intcon	equ	0xFF2
  1172                           postinc0	equ	0xFEE
  1173                           wreg	equ	0xFE8
  1174                           postdec1	equ	0xFE5
  1175                           fsr1l	equ	0xFE1
  1176                           indf2	equ	0xFDF
  1177                           fsr2h	equ	0xFDA
  1178                           fsr2l	equ	0xFD9
  1179                           status	equ	0xFD8
  1180                           
  1181 ;; *************** function _EPWM1_LoadDutyValue *****************
  1182 ;; Defined at:
  1183 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;Total ram usage:        4 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:    4
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_StateMEF_act
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text5
  1212  0003D6                     __ptext5:
  1213                           	opt stack 0
  1214  0003D6                     _EPWM1_LoadDutyValue:
  1215                           	opt stack 25
  1216                           
  1217                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  1218                           
  1219                           ;incstack = 0
  1220  0003D6  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1221  0003DA  C030  F032         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  1222  0003DE  90D8               	bcf	status,0,c
  1223  0003E0  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1224  0003E2  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1225  0003E4  90D8               	bcf	status,0,c
  1226  0003E6  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1227  0003E8  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1228  0003EA  5031               	movf	??_EPWM1_LoadDutyValue,w,c
  1229  0003EC  6EBE               	movwf	4030,c	;volatile
  1230                           
  1231                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1232  0003EE  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1233  0003F2  0E03               	movlw	3
  1234  0003F4  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  1235  0003F6  3A31               	swapf	??_EPWM1_LoadDutyValue,f,c
  1236  0003F8  0EF0               	movlw	240
  1237  0003FA  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  1238  0003FC  50BD               	movf	4029,w,c	;volatile
  1239  0003FE  0BCF               	andlw	207
  1240  000400  1031               	iorwf	??_EPWM1_LoadDutyValue,w,c
  1241  000402  6EBD               	movwf	4029,c	;volatile
  1242  000404  0012               	return		;funcret
  1243  000406                     __end_of_EPWM1_LoadDutyValue:
  1244                           	opt stack 0
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           prodh	equ	0xFF4
  1250                           prodl	equ	0xFF3
  1251                           intcon	equ	0xFF2
  1252                           postinc0	equ	0xFEE
  1253                           wreg	equ	0xFE8
  1254                           postdec1	equ	0xFE5
  1255                           fsr1l	equ	0xFE1
  1256                           indf2	equ	0xFDF
  1257                           fsr2h	equ	0xFDA
  1258                           fsr2l	equ	0xFD9
  1259                           status	equ	0xFD8
  1260                           
  1261 ;; *************** function _SYSTEM_Initialize *****************
  1262 ;; Defined at:
  1263 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;		None
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;Total ram usage:        0 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    6
  1284 ;; This function calls:
  1285 ;;		_ADC_Initialize
  1286 ;;		_CCP5_Initialize
  1287 ;;		_EPWM1_Initialize
  1288 ;;		_EPWM2_Initialize
  1289 ;;		_EUSART1_Initialize
  1290 ;;		_INTERRUPT_Initialize
  1291 ;;		_OSCILLATOR_Initialize
  1292 ;;		_PIN_MANAGER_Initialize
  1293 ;;		_TMR2_Initialize
  1294 ;;		_TMR6_Initialize
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text6
  1301  000406                     __ptext6:
  1302                           	opt stack 0
  1303  000406                     _SYSTEM_Initialize:
  1304                           	opt stack 24
  1305                           
  1306                           ;mcc.c: 114: INTERRUPT_Initialize();
  1307                           
  1308                           ;incstack = 0
  1309  000406  ECFE  F002         	call	_INTERRUPT_Initialize	;wreg free
  1310                           
  1311                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1312  00040A  ECAD  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1313                           
  1314                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1315  00040E  ECE2  F002         	call	_OSCILLATOR_Initialize	;wreg free
  1316                           
  1317                           ;mcc.c: 117: TMR6_Initialize();
  1318  000412  EC18  F002         	call	_TMR6_Initialize	;wreg free
  1319                           
  1320                           ;mcc.c: 118: EPWM2_Initialize();
  1321  000416  EC2C  F002         	call	_EPWM2_Initialize	;wreg free
  1322                           
  1323                           ;mcc.c: 119: CCP5_Initialize();
  1324  00041A  ECD8  F002         	call	_CCP5_Initialize	;wreg free
  1325                           
  1326                           ;mcc.c: 120: ADC_Initialize();
  1327  00041E  ECC1  F002         	call	_ADC_Initialize	;wreg free
  1328                           
  1329                           ;mcc.c: 121: EPWM1_Initialize();
  1330  000422  EC3E  F002         	call	_EPWM1_Initialize	;wreg free
  1331                           
  1332                           ;mcc.c: 122: TMR2_Initialize();
  1333  000426  EC62  F002         	call	_TMR2_Initialize	;wreg free
  1334                           
  1335                           ;mcc.c: 123: EUSART1_Initialize();
  1336  00042A  ECCD  F002         	call	_EUSART1_Initialize	;wreg free
  1337  00042E  0012               	return		;funcret
  1338  000430                     __end_of_SYSTEM_Initialize:
  1339                           	opt stack 0
  1340                           tblptru	equ	0xFF8
  1341                           tblptrh	equ	0xFF7
  1342                           tblptrl	equ	0xFF6
  1343                           tablat	equ	0xFF5
  1344                           prodh	equ	0xFF4
  1345                           prodl	equ	0xFF3
  1346                           intcon	equ	0xFF2
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           postdec1	equ	0xFE5
  1350                           fsr1l	equ	0xFE1
  1351                           indf2	equ	0xFDF
  1352                           fsr2h	equ	0xFDA
  1353                           fsr2l	equ	0xFD9
  1354                           status	equ	0xFD8
  1355                           
  1356 ;; *************** function _TMR6_Initialize *****************
  1357 ;; Defined at:
  1358 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    5
  1379 ;; This function calls:
  1380 ;;		_TMR6_SetInterruptHandler
  1381 ;;		_TMR6_StartTimer
  1382 ;; This function is called by:
  1383 ;;		_SYSTEM_Initialize
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text7
  1388  000430                     __ptext7:
  1389                           	opt stack 0
  1390  000430                     _TMR6_Initialize:
  1391                           	opt stack 24
  1392                           
  1393                           ;tmr6.c: 68: T6CON = 0x01;
  1394                           
  1395                           ;incstack = 0
  1396  000430  0E01               	movlw	1
  1397  000432  010F               	movlb	15	; () banked
  1398  000434  6F4A               	movwf	74,b	;volatile
  1399                           
  1400                           ;tmr6.c: 71: PR6 = 0x3C;
  1401  000436  0E3C               	movlw	60
  1402  000438  010F               	movlb	15	; () banked
  1403  00043A  6F4B               	movwf	75,b	;volatile
  1404                           
  1405                           ;tmr6.c: 74: TMR6 = 0x00;
  1406  00043C  0E00               	movlw	0
  1407  00043E  010F               	movlb	15	; () banked
  1408  000440  6F4C               	movwf	76,b	;volatile
  1409                           
  1410                           ; BSR set to: 15
  1411                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
  1412  000442  947E               	bcf	3966,2,c	;volatile
  1413                           
  1414                           ; BSR set to: 15
  1415                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
  1416  000444  847D               	bsf	3965,2,c	;volatile
  1417                           
  1418                           ; BSR set to: 15
  1419                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  1420  000446  0E04               	movlw	low _TMR6_DefaultInterruptHandler
  1421  000448  6E2F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  1422  00044A  0E06               	movlw	high _TMR6_DefaultInterruptHandler
  1423  00044C  6E30               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  1424  00044E  ECEF  F002         	call	_TMR6_SetInterruptHandler	;wreg free
  1425                           
  1426                           ;tmr6.c: 86: TMR6_StartTimer();
  1427  000452  ECF9  F002         	call	_TMR6_StartTimer	;wreg free
  1428  000456  0012               	return		;funcret
  1429  000458                     __end_of_TMR6_Initialize:
  1430                           	opt stack 0
  1431                           tblptru	equ	0xFF8
  1432                           tblptrh	equ	0xFF7
  1433                           tblptrl	equ	0xFF6
  1434                           tablat	equ	0xFF5
  1435                           prodh	equ	0xFF4
  1436                           prodl	equ	0xFF3
  1437                           intcon	equ	0xFF2
  1438                           postinc0	equ	0xFEE
  1439                           wreg	equ	0xFE8
  1440                           postdec1	equ	0xFE5
  1441                           fsr1l	equ	0xFE1
  1442                           indf2	equ	0xFDF
  1443                           fsr2h	equ	0xFDA
  1444                           fsr2l	equ	0xFD9
  1445                           status	equ	0xFD8
  1446                           
  1447 ;; *************** function _TMR6_StartTimer *****************
  1448 ;; Defined at:
  1449 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		None
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;Total ram usage:        0 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    4
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_TMR6_Initialize
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text8
  1478  0005F2                     __ptext8:
  1479                           	opt stack 0
  1480  0005F2                     _TMR6_StartTimer:
  1481                           	opt stack 24
  1482                           
  1483                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  1484                           
  1485                           ;incstack = 0
  1486  0005F2  010F               	movlb	15	; () banked
  1487  0005F4  854A               	bsf	74,2,b	;volatile
  1488                           
  1489                           ; BSR set to: 15
  1490  0005F6  0012               	return		;funcret
  1491  0005F8                     __end_of_TMR6_StartTimer:
  1492                           	opt stack 0
  1493                           tblptru	equ	0xFF8
  1494                           tblptrh	equ	0xFF7
  1495                           tblptrl	equ	0xFF6
  1496                           tablat	equ	0xFF5
  1497                           prodh	equ	0xFF4
  1498                           prodl	equ	0xFF3
  1499                           intcon	equ	0xFF2
  1500                           postinc0	equ	0xFEE
  1501                           wreg	equ	0xFE8
  1502                           postdec1	equ	0xFE5
  1503                           fsr1l	equ	0xFE1
  1504                           indf2	equ	0xFDF
  1505                           fsr2h	equ	0xFDA
  1506                           fsr2l	equ	0xFD9
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function _TMR6_SetInterruptHandler *****************
  1510 ;; Defined at:
  1511 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1514 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;Total ram usage:        2 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    4
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_TMR6_Initialize
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text9
  1541  0005DE                     __ptext9:
  1542                           	opt stack 0
  1543  0005DE                     _TMR6_SetInterruptHandler:
  1544                           	opt stack 24
  1545                           
  1546                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  1547                           
  1548                           ; BSR set to: 15
  1549                           ;incstack = 0
  1550  0005DE  C02F  F040         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  1551  0005E2  C030  F041         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  1552  0005E6  0012               	return		;funcret
  1553  0005E8                     __end_of_TMR6_SetInterruptHandler:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           prodh	equ	0xFF4
  1560                           prodl	equ	0xFF3
  1561                           intcon	equ	0xFF2
  1562                           postinc0	equ	0xFEE
  1563                           wreg	equ	0xFE8
  1564                           postdec1	equ	0xFE5
  1565                           fsr1l	equ	0xFE1
  1566                           indf2	equ	0xFDF
  1567                           fsr2h	equ	0xFDA
  1568                           fsr2l	equ	0xFD9
  1569                           status	equ	0xFD8
  1570                           
  1571 ;; *************** function _TMR2_Initialize *****************
  1572 ;; Defined at:
  1573 ;;		line 18 in file "mcc_generated_files/tmr2.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, status,2, status,0, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;Total ram usage:        0 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    5
  1594 ;; This function calls:
  1595 ;;		_TMR2_SetInterruptHandler
  1596 ;;		_TMR2_StartTimer
  1597 ;; This function is called by:
  1598 ;;		_SYSTEM_Initialize
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text10
  1603  0004C4                     __ptext10:
  1604                           	opt stack 0
  1605  0004C4                     _TMR2_Initialize:
  1606                           	opt stack 24
  1607                           
  1608                           ;tmr2.c: 23: T2CON = 0x02;
  1609                           
  1610                           ;incstack = 0
  1611  0004C4  0E02               	movlw	2
  1612  0004C6  6EBA               	movwf	4026,c	;volatile
  1613                           
  1614                           ;tmr2.c: 26: PR2 = 0x12;
  1615  0004C8  0E12               	movlw	18
  1616  0004CA  6EBB               	movwf	4027,c	;volatile
  1617                           
  1618                           ;tmr2.c: 29: TMR2 = 0x00;
  1619  0004CC  0E00               	movlw	0
  1620  0004CE  6EBC               	movwf	4028,c	;volatile
  1621                           
  1622                           ;tmr2.c: 32: PIR1bits.TMR2IF = 0;
  1623  0004D0  929E               	bcf	3998,1,c	;volatile
  1624                           
  1625                           ;tmr2.c: 35: PIE1bits.TMR2IE = 1;
  1626  0004D2  829D               	bsf	3997,1,c	;volatile
  1627                           
  1628                           ;tmr2.c: 38: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  1629  0004D4  0E06               	movlw	low _TMR2_DefaultInterruptHandler
  1630  0004D6  6E2F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  1631  0004D8  0E06               	movlw	high _TMR2_DefaultInterruptHandler
  1632  0004DA  6E30               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  1633  0004DC  ECF4  F002         	call	_TMR2_SetInterruptHandler	;wreg free
  1634                           
  1635                           ;tmr2.c: 41: TMR2_StartTimer();
  1636  0004E0  ECFC  F002         	call	_TMR2_StartTimer	;wreg free
  1637  0004E4  0012               	return		;funcret
  1638  0004E6                     __end_of_TMR2_Initialize:
  1639                           	opt stack 0
  1640                           tblptru	equ	0xFF8
  1641                           tblptrh	equ	0xFF7
  1642                           tblptrl	equ	0xFF6
  1643                           tablat	equ	0xFF5
  1644                           prodh	equ	0xFF4
  1645                           prodl	equ	0xFF3
  1646                           intcon	equ	0xFF2
  1647                           postinc0	equ	0xFEE
  1648                           wreg	equ	0xFE8
  1649                           postdec1	equ	0xFE5
  1650                           fsr1l	equ	0xFE1
  1651                           indf2	equ	0xFDF
  1652                           fsr2h	equ	0xFDA
  1653                           fsr2l	equ	0xFD9
  1654                           status	equ	0xFD8
  1655                           
  1656 ;; *************** function _TMR2_StartTimer *****************
  1657 ;; Defined at:
  1658 ;;		line 44 in file "mcc_generated_files/tmr2.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		None
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1676 ;;Total ram usage:        0 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; Hardware stack levels required when called:    4
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_TMR2_Initialize
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text11
  1687  0005F8                     __ptext11:
  1688                           	opt stack 0
  1689  0005F8                     _TMR2_StartTimer:
  1690                           	opt stack 24
  1691                           
  1692                           ;tmr2.c: 47: T2CONbits.TMR2ON = 1;
  1693                           
  1694                           ;incstack = 0
  1695  0005F8  84BA               	bsf	4026,2,c	;volatile
  1696  0005FA  0012               	return		;funcret
  1697  0005FC                     __end_of_TMR2_StartTimer:
  1698                           	opt stack 0
  1699                           tblptru	equ	0xFF8
  1700                           tblptrh	equ	0xFF7
  1701                           tblptrl	equ	0xFF6
  1702                           tablat	equ	0xFF5
  1703                           prodh	equ	0xFF4
  1704                           prodl	equ	0xFF3
  1705                           intcon	equ	0xFF2
  1706                           postinc0	equ	0xFEE
  1707                           wreg	equ	0xFE8
  1708                           postdec1	equ	0xFE5
  1709                           fsr1l	equ	0xFE1
  1710                           indf2	equ	0xFDF
  1711                           fsr2h	equ	0xFDA
  1712                           fsr2l	equ	0xFD9
  1713                           status	equ	0xFD8
  1714                           
  1715 ;; *************** function _TMR2_SetInterruptHandler *****************
  1716 ;; Defined at:
  1717 ;;		line 105 in file "mcc_generated_files/tmr2.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1720 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;Total ram usage:        2 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    4
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_TMR2_Initialize
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text12
  1747  0005E8                     __ptext12:
  1748                           	opt stack 0
  1749  0005E8                     _TMR2_SetInterruptHandler:
  1750                           	opt stack 24
  1751                           
  1752                           ;tmr2.c: 106: TMR2_InterruptHandler = InterruptHandler;
  1753                           
  1754                           ;incstack = 0
  1755  0005E8  C02F  F03E         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1756  0005EC  C030  F03F         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1757  0005F0  0012               	return		;funcret
  1758  0005F2                     __end_of_TMR2_SetInterruptHandler:
  1759                           	opt stack 0
  1760                           tblptru	equ	0xFF8
  1761                           tblptrh	equ	0xFF7
  1762                           tblptrl	equ	0xFF6
  1763                           tablat	equ	0xFF5
  1764                           prodh	equ	0xFF4
  1765                           prodl	equ	0xFF3
  1766                           intcon	equ	0xFF2
  1767                           postinc0	equ	0xFEE
  1768                           wreg	equ	0xFE8
  1769                           postdec1	equ	0xFE5
  1770                           fsr1l	equ	0xFE1
  1771                           indf2	equ	0xFDF
  1772                           fsr2h	equ	0xFDA
  1773                           fsr2l	equ	0xFD9
  1774                           status	equ	0xFD8
  1775                           
  1776 ;; *************** function _PIN_MANAGER_Initialize *****************
  1777 ;; Defined at:
  1778 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;Total ram usage:        0 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    4
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		_SYSTEM_Initialize
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text13
  1807  00035A                     __ptext13:
  1808                           	opt stack 0
  1809  00035A                     _PIN_MANAGER_Initialize:
  1810                           	opt stack 25
  1811                           
  1812                           ;pin_manager.c: 56: LATE = 0x00;
  1813                           
  1814                           ;incstack = 0
  1815  00035A  0E00               	movlw	0
  1816  00035C  6E8D               	movwf	3981,c	;volatile
  1817                           
  1818                           ;pin_manager.c: 57: LATD = 0x00;
  1819  00035E  0E00               	movlw	0
  1820  000360  6E8C               	movwf	3980,c	;volatile
  1821                           
  1822                           ;pin_manager.c: 58: LATA = 0x00;
  1823  000362  0E00               	movlw	0
  1824  000364  6E89               	movwf	3977,c	;volatile
  1825                           
  1826                           ;pin_manager.c: 59: LATB = 0x00;
  1827  000366  0E00               	movlw	0
  1828  000368  6E8A               	movwf	3978,c	;volatile
  1829                           
  1830                           ;pin_manager.c: 60: LATC = 0x00;
  1831  00036A  0E00               	movlw	0
  1832  00036C  6E8B               	movwf	3979,c	;volatile
  1833                           
  1834                           ;pin_manager.c: 65: TRISE = 0x07;
  1835  00036E  0E07               	movlw	7
  1836  000370  6E96               	movwf	3990,c	;volatile
  1837                           
  1838                           ;pin_manager.c: 66: TRISA = 0xEB;
  1839  000372  0EEB               	movlw	235
  1840  000374  6E92               	movwf	3986,c	;volatile
  1841                           
  1842                           ;pin_manager.c: 67: TRISB = 0xBF;
  1843  000376  0EBF               	movlw	191
  1844  000378  6E93               	movwf	3987,c	;volatile
  1845                           
  1846                           ;pin_manager.c: 68: TRISC = 0xB8;
  1847  00037A  0EB8               	movlw	184
  1848  00037C  6E94               	movwf	3988,c	;volatile
  1849                           
  1850                           ;pin_manager.c: 69: TRISD = 0xDF;
  1851  00037E  0EDF               	movlw	223
  1852  000380  6E95               	movwf	3989,c	;volatile
  1853                           
  1854                           ;pin_manager.c: 74: ANSELC = 0x38;
  1855  000382  0E38               	movlw	56
  1856  000384  010F               	movlb	15	; () banked
  1857  000386  6F3A               	movwf	58,b	;volatile
  1858                           
  1859                           ;pin_manager.c: 75: ANSELB = 0x3E;
  1860  000388  0E3E               	movlw	62
  1861  00038A  010F               	movlb	15	; () banked
  1862  00038C  6F39               	movwf	57,b	;volatile
  1863                           
  1864                           ;pin_manager.c: 76: ANSELD = 0xDF;
  1865  00038E  0EDF               	movlw	223
  1866  000390  010F               	movlb	15	; () banked
  1867  000392  6F3B               	movwf	59,b	;volatile
  1868                           
  1869                           ;pin_manager.c: 77: ANSELE = 0x03;
  1870  000394  0E03               	movlw	3
  1871  000396  010F               	movlb	15	; () banked
  1872  000398  6F3C               	movwf	60,b	;volatile
  1873                           
  1874                           ;pin_manager.c: 78: ANSELA = 0x2B;
  1875  00039A  0E2B               	movlw	43
  1876  00039C  010F               	movlb	15	; () banked
  1877  00039E  6F38               	movwf	56,b	;volatile
  1878                           
  1879                           ; BSR set to: 15
  1880                           ;pin_manager.c: 83: WPUB = 0xFF;
  1881  0003A0  6861               	setf	3937,c	;volatile
  1882                           
  1883                           ; BSR set to: 15
  1884                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1885  0003A2  9EF1               	bcf	intcon2,7,c	;volatile
  1886                           
  1887                           ; BSR set to: 15
  1888  0003A4  0012               	return		;funcret
  1889  0003A6                     __end_of_PIN_MANAGER_Initialize:
  1890                           	opt stack 0
  1891                           tblptru	equ	0xFF8
  1892                           tblptrh	equ	0xFF7
  1893                           tblptrl	equ	0xFF6
  1894                           tablat	equ	0xFF5
  1895                           prodh	equ	0xFF4
  1896                           prodl	equ	0xFF3
  1897                           intcon	equ	0xFF2
  1898                           intcon2	equ	0xFF1
  1899                           postinc0	equ	0xFEE
  1900                           wreg	equ	0xFE8
  1901                           postdec1	equ	0xFE5
  1902                           fsr1l	equ	0xFE1
  1903                           indf2	equ	0xFDF
  1904                           fsr2h	equ	0xFDA
  1905                           fsr2l	equ	0xFD9
  1906                           status	equ	0xFD8
  1907                           
  1908 ;; *************** function _OSCILLATOR_Initialize *****************
  1909 ;; Defined at:
  1910 ;;		line 126 in file "mcc_generated_files/mcc.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;Total ram usage:        0 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    4
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_SYSTEM_Initialize
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text14
  1939  0005C4                     __ptext14:
  1940                           	opt stack 0
  1941  0005C4                     _OSCILLATOR_Initialize:
  1942                           	opt stack 25
  1943                           
  1944                           ;mcc.c: 129: OSCCON = 0x70;
  1945                           
  1946                           ; BSR set to: 15
  1947                           ;incstack = 0
  1948  0005C4  0E70               	movlw	112
  1949  0005C6  6ED3               	movwf	4051,c	;volatile
  1950                           
  1951                           ;mcc.c: 131: OSCCON2 = 0x04;
  1952  0005C8  0E04               	movlw	4
  1953  0005CA  6ED2               	movwf	4050,c	;volatile
  1954                           
  1955                           ;mcc.c: 133: OSCTUNE = 0x00;
  1956  0005CC  0E00               	movlw	0
  1957  0005CE  6E9B               	movwf	3995,c	;volatile
  1958  0005D0  0012               	return		;funcret
  1959  0005D2                     __end_of_OSCILLATOR_Initialize:
  1960                           	opt stack 0
  1961                           tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           prodh	equ	0xFF4
  1966                           prodl	equ	0xFF3
  1967                           intcon	equ	0xFF2
  1968                           intcon2	equ	0xFF1
  1969                           postinc0	equ	0xFEE
  1970                           wreg	equ	0xFE8
  1971                           postdec1	equ	0xFE5
  1972                           fsr1l	equ	0xFE1
  1973                           indf2	equ	0xFDF
  1974                           fsr2h	equ	0xFDA
  1975                           fsr2l	equ	0xFD9
  1976                           status	equ	0xFD8
  1977                           
  1978 ;; *************** function _INTERRUPT_Initialize *****************
  1979 ;; Defined at:
  1980 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		None
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;Total ram usage:        0 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    4
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_SYSTEM_Initialize
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text15
  2009  0005FC                     __ptext15:
  2010                           	opt stack 0
  2011  0005FC                     _INTERRUPT_Initialize:
  2012                           	opt stack 25
  2013                           
  2014                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2015                           
  2016                           ;incstack = 0
  2017  0005FC  9ED0               	bcf	4048,7,c	;volatile
  2018  0005FE  0012               	return		;funcret
  2019  000600                     __end_of_INTERRUPT_Initialize:
  2020                           	opt stack 0
  2021                           tblptru	equ	0xFF8
  2022                           tblptrh	equ	0xFF7
  2023                           tblptrl	equ	0xFF6
  2024                           tablat	equ	0xFF5
  2025                           prodh	equ	0xFF4
  2026                           prodl	equ	0xFF3
  2027                           intcon	equ	0xFF2
  2028                           intcon2	equ	0xFF1
  2029                           postinc0	equ	0xFEE
  2030                           wreg	equ	0xFE8
  2031                           postdec1	equ	0xFE5
  2032                           fsr1l	equ	0xFE1
  2033                           indf2	equ	0xFDF
  2034                           fsr2h	equ	0xFDA
  2035                           fsr2l	equ	0xFD9
  2036                           status	equ	0xFD8
  2037                           
  2038 ;; *************** function _EUSART1_Initialize *****************
  2039 ;; Defined at:
  2040 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;Total ram usage:        0 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    4
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_SYSTEM_Initialize
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text16
  2069  00059A                     __ptext16:
  2070                           	opt stack 0
  2071  00059A                     _EUSART1_Initialize:
  2072                           	opt stack 25
  2073                           
  2074                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  2075                           
  2076                           ;incstack = 0
  2077  00059A  0E08               	movlw	8
  2078  00059C  6EB8               	movwf	4024,c	;volatile
  2079                           
  2080                           ;eusart1.c: 63: RCSTA1 = 0x90;
  2081  00059E  0E90               	movlw	144
  2082  0005A0  6EAB               	movwf	4011,c	;volatile
  2083                           
  2084                           ;eusart1.c: 66: TXSTA1 = 0x24;
  2085  0005A2  0E24               	movlw	36
  2086  0005A4  6EAC               	movwf	4012,c	;volatile
  2087                           
  2088                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  2089  0005A6  0EA0               	movlw	160
  2090  0005A8  6EAF               	movwf	4015,c	;volatile
  2091                           
  2092                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  2093  0005AA  0E01               	movlw	1
  2094  0005AC  6EB0               	movwf	4016,c	;volatile
  2095  0005AE  0012               	return		;funcret
  2096  0005B0                     __end_of_EUSART1_Initialize:
  2097                           	opt stack 0
  2098                           tblptru	equ	0xFF8
  2099                           tblptrh	equ	0xFF7
  2100                           tblptrl	equ	0xFF6
  2101                           tablat	equ	0xFF5
  2102                           prodh	equ	0xFF4
  2103                           prodl	equ	0xFF3
  2104                           intcon	equ	0xFF2
  2105                           intcon2	equ	0xFF1
  2106                           postinc0	equ	0xFEE
  2107                           wreg	equ	0xFE8
  2108                           postdec1	equ	0xFE5
  2109                           fsr1l	equ	0xFE1
  2110                           indf2	equ	0xFDF
  2111                           fsr2h	equ	0xFDA
  2112                           fsr2l	equ	0xFD9
  2113                           status	equ	0xFD8
  2114                           
  2115 ;; *************** function _EPWM2_Initialize *****************
  2116 ;; Defined at:
  2117 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;		None
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;		None
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;Total ram usage:        0 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    4
  2138 ;; This function calls:
  2139 ;;		Nothing
  2140 ;; This function is called by:
  2141 ;;		_SYSTEM_Initialize
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text17
  2146  000458                     __ptext17:
  2147                           	opt stack 0
  2148  000458                     _EPWM2_Initialize:
  2149                           	opt stack 25
  2150                           
  2151                           ;epwm2.c: 68: CCP2CON = 0x0C;
  2152                           
  2153                           ;incstack = 0
  2154  000458  0E0C               	movlw	12
  2155  00045A  6E66               	movwf	3942,c	;volatile
  2156                           
  2157                           ;epwm2.c: 71: ECCP2AS = 0x00;
  2158  00045C  0E00               	movlw	0
  2159  00045E  6E64               	movwf	3940,c	;volatile
  2160                           
  2161                           ;epwm2.c: 74: PWM2CON = 0x80;
  2162  000460  0E80               	movlw	128
  2163  000462  6E65               	movwf	3941,c	;volatile
  2164                           
  2165                           ;epwm2.c: 77: PSTR2CON = 0x03;
  2166  000464  0E03               	movlw	3
  2167  000466  6E63               	movwf	3939,c	;volatile
  2168                           
  2169                           ;epwm2.c: 80: CCPR2L = 0x0C;
  2170  000468  0E0C               	movlw	12
  2171  00046A  6E67               	movwf	3943,c	;volatile
  2172                           
  2173                           ;epwm2.c: 83: CCPR2H = 0x00;
  2174  00046C  0E00               	movlw	0
  2175  00046E  6E68               	movwf	3944,c	;volatile
  2176                           
  2177                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  2178  000470  010F               	movlb	15	; () banked
  2179  000472  5149               	movf	73,w,b	;volatile
  2180  000474  0BE7               	andlw	-25
  2181  000476  0910               	iorlw	16
  2182  000478  6F49               	movwf	73,b	;volatile
  2183                           
  2184                           ; BSR set to: 15
  2185  00047A  0012               	return		;funcret
  2186  00047C                     __end_of_EPWM2_Initialize:
  2187                           	opt stack 0
  2188                           tblptru	equ	0xFF8
  2189                           tblptrh	equ	0xFF7
  2190                           tblptrl	equ	0xFF6
  2191                           tablat	equ	0xFF5
  2192                           prodh	equ	0xFF4
  2193                           prodl	equ	0xFF3
  2194                           intcon	equ	0xFF2
  2195                           intcon2	equ	0xFF1
  2196                           postinc0	equ	0xFEE
  2197                           wreg	equ	0xFE8
  2198                           postdec1	equ	0xFE5
  2199                           fsr1l	equ	0xFE1
  2200                           indf2	equ	0xFDF
  2201                           fsr2h	equ	0xFDA
  2202                           fsr2l	equ	0xFD9
  2203                           status	equ	0xFD8
  2204                           
  2205 ;; *************** function _EPWM1_Initialize *****************
  2206 ;; Defined at:
  2207 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2225 ;;Total ram usage:        0 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    4
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_SYSTEM_Initialize
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text18
  2236  00047C                     __ptext18:
  2237                           	opt stack 0
  2238  00047C                     _EPWM1_Initialize:
  2239                           	opt stack 25
  2240                           
  2241                           ;epwm1.c: 68: CCP1CON = 0x0C;
  2242                           
  2243                           ; BSR set to: 15
  2244                           ;incstack = 0
  2245  00047C  0E0C               	movlw	12
  2246  00047E  6EBD               	movwf	4029,c	;volatile
  2247                           
  2248                           ;epwm1.c: 71: ECCP1AS = 0x00;
  2249  000480  0E00               	movlw	0
  2250  000482  6EB6               	movwf	4022,c	;volatile
  2251                           
  2252                           ;epwm1.c: 74: PWM1CON = 0x80;
  2253  000484  0E80               	movlw	128
  2254  000486  6EB7               	movwf	4023,c	;volatile
  2255                           
  2256                           ;epwm1.c: 77: PSTR1CON = 0x03;
  2257  000488  0E03               	movlw	3
  2258  00048A  6EB9               	movwf	4025,c	;volatile
  2259                           
  2260                           ;epwm1.c: 80: CCPR1L = 0x0C;
  2261  00048C  0E0C               	movlw	12
  2262  00048E  6EBE               	movwf	4030,c	;volatile
  2263                           
  2264                           ;epwm1.c: 83: CCPR1H = 0x00;
  2265  000490  0E00               	movlw	0
  2266  000492  6EBF               	movwf	4031,c	;volatile
  2267                           
  2268                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  2269  000494  010F               	movlb	15	; () banked
  2270  000496  5149               	movf	73,w,b	;volatile
  2271  000498  0BFC               	andlw	-4
  2272  00049A  0902               	iorlw	2
  2273  00049C  6F49               	movwf	73,b	;volatile
  2274                           
  2275                           ; BSR set to: 15
  2276  00049E  0012               	return		;funcret
  2277  0004A0                     __end_of_EPWM1_Initialize:
  2278                           	opt stack 0
  2279                           tblptru	equ	0xFF8
  2280                           tblptrh	equ	0xFF7
  2281                           tblptrl	equ	0xFF6
  2282                           tablat	equ	0xFF5
  2283                           prodh	equ	0xFF4
  2284                           prodl	equ	0xFF3
  2285                           intcon	equ	0xFF2
  2286                           intcon2	equ	0xFF1
  2287                           postinc0	equ	0xFEE
  2288                           wreg	equ	0xFE8
  2289                           postdec1	equ	0xFE5
  2290                           fsr1l	equ	0xFE1
  2291                           indf2	equ	0xFDF
  2292                           fsr2h	equ	0xFDA
  2293                           fsr2l	equ	0xFD9
  2294                           status	equ	0xFD8
  2295                           
  2296 ;; *************** function _CCP5_Initialize *****************
  2297 ;; Defined at:
  2298 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;Total ram usage:        0 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    4
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_SYSTEM_Initialize
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text19
  2327  0005B0                     __ptext19:
  2328                           	opt stack 0
  2329  0005B0                     _CCP5_Initialize:
  2330                           	opt stack 25
  2331                           
  2332                           ;ccp5.c: 60: CCP5CON = 0x00;
  2333                           
  2334                           ; BSR set to: 15
  2335                           ;incstack = 0
  2336  0005B0  0E00               	movlw	0
  2337  0005B2  010F               	movlb	15	; () banked
  2338  0005B4  6F54               	movwf	84,b	;volatile
  2339                           
  2340                           ;ccp5.c: 62: CCPR5L = 0x00;
  2341  0005B6  0E00               	movlw	0
  2342  0005B8  010F               	movlb	15	; () banked
  2343  0005BA  6F55               	movwf	85,b	;volatile
  2344                           
  2345                           ;ccp5.c: 64: CCPR5H = 0x00;
  2346  0005BC  0E00               	movlw	0
  2347  0005BE  010F               	movlb	15	; () banked
  2348  0005C0  6F56               	movwf	86,b	;volatile
  2349                           
  2350                           ; BSR set to: 15
  2351  0005C2  0012               	return		;funcret
  2352  0005C4                     __end_of_CCP5_Initialize:
  2353                           	opt stack 0
  2354                           tblptru	equ	0xFF8
  2355                           tblptrh	equ	0xFF7
  2356                           tblptrl	equ	0xFF6
  2357                           tablat	equ	0xFF5
  2358                           prodh	equ	0xFF4
  2359                           prodl	equ	0xFF3
  2360                           intcon	equ	0xFF2
  2361                           intcon2	equ	0xFF1
  2362                           postinc0	equ	0xFEE
  2363                           wreg	equ	0xFE8
  2364                           postdec1	equ	0xFE5
  2365                           fsr1l	equ	0xFE1
  2366                           indf2	equ	0xFDF
  2367                           fsr2h	equ	0xFDA
  2368                           fsr2l	equ	0xFD9
  2369                           status	equ	0xFD8
  2370                           
  2371 ;; *************** function _ADC_Initialize *****************
  2372 ;; Defined at:
  2373 ;;		line 58 in file "mcc_generated_files/adc.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;		None
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;		None
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, status,2
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;Total ram usage:        0 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    4
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_SYSTEM_Initialize
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text20
  2402  000582                     __ptext20:
  2403                           	opt stack 0
  2404  000582                     _ADC_Initialize:
  2405                           	opt stack 25
  2406                           
  2407                           ;adc.c: 63: ADCON0 = 0x01;
  2408                           
  2409                           ; BSR set to: 15
  2410                           ;incstack = 0
  2411  000582  0E01               	movlw	1
  2412  000584  6EC2               	movwf	4034,c	;volatile
  2413                           
  2414                           ;adc.c: 66: ADCON1 = 0x00;
  2415  000586  0E00               	movlw	0
  2416  000588  6EC1               	movwf	4033,c	;volatile
  2417                           
  2418                           ;adc.c: 69: ADCON2 = 0x02;
  2419  00058A  0E02               	movlw	2
  2420  00058C  6EC0               	movwf	4032,c	;volatile
  2421                           
  2422                           ;adc.c: 72: ADRESL = 0x00;
  2423  00058E  0E00               	movlw	0
  2424  000590  6EC3               	movwf	4035,c	;volatile
  2425                           
  2426                           ;adc.c: 75: ADRESH = 0x00;
  2427  000592  0E00               	movlw	0
  2428  000594  6EC4               	movwf	4036,c	;volatile
  2429                           
  2430                           ;adc.c: 78: PIE1bits.ADIE = 1;
  2431  000596  8C9D               	bsf	3997,6,c	;volatile
  2432  000598  0012               	return		;funcret
  2433  00059A                     __end_of_ADC_Initialize:
  2434                           	opt stack 0
  2435                           tblptru	equ	0xFF8
  2436                           tblptrh	equ	0xFF7
  2437                           tblptrl	equ	0xFF6
  2438                           tablat	equ	0xFF5
  2439                           prodh	equ	0xFF4
  2440                           prodl	equ	0xFF3
  2441                           intcon	equ	0xFF2
  2442                           intcon2	equ	0xFF1
  2443                           postinc0	equ	0xFEE
  2444                           wreg	equ	0xFE8
  2445                           postdec1	equ	0xFE5
  2446                           fsr1l	equ	0xFE1
  2447                           indf2	equ	0xFDF
  2448                           fsr2h	equ	0xFDA
  2449                           fsr2l	equ	0xFD9
  2450                           status	equ	0xFD8
  2451                           
  2452 ;; *************** function _INTERRUPT_InterruptManager *****************
  2453 ;; Defined at:
  2454 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;Total ram usage:       14 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    3
  2475 ;; This function calls:
  2476 ;;		_ADC_ISR
  2477 ;;		_TMR2_ISR
  2478 ;;		_TMR6_ISR
  2479 ;; This function is called by:
  2480 ;;		Interrupt level 2
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	intcode
  2485  000008                     __pintcode:
  2486                           	opt stack 0
  2487  000008                     _INTERRUPT_InterruptManager:
  2488                           	opt stack 24
  2489                           
  2490                           ;incstack = 0
  2491  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2492  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  2493  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2494  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2495  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2496  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2497  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2498  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2499  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2500  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2501  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2502  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2503  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2504  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2505  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2506                           
  2507                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  2508  000042  BCF2               	btfsc	intcon,6,c	;volatile
  2509  000044  AC9D               	btfss	3997,6,c	;volatile
  2510  000046  D005               	goto	i2l259
  2511  000048  AC9E               	btfss	3998,6,c	;volatile
  2512  00004A  D003               	goto	i2l259
  2513                           
  2514                           ;interrupt_manager.c: 61: {
  2515                           ;interrupt_manager.c: 62: ADC_ISR();
  2516  00004C  EC00  F003         	call	_ADC_ISR	;wreg free
  2517                           
  2518                           ;interrupt_manager.c: 63: }
  2519  000050  D00E               	goto	i2l265
  2520  000052                     i2l259:
  2521                           
  2522                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  2523  000052  BCF2               	btfsc	intcon,6,c	;volatile
  2524  000054  A47D               	btfss	3965,2,c	;volatile
  2525  000056  D005               	goto	i2l261
  2526  000058  A47E               	btfss	3966,2,c	;volatile
  2527  00005A  D003               	goto	i2l261
  2528                           
  2529                           ;interrupt_manager.c: 65: {
  2530                           ;interrupt_manager.c: 66: TMR6_ISR();
  2531  00005C  EC73  F002         	call	_TMR6_ISR	;wreg free
  2532                           
  2533                           ;interrupt_manager.c: 67: }
  2534  000060  D006               	goto	i2l265
  2535  000062                     i2l261:
  2536                           
  2537                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  2538  000062  BCF2               	btfsc	intcon,6,c	;volatile
  2539  000064  A29D               	btfss	3997,1,c	;volatile
  2540  000066  D003               	goto	i2l265
  2541  000068  B29E               	btfsc	3998,1,c	;volatile
  2542                           
  2543                           ;interrupt_manager.c: 69: {
  2544                           ;interrupt_manager.c: 70: TMR2_ISR();
  2545  00006A  ECA4  F002         	call	_TMR2_ISR	;wreg free
  2546  00006E                     i2l265:
  2547  00006E  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2548  000072  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2549  000076  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2550  00007A  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2551  00007E  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2552  000082  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2553  000086  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2554  00008A  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2555  00008E  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2556  000092  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2557  000096  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2558  00009A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2559  00009E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2560  0000A2  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2561  0000A6  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2562  0000A8  0011               	retfie		f
  2563  0000AA                     __end_of_INTERRUPT_InterruptManager:
  2564                           	opt stack 0
  2565                           pclatu	equ	0xFFB
  2566                           pclath	equ	0xFFA
  2567                           tblptru	equ	0xFF8
  2568                           tblptrh	equ	0xFF7
  2569                           tblptrl	equ	0xFF6
  2570                           tablat	equ	0xFF5
  2571                           prodh	equ	0xFF4
  2572                           prodl	equ	0xFF3
  2573                           intcon	equ	0xFF2
  2574                           intcon2	equ	0xFF1
  2575                           postinc0	equ	0xFEE
  2576                           fsr0h	equ	0xFEA
  2577                           fsr0l	equ	0xFE9
  2578                           wreg	equ	0xFE8
  2579                           postdec1	equ	0xFE5
  2580                           fsr1h	equ	0xFE2
  2581                           fsr1l	equ	0xFE1
  2582                           indf2	equ	0xFDF
  2583                           fsr2h	equ	0xFDA
  2584                           fsr2l	equ	0xFD9
  2585                           status	equ	0xFD8
  2586                           
  2587 ;; *************** function _TMR6_ISR *****************
  2588 ;; Defined at:
  2589 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;Total ram usage:        0 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    1
  2610 ;; This function calls:
  2611 ;;		Absolute function
  2612 ;;		_TMR6_DefaultInterruptHandler
  2613 ;; This function is called by:
  2614 ;;		_INTERRUPT_InterruptManager
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text22
  2619  0004E6                     __ptext22:
  2620                           	opt stack 0
  2621  0004E6                     _TMR6_ISR:
  2622                           	opt stack 25
  2623                           
  2624                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  2625                           
  2626                           ;incstack = 0
  2627  0004E6  947E               	bcf	3966,2,c	;volatile
  2628                           
  2629                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  2630  0004E8  5040               	movf	_TMR6_InterruptHandler,w,c
  2631  0004EA  1041               	iorwf	_TMR6_InterruptHandler+1,w,c
  2632  0004EC  B4D8               	btfsc	status,2,c
  2633  0004EE  0012               	return	
  2634                           
  2635                           ;tmr6.c: 128: {
  2636                           ;tmr6.c: 129: TMR6_InterruptHandler();
  2637  0004F0  D801               	call	i2u5_48
  2638  0004F2  0012               	return	
  2639  0004F4                     i2u5_48:
  2640  0004F4  0005               	push	
  2641  0004F6  6EFA               	movwf	pclath,c
  2642  0004F8  5040               	movf	_TMR6_InterruptHandler,w,c
  2643  0004FA  6EFD               	movwf	tosl,c
  2644  0004FC  5041               	movf	_TMR6_InterruptHandler+1,w,c
  2645  0004FE  6EFE               	movwf	tosh,c
  2646  000500  50F8               	movf	tblptru,w,c
  2647  000502  6EFF               	movwf	tosu,c
  2648  000504  50FA               	movf	pclath,w,c
  2649  000506  0012               	return		;indir
  2650  000508                     __end_of_TMR6_ISR:
  2651                           	opt stack 0
  2652                           tosu	equ	0xFFF
  2653                           tosh	equ	0xFFE
  2654                           tosl	equ	0xFFD
  2655                           pclatu	equ	0xFFB
  2656                           pclath	equ	0xFFA
  2657                           tblptru	equ	0xFF8
  2658                           tblptrh	equ	0xFF7
  2659                           tblptrl	equ	0xFF6
  2660                           tablat	equ	0xFF5
  2661                           prodh	equ	0xFF4
  2662                           prodl	equ	0xFF3
  2663                           intcon	equ	0xFF2
  2664                           intcon2	equ	0xFF1
  2665                           postinc0	equ	0xFEE
  2666                           fsr0h	equ	0xFEA
  2667                           fsr0l	equ	0xFE9
  2668                           wreg	equ	0xFE8
  2669                           postdec1	equ	0xFE5
  2670                           fsr1h	equ	0xFE2
  2671                           fsr1l	equ	0xFE1
  2672                           indf2	equ	0xFDF
  2673                           fsr2h	equ	0xFDA
  2674                           fsr2l	equ	0xFD9
  2675                           status	equ	0xFD8
  2676                           
  2677 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  2678 ;; Defined at:
  2679 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		None
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;Total ram usage:        0 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_TMR6_Initialize
  2703 ;;		_TMR6_ISR
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text23
  2708  000604                     __ptext23:
  2709                           	opt stack 0
  2710  000604                     _TMR6_DefaultInterruptHandler:
  2711                           	opt stack 25
  2712                           
  2713                           ;incstack = 0
  2714  000604  0012               	return		;funcret
  2715  000606                     __end_of_TMR6_DefaultInterruptHandler:
  2716                           	opt stack 0
  2717                           tosu	equ	0xFFF
  2718                           tosh	equ	0xFFE
  2719                           tosl	equ	0xFFD
  2720                           pclatu	equ	0xFFB
  2721                           pclath	equ	0xFFA
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           prodh	equ	0xFF4
  2727                           prodl	equ	0xFF3
  2728                           intcon	equ	0xFF2
  2729                           intcon2	equ	0xFF1
  2730                           postinc0	equ	0xFEE
  2731                           fsr0h	equ	0xFEA
  2732                           fsr0l	equ	0xFE9
  2733                           wreg	equ	0xFE8
  2734                           postdec1	equ	0xFE5
  2735                           fsr1h	equ	0xFE2
  2736                           fsr1l	equ	0xFE1
  2737                           indf2	equ	0xFDF
  2738                           fsr2h	equ	0xFDA
  2739                           fsr2l	equ	0xFD9
  2740                           status	equ	0xFD8
  2741                           
  2742 ;; *************** function _TMR2_ISR *****************
  2743 ;; Defined at:
  2744 ;;		line 76 in file "mcc_generated_files/tmr2.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;Total ram usage:        0 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    2
  2765 ;; This function calls:
  2766 ;;		_TMR2_CallBack
  2767 ;; This function is called by:
  2768 ;;		_INTERRUPT_InterruptManager
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text24
  2773  000548                     __ptext24:
  2774                           	opt stack 0
  2775  000548                     _TMR2_ISR:
  2776                           	opt stack 24
  2777                           
  2778                           ;tmr2.c: 78: static volatile unsigned int CountCallBack = 0;
  2779                           ;tmr2.c: 81: PIR1bits.TMR2IF = 0;
  2780                           
  2781                           ;incstack = 0
  2782  000548  929E               	bcf	3998,1,c	;volatile
  2783                           
  2784                           ;tmr2.c: 84: if (++CountCallBack >= 16)
  2785  00054A  4A38               	infsnz	TMR2_ISR@CountCallBack,f,c	;volatile
  2786  00054C  2A39               	incf	TMR2_ISR@CountCallBack+1,f,c	;volatile
  2787  00054E  5039               	movf	TMR2_ISR@CountCallBack+1,w,c	;volatile
  2788  000550  E104               	bnz	i2u6_40
  2789  000552  0E10               	movlw	16
  2790  000554  5C38               	subwf	TMR2_ISR@CountCallBack,w,c	;volatile
  2791  000556  A0D8               	btfss	status,0,c
  2792  000558  0012               	return	
  2793  00055A                     i2u6_40:
  2794                           
  2795                           ;tmr2.c: 85: {
  2796                           ;tmr2.c: 87: TMR2_CallBack();
  2797  00055A  EC50  F002         	call	_TMR2_CallBack	;wreg free
  2798                           
  2799                           ;tmr2.c: 90: CountCallBack = 0;
  2800  00055E  0E00               	movlw	0
  2801  000560  6E39               	movwf	TMR2_ISR@CountCallBack+1,c	;volatile
  2802  000562  0E00               	movlw	0
  2803  000564  6E38               	movwf	TMR2_ISR@CountCallBack,c	;volatile
  2804  000566  0012               	return	
  2805  000568                     __end_of_TMR2_ISR:
  2806                           	opt stack 0
  2807                           tosu	equ	0xFFF
  2808                           tosh	equ	0xFFE
  2809                           tosl	equ	0xFFD
  2810                           pclatu	equ	0xFFB
  2811                           pclath	equ	0xFFA
  2812                           tblptru	equ	0xFF8
  2813                           tblptrh	equ	0xFF7
  2814                           tblptrl	equ	0xFF6
  2815                           tablat	equ	0xFF5
  2816                           prodh	equ	0xFF4
  2817                           prodl	equ	0xFF3
  2818                           intcon	equ	0xFF2
  2819                           intcon2	equ	0xFF1
  2820                           postinc0	equ	0xFEE
  2821                           fsr0h	equ	0xFEA
  2822                           fsr0l	equ	0xFE9
  2823                           wreg	equ	0xFE8
  2824                           postdec1	equ	0xFE5
  2825                           fsr1h	equ	0xFE2
  2826                           fsr1l	equ	0xFE1
  2827                           indf2	equ	0xFDF
  2828                           fsr2h	equ	0xFDA
  2829                           fsr2l	equ	0xFD9
  2830                           status	equ	0xFD8
  2831                           
  2832 ;; *************** function _TMR2_CallBack *****************
  2833 ;; Defined at:
  2834 ;;		line 94 in file "mcc_generated_files/tmr2.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;Total ram usage:        0 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    1
  2855 ;; This function calls:
  2856 ;;		Absolute function
  2857 ;;		_TMR2_DefaultInterruptHandler
  2858 ;; This function is called by:
  2859 ;;		_TMR2_ISR
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text25
  2864  0004A0                     __ptext25:
  2865                           	opt stack 0
  2866  0004A0                     _TMR2_CallBack:
  2867                           	opt stack 24
  2868                           
  2869                           ;tmr2.c: 98: Timer2Ticked = 1;
  2870                           
  2871                           ;incstack = 0
  2872  0004A0  0E01               	movlw	1
  2873  0004A2  6E3D               	movwf	_Timer2Ticked,c	;volatile
  2874                           
  2875                           ;tmr2.c: 99: if(TMR2_InterruptHandler)
  2876  0004A4  503E               	movf	_TMR2_InterruptHandler,w,c
  2877  0004A6  103F               	iorwf	_TMR2_InterruptHandler+1,w,c
  2878  0004A8  B4D8               	btfsc	status,2,c
  2879  0004AA  0012               	return	
  2880                           
  2881                           ;tmr2.c: 100: {
  2882                           ;tmr2.c: 101: TMR2_InterruptHandler();
  2883  0004AC  D801               	call	i2u2_48
  2884  0004AE  0012               	return	
  2885  0004B0                     i2u2_48:
  2886  0004B0  0005               	push	
  2887  0004B2  6EFA               	movwf	pclath,c
  2888  0004B4  503E               	movf	_TMR2_InterruptHandler,w,c
  2889  0004B6  6EFD               	movwf	tosl,c
  2890  0004B8  503F               	movf	_TMR2_InterruptHandler+1,w,c
  2891  0004BA  6EFE               	movwf	tosh,c
  2892  0004BC  50F8               	movf	tblptru,w,c
  2893  0004BE  6EFF               	movwf	tosu,c
  2894  0004C0  50FA               	movf	pclath,w,c
  2895  0004C2  0012               	return		;indir
  2896  0004C4                     __end_of_TMR2_CallBack:
  2897                           	opt stack 0
  2898                           tosu	equ	0xFFF
  2899                           tosh	equ	0xFFE
  2900                           tosl	equ	0xFFD
  2901                           pclatu	equ	0xFFB
  2902                           pclath	equ	0xFFA
  2903                           tblptru	equ	0xFF8
  2904                           tblptrh	equ	0xFF7
  2905                           tblptrl	equ	0xFF6
  2906                           tablat	equ	0xFF5
  2907                           prodh	equ	0xFF4
  2908                           prodl	equ	0xFF3
  2909                           intcon	equ	0xFF2
  2910                           intcon2	equ	0xFF1
  2911                           postinc0	equ	0xFEE
  2912                           fsr0h	equ	0xFEA
  2913                           fsr0l	equ	0xFE9
  2914                           wreg	equ	0xFE8
  2915                           postdec1	equ	0xFE5
  2916                           fsr1h	equ	0xFE2
  2917                           fsr1l	equ	0xFE1
  2918                           indf2	equ	0xFDF
  2919                           fsr2h	equ	0xFDA
  2920                           fsr2l	equ	0xFD9
  2921                           status	equ	0xFD8
  2922                           
  2923 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  2924 ;; Defined at:
  2925 ;;		line 109 in file "mcc_generated_files/tmr2.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		None
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;Total ram usage:        0 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_TMR2_Initialize
  2949 ;;		_TMR2_CallBack
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text26
  2954  000606                     __ptext26:
  2955                           	opt stack 0
  2956  000606                     _TMR2_DefaultInterruptHandler:
  2957                           	opt stack 24
  2958                           
  2959                           ;incstack = 0
  2960  000606  0012               	return		;funcret
  2961  000608                     __end_of_TMR2_DefaultInterruptHandler:
  2962                           	opt stack 0
  2963                           tosu	equ	0xFFF
  2964                           tosh	equ	0xFFE
  2965                           tosl	equ	0xFFD
  2966                           pclatu	equ	0xFFB
  2967                           pclath	equ	0xFFA
  2968                           tblptru	equ	0xFF8
  2969                           tblptrh	equ	0xFF7
  2970                           tblptrl	equ	0xFF6
  2971                           tablat	equ	0xFF5
  2972                           prodh	equ	0xFF4
  2973                           prodl	equ	0xFF3
  2974                           intcon	equ	0xFF2
  2975                           intcon2	equ	0xFF1
  2976                           postinc0	equ	0xFEE
  2977                           fsr0h	equ	0xFEA
  2978                           fsr0l	equ	0xFE9
  2979                           wreg	equ	0xFE8
  2980                           postdec1	equ	0xFE5
  2981                           fsr1h	equ	0xFE2
  2982                           fsr1l	equ	0xFE1
  2983                           indf2	equ	0xFDF
  2984                           fsr2h	equ	0xFDA
  2985                           fsr2l	equ	0xFD9
  2986                           status	equ	0xFD8
  2987                           
  2988 ;; *************** function _ADC_ISR *****************
  2989 ;; Defined at:
  2990 ;;		line 129 in file "mcc_generated_files/adc.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		None
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;Total ram usage:        0 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_INTERRUPT_InterruptManager
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text27
  3018  000600                     __ptext27:
  3019                           	opt stack 0
  3020  000600                     _ADC_ISR:
  3021                           	opt stack 26
  3022                           
  3023                           ;adc.c: 132: PIR1bits.ADIF = 0;
  3024                           
  3025                           ;incstack = 0
  3026  000600  9C9E               	bcf	3998,6,c	;volatile
  3027  000602  0012               	return		;funcret
  3028  000604                     __end_of_ADC_ISR:
  3029                           	opt stack 0
  3030  0000                     tosu	equ	0xFFF
  3031                           tosh	equ	0xFFE
  3032                           tosl	equ	0xFFD
  3033                           pclatu	equ	0xFFB
  3034                           pclath	equ	0xFFA
  3035                           tblptru	equ	0xFF8
  3036                           tblptrh	equ	0xFF7
  3037                           tblptrl	equ	0xFF6
  3038                           tablat	equ	0xFF5
  3039                           prodh	equ	0xFF4
  3040                           prodl	equ	0xFF3
  3041                           intcon	equ	0xFF2
  3042                           intcon2	equ	0xFF1
  3043                           postinc0	equ	0xFEE
  3044                           fsr0h	equ	0xFEA
  3045                           fsr0l	equ	0xFE9
  3046                           wreg	equ	0xFE8
  3047                           postdec1	equ	0xFE5
  3048                           fsr1h	equ	0xFE2
  3049                           fsr1l	equ	0xFE1
  3050                           indf2	equ	0xFDF
  3051                           fsr2h	equ	0xFDA
  3052                           fsr2l	equ	0xFD9
  3053                           status	equ	0xFD8
  3054                           tosu	equ	0xFFF
  3055                           tosh	equ	0xFFE
  3056                           tosl	equ	0xFFD
  3057                           pclatu	equ	0xFFB
  3058                           pclath	equ	0xFFA
  3059                           tblptru	equ	0xFF8
  3060                           tblptrh	equ	0xFF7
  3061                           tblptrl	equ	0xFF6
  3062                           tablat	equ	0xFF5
  3063                           prodh	equ	0xFF4
  3064                           prodl	equ	0xFF3
  3065                           intcon	equ	0xFF2
  3066                           intcon2	equ	0xFF1
  3067                           postinc0	equ	0xFEE
  3068                           fsr0h	equ	0xFEA
  3069                           fsr0l	equ	0xFE9
  3070                           wreg	equ	0xFE8
  3071                           postdec1	equ	0xFE5
  3072                           fsr1h	equ	0xFE2
  3073                           fsr1l	equ	0xFE1
  3074                           indf2	equ	0xFDF
  3075                           fsr2h	equ	0xFDA
  3076                           fsr2l	equ	0xFD9
  3077                           status	equ	0xFD8
  3078                           
  3079                           	psect	text28
  3080  000000                     __ptext28:
  3081                           	opt stack 0
  3082                           tosu	equ	0xFFF
  3083                           tosh	equ	0xFFE
  3084                           tosl	equ	0xFFD
  3085                           pclatu	equ	0xFFB
  3086                           pclath	equ	0xFFA
  3087                           tblptru	equ	0xFF8
  3088                           tblptrh	equ	0xFF7
  3089                           tblptrl	equ	0xFF6
  3090                           tablat	equ	0xFF5
  3091                           prodh	equ	0xFF4
  3092                           prodl	equ	0xFF3
  3093                           intcon	equ	0xFF2
  3094                           intcon2	equ	0xFF1
  3095                           postinc0	equ	0xFEE
  3096                           fsr0h	equ	0xFEA
  3097                           fsr0l	equ	0xFE9
  3098                           wreg	equ	0xFE8
  3099                           postdec1	equ	0xFE5
  3100                           fsr1h	equ	0xFE2
  3101                           fsr1l	equ	0xFE1
  3102                           indf2	equ	0xFDF
  3103                           fsr2h	equ	0xFDA
  3104                           fsr2l	equ	0xFD9
  3105                           status	equ	0xFD8
  3106                           
  3107                           	psect	rparam
  3108  0000                     tosu	equ	0xFFF
  3109                           tosh	equ	0xFFE
  3110                           tosl	equ	0xFFD
  3111                           pclatu	equ	0xFFB
  3112                           pclath	equ	0xFFA
  3113                           tblptru	equ	0xFF8
  3114                           tblptrh	equ	0xFF7
  3115                           tblptrl	equ	0xFF6
  3116                           tablat	equ	0xFF5
  3117                           prodh	equ	0xFF4
  3118                           prodl	equ	0xFF3
  3119                           intcon	equ	0xFF2
  3120                           intcon2	equ	0xFF1
  3121                           postinc0	equ	0xFEE
  3122                           fsr0h	equ	0xFEA
  3123                           fsr0l	equ	0xFE9
  3124                           wreg	equ	0xFE8
  3125                           postdec1	equ	0xFE5
  3126                           fsr1h	equ	0xFE2
  3127                           fsr1l	equ	0xFE1
  3128                           indf2	equ	0xFDF
  3129                           fsr2h	equ	0xFDA
  3130                           fsr2l	equ	0xFD9
  3131                           status	equ	0xFD8
  3132                           
  3133                           	psect	temp
  3134  000042                     btemp:
  3135                           	opt stack 0
  3136  000042                     	ds	1
  3137  0000                     int$flags	set	btemp
  3138                           tosu	equ	0xFFF
  3139                           tosh	equ	0xFFE
  3140                           tosl	equ	0xFFD
  3141                           pclatu	equ	0xFFB
  3142                           pclath	equ	0xFFA
  3143                           tblptru	equ	0xFF8
  3144                           tblptrh	equ	0xFF7
  3145                           tblptrl	equ	0xFF6
  3146                           tablat	equ	0xFF5
  3147                           prodh	equ	0xFF4
  3148                           prodl	equ	0xFF3
  3149                           intcon	equ	0xFF2
  3150                           intcon2	equ	0xFF1
  3151                           postinc0	equ	0xFEE
  3152                           fsr0h	equ	0xFEA
  3153                           fsr0l	equ	0xFE9
  3154                           wreg	equ	0xFE8
  3155                           postdec1	equ	0xFE5
  3156                           fsr1h	equ	0xFE2
  3157                           fsr1l	equ	0xFE1
  3158                           indf2	equ	0xFDF
  3159                           fsr2h	equ	0xFDA
  3160                           fsr2l	equ	0xFD9
  3161                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        64
    BSS         10
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      65
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StateMEF_act
    _StateMEF_act->_EPWM1_LoadDutyValue
    _StateMEF_act->_EPWM2_LoadDutyValue
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     794
                  _SYSTEM_Initialize
                       _StateMEF_act
                       _StateMEF_ini
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StateMEF_act                                         1     1      0     622
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_LoadDutyValue                                  4     2      2     300
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_LoadDutyValue                                  4     2      2     300
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_act
     _EPWM1_LoadDutyValue
     _EPWM2_LoadDutyValue
     _EUSART1_Write
   _StateMEF_ini

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      41       1       69.1%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      61      12        0.0%
DATA                 0      0      61       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Jun 05 11:50:12 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 05F2  
                       ??_TMR6_StartTimer 002F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l328 05D4                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _PR6 000F4B                           __end_of_ADC_ISR 0604  
                         _TMR2_Initialize 04C4                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                __end_of_EPWM2_Initialize 047C                           _CCP5_Initialize 05B0  
                                    l1148 0578                                      l1422 012A  
                                    l1406 00C6                                      l1502 0320  
                                    l1424 012E                                      l1504 0330  
                                    l1442 019C                                      l1444 01A0  
                                    l1516 0354                                      l1462 020E  
                                    l1464 0212                                      l1484 0282  
                                    l1396 00B0                                      l1488 0286  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _TMR2 000FBC  
                                    _TMR6 000F4C                                      _WPUB 000F61  
                           _EUSART1_Write 05D2                                      _main 0302  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                           __CFG_BORV$190 000000                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00AA  
                           __CFG_IESO$OFF 000000                     ??_EPWM1_LoadDutyValue 0031  
                            ___param_bank 000000            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 05D2                                     ?_main 0021  
                                   _T2CON 000FBA                                     _T6CON 000F4A  
                          __CFG_DEBUG$OFF 000000                                     i2l261 0062  
                                   i2l265 006E                                     i2l259 0052  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000         __size_of_TMR6_SetInterruptHandler 000A  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                 ?_TMR6_SetInterruptHandler 002F  
                        __end_of_TMR2_ISR 0568                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                        __end_of_TMR6_ISR 0508                            __CFG_EBTRB$OFF 000000  
                        _LookUP_TABLE_COS 0001                          _LookUP_TABLE_SEN 0060  
                      __CFG_MCLRE$EXTMCLR 000000                            ?_EUSART1_Write 0021  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 05F8                            __CFG_PBADEN$ON 000000  
          ??_TMR6_DefaultInterruptHandler 0021                           __initialization 02A8  
              __end_of_EUSART1_Initialize 05B0                              __end_of_main 035A  
                 __end_of_TMR2_Initialize 04E6                                 ??_ADC_ISR 0021  
             ?_INTERRUPT_InterruptManager 0021                  _TMR2_SetInterruptHandler 05E8  
                                  ??_main 0034                   __end_of_CCP5_Initialize 05C4  
                           __activetblptr 000002                           _TMR6_Initialize 0430  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1H 000FBF  
                                  _CCPR2H 000F68                                    _CCPR1L 000FBE  
                                  _CCPR2L 000F67                                    _CCPR5H 000F56  
                                  _CCPR5L 000F55                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAE  
                                  _RCSTA1 000FAB                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                    i2u2_48 04B0  
                                  i2u6_40 055A                                    i2u5_48 04F4  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                          __CFG_XINST$OFF 000000                              _CCPTMRS0bits 000F49  
                          __CFG_STVREN$ON 000000                                    clear_0 02EE  
                            __pdataCOMRAM 0001                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                         ??_EUSART1_Write 002F                       _EPWM2_LoadDutyValue 03A6  
                 __end_of_TMR2_StartTimer 05FC  TMR2_SetInterruptHandler@InterruptHandler 002F  
TMR6_SetInterruptHandler@InterruptHandler 002F             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 0406                                __accesstop 0060  
                 __end_of__initialization 02F4                     __end_of_TMR2_CallBack 04C4  
                      ?_SYSTEM_Initialize 0021                           _TMR6_StartTimer 05F2  
                           ___rparam_used 000001                         ?_EPWM1_Initialize 0021  
                          __pcstackCOMRAM 0021                      ?_EPWM2_LoadDutyValue 002F  
                            __pidataBANK0 0528                       ??_SYSTEM_Initialize 0031  
                               ?_TMR2_ISR 0021                                 ?_TMR6_ISR 0021  
                      ??_EPWM1_Initialize 002F                          ?_TMR2_Initialize 0021  
                 __end_of_TMR6_Initialize 0458                          ?_CCP5_Initialize 0021  
                       ?_EPWM2_Initialize 0021                 __end_of_SYSTEM_Initialize 0430  
                      ??_EPWM2_Initialize 002F                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 003E                        __CFG_CCP2MX$PORTC1 000000  
                   ??_EPWM2_LoadDutyValue 0031          __end_of_TMR6_SetInterruptHandler 05E8  
                              ??_TMR2_ISR 0021                        __CFG_CCP3MX$PORTB5 000000  
                              ??_TMR6_ISR 0021                                   _CCP1CON 000FBD  
                                 _CCP2CON 000F66                                   _CCP5CON 000F54  
                                 _ECCP1AS 000FB6                                   _ECCP2AS 000F64  
                                 _ADC_ISR 0600                   __size_of_ADC_Initialize 0018  
                                 _OSCCON2 000FD2                                   _OSCTUNE 000F9B  
                                 _PWM1CON 000FB7                                   _PWM2CON 000F65  
                                 _SPBRGH1 000FB0                          ?_TMR2_StartTimer 0021  
                 __end_of_TMR6_StartTimer 05F8               __end_of_EPWM1_LoadDutyValue 0406  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0031  
                                 __pcinit 02A8                          ?_TMR6_Initialize 0021  
                                 __ramtop 1000                                   __ptext0 0302  
                                 __ptext1 0568                                   __ptext2 00AE  
                                 __ptext3 05D2                                   __ptext4 03A6  
                                 __ptext5 03D6                                   __ptext6 0406  
                                 __ptext7 0430                                   __ptext8 05F2  
                                 __ptext9 05DE                             ?_StateMEF_act 0021  
                   _OSCILLATOR_Initialize 05C4                                 _T2CONbits 000FBA  
                           ?_StateMEF_ini 0021                        _EUSART1_Initialize 059A  
                ??_PIN_MANAGER_Initialize 002F                                 _T6CONbits 000F4A  
              __size_of_SYSTEM_Initialize 002A                      end_of_initialization 02F4  
                     ?_EUSART1_Initialize 0021                             __Lmediumconst 0000  
                                 postdec1 000FE5                                   postinc0 000FEE  
                    ??_EUSART1_Initialize 002F                  _TMR6_SetInterruptHandler 05DE  
                          ??_StateMEF_act 0033                            ??_StateMEF_ini 002F  
                     EUSART1_Write@txData 002F                          ?_TMR6_StartTimer 0021  
                            _EstadoActual 003A              __end_of_INTERRUPT_Initialize 0600  
                               _Direccion 003B      __end_of_TMR2_DefaultInterruptHandler 0608  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 0606  
                           __pidataCOMRAM 0508                         __size_of_TMR2_ISR 0020  
                          _ADC_Initialize 0582                         __size_of_TMR6_ISR 0022  
                  ?_OSCILLATOR_Initialize 0021                       start_initialization 02A8  
               __size_of_EPWM1_Initialize 0024           __size_of_PIN_MANAGER_Initialize 004C  
                               _Microstep 003C              EPWM1_LoadDutyValue@dutyValue 002F  
                   __end_of_EUSART1_Write 05DE                 __size_of_EPWM2_Initialize 0024  
                  __end_of_ADC_Initialize 059A                               __pdataBANK0 0060  
                                ?_ADC_ISR 0021                                 _StepCount 0034  
           ?_TMR2_DefaultInterruptHandler 0021                    __size_of_TMR2_CallBack 0024  
                             __pbssCOMRAM 0034                  __size_of_TMR2_Initialize 0022  
                __size_of_CCP5_Initialize 0014               __end_of_EPWM2_LoadDutyValue 03D6  
                   _TMR6_InterruptHandler 0040                      __end_of_StateMEF_act 02A8  
                    __end_of_StateMEF_ini 0582                    _PIN_MANAGER_Initialize 035A  
                               __pintcode 0008                           ?_ADC_Initialize 0021  
            ??_INTERRUPT_InterruptManager 0021                          __CFG_PRICLKEN$ON 000000  
                                _BAUDCON1 000FB8                      _INTERRUPT_Initialize 05FC  
                                _LATBbits 000F8A                                  _LATCbits 000F8B  
                                _LATDbits 000F8C                             _TMR2_CallBack 04A0  
                                _PIE1bits 000F9D                                  _PIE5bits 000F7D  
                __size_of_TMR2_StartTimer 0004       __size_of_INTERRUPT_InterruptManager 00A2  
                                _PIR1bits 000F9E                                  _PIR5bits 000F7E  
            __size_of_EPWM1_LoadDutyValue 0030                ??_TMR6_SetInterruptHandler 0031  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR2_ISR 0548                                  _PSTR1CON 000FB9  
                                _PSTR2CON 000F63                                  _TMR6_ISR 04E6  
                        _Timer2Tick_count 0036                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2            ??_TMR2_DefaultInterruptHandler 0021  
                        _EPWM1_Initialize 047C         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 002F                  __size_of_TMR6_Initialize 0028  
                             _INTCON2bits 000FF1                                 copy_data0 02BC  
                               copy_data1 02DC                     ?_INTERRUPT_Initialize 0021  
                       ??_TMR2_Initialize 0031                            ?_TMR2_CallBack 0021  
                       ??_CCP5_Initialize 002F                                  __Hrparam 0000  
                            _Timer2Ticked 003D                          _EPWM2_Initialize 0458  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTC0 000000                   ??_OSCILLATOR_Initialize 002F  
             __size_of_EUSART1_Initialize 0016                                  __ptext10 04C4  
                                __ptext11 05F8                                  __ptext20 0582  
                                __ptext12 05E8                                  __ptext13 035A  
                                __ptext22 04E6                                  __ptext14 05C4  
                                __ptext23 0604                                  __ptext15 05FC  
                                __ptext24 0548                                  __ptext16 059A  
                                __ptext25 04A0                                  __ptext17 0458  
                                __ptext26 0606                                  __ptext18 047C  
                                __ptext27 0600                                  __ptext19 05B0  
                                __ptext28 0000                     __size_of_StateMEF_act 01FA  
                   __size_of_StateMEF_ini 001A                             __size_of_main 0058  
                __size_of_TMR6_StartTimer 0006                                  int$flags 0042  
                       ??_TMR2_StartTimer 002F        __end_of_INTERRUPT_InterruptManager 00AA  
              _INTERRUPT_InterruptManager 0008                              _StateMEF_act 00AE  
                              _INTCONbits 000FF2                              _StateMEF_ini 0568  
                  ??_INTERRUPT_Initialize 002F      __end_of_TMR6_DefaultInterruptHandler 0606  
   __size_of_TMR6_DefaultInterruptHandler 0002              _TMR6_DefaultInterruptHandler 0604  
                                intlevel2 0000                           ??_TMR2_CallBack 0021  
            EPWM2_LoadDutyValue@dutyValue 002F                   ?_PIN_MANAGER_Initialize 0021  
                       ??_TMR6_Initialize 0031                                _RCSTA1bits 000FAB  
                        ??_ADC_Initialize 002F                    __size_of_EUSART1_Write 000C  
                   TMR2_ISR@CountCallBack 0038                         __CFG_T3CMX$PORTC0 000000  
                     _EPWM1_LoadDutyValue 03D6            __end_of_PIN_MANAGER_Initialize 03A6  
           ?_TMR6_DefaultInterruptHandler 0021                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 003E                  __end_of_EPWM1_Initialize 04A0  
                    ?_EPWM1_LoadDutyValue 002F  
