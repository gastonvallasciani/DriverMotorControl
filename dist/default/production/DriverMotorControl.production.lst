

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Jun 26 11:25:56 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           ; Version 1.41
    53                           ; Generated 25/01/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F46K22 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataCOMRAM
    88  000A5C                     __pidataCOMRAM:
    89                           	opt stack 0
    90                           
    91                           ;initializer for _LookUP_TABLE_COS
    92  000A5C  7D                 	db	125
    93  000A5D  76                 	db	118
    94  000A5E  6C                 	db	108
    95  000A5F  5E                 	db	94
    96  000A60  4D                 	db	77
    97  000A61  39                 	db	57
    98  000A62  22                 	db	34
    99  000A63  0C                 	db	12
   100  000A64  0C                 	db	12
   101  000A65  22                 	db	34
   102  000A66  39                 	db	57
   103  000A67  4D                 	db	77
   104  000A68  5E                 	db	94
   105  000A69  6C                 	db	108
   106  000A6A  76                 	db	118
   107  000A6B  7D                 	db	125
   108  000A6C  7D                 	db	125
   109  000A6D  76                 	db	118
   110  000A6E  6C                 	db	108
   111  000A6F  5E                 	db	94
   112  000A70  4D                 	db	77
   113  000A71  39                 	db	57
   114  000A72  22                 	db	34
   115  000A73  0C                 	db	12
   116  000A74  0C                 	db	12
   117  000A75  22                 	db	34
   118  000A76  39                 	db	57
   119  000A77  4D                 	db	77
   120  000A78  5E                 	db	94
   121  000A79  6C                 	db	108
   122  000A7A  76                 	db	118
   123  000A7B  7D                 	db	125
   124                           
   125                           	psect	idataBANK0
   126  000632                     __pidataBANK0:
   127                           	opt stack 0
   128                           
   129                           ;initializer for _LookUP_TABLE_SEN_16
   130  000632  06                 	db	6
   131  000633  12                 	db	18
   132  000634  1D                 	db	29
   133  000635  2A                 	db	42
   134  000636  35                 	db	53
   135  000637  3F                 	db	63
   136  000638  49                 	db	73
   137  000639  53                 	db	83
   138  00063A  5B                 	db	91
   139  00063B  63                 	db	99
   140  00063C  6A                 	db	106
   141  00063D  70                 	db	112
   142  00063E  75                 	db	117
   143  00063F  79                 	db	121
   144  000640  7C                 	db	124
   145  000641  7E                 	db	126
   146  000642  7E                 	db	126
   147  000643  7C                 	db	124
   148  000644  79                 	db	121
   149  000645  75                 	db	117
   150  000646  70                 	db	112
   151  000647  6A                 	db	106
   152  000648  63                 	db	99
   153  000649  5B                 	db	91
   154  00064A  53                 	db	83
   155  00064B  49                 	db	73
   156  00064C  3F                 	db	63
   157  00064D  35                 	db	53
   158  00064E  2A                 	db	42
   159  00064F  1D                 	db	29
   160  000650  12                 	db	18
   161  000651  06                 	db	6
   162  000652  06                 	db	6
   163  000653  12                 	db	18
   164  000654  1D                 	db	29
   165  000655  2A                 	db	42
   166  000656  35                 	db	53
   167  000657  3F                 	db	63
   168  000658  49                 	db	73
   169  000659  53                 	db	83
   170  00065A  5B                 	db	91
   171  00065B  63                 	db	99
   172  00065C  6A                 	db	106
   173  00065D  70                 	db	112
   174  00065E  75                 	db	117
   175  00065F  79                 	db	121
   176  000660  7C                 	db	124
   177  000661  7E                 	db	126
   178  000662  7E                 	db	126
   179  000663  7C                 	db	124
   180  000664  79                 	db	121
   181  000665  75                 	db	117
   182  000666  70                 	db	112
   183  000667  6A                 	db	106
   184  000668  63                 	db	99
   185  000669  5B                 	db	91
   186  00066A  53                 	db	83
   187  00066B  49                 	db	73
   188  00066C  3F                 	db	63
   189  00066D  35                 	db	53
   190  00066E  2A                 	db	42
   191  00066F  1D                 	db	29
   192  000670  12                 	db	18
   193  000671  06                 	db	6
   194                           
   195                           ;initializer for _LookUP_TABLE_COS_16
   196  000672  7E                 	db	126
   197  000673  7C                 	db	124
   198  000674  79                 	db	121
   199  000675  75                 	db	117
   200  000676  70                 	db	112
   201  000677  6A                 	db	106
   202  000678  63                 	db	99
   203  000679  5B                 	db	91
   204  00067A  53                 	db	83
   205  00067B  49                 	db	73
   206  00067C  3F                 	db	63
   207  00067D  35                 	db	53
   208  00067E  2A                 	db	42
   209  00067F  1D                 	db	29
   210  000680  12                 	db	18
   211  000681  06                 	db	6
   212  000682  06                 	db	6
   213  000683  12                 	db	18
   214  000684  1D                 	db	29
   215  000685  2A                 	db	42
   216  000686  35                 	db	53
   217  000687  3F                 	db	63
   218  000688  49                 	db	73
   219  000689  53                 	db	83
   220  00068A  5B                 	db	91
   221  00068B  63                 	db	99
   222  00068C  6A                 	db	106
   223  00068D  70                 	db	112
   224  00068E  75                 	db	117
   225  00068F  79                 	db	121
   226  000690  7C                 	db	124
   227  000691  7E                 	db	126
   228  000692  7E                 	db	126
   229  000693  7C                 	db	124
   230  000694  79                 	db	121
   231  000695  75                 	db	117
   232  000696  70                 	db	112
   233  000697  6A                 	db	106
   234  000698  63                 	db	99
   235  000699  5B                 	db	91
   236  00069A  53                 	db	83
   237  00069B  49                 	db	73
   238  00069C  3F                 	db	63
   239  00069D  35                 	db	53
   240  00069E  2A                 	db	42
   241  00069F  1D                 	db	29
   242  0006A0  12                 	db	18
   243  0006A1  06                 	db	6
   244  0006A2  06                 	db	6
   245  0006A3  12                 	db	18
   246  0006A4  1D                 	db	29
   247  0006A5  2A                 	db	42
   248  0006A6  35                 	db	53
   249  0006A7  3F                 	db	63
   250  0006A8  49                 	db	73
   251  0006A9  53                 	db	83
   252  0006AA  5B                 	db	91
   253  0006AB  63                 	db	99
   254  0006AC  6A                 	db	106
   255  0006AD  70                 	db	112
   256  0006AE  75                 	db	117
   257  0006AF  79                 	db	121
   258  0006B0  7C                 	db	124
   259  0006B1  7E                 	db	126
   260                           
   261                           ;initializer for _LookUP_TABLE_SEN
   262  0006B2  0C                 	db	12
   263  0006B3  22                 	db	34
   264  0006B4  39                 	db	57
   265  0006B5  4D                 	db	77
   266  0006B6  5E                 	db	94
   267  0006B7  6C                 	db	108
   268  0006B8  76                 	db	118
   269  0006B9  7D                 	db	125
   270  0006BA  7D                 	db	125
   271  0006BB  76                 	db	118
   272  0006BC  6C                 	db	108
   273  0006BD  5E                 	db	94
   274  0006BE  4D                 	db	77
   275  0006BF  39                 	db	57
   276  0006C0  22                 	db	34
   277  0006C1  0C                 	db	12
   278  0006C2  0C                 	db	12
   279  0006C3  22                 	db	34
   280  0006C4  39                 	db	57
   281  0006C5  4D                 	db	77
   282  0006C6  5E                 	db	94
   283  0006C7  6C                 	db	108
   284  0006C8  76                 	db	118
   285  0006C9  7D                 	db	125
   286  0006CA  7D                 	db	125
   287  0006CB  76                 	db	118
   288  0006CC  6C                 	db	108
   289  0006CD  5E                 	db	94
   290  0006CE  4D                 	db	77
   291  0006CF  39                 	db	57
   292  0006D0  22                 	db	34
   293  0006D1  0C                 	db	12
   294                           
   295                           	psect	nvCOMRAM
   296  00004C                     __pnvCOMRAM:
   297                           	opt stack 0
   298  00004C                     _TMR2_InterruptHandler:
   299                           	opt stack 0
   300  00004C                     	ds	2
   301  00004E                     _TMR6_InterruptHandler:
   302                           	opt stack 0
   303  00004E                     	ds	2
   304  000050                     _EstadoActual:
   305                           	opt stack 0
   306  000050                     	ds	1
   307  0000                     _CCPTMRS0bits	set	3913
   308  0000                     _ANSELA	set	3896
   309  0000                     _ANSELE	set	3900
   310  0000                     _ANSELD	set	3899
   311  0000                     _ANSELB	set	3897
   312  0000                     _ANSELC	set	3898
   313  0000                     _CCPR5H	set	3926
   314  0000                     _CCPR5L	set	3925
   315  0000                     _CCP5CON	set	3924
   316  0000                     _T6CONbits	set	3914
   317  0000                     _TMR6	set	3916
   318  0000                     _PR6	set	3915
   319  0000                     _T6CON	set	3914
   320  0000                     _LATDbits	set	3980
   321  0000                     _LATCbits	set	3979
   322  0000                     _LATBbits	set	3978
   323  0000                     _TXREG1	set	4013
   324  0000                     _RCREG1	set	4014
   325  0000                     _RCSTA1bits	set	4011
   326  0000                     _SPBRGH1	set	4016
   327  0000                     _SPBRG1	set	4015
   328  0000                     _TXSTA1	set	4012
   329  0000                     _RCSTA1	set	4011
   330  0000                     _BAUDCON1	set	4024
   331  0000                     _OSCTUNE	set	3995
   332  0000                     _OSCCON2	set	4050
   333  0000                     _OSCCON	set	4051
   334  0000                     _INTCONbits	set	4082
   335  0000                     _RCONbits	set	4048
   336  0000                     _ADCON0bits	set	4034
   337  0000                     _ADRESH	set	4036
   338  0000                     _ADRESL	set	4035
   339  0000                     _ADCON2	set	4032
   340  0000                     _ADCON1	set	4033
   341  0000                     _ADCON0	set	4034
   342  0000                     _CCPR1H	set	4031
   343  0000                     _CCPR1L	set	4030
   344  0000                     _PSTR1CON	set	4025
   345  0000                     _PWM1CON	set	4023
   346  0000                     _ECCP1AS	set	4022
   347  0000                     _CCP1CON	set	4029
   348  0000                     _CCPR2H	set	3944
   349  0000                     _CCPR2L	set	3943
   350  0000                     _PSTR2CON	set	3939
   351  0000                     _PWM2CON	set	3941
   352  0000                     _ECCP2AS	set	3940
   353  0000                     _CCP2CON	set	3942
   354  0000                     _INTCON2bits	set	4081
   355  0000                     _WPUB	set	3937
   356  0000                     _TRISD	set	3989
   357  0000                     _TRISC	set	3988
   358  0000                     _TRISB	set	3987
   359  0000                     _TRISA	set	3986
   360  0000                     _TRISE	set	3990
   361  0000                     _LATC	set	3979
   362  0000                     _LATB	set	3978
   363  0000                     _LATA	set	3977
   364  0000                     _LATD	set	3980
   365  0000                     _LATE	set	3981
   366  0000                     _T2CONbits	set	4026
   367  0000                     _PIE1bits	set	3997
   368  0000                     _PIR1bits	set	3998
   369  0000                     _TMR2	set	4028
   370  0000                     _PR2	set	4027
   371  0000                     _T2CON	set	4026
   372  0000                     _PIE5bits	set	3965
   373  0000                     _PIR5bits	set	3966
   374                           
   375                           ; #config settings
   376  0000                     
   377                           	psect	cinit
   378  000850                     __pcinit:
   379                           	opt stack 0
   380  000850                     start_initialization:
   381                           	opt stack 0
   382  000850                     __initialization:
   383                           	opt stack 0
   384                           
   385                           ; Initialize objects allocated to BANK0 (160 bytes)
   386                           ; load TBLPTR registers with __pidataBANK0
   387  000850  0E32               	movlw	low __pidataBANK0
   388  000852  6EF6               	movwf	tblptrl,c
   389  000854  0E06               	movlw	high __pidataBANK0
   390  000856  6EF7               	movwf	tblptrh,c
   391  000858  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   392  00085A  6EF8               	movwf	tblptru,c
   393  00085C  EE00  F060         	lfsr	0,__pdataBANK0
   394  000860  EE10 F0A0          	lfsr	1,160
   395  000864                     copy_data0:
   396  000864  0009               	tblrd		*+
   397  000866  CFF5 FFEE          	movff	tablat,postinc0
   398  00086A  50E5               	movf	postdec1,w,c
   399  00086C  50E1               	movf	fsr1l,w,c
   400  00086E  E1FA               	bnz	copy_data0
   401                           
   402                           ; Initialize objects allocated to COMRAM (32 bytes)
   403                           ; load TBLPTR registers with __pidataCOMRAM
   404  000870  0E5C               	movlw	low __pidataCOMRAM
   405  000872  6EF6               	movwf	tblptrl,c
   406  000874  0E0A               	movlw	high __pidataCOMRAM
   407  000876  6EF7               	movwf	tblptrh,c
   408  000878  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   409  00087A  6EF8               	movwf	tblptru,c
   410  00087C  EE00  F001         	lfsr	0,__pdataCOMRAM
   411  000880  EE10 F020          	lfsr	1,32
   412  000884                     copy_data1:
   413  000884  0009               	tblrd		*+
   414  000886  CFF5 FFEE          	movff	tablat,postinc0
   415  00088A  50E5               	movf	postdec1,w,c
   416  00088C  50E1               	movf	fsr1l,w,c
   417  00088E  E1FA               	bnz	copy_data1
   418                           
   419                           ; Clear objects allocated to COMRAM (19 bytes)
   420  000890  EE00  F039         	lfsr	0,__pbssCOMRAM
   421  000894  0E13               	movlw	19
   422  000896                     clear_0:
   423  000896  6AEE               	clrf	postinc0,c
   424  000898  06E8               	decf	wreg,f,c
   425  00089A  E1FD               	bnz	clear_0
   426  00089C                     end_of_initialization:
   427                           	opt stack 0
   428  00089C                     __end_of__initialization:
   429                           	opt stack 0
   430  00089C  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   431  00089E  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   432  0008A0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   433  0008A2  6EF8               	movwf	tblptru,c
   434  0008A4  0100               	movlb	0
   435  0008A6  EFB3  F002         	goto	_main	;jump to C main() function
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           postdec1	equ	0xFE5
   443                           fsr1l	equ	0xFE1
   444                           
   445                           	psect	bssCOMRAM
   446  000039                     __pbssCOMRAM:
   447                           	opt stack 0
   448  000039                     _StepperMotor:
   449                           	opt stack 0
   450  000039                     	ds	5
   451  00003E                     _Timer2Tick_count:
   452                           	opt stack 0
   453  00003E                     	ds	2
   454  000040                     _StepCount:
   455                           	opt stack 0
   456  000040                     	ds	2
   457  000042                     _Microstep:
   458                           	opt stack 0
   459  000042                     	ds	2
   460  000044                     _ANALOG_1:
   461                           	opt stack 0
   462  000044                     	ds	2
   463  000046                     _ANALOG_0:
   464                           	opt stack 0
   465  000046                     	ds	2
   466  000048                     	ds	1
   467  000049                     _StepsComplete:
   468                           	opt stack 0
   469  000049                     	ds	1
   470  00004A                     _DelayTimerTicked:
   471                           	opt stack 0
   472  00004A                     	ds	1
   473  00004B                     _Timer2Ticked:
   474                           	opt stack 0
   475  00004B                     	ds	1
   476                           tblptru	equ	0xFF8
   477                           tblptrh	equ	0xFF7
   478                           tblptrl	equ	0xFF6
   479                           tablat	equ	0xFF5
   480                           postinc0	equ	0xFEE
   481                           wreg	equ	0xFE8
   482                           postdec1	equ	0xFE5
   483                           fsr1l	equ	0xFE1
   484                           
   485                           	psect	dataCOMRAM
   486  000001                     __pdataCOMRAM:
   487                           	opt stack 0
   488  000001                     _LookUP_TABLE_COS:
   489                           	opt stack 0
   490  000001                     	ds	32
   491                           tblptru	equ	0xFF8
   492                           tblptrh	equ	0xFF7
   493                           tblptrl	equ	0xFF6
   494                           tablat	equ	0xFF5
   495                           postinc0	equ	0xFEE
   496                           wreg	equ	0xFE8
   497                           postdec1	equ	0xFE5
   498                           fsr1l	equ	0xFE1
   499                           
   500                           	psect	dataBANK0
   501  000060                     __pdataBANK0:
   502                           	opt stack 0
   503  000060                     _LookUP_TABLE_SEN_16:
   504                           	opt stack 0
   505  000060                     	ds	64
   506  0000A0                     _LookUP_TABLE_COS_16:
   507                           	opt stack 0
   508  0000A0                     	ds	64
   509  0000E0                     _LookUP_TABLE_SEN:
   510                           	opt stack 0
   511  0000E0                     	ds	32
   512                           tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           postdec1	equ	0xFE5
   519                           fsr1l	equ	0xFE1
   520                           
   521                           	psect	cstackBANK1
   522  000100                     __pcstackBANK1:
   523                           	opt stack 0
   524  000100                     StepMove@StepNumber:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x0
   528  000100                     	ds	2
   529  000102                     StepMove@Velocidad:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x2
   533  000102                     	ds	1
   534  000103                     StepMove@microstep_number:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x3
   538  000103                     	ds	1
   539  000104                     StepMove@direccion:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x4
   543  000104                     	ds	1
   544  000105                     RectaAceleracion@velocidad:
   545                           	opt stack 0
   546  000105                     RectaFrenado@velocidad:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x5
   550  000105                     	ds	1
   551  000106                     RectaAceleracion@i:
   552                           	opt stack 0
   553  000106                     RectaFrenado@i:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x6
   557  000106                     	ds	1
   558                           tblptru	equ	0xFF8
   559                           tblptrh	equ	0xFF7
   560                           tblptrl	equ	0xFF6
   561                           tablat	equ	0xFF5
   562                           postinc0	equ	0xFEE
   563                           wreg	equ	0xFE8
   564                           postdec1	equ	0xFE5
   565                           fsr1l	equ	0xFE1
   566                           
   567                           	psect	cstackCOMRAM
   568  000021                     __pcstackCOMRAM:
   569                           	opt stack 0
   570  000021                     ??_INTERRUPT_InterruptManager:
   571  000021                     
   572                           ; 1 bytes @ 0x0
   573  000021                     	ds	14
   574  00002F                     TMR6_SetInterruptHandler@InterruptHandler:
   575                           	opt stack 0
   576  00002F                     TMR2_SetInterruptHandler@InterruptHandler:
   577                           	opt stack 0
   578  00002F                     EPWM2_LoadDutyValue@dutyValue:
   579                           	opt stack 0
   580  00002F                     EPWM1_LoadDutyValue@dutyValue:
   581                           	opt stack 0
   582  00002F                     DelayTmr2@Timeout:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0xE
   586  00002F                     	ds	2
   587  000031                     ??_EPWM2_LoadDutyValue:
   588  000031                     ??_EPWM1_LoadDutyValue:
   589  000031                     
   590                           ; 1 bytes @ 0x10
   591  000031                     	ds	2
   592  000033                     ??_State16MEF_act:
   593  000033                     ??_State8MEF_act:
   594                           
   595                           ; 1 bytes @ 0x12
   596  000033                     	ds	1
   597  000034                     State8MEF_act@direccion:
   598                           	opt stack 0
   599  000034                     State16MEF_act@direccion:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x13
   603  000034                     	ds	1
   604  000035                     ??_StepMove:
   605                           
   606                           ; 1 bytes @ 0x14
   607  000035                     	ds	2
   608  000037                     RectaAceleracion@microstep_number:
   609                           	opt stack 0
   610  000037                     RectaFrenado@microstep_number:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x16
   614  000037                     	ds	1
   615  000038                     RectaAceleracion@direccion:
   616                           	opt stack 0
   617  000038                     RectaFrenado@direccion:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x17
   621  000038                     	ds	1
   622  000039                     tblptru	equ	0xFF8
   623                           tblptrh	equ	0xFF7
   624                           tblptrl	equ	0xFF6
   625                           tablat	equ	0xFF5
   626                           postinc0	equ	0xFEE
   627                           wreg	equ	0xFE8
   628                           postdec1	equ	0xFE5
   629                           fsr1l	equ	0xFE1
   630                           
   631                           ; 1 bytes @ 0x18
   632 ;;
   633 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   634 ;;
   635 ;; *************** function _main *****************
   636 ;; Defined at:
   637 ;;		line 22 in file "main.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;Total ram usage:        0 bytes
   656 ;; Hardware stack levels required when called:    8
   657 ;; This function calls:
   658 ;;		_DelayTmr2
   659 ;;		_Motor_Stop
   660 ;;		_RectaAceleracion
   661 ;;		_RectaFrenado
   662 ;;		_SYSTEM_Initialize
   663 ;;		_StateMEF_ini
   664 ;;		_StepMove
   665 ;; This function is called by:
   666 ;;		Startup code after reset
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text0
   671  000566                     __ptext0:
   672                           	opt stack 0
   673  000566                     _main:
   674                           	opt stack 23
   675                           
   676                           ;main.c: 25: SYSTEM_Initialize();
   677                           
   678                           ;incstack = 0
   679  000566  ECAB  F004         	call	_SYSTEM_Initialize	;wreg free
   680                           
   681                           ;main.c: 26: StateMEF_ini();
   682  00056A  EC76  F005         	call	_StateMEF_ini	;wreg free
   683                           
   684                           ;main.c: 27: Timer2Ticked=0;
   685  00056E  0E00               	movlw	0
   686  000570  6E4B               	movwf	_Timer2Ticked,c	;volatile
   687                           
   688                           ;main.c: 28: DelayTimerTicked=0;
   689  000572  0E00               	movlw	0
   690  000574  6E4A               	movwf	_DelayTimerTicked,c	;volatile
   691                           
   692                           ;main.c: 29: do { LATBbits.LATB6 = 1; } while(0);
   693  000576  8C8A               	bsf	3978,6,c	;volatile
   694                           
   695                           ;main.c: 32: StepperMotor.Velocidad = 10;
   696  000578  0E0A               	movlw	10
   697  00057A  6E39               	movwf	_StepperMotor,c
   698                           
   699                           ;main.c: 33: StepperMotor.StepsNumber = 2000;
   700  00057C  0E07               	movlw	7
   701  00057E  6E3D               	movwf	_StepperMotor+4,c
   702  000580  0ED0               	movlw	208
   703  000582  6E3C               	movwf	_StepperMotor+3,c
   704                           
   705                           ;main.c: 34: StepperMotor.MicroStepNumber = 16;
   706  000584  0E10               	movlw	16
   707  000586  6E3A               	movwf	_StepperMotor+1,c
   708                           
   709                           ;main.c: 37: (INTCONbits.GIE = 1);
   710  000588  8EF2               	bsf	intcon,7,c	;volatile
   711                           
   712                           ;main.c: 40: (INTCONbits.PEIE = 1);
   713  00058A  8CF2               	bsf	intcon,6,c	;volatile
   714  00058C                     l2469:
   715                           
   716                           ;main.c: 42: {
   717                           ;main.c: 46: StepperMotor.Direccion = 1;
   718  00058C  0E01               	movlw	1
   719  00058E  6E3B               	movwf	_StepperMotor+2,c
   720                           
   721                           ;main.c: 48: RectaAceleracion( StepperMotor.Velocidad , StepperMotor.MicroStepNumber , S
      +                          tepperMotor.Direccion );
   722  000590  C03A  F037         	movff	_StepperMotor+1,RectaAceleracion@microstep_number
   723  000594  C03B  F038         	movff	_StepperMotor+2,RectaAceleracion@direccion
   724  000598  5039               	movf	_StepperMotor,w,c
   725  00059A  EC69  F003         	call	_RectaAceleracion
   726  00059E                     l2473:
   727  00059E  C03C  F100         	movff	_StepperMotor+3,StepMove@StepNumber
   728  0005A2  C03D  F101         	movff	_StepperMotor+4,StepMove@StepNumber+1
   729  0005A6  C039  F102         	movff	_StepperMotor,StepMove@Velocidad
   730  0005AA  C03A  F103         	movff	_StepperMotor+1,StepMove@microstep_number
   731  0005AE  C03B  F104         	movff	_StepperMotor+2,StepMove@direccion
   732  0005B2  ECEF  F003         	call	_StepMove	;wreg free
   733  0005B6  0900               	iorlw	0
   734  0005B8  B4D8               	btfsc	status,2,c
   735  0005BA  D7F1               	goto	l2473
   736                           
   737                           ;main.c: 50: RectaFrenado( StepperMotor.Velocidad , StepperMotor.MicroStepNumber , Stepp
      +                          erMotor.Direccion);
   738  0005BC  C03A  F037         	movff	_StepperMotor+1,RectaFrenado@microstep_number
   739  0005C0  C03B  F038         	movff	_StepperMotor+2,RectaFrenado@direccion
   740  0005C4  5039               	movf	_StepperMotor,w,c
   741  0005C6  ECAF  F003         	call	_RectaFrenado
   742                           
   743                           ;main.c: 51: Motor_Stop();
   744  0005CA  EC6D  F005         	call	_Motor_Stop	;wreg free
   745                           
   746                           ;main.c: 53: StateMEF_ini();
   747  0005CE  EC76  F005         	call	_StateMEF_ini	;wreg free
   748                           
   749                           ;main.c: 55: DelayTmr2(19230);
   750  0005D2  0E4B               	movlw	75
   751  0005D4  6E30               	movwf	DelayTmr2@Timeout+1,c
   752  0005D6  0E1E               	movlw	30
   753  0005D8  6E2F               	movwf	DelayTmr2@Timeout,c
   754  0005DA  EC3E  F005         	call	_DelayTmr2	;wreg free
   755                           
   756                           ;main.c: 57: StepperMotor.Direccion = 0;
   757  0005DE  0E00               	movlw	0
   758  0005E0  6E3B               	movwf	_StepperMotor+2,c
   759                           
   760                           ;main.c: 59: RectaAceleracion( StepperMotor.Velocidad , StepperMotor.MicroStepNumber , S
      +                          tepperMotor.Direccion);
   761  0005E2  C03A  F037         	movff	_StepperMotor+1,RectaAceleracion@microstep_number
   762  0005E6  C03B  F038         	movff	_StepperMotor+2,RectaAceleracion@direccion
   763  0005EA  5039               	movf	_StepperMotor,w,c
   764  0005EC  EC69  F003         	call	_RectaAceleracion
   765  0005F0                     l2487:
   766  0005F0  C03C  F100         	movff	_StepperMotor+3,StepMove@StepNumber
   767  0005F4  C03D  F101         	movff	_StepperMotor+4,StepMove@StepNumber+1
   768  0005F8  C039  F102         	movff	_StepperMotor,StepMove@Velocidad
   769  0005FC  C03A  F103         	movff	_StepperMotor+1,StepMove@microstep_number
   770  000600  C03B  F104         	movff	_StepperMotor+2,StepMove@direccion
   771  000604  ECEF  F003         	call	_StepMove	;wreg free
   772  000608  0900               	iorlw	0
   773  00060A  B4D8               	btfsc	status,2,c
   774  00060C  D7F1               	goto	l2487
   775                           
   776                           ;main.c: 61: RectaFrenado( StepperMotor.Velocidad , StepperMotor.MicroStepNumber , Stepp
      +                          erMotor.Direccion);
   777  00060E  C03A  F037         	movff	_StepperMotor+1,RectaFrenado@microstep_number
   778  000612  C03B  F038         	movff	_StepperMotor+2,RectaFrenado@direccion
   779  000616  5039               	movf	_StepperMotor,w,c
   780  000618  ECAF  F003         	call	_RectaFrenado
   781                           
   782                           ;main.c: 62: Motor_Stop();
   783  00061C  EC6D  F005         	call	_Motor_Stop	;wreg free
   784                           
   785                           ;main.c: 64: DelayTmr2(19230);
   786  000620  0E4B               	movlw	75
   787  000622  6E30               	movwf	DelayTmr2@Timeout+1,c
   788  000624  0E1E               	movlw	30
   789  000626  6E2F               	movwf	DelayTmr2@Timeout,c
   790  000628  EC3E  F005         	call	_DelayTmr2	;wreg free
   791                           
   792                           ;main.c: 66: StateMEF_ini();
   793  00062C  EC76  F005         	call	_StateMEF_ini	;wreg free
   794  000630  D7AD               	goto	l2469
   795  000632                     __end_of_main:
   796                           	opt stack 0
   797                           tblptru	equ	0xFF8
   798                           tblptrh	equ	0xFF7
   799                           tblptrl	equ	0xFF6
   800                           tablat	equ	0xFF5
   801                           intcon	equ	0xFF2
   802                           postinc0	equ	0xFEE
   803                           wreg	equ	0xFE8
   804                           postdec1	equ	0xFE5
   805                           fsr1l	equ	0xFE1
   806                           status	equ	0xFD8
   807                           
   808 ;; *************** function _StateMEF_ini *****************
   809 ;; Defined at:
   810 ;;		line 36 in file "MotorDriver.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, status,2
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    4
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text1
   839  000AEC                     __ptext1:
   840                           	opt stack 0
   841  000AEC                     _StateMEF_ini:
   842                           	opt stack 26
   843                           
   844                           ;MotorDriver.c: 38: EstadoActual = STATE1;
   845                           
   846                           ;incstack = 0
   847  000AEC  0E01               	movlw	1
   848  000AEE  6E50               	movwf	_EstadoActual,c
   849                           
   850                           ;MotorDriver.c: 39: Microstep=0;
   851  000AF0  0E00               	movlw	0
   852  000AF2  6E43               	movwf	_Microstep+1,c
   853  000AF4  0E00               	movlw	0
   854  000AF6  6E42               	movwf	_Microstep,c
   855  000AF8  0012               	return		;funcret
   856  000AFA                     __end_of_StateMEF_ini:
   857                           	opt stack 0
   858                           tblptru	equ	0xFF8
   859                           tblptrh	equ	0xFF7
   860                           tblptrl	equ	0xFF6
   861                           tablat	equ	0xFF5
   862                           intcon	equ	0xFF2
   863                           postinc0	equ	0xFEE
   864                           wreg	equ	0xFE8
   865                           postdec1	equ	0xFE5
   866                           fsr1l	equ	0xFE1
   867                           status	equ	0xFD8
   868                           
   869 ;; *************** function _SYSTEM_Initialize *****************
   870 ;; Defined at:
   871 ;;		line 111 in file "mcc_generated_files/mcc.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;		None
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;Total ram usage:        0 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    6
   892 ;; This function calls:
   893 ;;		_ADC_Initialize
   894 ;;		_CCP5_Initialize
   895 ;;		_EPWM1_Initialize
   896 ;;		_EPWM2_Initialize
   897 ;;		_EUSART1_Initialize
   898 ;;		_INTERRUPT_Initialize
   899 ;;		_OSCILLATOR_Initialize
   900 ;;		_PIN_MANAGER_Initialize
   901 ;;		_TMR2_Initialize
   902 ;;		_TMR6_Initialize
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text2
   909  000956                     __ptext2:
   910                           	opt stack 0
   911  000956                     _SYSTEM_Initialize:
   912                           	opt stack 24
   913                           
   914                           ;mcc.c: 114: INTERRUPT_Initialize();
   915                           
   916                           ;incstack = 0
   917  000956  EC97  F005         	call	_INTERRUPT_Initialize	;wreg free
   918                           
   919                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   920  00095A  EC55  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   921                           
   922                           ;mcc.c: 116: OSCILLATOR_Initialize();
   923  00095E  EC7D  F005         	call	_OSCILLATOR_Initialize	;wreg free
   924                           
   925                           ;mcc.c: 117: TMR6_Initialize();
   926  000962  ECC0  F004         	call	_TMR6_Initialize	;wreg free
   927                           
   928                           ;mcc.c: 118: EPWM2_Initialize();
   929  000966  ECE8  F004         	call	_EPWM2_Initialize	;wreg free
   930                           
   931                           ;mcc.c: 119: CCP5_Initialize();
   932  00096A  EC63  F005         	call	_CCP5_Initialize	;wreg free
   933                           
   934                           ;mcc.c: 120: ADC_Initialize();
   935  00096E  EC4C  F005         	call	_ADC_Initialize	;wreg free
   936                           
   937                           ;mcc.c: 121: EPWM1_Initialize();
   938  000972  ECFA  F004         	call	_EPWM1_Initialize	;wreg free
   939                           
   940                           ;mcc.c: 122: TMR2_Initialize();
   941  000976  EC0C  F005         	call	_TMR2_Initialize	;wreg free
   942                           
   943                           ;mcc.c: 123: EUSART1_Initialize();
   944  00097A  EC58  F005         	call	_EUSART1_Initialize	;wreg free
   945  00097E  0012               	return		;funcret
   946  000980                     __end_of_SYSTEM_Initialize:
   947                           	opt stack 0
   948                           tblptru	equ	0xFF8
   949                           tblptrh	equ	0xFF7
   950                           tblptrl	equ	0xFF6
   951                           tablat	equ	0xFF5
   952                           intcon	equ	0xFF2
   953                           postinc0	equ	0xFEE
   954                           wreg	equ	0xFE8
   955                           postdec1	equ	0xFE5
   956                           fsr1l	equ	0xFE1
   957                           status	equ	0xFD8
   958                           
   959 ;; *************** function _TMR6_Initialize *****************
   960 ;; Defined at:
   961 ;;		line 63 in file "mcc_generated_files/tmr6.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    5
   982 ;; This function calls:
   983 ;;		_TMR6_SetInterruptHandler
   984 ;;		_TMR6_StartTimer
   985 ;; This function is called by:
   986 ;;		_SYSTEM_Initialize
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text3
   991  000980                     __ptext3:
   992                           	opt stack 0
   993  000980                     _TMR6_Initialize:
   994                           	opt stack 24
   995                           
   996                           ;tmr6.c: 68: T6CON = 0x01;
   997                           
   998                           ;incstack = 0
   999  000980  0E01               	movlw	1
  1000  000982  010F               	movlb	15	; () banked
  1001  000984  6F4A               	movwf	74,b	;volatile
  1002                           
  1003                           ;tmr6.c: 71: PR6 = 0x45;
  1004  000986  0E45               	movlw	69
  1005  000988  010F               	movlb	15	; () banked
  1006  00098A  6F4B               	movwf	75,b	;volatile
  1007                           
  1008                           ;tmr6.c: 74: TMR6 = 0x00;
  1009  00098C  0E00               	movlw	0
  1010  00098E  010F               	movlb	15	; () banked
  1011  000990  6F4C               	movwf	76,b	;volatile
  1012                           
  1013                           ; BSR set to: 15
  1014                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
  1015  000992  947E               	bcf	3966,2,c	;volatile
  1016                           
  1017                           ; BSR set to: 15
  1018                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
  1019  000994  847D               	bsf	3965,2,c	;volatile
  1020                           
  1021                           ; BSR set to: 15
  1022                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  1023  000996  0E36               	movlw	low _TMR6_DefaultInterruptHandler
  1024  000998  6E2F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  1025  00099A  0E0B               	movlw	high _TMR6_DefaultInterruptHandler
  1026  00099C  6E30               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  1027  00099E  EC84  F005         	call	_TMR6_SetInterruptHandler	;wreg free
  1028                           
  1029                           ;tmr6.c: 86: TMR6_StartTimer();
  1030  0009A2  EC92  F005         	call	_TMR6_StartTimer	;wreg free
  1031  0009A6  0012               	return		;funcret
  1032  0009A8                     __end_of_TMR6_Initialize:
  1033                           	opt stack 0
  1034                           tblptru	equ	0xFF8
  1035                           tblptrh	equ	0xFF7
  1036                           tblptrl	equ	0xFF6
  1037                           tablat	equ	0xFF5
  1038                           intcon	equ	0xFF2
  1039                           postinc0	equ	0xFEE
  1040                           wreg	equ	0xFE8
  1041                           postdec1	equ	0xFE5
  1042                           fsr1l	equ	0xFE1
  1043                           status	equ	0xFD8
  1044                           
  1045 ;; *************** function _TMR6_StartTimer *****************
  1046 ;; Defined at:
  1047 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		None
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;Total ram usage:        0 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    4
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_TMR6_Initialize
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text4
  1076  000B24                     __ptext4:
  1077                           	opt stack 0
  1078  000B24                     _TMR6_StartTimer:
  1079                           	opt stack 24
  1080                           
  1081                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  1082                           
  1083                           ;incstack = 0
  1084  000B24  010F               	movlb	15	; () banked
  1085  000B26  854A               	bsf	74,2,b	;volatile
  1086                           
  1087                           ; BSR set to: 15
  1088  000B28  0012               	return		;funcret
  1089  000B2A                     __end_of_TMR6_StartTimer:
  1090                           	opt stack 0
  1091                           tblptru	equ	0xFF8
  1092                           tblptrh	equ	0xFF7
  1093                           tblptrl	equ	0xFF6
  1094                           tablat	equ	0xFF5
  1095                           intcon	equ	0xFF2
  1096                           postinc0	equ	0xFEE
  1097                           wreg	equ	0xFE8
  1098                           postdec1	equ	0xFE5
  1099                           fsr1l	equ	0xFE1
  1100                           status	equ	0xFD8
  1101                           
  1102 ;; *************** function _TMR6_SetInterruptHandler *****************
  1103 ;; Defined at:
  1104 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1107 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2, status,0
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;Total ram usage:        2 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    4
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_TMR6_Initialize
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text5
  1134  000B08                     __ptext5:
  1135                           	opt stack 0
  1136  000B08                     _TMR6_SetInterruptHandler:
  1137                           	opt stack 24
  1138                           
  1139                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  1140                           
  1141                           ; BSR set to: 15
  1142                           ;incstack = 0
  1143  000B08  C02F  F04E         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  1144  000B0C  C030  F04F         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  1145  000B10  0012               	return		;funcret
  1146  000B12                     __end_of_TMR6_SetInterruptHandler:
  1147                           	opt stack 0
  1148                           tblptru	equ	0xFF8
  1149                           tblptrh	equ	0xFF7
  1150                           tblptrl	equ	0xFF6
  1151                           tablat	equ	0xFF5
  1152                           intcon	equ	0xFF2
  1153                           postinc0	equ	0xFEE
  1154                           wreg	equ	0xFE8
  1155                           postdec1	equ	0xFE5
  1156                           fsr1l	equ	0xFE1
  1157                           status	equ	0xFD8
  1158                           
  1159 ;; *************** function _TMR2_Initialize *****************
  1160 ;; Defined at:
  1161 ;;		line 68 in file "mcc_generated_files/tmr2.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg, status,2, status,0, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;Total ram usage:        0 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:    5
  1182 ;; This function calls:
  1183 ;;		_TMR2_SetInterruptHandler
  1184 ;;		_TMR2_StartTimer
  1185 ;; This function is called by:
  1186 ;;		_SYSTEM_Initialize
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text6
  1191  000A18                     __ptext6:
  1192                           	opt stack 0
  1193  000A18                     _TMR2_Initialize:
  1194                           	opt stack 24
  1195                           
  1196                           ;tmr2.c: 73: T2CON = 0x02;
  1197                           
  1198                           ;incstack = 0
  1199  000A18  0E02               	movlw	2
  1200  000A1A  6EBA               	movwf	4026,c	;volatile
  1201                           
  1202                           ;tmr2.c: 76: PR2 = 0x0C;
  1203  000A1C  0E0C               	movlw	12
  1204  000A1E  6EBB               	movwf	4027,c	;volatile
  1205                           
  1206                           ;tmr2.c: 79: TMR2 = 0x00;
  1207  000A20  0E00               	movlw	0
  1208  000A22  6EBC               	movwf	4028,c	;volatile
  1209                           
  1210                           ;tmr2.c: 82: PIR1bits.TMR2IF = 0;
  1211  000A24  929E               	bcf	3998,1,c	;volatile
  1212                           
  1213                           ;tmr2.c: 85: PIE1bits.TMR2IE = 1;
  1214  000A26  829D               	bsf	3997,1,c	;volatile
  1215                           
  1216                           ;tmr2.c: 88: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  1217  000A28  0E38               	movlw	low _TMR2_DefaultInterruptHandler
  1218  000A2A  6E2F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  1219  000A2C  0E0B               	movlw	high _TMR2_DefaultInterruptHandler
  1220  000A2E  6E30               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  1221  000A30  EC89  F005         	call	_TMR2_SetInterruptHandler	;wreg free
  1222                           
  1223                           ;tmr2.c: 91: TMR2_StartTimer();
  1224  000A34  EC95  F005         	call	_TMR2_StartTimer	;wreg free
  1225  000A38  0012               	return		;funcret
  1226  000A3A                     __end_of_TMR2_Initialize:
  1227                           	opt stack 0
  1228                           tblptru	equ	0xFF8
  1229                           tblptrh	equ	0xFF7
  1230                           tblptrl	equ	0xFF6
  1231                           tablat	equ	0xFF5
  1232                           intcon	equ	0xFF2
  1233                           postinc0	equ	0xFEE
  1234                           wreg	equ	0xFE8
  1235                           postdec1	equ	0xFE5
  1236                           fsr1l	equ	0xFE1
  1237                           status	equ	0xFD8
  1238                           
  1239 ;; *************** function _TMR2_StartTimer *****************
  1240 ;; Defined at:
  1241 ;;		line 94 in file "mcc_generated_files/tmr2.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		None
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;Total ram usage:        0 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    4
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_TMR2_Initialize
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text7
  1270  000B2A                     __ptext7:
  1271                           	opt stack 0
  1272  000B2A                     _TMR2_StartTimer:
  1273                           	opt stack 24
  1274                           
  1275                           ;tmr2.c: 97: T2CONbits.TMR2ON = 1;
  1276                           
  1277                           ;incstack = 0
  1278  000B2A  84BA               	bsf	4026,2,c	;volatile
  1279  000B2C  0012               	return		;funcret
  1280  000B2E                     __end_of_TMR2_StartTimer:
  1281                           	opt stack 0
  1282                           tblptru	equ	0xFF8
  1283                           tblptrh	equ	0xFF7
  1284                           tblptrl	equ	0xFF6
  1285                           tablat	equ	0xFF5
  1286                           intcon	equ	0xFF2
  1287                           postinc0	equ	0xFEE
  1288                           wreg	equ	0xFE8
  1289                           postdec1	equ	0xFE5
  1290                           fsr1l	equ	0xFE1
  1291                           status	equ	0xFD8
  1292                           
  1293 ;; *************** function _TMR2_SetInterruptHandler *****************
  1294 ;; Defined at:
  1295 ;;		line 150 in file "mcc_generated_files/tmr2.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1298 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;		None
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, status,2, status,0
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1310 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;Total ram usage:        2 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    4
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_TMR2_Initialize
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text8
  1325  000B12                     __ptext8:
  1326                           	opt stack 0
  1327  000B12                     _TMR2_SetInterruptHandler:
  1328                           	opt stack 24
  1329                           
  1330                           ;tmr2.c: 151: TMR2_InterruptHandler = InterruptHandler;
  1331                           
  1332                           ;incstack = 0
  1333  000B12  C02F  F04C         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1334  000B16  C030  F04D         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1335  000B1A  0012               	return		;funcret
  1336  000B1C                     __end_of_TMR2_SetInterruptHandler:
  1337                           	opt stack 0
  1338                           tblptru	equ	0xFF8
  1339                           tblptrh	equ	0xFF7
  1340                           tblptrl	equ	0xFF6
  1341                           tablat	equ	0xFF5
  1342                           intcon	equ	0xFF2
  1343                           postinc0	equ	0xFEE
  1344                           wreg	equ	0xFE8
  1345                           postdec1	equ	0xFE5
  1346                           fsr1l	equ	0xFE1
  1347                           status	equ	0xFD8
  1348                           
  1349 ;; *************** function _PIN_MANAGER_Initialize *****************
  1350 ;; Defined at:
  1351 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;		None
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      void 
  1358 ;; Registers used:
  1359 ;;		wreg, status,2
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;Total ram usage:        0 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    4
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_SYSTEM_Initialize
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text9
  1380  0008AA                     __ptext9:
  1381                           	opt stack 0
  1382  0008AA                     _PIN_MANAGER_Initialize:
  1383                           	opt stack 25
  1384                           
  1385                           ;pin_manager.c: 56: LATE = 0x00;
  1386                           
  1387                           ;incstack = 0
  1388  0008AA  0E00               	movlw	0
  1389  0008AC  6E8D               	movwf	3981,c	;volatile
  1390                           
  1391                           ;pin_manager.c: 57: LATD = 0x00;
  1392  0008AE  0E00               	movlw	0
  1393  0008B0  6E8C               	movwf	3980,c	;volatile
  1394                           
  1395                           ;pin_manager.c: 58: LATA = 0x00;
  1396  0008B2  0E00               	movlw	0
  1397  0008B4  6E89               	movwf	3977,c	;volatile
  1398                           
  1399                           ;pin_manager.c: 59: LATB = 0x00;
  1400  0008B6  0E00               	movlw	0
  1401  0008B8  6E8A               	movwf	3978,c	;volatile
  1402                           
  1403                           ;pin_manager.c: 60: LATC = 0x00;
  1404  0008BA  0E00               	movlw	0
  1405  0008BC  6E8B               	movwf	3979,c	;volatile
  1406                           
  1407                           ;pin_manager.c: 65: TRISE = 0x07;
  1408  0008BE  0E07               	movlw	7
  1409  0008C0  6E96               	movwf	3990,c	;volatile
  1410                           
  1411                           ;pin_manager.c: 66: TRISA = 0xEB;
  1412  0008C2  0EEB               	movlw	235
  1413  0008C4  6E92               	movwf	3986,c	;volatile
  1414                           
  1415                           ;pin_manager.c: 67: TRISB = 0xBF;
  1416  0008C6  0EBF               	movlw	191
  1417  0008C8  6E93               	movwf	3987,c	;volatile
  1418                           
  1419                           ;pin_manager.c: 68: TRISC = 0xB8;
  1420  0008CA  0EB8               	movlw	184
  1421  0008CC  6E94               	movwf	3988,c	;volatile
  1422                           
  1423                           ;pin_manager.c: 69: TRISD = 0xDF;
  1424  0008CE  0EDF               	movlw	223
  1425  0008D0  6E95               	movwf	3989,c	;volatile
  1426                           
  1427                           ;pin_manager.c: 74: ANSELC = 0x38;
  1428  0008D2  0E38               	movlw	56
  1429  0008D4  010F               	movlb	15	; () banked
  1430  0008D6  6F3A               	movwf	58,b	;volatile
  1431                           
  1432                           ;pin_manager.c: 75: ANSELB = 0x3E;
  1433  0008D8  0E3E               	movlw	62
  1434  0008DA  010F               	movlb	15	; () banked
  1435  0008DC  6F39               	movwf	57,b	;volatile
  1436                           
  1437                           ;pin_manager.c: 76: ANSELD = 0xDF;
  1438  0008DE  0EDF               	movlw	223
  1439  0008E0  010F               	movlb	15	; () banked
  1440  0008E2  6F3B               	movwf	59,b	;volatile
  1441                           
  1442                           ;pin_manager.c: 77: ANSELE = 0x03;
  1443  0008E4  0E03               	movlw	3
  1444  0008E6  010F               	movlb	15	; () banked
  1445  0008E8  6F3C               	movwf	60,b	;volatile
  1446                           
  1447                           ;pin_manager.c: 78: ANSELA = 0x2B;
  1448  0008EA  0E2B               	movlw	43
  1449  0008EC  010F               	movlb	15	; () banked
  1450  0008EE  6F38               	movwf	56,b	;volatile
  1451                           
  1452                           ; BSR set to: 15
  1453                           ;pin_manager.c: 83: WPUB = 0xFF;
  1454  0008F0  6861               	setf	3937,c	;volatile
  1455                           
  1456                           ; BSR set to: 15
  1457                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1458  0008F2  9EF1               	bcf	intcon2,7,c	;volatile
  1459                           
  1460                           ; BSR set to: 15
  1461  0008F4  0012               	return		;funcret
  1462  0008F6                     __end_of_PIN_MANAGER_Initialize:
  1463                           	opt stack 0
  1464                           tblptru	equ	0xFF8
  1465                           tblptrh	equ	0xFF7
  1466                           tblptrl	equ	0xFF6
  1467                           tablat	equ	0xFF5
  1468                           intcon	equ	0xFF2
  1469                           intcon2	equ	0xFF1
  1470                           postinc0	equ	0xFEE
  1471                           wreg	equ	0xFE8
  1472                           postdec1	equ	0xFE5
  1473                           fsr1l	equ	0xFE1
  1474                           status	equ	0xFD8
  1475                           
  1476 ;; *************** function _OSCILLATOR_Initialize *****************
  1477 ;; Defined at:
  1478 ;;		line 126 in file "mcc_generated_files/mcc.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;Total ram usage:        0 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    4
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_SYSTEM_Initialize
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text10
  1507  000AFA                     __ptext10:
  1508                           	opt stack 0
  1509  000AFA                     _OSCILLATOR_Initialize:
  1510                           	opt stack 25
  1511                           
  1512                           ;mcc.c: 129: OSCCON = 0x70;
  1513                           
  1514                           ; BSR set to: 15
  1515                           ;incstack = 0
  1516  000AFA  0E70               	movlw	112
  1517  000AFC  6ED3               	movwf	4051,c	;volatile
  1518                           
  1519                           ;mcc.c: 131: OSCCON2 = 0x04;
  1520  000AFE  0E04               	movlw	4
  1521  000B00  6ED2               	movwf	4050,c	;volatile
  1522                           
  1523                           ;mcc.c: 133: OSCTUNE = 0x00;
  1524  000B02  0E00               	movlw	0
  1525  000B04  6E9B               	movwf	3995,c	;volatile
  1526  000B06  0012               	return		;funcret
  1527  000B08                     __end_of_OSCILLATOR_Initialize:
  1528                           	opt stack 0
  1529                           tblptru	equ	0xFF8
  1530                           tblptrh	equ	0xFF7
  1531                           tblptrl	equ	0xFF6
  1532                           tablat	equ	0xFF5
  1533                           intcon	equ	0xFF2
  1534                           intcon2	equ	0xFF1
  1535                           postinc0	equ	0xFEE
  1536                           wreg	equ	0xFE8
  1537                           postdec1	equ	0xFE5
  1538                           fsr1l	equ	0xFE1
  1539                           status	equ	0xFD8
  1540                           
  1541 ;; *************** function _INTERRUPT_Initialize *****************
  1542 ;; Defined at:
  1543 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		None
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;Total ram usage:        0 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    4
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_SYSTEM_Initialize
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text11
  1572  000B2E                     __ptext11:
  1573                           	opt stack 0
  1574  000B2E                     _INTERRUPT_Initialize:
  1575                           	opt stack 25
  1576                           
  1577                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1578                           
  1579                           ;incstack = 0
  1580  000B2E  9ED0               	bcf	4048,7,c	;volatile
  1581  000B30  0012               	return		;funcret
  1582  000B32                     __end_of_INTERRUPT_Initialize:
  1583                           	opt stack 0
  1584                           tblptru	equ	0xFF8
  1585                           tblptrh	equ	0xFF7
  1586                           tblptrl	equ	0xFF6
  1587                           tablat	equ	0xFF5
  1588                           intcon	equ	0xFF2
  1589                           intcon2	equ	0xFF1
  1590                           postinc0	equ	0xFEE
  1591                           wreg	equ	0xFE8
  1592                           postdec1	equ	0xFE5
  1593                           fsr1l	equ	0xFE1
  1594                           status	equ	0xFD8
  1595                           
  1596 ;; *************** function _EUSART1_Initialize *****************
  1597 ;; Defined at:
  1598 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;Total ram usage:        0 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    4
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_SYSTEM_Initialize
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text12
  1627  000AB0                     __ptext12:
  1628                           	opt stack 0
  1629  000AB0                     _EUSART1_Initialize:
  1630                           	opt stack 25
  1631                           
  1632                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1633                           
  1634                           ;incstack = 0
  1635  000AB0  0E08               	movlw	8
  1636  000AB2  6EB8               	movwf	4024,c	;volatile
  1637                           
  1638                           ;eusart1.c: 63: RCSTA1 = 0x90;
  1639  000AB4  0E90               	movlw	144
  1640  000AB6  6EAB               	movwf	4011,c	;volatile
  1641                           
  1642                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1643  000AB8  0E24               	movlw	36
  1644  000ABA  6EAC               	movwf	4012,c	;volatile
  1645                           
  1646                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  1647  000ABC  0EA0               	movlw	160
  1648  000ABE  6EAF               	movwf	4015,c	;volatile
  1649                           
  1650                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  1651  000AC0  0E01               	movlw	1
  1652  000AC2  6EB0               	movwf	4016,c	;volatile
  1653  000AC4  0012               	return		;funcret
  1654  000AC6                     __end_of_EUSART1_Initialize:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           intcon	equ	0xFF2
  1661                           intcon2	equ	0xFF1
  1662                           postinc0	equ	0xFEE
  1663                           wreg	equ	0xFE8
  1664                           postdec1	equ	0xFE5
  1665                           fsr1l	equ	0xFE1
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function _EPWM2_Initialize *****************
  1669 ;; Defined at:
  1670 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;		None
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, status,2
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;Total ram usage:        0 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:    4
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_SYSTEM_Initialize
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text13
  1699  0009D0                     __ptext13:
  1700                           	opt stack 0
  1701  0009D0                     _EPWM2_Initialize:
  1702                           	opt stack 25
  1703                           
  1704                           ;epwm2.c: 68: CCP2CON = 0x3C;
  1705                           
  1706                           ;incstack = 0
  1707  0009D0  0E3C               	movlw	60
  1708  0009D2  6E66               	movwf	3942,c	;volatile
  1709                           
  1710                           ;epwm2.c: 71: ECCP2AS = 0x00;
  1711  0009D4  0E00               	movlw	0
  1712  0009D6  6E64               	movwf	3940,c	;volatile
  1713                           
  1714                           ;epwm2.c: 74: PWM2CON = 0x80;
  1715  0009D8  0E80               	movlw	128
  1716  0009DA  6E65               	movwf	3941,c	;volatile
  1717                           
  1718                           ;epwm2.c: 77: PSTR2CON = 0x03;
  1719  0009DC  0E03               	movlw	3
  1720  0009DE  6E63               	movwf	3939,c	;volatile
  1721                           
  1722                           ;epwm2.c: 80: CCPR2L = 0x14;
  1723  0009E0  0E14               	movlw	20
  1724  0009E2  6E67               	movwf	3943,c	;volatile
  1725                           
  1726                           ;epwm2.c: 83: CCPR2H = 0x00;
  1727  0009E4  0E00               	movlw	0
  1728  0009E6  6E68               	movwf	3944,c	;volatile
  1729                           
  1730                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  1731  0009E8  010F               	movlb	15	; () banked
  1732  0009EA  5149               	movf	73,w,b	;volatile
  1733  0009EC  0BE7               	andlw	-25
  1734  0009EE  0910               	iorlw	16
  1735  0009F0  6F49               	movwf	73,b	;volatile
  1736                           
  1737                           ; BSR set to: 15
  1738  0009F2  0012               	return		;funcret
  1739  0009F4                     __end_of_EPWM2_Initialize:
  1740                           	opt stack 0
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           intcon	equ	0xFF2
  1746                           intcon2	equ	0xFF1
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec1	equ	0xFE5
  1750                           fsr1l	equ	0xFE1
  1751                           status	equ	0xFD8
  1752                           
  1753 ;; *************** function _EPWM1_Initialize *****************
  1754 ;; Defined at:
  1755 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;Total ram usage:        0 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    4
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_SYSTEM_Initialize
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text14
  1784  0009F4                     __ptext14:
  1785                           	opt stack 0
  1786  0009F4                     _EPWM1_Initialize:
  1787                           	opt stack 25
  1788                           
  1789                           ;epwm1.c: 68: CCP1CON = 0x3C;
  1790                           
  1791                           ; BSR set to: 15
  1792                           ;incstack = 0
  1793  0009F4  0E3C               	movlw	60
  1794  0009F6  6EBD               	movwf	4029,c	;volatile
  1795                           
  1796                           ;epwm1.c: 71: ECCP1AS = 0x00;
  1797  0009F8  0E00               	movlw	0
  1798  0009FA  6EB6               	movwf	4022,c	;volatile
  1799                           
  1800                           ;epwm1.c: 74: PWM1CON = 0x80;
  1801  0009FC  0E80               	movlw	128
  1802  0009FE  6EB7               	movwf	4023,c	;volatile
  1803                           
  1804                           ;epwm1.c: 77: PSTR1CON = 0x03;
  1805  000A00  0E03               	movlw	3
  1806  000A02  6EB9               	movwf	4025,c	;volatile
  1807                           
  1808                           ;epwm1.c: 80: CCPR1L = 0x14;
  1809  000A04  0E14               	movlw	20
  1810  000A06  6EBE               	movwf	4030,c	;volatile
  1811                           
  1812                           ;epwm1.c: 83: CCPR1H = 0x00;
  1813  000A08  0E00               	movlw	0
  1814  000A0A  6EBF               	movwf	4031,c	;volatile
  1815                           
  1816                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  1817  000A0C  010F               	movlb	15	; () banked
  1818  000A0E  5149               	movf	73,w,b	;volatile
  1819  000A10  0BFC               	andlw	-4
  1820  000A12  0902               	iorlw	2
  1821  000A14  6F49               	movwf	73,b	;volatile
  1822                           
  1823                           ; BSR set to: 15
  1824  000A16  0012               	return		;funcret
  1825  000A18                     __end_of_EPWM1_Initialize:
  1826                           	opt stack 0
  1827                           tblptru	equ	0xFF8
  1828                           tblptrh	equ	0xFF7
  1829                           tblptrl	equ	0xFF6
  1830                           tablat	equ	0xFF5
  1831                           intcon	equ	0xFF2
  1832                           intcon2	equ	0xFF1
  1833                           postinc0	equ	0xFEE
  1834                           wreg	equ	0xFE8
  1835                           postdec1	equ	0xFE5
  1836                           fsr1l	equ	0xFE1
  1837                           status	equ	0xFD8
  1838                           
  1839 ;; *************** function _CCP5_Initialize *****************
  1840 ;; Defined at:
  1841 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;Total ram usage:        0 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    4
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_SYSTEM_Initialize
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text15
  1870  000AC6                     __ptext15:
  1871                           	opt stack 0
  1872  000AC6                     _CCP5_Initialize:
  1873                           	opt stack 25
  1874                           
  1875                           ;ccp5.c: 60: CCP5CON = 0x00;
  1876                           
  1877                           ; BSR set to: 15
  1878                           ;incstack = 0
  1879  000AC6  0E00               	movlw	0
  1880  000AC8  010F               	movlb	15	; () banked
  1881  000ACA  6F54               	movwf	84,b	;volatile
  1882                           
  1883                           ;ccp5.c: 62: CCPR5L = 0x00;
  1884  000ACC  0E00               	movlw	0
  1885  000ACE  010F               	movlb	15	; () banked
  1886  000AD0  6F55               	movwf	85,b	;volatile
  1887                           
  1888                           ;ccp5.c: 64: CCPR5H = 0x00;
  1889  000AD2  0E00               	movlw	0
  1890  000AD4  010F               	movlb	15	; () banked
  1891  000AD6  6F56               	movwf	86,b	;volatile
  1892                           
  1893                           ; BSR set to: 15
  1894  000AD8  0012               	return		;funcret
  1895  000ADA                     __end_of_CCP5_Initialize:
  1896                           	opt stack 0
  1897                           tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           tblptrl	equ	0xFF6
  1900                           tablat	equ	0xFF5
  1901                           intcon	equ	0xFF2
  1902                           intcon2	equ	0xFF1
  1903                           postinc0	equ	0xFEE
  1904                           wreg	equ	0xFE8
  1905                           postdec1	equ	0xFE5
  1906                           fsr1l	equ	0xFE1
  1907                           status	equ	0xFD8
  1908                           
  1909 ;; *************** function _ADC_Initialize *****************
  1910 ;; Defined at:
  1911 ;;		line 61 in file "mcc_generated_files/adc.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;Total ram usage:        0 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    4
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_SYSTEM_Initialize
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text16
  1940  000A98                     __ptext16:
  1941                           	opt stack 0
  1942  000A98                     _ADC_Initialize:
  1943                           	opt stack 25
  1944                           
  1945                           ;adc.c: 66: ADCON0 = 0x01;
  1946                           
  1947                           ; BSR set to: 15
  1948                           ;incstack = 0
  1949  000A98  0E01               	movlw	1
  1950  000A9A  6EC2               	movwf	4034,c	;volatile
  1951                           
  1952                           ;adc.c: 69: ADCON1 = 0x00;
  1953  000A9C  0E00               	movlw	0
  1954  000A9E  6EC1               	movwf	4033,c	;volatile
  1955                           
  1956                           ;adc.c: 72: ADCON2 = 0x05;
  1957  000AA0  0E05               	movlw	5
  1958  000AA2  6EC0               	movwf	4032,c	;volatile
  1959                           
  1960                           ;adc.c: 75: ADRESL = 0x00;
  1961  000AA4  0E00               	movlw	0
  1962  000AA6  6EC3               	movwf	4035,c	;volatile
  1963                           
  1964                           ;adc.c: 78: ADRESH = 0x00;
  1965  000AA8  0E00               	movlw	0
  1966  000AAA  6EC4               	movwf	4036,c	;volatile
  1967                           
  1968                           ;adc.c: 81: PIE1bits.ADIE = 1;
  1969  000AAC  8C9D               	bsf	3997,6,c	;volatile
  1970  000AAE  0012               	return		;funcret
  1971  000AB0                     __end_of_ADC_Initialize:
  1972                           	opt stack 0
  1973                           tblptru	equ	0xFF8
  1974                           tblptrh	equ	0xFF7
  1975                           tblptrl	equ	0xFF6
  1976                           tablat	equ	0xFF5
  1977                           intcon	equ	0xFF2
  1978                           intcon2	equ	0xFF1
  1979                           postinc0	equ	0xFEE
  1980                           wreg	equ	0xFE8
  1981                           postdec1	equ	0xFE5
  1982                           fsr1l	equ	0xFE1
  1983                           status	equ	0xFD8
  1984                           
  1985 ;; *************** function _RectaFrenado *****************
  1986 ;; Defined at:
  1987 ;;		line 336 in file "MotorDriver.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  velocidad       1    wreg     unsigned char 
  1990 ;;  microstep_nu    1   22[COMRAM] unsigned char 
  1991 ;;  direccion       1   23[COMRAM] unsigned char 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  velocidad       1    5[BANK1 ] unsigned char 
  1994 ;;  i               1    6[BANK1 ] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;      Totals:         2       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;Total ram usage:        4 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    7
  2011 ;; This function calls:
  2012 ;;		_StepMove
  2013 ;; This function is called by:
  2014 ;;		_main
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text17
  2019  00075E                     __ptext17:
  2020                           	opt stack 0
  2021  00075E                     _RectaFrenado:
  2022                           	opt stack 23
  2023                           
  2024                           ;incstack = 0
  2025                           ;RectaFrenado@velocidad stored from wreg
  2026  00075E  0101               	movlb	1	; () banked
  2027  000760  6F05               	movwf	RectaFrenado@velocidad& (0+255),b
  2028                           
  2029                           ;MotorDriver.c: 337: uint8_t i;
  2030                           ;MotorDriver.c: 338: if (microstep_number == 8){
  2031  000762  0E08               	movlw	8
  2032  000764  1837               	xorwf	RectaFrenado@microstep_number,w,c
  2033  000766  A4D8               	btfss	status,2,c
  2034  000768  D01B               	goto	l2435
  2035                           
  2036                           ;MotorDriver.c: 339: for (i=velocidad;i<30;i++){
  2037  00076A  C105  F106         	movff	RectaFrenado@velocidad,RectaFrenado@i
  2038  00076E                     l2425:
  2039  00076E  0E1D               	movlw	29
  2040  000770  0101               	movlb	1	; () banked
  2041  000772  6506               	cpfsgt	RectaFrenado@i& (0+255),b
  2042  000774  D001               	goto	l2429
  2043  000776  0012               	return	
  2044  000778                     l2429:
  2045  000778  0E00               	movlw	0
  2046  00077A  0101               	movlb	1	; () banked
  2047  00077C  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
  2048  00077E  0E05               	movlw	5
  2049  000780  6F00               	movwf	StepMove@StepNumber& (0+255),b
  2050  000782  C106  F102         	movff	RectaFrenado@i,StepMove@Velocidad
  2051  000786  0E08               	movlw	8
  2052  000788  0101               	movlb	1	; () banked
  2053  00078A  6F03               	movwf	StepMove@microstep_number& (0+255),b
  2054  00078C  C038  F104         	movff	RectaFrenado@direccion,StepMove@direccion
  2055  000790  ECEF  F003         	call	_StepMove	;wreg free
  2056  000794  0900               	iorlw	0
  2057  000796  B4D8               	btfsc	status,2,c
  2058  000798  D7EF               	goto	l2429
  2059  00079A  0101               	movlb	1	; () banked
  2060  00079C  2B06               	incf	RectaFrenado@i& (0+255),f,b
  2061  00079E  D7E7               	goto	l2425
  2062  0007A0                     l2435:
  2063                           
  2064                           ;MotorDriver.c: 343: else if (microstep_number == 16){
  2065  0007A0  0E10               	movlw	16
  2066  0007A2  1837               	xorwf	RectaFrenado@microstep_number,w,c
  2067  0007A4  A4D8               	btfss	status,2,c
  2068  0007A6  0012               	return	
  2069                           
  2070                           ;MotorDriver.c: 344: for (i=velocidad;i<30;i++){
  2071  0007A8  C105  F106         	movff	RectaFrenado@velocidad,RectaFrenado@i
  2072  0007AC                     l2439:
  2073  0007AC  0E1D               	movlw	29
  2074  0007AE  0101               	movlb	1	; () banked
  2075  0007B0  6506               	cpfsgt	RectaFrenado@i& (0+255),b
  2076  0007B2  D001               	goto	l2443
  2077  0007B4  0012               	return	
  2078  0007B6                     l2443:
  2079  0007B6  0E00               	movlw	0
  2080  0007B8  0101               	movlb	1	; () banked
  2081  0007BA  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
  2082  0007BC  0E05               	movlw	5
  2083  0007BE  6F00               	movwf	StepMove@StepNumber& (0+255),b
  2084  0007C0  C106  F102         	movff	RectaFrenado@i,StepMove@Velocidad
  2085  0007C4  0E10               	movlw	16
  2086  0007C6  0101               	movlb	1	; () banked
  2087  0007C8  6F03               	movwf	StepMove@microstep_number& (0+255),b
  2088  0007CA  C038  F104         	movff	RectaFrenado@direccion,StepMove@direccion
  2089  0007CE  ECEF  F003         	call	_StepMove	;wreg free
  2090  0007D2  0900               	iorlw	0
  2091  0007D4  B4D8               	btfsc	status,2,c
  2092  0007D6  D7EF               	goto	l2443
  2093  0007D8  0101               	movlb	1	; () banked
  2094  0007DA  2B06               	incf	RectaFrenado@i& (0+255),f,b
  2095  0007DC  D7E7               	goto	l2439
  2096  0007DE                     __end_of_RectaFrenado:
  2097                           	opt stack 0
  2098                           tblptru	equ	0xFF8
  2099                           tblptrh	equ	0xFF7
  2100                           tblptrl	equ	0xFF6
  2101                           tablat	equ	0xFF5
  2102                           intcon	equ	0xFF2
  2103                           intcon2	equ	0xFF1
  2104                           postinc0	equ	0xFEE
  2105                           wreg	equ	0xFE8
  2106                           postdec1	equ	0xFE5
  2107                           fsr1l	equ	0xFE1
  2108                           status	equ	0xFD8
  2109                           
  2110 ;; *************** function _RectaAceleracion *****************
  2111 ;; Defined at:
  2112 ;;		line 321 in file "MotorDriver.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  velocidad       1    wreg     unsigned char 
  2115 ;;  microstep_nu    1   22[COMRAM] unsigned char 
  2116 ;;  direccion       1   23[COMRAM] unsigned char 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  velocidad       1    5[BANK1 ] unsigned char 
  2119 ;;  i               1    6[BANK1 ] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Totals:         2       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;Total ram usage:        4 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    7
  2136 ;; This function calls:
  2137 ;;		_StepMove
  2138 ;; This function is called by:
  2139 ;;		_main
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text18
  2144  0006D2                     __ptext18:
  2145                           	opt stack 0
  2146  0006D2                     _RectaAceleracion:
  2147                           	opt stack 23
  2148                           
  2149                           ;incstack = 0
  2150                           ;RectaAceleracion@velocidad stored from wreg
  2151  0006D2  0101               	movlb	1	; () banked
  2152  0006D4  6F05               	movwf	RectaAceleracion@velocidad& (0+255),b
  2153                           
  2154                           ;MotorDriver.c: 322: uint8_t i;
  2155                           ;MotorDriver.c: 323: if (microstep_number == 8){
  2156  0006D6  0E08               	movlw	8
  2157  0006D8  1837               	xorwf	RectaAceleracion@microstep_number,w,c
  2158  0006DA  A4D8               	btfss	status,2,c
  2159  0006DC  D01E               	goto	l2411
  2160                           
  2161                           ;MotorDriver.c: 324: for (i=30;i>velocidad;i--){
  2162  0006DE  0E1E               	movlw	30
  2163  0006E0  0101               	movlb	1	; () banked
  2164  0006E2  6F06               	movwf	RectaAceleracion@i& (0+255),b
  2165  0006E4  D013               	goto	l2409
  2166  0006E6                     l2405:
  2167  0006E6  0E00               	movlw	0
  2168  0006E8  0101               	movlb	1	; () banked
  2169  0006EA  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
  2170  0006EC  0E05               	movlw	5
  2171  0006EE  6F00               	movwf	StepMove@StepNumber& (0+255),b
  2172  0006F0  C106  F102         	movff	RectaAceleracion@i,StepMove@Velocidad
  2173  0006F4  0E08               	movlw	8
  2174  0006F6  0101               	movlb	1	; () banked
  2175  0006F8  6F03               	movwf	StepMove@microstep_number& (0+255),b
  2176  0006FA  C038  F104         	movff	RectaAceleracion@direccion,StepMove@direccion
  2177  0006FE  ECEF  F003         	call	_StepMove	;wreg free
  2178  000702  0900               	iorlw	0
  2179  000704  B4D8               	btfsc	status,2,c
  2180  000706  D7EF               	goto	l2405
  2181  000708  0101               	movlb	1	; () banked
  2182  00070A  0706               	decf	RectaAceleracion@i& (0+255),f,b
  2183  00070C                     l2409:
  2184                           
  2185                           ; BSR set to: 1
  2186  00070C  0101               	movlb	1	; () banked
  2187  00070E  5106               	movf	RectaAceleracion@i& (0+255),w,b
  2188  000710  0101               	movlb	1	; () banked
  2189  000712  5D05               	subwf	RectaAceleracion@velocidad& (0+255),w,b
  2190  000714  B0D8               	btfsc	status,0,c
  2191  000716  0012               	return	
  2192  000718  D7E6               	goto	l2405
  2193  00071A                     l2411:
  2194                           
  2195                           ;MotorDriver.c: 328: else if (microstep_number == 16){
  2196  00071A  0E10               	movlw	16
  2197  00071C  1837               	xorwf	RectaAceleracion@microstep_number,w,c
  2198  00071E  A4D8               	btfss	status,2,c
  2199  000720  0012               	return	
  2200                           
  2201                           ;MotorDriver.c: 329: for (i=30;i>velocidad;i--){
  2202  000722  0E1E               	movlw	30
  2203  000724  0101               	movlb	1	; () banked
  2204  000726  6F06               	movwf	RectaAceleracion@i& (0+255),b
  2205  000728  D013               	goto	l2419
  2206  00072A                     l2415:
  2207  00072A  0E00               	movlw	0
  2208  00072C  0101               	movlb	1	; () banked
  2209  00072E  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
  2210  000730  0E05               	movlw	5
  2211  000732  6F00               	movwf	StepMove@StepNumber& (0+255),b
  2212  000734  C106  F102         	movff	RectaAceleracion@i,StepMove@Velocidad
  2213  000738  0E10               	movlw	16
  2214  00073A  0101               	movlb	1	; () banked
  2215  00073C  6F03               	movwf	StepMove@microstep_number& (0+255),b
  2216  00073E  C038  F104         	movff	RectaAceleracion@direccion,StepMove@direccion
  2217  000742  ECEF  F003         	call	_StepMove	;wreg free
  2218  000746  0900               	iorlw	0
  2219  000748  B4D8               	btfsc	status,2,c
  2220  00074A  D7EF               	goto	l2415
  2221  00074C  0101               	movlb	1	; () banked
  2222  00074E  0706               	decf	RectaAceleracion@i& (0+255),f,b
  2223  000750                     l2419:
  2224                           
  2225                           ; BSR set to: 1
  2226  000750  0101               	movlb	1	; () banked
  2227  000752  5106               	movf	RectaAceleracion@i& (0+255),w,b
  2228  000754  0101               	movlb	1	; () banked
  2229  000756  5D05               	subwf	RectaAceleracion@velocidad& (0+255),w,b
  2230  000758  B0D8               	btfsc	status,0,c
  2231  00075A  0012               	return	
  2232  00075C  D7E6               	goto	l2415
  2233  00075E                     __end_of_RectaAceleracion:
  2234                           	opt stack 0
  2235                           tblptru	equ	0xFF8
  2236                           tblptrh	equ	0xFF7
  2237                           tblptrl	equ	0xFF6
  2238                           tablat	equ	0xFF5
  2239                           intcon	equ	0xFF2
  2240                           intcon2	equ	0xFF1
  2241                           postinc0	equ	0xFEE
  2242                           wreg	equ	0xFE8
  2243                           postdec1	equ	0xFE5
  2244                           fsr1l	equ	0xFE1
  2245                           status	equ	0xFD8
  2246                           
  2247 ;; *************** function _StepMove *****************
  2248 ;; Defined at:
  2249 ;;		line 42 in file "MotorDriver.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  StepNumber      2    0[BANK1 ] unsigned int 
  2252 ;;  Velocidad       1    2[BANK1 ] unsigned char 
  2253 ;;  microstep_nu    1    3[BANK1 ] unsigned char 
  2254 ;;  direccion       1    4[BANK1 ] unsigned char 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      unsigned char 
  2259 ;; Registers used:
  2260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2266 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Totals:         2       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;Total ram usage:        7 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    6
  2273 ;; This function calls:
  2274 ;;		_State16MEF_act
  2275 ;;		_State8MEF_act
  2276 ;; This function is called by:
  2277 ;;		_main
  2278 ;;		_RectaAceleracion
  2279 ;;		_RectaFrenado
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text19
  2284  0007DE                     __ptext19:
  2285                           	opt stack 0
  2286  0007DE                     _StepMove:
  2287                           	opt stack 24
  2288                           
  2289                           ;MotorDriver.c: 44: if ((StepCount<StepNumber)){
  2290                           
  2291                           ;incstack = 0
  2292  0007DE  0101               	movlb	1	; () banked
  2293  0007E0  5100               	movf	StepMove@StepNumber& (0+255),w,b
  2294  0007E2  5C40               	subwf	_StepCount,w,c
  2295  0007E4  0101               	movlb	1	; () banked
  2296  0007E6  5101               	movf	(StepMove@StepNumber+1)& (0+255),w,b
  2297  0007E8  5841               	subwfb	_StepCount+1,w,c
  2298  0007EA  B0D8               	btfsc	status,0,c
  2299  0007EC  D029               	goto	l2397
  2300                           
  2301                           ; BSR set to: 1
  2302                           ;MotorDriver.c: 45: if (Timer2Ticked){
  2303  0007EE  504B               	movf	_Timer2Ticked,w,c	;volatile
  2304  0007F0  B4D8               	btfsc	status,2,c
  2305  0007F2  D023               	goto	l2395
  2306                           
  2307                           ; BSR set to: 1
  2308                           ;MotorDriver.c: 46: Timer2Tick_count++;
  2309  0007F4  4A3E               	infsnz	_Timer2Tick_count,f,c
  2310  0007F6  2A3F               	incf	_Timer2Tick_count+1,f,c
  2311                           
  2312                           ; BSR set to: 1
  2313                           ;MotorDriver.c: 47: if (Timer2Tick_count == Velocidad){
  2314  0007F8  0101               	movlb	1	; () banked
  2315  0007FA  5102               	movf	StepMove@Velocidad& (0+255),w,b
  2316  0007FC  6E35               	movwf	??_StepMove& (0+255),c
  2317  0007FE  6A36               	clrf	(??_StepMove+1)& (0+255),c
  2318  000800  503E               	movf	_Timer2Tick_count,w,c
  2319  000802  1835               	xorwf	??_StepMove,w,c
  2320  000804  E118               	bnz	l2393
  2321  000806  503F               	movf	_Timer2Tick_count+1,w,c
  2322  000808  1836               	xorwf	??_StepMove+1,w,c
  2323  00080A  A4D8               	btfss	status,2,c
  2324  00080C  D014               	goto	l2393
  2325                           
  2326                           ; BSR set to: 1
  2327                           ;MotorDriver.c: 48: if (microstep_number==16){
  2328  00080E  0E10               	movlw	16
  2329  000810  0101               	movlb	1	; () banked
  2330  000812  1903               	xorwf	StepMove@microstep_number& (0+255),w,b
  2331  000814  A4D8               	btfss	status,2,c
  2332  000816  D005               	goto	l2387
  2333                           
  2334                           ; BSR set to: 1
  2335                           ;MotorDriver.c: 49: State16MEF_act( direccion );
  2336  000818  0101               	movlb	1	; () banked
  2337  00081A  5104               	movf	StepMove@direccion& (0+255),w,b
  2338  00081C  EC85  F001         	call	_State16MEF_act
  2339                           
  2340                           ;MotorDriver.c: 50: }
  2341  000820  D004               	goto	l2389
  2342  000822                     l2387:
  2343                           
  2344                           ;MotorDriver.c: 51: else{
  2345                           ;MotorDriver.c: 52: State8MEF_act( direccion );
  2346  000822  0101               	movlb	1	; () banked
  2347  000824  5104               	movf	StepMove@direccion& (0+255),w,b
  2348  000826  EC57  F000         	call	_State8MEF_act
  2349  00082A                     l2389:
  2350                           
  2351                           ;MotorDriver.c: 53: }
  2352                           ;MotorDriver.c: 54: StepCount++;
  2353  00082A  4A40               	infsnz	_StepCount,f,c
  2354  00082C  2A41               	incf	_StepCount+1,f,c
  2355                           
  2356                           ;MotorDriver.c: 55: Timer2Tick_count=0;
  2357  00082E  0E00               	movlw	0
  2358  000830  6E3F               	movwf	_Timer2Tick_count+1,c
  2359  000832  0E00               	movlw	0
  2360  000834  6E3E               	movwf	_Timer2Tick_count,c
  2361  000836                     l2393:
  2362                           
  2363                           ;MotorDriver.c: 56: }
  2364                           ;MotorDriver.c: 57: Timer2Ticked = 0;
  2365  000836  0E00               	movlw	0
  2366  000838  6E4B               	movwf	_Timer2Ticked,c	;volatile
  2367  00083A                     l2395:
  2368                           
  2369                           ;MotorDriver.c: 58: }
  2370                           ;MotorDriver.c: 59: StepsComplete=0;
  2371  00083A  0E00               	movlw	0
  2372  00083C  6E49               	movwf	_StepsComplete,c
  2373                           
  2374                           ;MotorDriver.c: 60: }
  2375  00083E  D006               	goto	l435
  2376  000840                     l2397:
  2377                           
  2378                           ;MotorDriver.c: 61: else{
  2379                           ;MotorDriver.c: 62: StepsComplete=1;
  2380  000840  0E01               	movlw	1
  2381  000842  6E49               	movwf	_StepsComplete,c
  2382                           
  2383                           ;MotorDriver.c: 63: StepCount=0;
  2384  000844  0E00               	movlw	0
  2385  000846  6E41               	movwf	_StepCount+1,c
  2386  000848  0E00               	movlw	0
  2387  00084A  6E40               	movwf	_StepCount,c
  2388  00084C                     l435:
  2389                           
  2390                           ;MotorDriver.c: 65: }
  2391                           ;MotorDriver.c: 66: return(StepsComplete);
  2392  00084C  5049               	movf	_StepsComplete,w,c
  2393  00084E  0012               	return	
  2394  000850                     __end_of_StepMove:
  2395                           	opt stack 0
  2396                           tblptru	equ	0xFF8
  2397                           tblptrh	equ	0xFF7
  2398                           tblptrl	equ	0xFF6
  2399                           tablat	equ	0xFF5
  2400                           intcon	equ	0xFF2
  2401                           intcon2	equ	0xFF1
  2402                           postinc0	equ	0xFEE
  2403                           wreg	equ	0xFE8
  2404                           postdec1	equ	0xFE5
  2405                           fsr1l	equ	0xFE1
  2406                           status	equ	0xFD8
  2407                           
  2408 ;; *************** function _State8MEF_act *****************
  2409 ;; Defined at:
  2410 ;;		line 101 in file "MotorDriver.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  direccion       1    wreg     unsigned char 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  direccion       1   19[COMRAM] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;Total ram usage:        2 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    5
  2431 ;; This function calls:
  2432 ;;		_EPWM1_LoadDutyValue
  2433 ;;		_EPWM2_LoadDutyValue
  2434 ;; This function is called by:
  2435 ;;		_StepMove
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text20
  2440  0000AE                     __ptext20:
  2441                           	opt stack 0
  2442  0000AE                     _State8MEF_act:
  2443                           	opt stack 24
  2444                           
  2445                           ;incstack = 0
  2446                           ;State8MEF_act@direccion stored from wreg
  2447  0000AE  6E34               	movwf	State8MEF_act@direccion,c
  2448                           
  2449                           ;MotorDriver.c: 103: switch(EstadoActual) {
  2450  0000B0  D11D               	goto	l2373
  2451  0000B2                     l2267:
  2452                           
  2453                           ;MotorDriver.c: 105: PSTR1CON = 0x01; PSTR2CON = 0x01;
  2454  0000B2  0E01               	movlw	1
  2455  0000B4  6EB9               	movwf	4025,c	;volatile
  2456  0000B6  0E01               	movlw	1
  2457  0000B8  6E63               	movwf	3939,c	;volatile
  2458                           
  2459                           ;MotorDriver.c: 106: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2460  0000BA  9A8C               	bcf	3980,5,c	;volatile
  2461  0000BC  908B               	bcf	3979,0,c	;volatile
  2462                           
  2463                           ;MotorDriver.c: 107: if (Microstep<8){
  2464  0000BE  BE43               	btfsc	_Microstep+1,7,c
  2465  0000C0  D006               	goto	l2275
  2466  0000C2  5043               	movf	_Microstep+1,w,c
  2467  0000C4  E103               	bnz	u1641
  2468  0000C6  0E08               	movlw	8
  2469  0000C8  5C42               	subwf	_Microstep,w,c
  2470  0000CA  B0D8               	btfsc	status,0,c
  2471  0000CC                     u1641:
  2472  0000CC  0012               	return	
  2473  0000CE                     l2275:
  2474                           
  2475                           ;MotorDriver.c: 111: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2476  0000CE  0E01               	movlw	low _LookUP_TABLE_COS
  2477  0000D0  2442               	addwf	_Microstep,w,c
  2478  0000D2  6ED9               	movwf	fsr2l,c
  2479  0000D4  0E00               	movlw	high _LookUP_TABLE_COS
  2480  0000D6  2043               	addwfc	_Microstep+1,w,c
  2481  0000D8  6EDA               	movwf	fsr2h,c
  2482  0000DA  50DF               	movf	indf2,w,c
  2483  0000DC  6E33               	movwf	??_State8MEF_act& (0+255),c
  2484  0000DE  5033               	movf	??_State8MEF_act,w,c
  2485  0000E0  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2486  0000E2  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2487  0000E4  EC93  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2488                           
  2489                           ;MotorDriver.c: 112: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2490  0000E8  0EE0               	movlw	low _LookUP_TABLE_SEN
  2491  0000EA  2442               	addwf	_Microstep,w,c
  2492  0000EC  6ED9               	movwf	fsr2l,c
  2493  0000EE  0E00               	movlw	high _LookUP_TABLE_SEN
  2494  0000F0  2043               	addwfc	_Microstep+1,w,c
  2495  0000F2  6EDA               	movwf	fsr2h,c
  2496  0000F4  50DF               	movf	indf2,w,c
  2497  0000F6  6E33               	movwf	??_State8MEF_act& (0+255),c
  2498  0000F8  5033               	movf	??_State8MEF_act,w,c
  2499  0000FA  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2500  0000FC  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2501  0000FE  EC7B  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2502                           
  2503                           ;MotorDriver.c: 114: if (direccion == 1){
  2504  000102  0434               	decf	State8MEF_act@direccion,w,c
  2505  000104  A4D8               	btfss	status,2,c
  2506  000106  D00A               	goto	l2285
  2507                           
  2508                           ;MotorDriver.c: 115: if (Microstep==7){
  2509  000108  0E07               	movlw	7
  2510  00010A  1842               	xorwf	_Microstep,w,c
  2511  00010C  1043               	iorwf	_Microstep+1,w,c
  2512  00010E  A4D8               	btfss	status,2,c
  2513  000110  D002               	goto	l2283
  2514                           
  2515                           ;MotorDriver.c: 116: EstadoActual = STATE2;
  2516  000112  0E02               	movlw	2
  2517  000114  6E50               	movwf	_EstadoActual,c
  2518  000116                     l2283:
  2519                           
  2520                           ;MotorDriver.c: 117: }
  2521                           ;MotorDriver.c: 118: Microstep++;
  2522  000116  4A42               	infsnz	_Microstep,f,c
  2523  000118  2A43               	incf	_Microstep+1,f,c
  2524                           
  2525                           ;MotorDriver.c: 119: }
  2526  00011A  0012               	return	
  2527  00011C                     l2285:
  2528                           
  2529                           ;MotorDriver.c: 120: else{
  2530                           ;MotorDriver.c: 121: if (Microstep==0){
  2531  00011C  5042               	movf	_Microstep,w,c
  2532  00011E  1043               	iorwf	_Microstep+1,w,c
  2533  000120  A4D8               	btfss	status,2,c
  2534  000122  D006               	goto	l2289
  2535                           
  2536                           ;MotorDriver.c: 122: EstadoActual = STATE4;
  2537  000124  0E04               	movlw	4
  2538  000126  6E50               	movwf	_EstadoActual,c
  2539                           
  2540                           ;MotorDriver.c: 123: Microstep=31;
  2541  000128  0E00               	movlw	0
  2542  00012A  6E43               	movwf	_Microstep+1,c
  2543  00012C  0E1F               	movlw	31
  2544  00012E  6E42               	movwf	_Microstep,c
  2545  000130                     l2289:
  2546                           
  2547                           ;MotorDriver.c: 124: }
  2548                           ;MotorDriver.c: 125: Microstep--;
  2549  000130  0642               	decf	_Microstep,f,c
  2550  000132  A0D8               	btfss	status,0,c
  2551  000134  0643               	decf	_Microstep+1,f,c
  2552                           
  2553                           ;MotorDriver.c: 126: }
  2554                           ;MotorDriver.c: 127: }
  2555                           ;MotorDriver.c: 128: break;
  2556  000136  0012               	return	
  2557  000138                     l2291:
  2558                           
  2559                           ;MotorDriver.c: 130: PSTR1CON = 0x02; PSTR2CON = 0x01;
  2560  000138  0E02               	movlw	2
  2561  00013A  6EB9               	movwf	4025,c	;volatile
  2562  00013C  0E01               	movlw	1
  2563  00013E  6E63               	movwf	3939,c	;volatile
  2564                           
  2565                           ;MotorDriver.c: 131: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2566  000140  948B               	bcf	3979,2,c	;volatile
  2567  000142  908B               	bcf	3979,0,c	;volatile
  2568                           
  2569                           ;MotorDriver.c: 132: if ((Microstep<16)&&(Microstep>7)){
  2570  000144  BE43               	btfsc	_Microstep+1,7,c
  2571  000146  D006               	goto	l2299
  2572  000148  5043               	movf	_Microstep+1,w,c
  2573  00014A  E103               	bnz	u1681
  2574  00014C  0E10               	movlw	16
  2575  00014E  5C42               	subwf	_Microstep,w,c
  2576  000150  B0D8               	btfsc	status,0,c
  2577  000152                     u1681:
  2578  000152  0012               	return	
  2579  000154                     l2299:
  2580  000154  BE43               	btfsc	_Microstep+1,7,c
  2581  000156  0012               	return	
  2582  000158  5043               	movf	_Microstep+1,w,c
  2583  00015A  E104               	bnz	u1690
  2584  00015C  0E08               	movlw	8
  2585  00015E  5C42               	subwf	_Microstep,w,c
  2586  000160  A0D8               	btfss	status,0,c
  2587  000162  0012               	return	
  2588  000164                     u1690:
  2589                           
  2590                           ;MotorDriver.c: 137: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2591  000164  0E01               	movlw	low _LookUP_TABLE_COS
  2592  000166  2442               	addwf	_Microstep,w,c
  2593  000168  6ED9               	movwf	fsr2l,c
  2594  00016A  0E00               	movlw	high _LookUP_TABLE_COS
  2595  00016C  2043               	addwfc	_Microstep+1,w,c
  2596  00016E  6EDA               	movwf	fsr2h,c
  2597  000170  50DF               	movf	indf2,w,c
  2598  000172  6E33               	movwf	??_State8MEF_act& (0+255),c
  2599  000174  5033               	movf	??_State8MEF_act,w,c
  2600  000176  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2601  000178  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2602  00017A  EC93  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2603                           
  2604                           ;MotorDriver.c: 138: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2605  00017E  0EE0               	movlw	low _LookUP_TABLE_SEN
  2606  000180  2442               	addwf	_Microstep,w,c
  2607  000182  6ED9               	movwf	fsr2l,c
  2608  000184  0E00               	movlw	high _LookUP_TABLE_SEN
  2609  000186  2043               	addwfc	_Microstep+1,w,c
  2610  000188  6EDA               	movwf	fsr2h,c
  2611  00018A  50DF               	movf	indf2,w,c
  2612  00018C  6E33               	movwf	??_State8MEF_act& (0+255),c
  2613  00018E  5033               	movf	??_State8MEF_act,w,c
  2614  000190  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2615  000192  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2616  000194  EC7B  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2617                           
  2618                           ;MotorDriver.c: 140: if (direccion == 1){
  2619  000198  0434               	decf	State8MEF_act@direccion,w,c
  2620  00019A  A4D8               	btfss	status,2,c
  2621  00019C  D00A               	goto	l2311
  2622                           
  2623                           ;MotorDriver.c: 141: if (Microstep==15){
  2624  00019E  0E0F               	movlw	15
  2625  0001A0  1842               	xorwf	_Microstep,w,c
  2626  0001A2  1043               	iorwf	_Microstep+1,w,c
  2627  0001A4  A4D8               	btfss	status,2,c
  2628  0001A6  D002               	goto	l2309
  2629                           
  2630                           ;MotorDriver.c: 142: EstadoActual = STATE3;
  2631  0001A8  0E03               	movlw	3
  2632  0001AA  6E50               	movwf	_EstadoActual,c
  2633  0001AC                     l2309:
  2634                           
  2635                           ;MotorDriver.c: 143: }
  2636                           ;MotorDriver.c: 144: Microstep++;
  2637  0001AC  4A42               	infsnz	_Microstep,f,c
  2638  0001AE  2A43               	incf	_Microstep+1,f,c
  2639                           
  2640                           ;MotorDriver.c: 145: }
  2641  0001B0  0012               	return	
  2642  0001B2                     l2311:
  2643                           
  2644                           ;MotorDriver.c: 146: else{
  2645                           ;MotorDriver.c: 147: if (Microstep==8){
  2646  0001B2  0E08               	movlw	8
  2647  0001B4  1842               	xorwf	_Microstep,w,c
  2648  0001B6  1043               	iorwf	_Microstep+1,w,c
  2649  0001B8  A4D8               	btfss	status,2,c
  2650  0001BA  D002               	goto	l2315
  2651                           
  2652                           ;MotorDriver.c: 148: EstadoActual = STATE1;
  2653  0001BC  0E01               	movlw	1
  2654  0001BE  6E50               	movwf	_EstadoActual,c
  2655  0001C0                     l2315:
  2656                           
  2657                           ;MotorDriver.c: 149: }
  2658                           ;MotorDriver.c: 150: Microstep--;
  2659  0001C0  0642               	decf	_Microstep,f,c
  2660  0001C2  A0D8               	btfss	status,0,c
  2661  0001C4  0643               	decf	_Microstep+1,f,c
  2662                           
  2663                           ;MotorDriver.c: 151: }
  2664                           ;MotorDriver.c: 152: }
  2665                           ;MotorDriver.c: 153: break;
  2666  0001C6  0012               	return	
  2667  0001C8                     l2317:
  2668                           
  2669                           ;MotorDriver.c: 155: PSTR1CON = 0x02; PSTR2CON = 0x02;
  2670  0001C8  0E02               	movlw	2
  2671  0001CA  6EB9               	movwf	4025,c	;volatile
  2672  0001CC  0E02               	movlw	2
  2673  0001CE  6E63               	movwf	3939,c	;volatile
  2674                           
  2675                           ;MotorDriver.c: 156: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2676  0001D0  948B               	bcf	3979,2,c	;volatile
  2677  0001D2  928B               	bcf	3979,1,c	;volatile
  2678                           
  2679                           ;MotorDriver.c: 157: if ((Microstep<24)&&(Microstep>15)){
  2680  0001D4  BE43               	btfsc	_Microstep+1,7,c
  2681  0001D6  D006               	goto	l2325
  2682  0001D8  5043               	movf	_Microstep+1,w,c
  2683  0001DA  E103               	bnz	u1731
  2684  0001DC  0E18               	movlw	24
  2685  0001DE  5C42               	subwf	_Microstep,w,c
  2686  0001E0  B0D8               	btfsc	status,0,c
  2687  0001E2                     u1731:
  2688  0001E2  0012               	return	
  2689  0001E4                     l2325:
  2690  0001E4  BE43               	btfsc	_Microstep+1,7,c
  2691  0001E6  0012               	return	
  2692  0001E8  5043               	movf	_Microstep+1,w,c
  2693  0001EA  E104               	bnz	u1740
  2694  0001EC  0E10               	movlw	16
  2695  0001EE  5C42               	subwf	_Microstep,w,c
  2696  0001F0  A0D8               	btfss	status,0,c
  2697  0001F2  0012               	return	
  2698  0001F4                     u1740:
  2699                           
  2700                           ;MotorDriver.c: 162: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2701  0001F4  0E01               	movlw	low _LookUP_TABLE_COS
  2702  0001F6  2442               	addwf	_Microstep,w,c
  2703  0001F8  6ED9               	movwf	fsr2l,c
  2704  0001FA  0E00               	movlw	high _LookUP_TABLE_COS
  2705  0001FC  2043               	addwfc	_Microstep+1,w,c
  2706  0001FE  6EDA               	movwf	fsr2h,c
  2707  000200  50DF               	movf	indf2,w,c
  2708  000202  6E33               	movwf	??_State8MEF_act& (0+255),c
  2709  000204  5033               	movf	??_State8MEF_act,w,c
  2710  000206  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2711  000208  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2712  00020A  EC93  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2713                           
  2714                           ;MotorDriver.c: 163: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2715  00020E  0EE0               	movlw	low _LookUP_TABLE_SEN
  2716  000210  2442               	addwf	_Microstep,w,c
  2717  000212  6ED9               	movwf	fsr2l,c
  2718  000214  0E00               	movlw	high _LookUP_TABLE_SEN
  2719  000216  2043               	addwfc	_Microstep+1,w,c
  2720  000218  6EDA               	movwf	fsr2h,c
  2721  00021A  50DF               	movf	indf2,w,c
  2722  00021C  6E33               	movwf	??_State8MEF_act& (0+255),c
  2723  00021E  5033               	movf	??_State8MEF_act,w,c
  2724  000220  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2725  000222  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2726  000224  EC7B  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2727                           
  2728                           ;MotorDriver.c: 165: if (direccion == 1){
  2729  000228  0434               	decf	State8MEF_act@direccion,w,c
  2730  00022A  A4D8               	btfss	status,2,c
  2731  00022C  D00A               	goto	l2337
  2732                           
  2733                           ;MotorDriver.c: 166: if (Microstep==23){
  2734  00022E  0E17               	movlw	23
  2735  000230  1842               	xorwf	_Microstep,w,c
  2736  000232  1043               	iorwf	_Microstep+1,w,c
  2737  000234  A4D8               	btfss	status,2,c
  2738  000236  D002               	goto	l2335
  2739                           
  2740                           ;MotorDriver.c: 167: EstadoActual = STATE4;
  2741  000238  0E04               	movlw	4
  2742  00023A  6E50               	movwf	_EstadoActual,c
  2743  00023C                     l2335:
  2744                           
  2745                           ;MotorDriver.c: 168: }
  2746                           ;MotorDriver.c: 169: Microstep++;
  2747  00023C  4A42               	infsnz	_Microstep,f,c
  2748  00023E  2A43               	incf	_Microstep+1,f,c
  2749                           
  2750                           ;MotorDriver.c: 170: }
  2751  000240  0012               	return	
  2752  000242                     l2337:
  2753                           
  2754                           ;MotorDriver.c: 171: else{
  2755                           ;MotorDriver.c: 172: if (Microstep==16){
  2756  000242  0E10               	movlw	16
  2757  000244  1842               	xorwf	_Microstep,w,c
  2758  000246  1043               	iorwf	_Microstep+1,w,c
  2759  000248  A4D8               	btfss	status,2,c
  2760  00024A  D002               	goto	l2341
  2761                           
  2762                           ;MotorDriver.c: 173: EstadoActual = STATE2;
  2763  00024C  0E02               	movlw	2
  2764  00024E  6E50               	movwf	_EstadoActual,c
  2765  000250                     l2341:
  2766                           
  2767                           ;MotorDriver.c: 174: }
  2768                           ;MotorDriver.c: 175: Microstep--;
  2769  000250  0642               	decf	_Microstep,f,c
  2770  000252  A0D8               	btfss	status,0,c
  2771  000254  0643               	decf	_Microstep+1,f,c
  2772                           
  2773                           ;MotorDriver.c: 176: }
  2774                           ;MotorDriver.c: 177: }
  2775                           ;MotorDriver.c: 178: break;
  2776  000256  0012               	return	
  2777  000258                     l2343:
  2778                           
  2779                           ;MotorDriver.c: 180: PSTR1CON = 0x01; PSTR2CON = 0x02;
  2780  000258  0E01               	movlw	1
  2781  00025A  6EB9               	movwf	4025,c	;volatile
  2782  00025C  0E02               	movlw	2
  2783  00025E  6E63               	movwf	3939,c	;volatile
  2784                           
  2785                           ;MotorDriver.c: 181: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2786  000260  9A8C               	bcf	3980,5,c	;volatile
  2787  000262  928B               	bcf	3979,1,c	;volatile
  2788                           
  2789                           ;MotorDriver.c: 182: if ((Microstep<32)&&(Microstep>23)){
  2790  000264  BE43               	btfsc	_Microstep+1,7,c
  2791  000266  D006               	goto	l2351
  2792  000268  5043               	movf	_Microstep+1,w,c
  2793  00026A  E14E               	bnz	l505
  2794  00026C  0E20               	movlw	32
  2795  00026E  5C42               	subwf	_Microstep,w,c
  2796  000270  B0D8               	btfsc	status,0,c
  2797  000272  0012               	return	
  2798  000274                     l2351:
  2799  000274  BE43               	btfsc	_Microstep+1,7,c
  2800  000276  0012               	return	
  2801  000278  5043               	movf	_Microstep+1,w,c
  2802  00027A  E104               	bnz	u1790
  2803  00027C  0E18               	movlw	24
  2804  00027E  5C42               	subwf	_Microstep,w,c
  2805  000280  A0D8               	btfss	status,0,c
  2806  000282  0012               	return	
  2807  000284                     u1790:
  2808                           
  2809                           ;MotorDriver.c: 187: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2810  000284  0E01               	movlw	low _LookUP_TABLE_COS
  2811  000286  2442               	addwf	_Microstep,w,c
  2812  000288  6ED9               	movwf	fsr2l,c
  2813  00028A  0E00               	movlw	high _LookUP_TABLE_COS
  2814  00028C  2043               	addwfc	_Microstep+1,w,c
  2815  00028E  6EDA               	movwf	fsr2h,c
  2816  000290  50DF               	movf	indf2,w,c
  2817  000292  6E33               	movwf	??_State8MEF_act& (0+255),c
  2818  000294  5033               	movf	??_State8MEF_act,w,c
  2819  000296  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2820  000298  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2821  00029A  EC93  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2822                           
  2823                           ;MotorDriver.c: 188: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2824  00029E  0EE0               	movlw	low _LookUP_TABLE_SEN
  2825  0002A0  2442               	addwf	_Microstep,w,c
  2826  0002A2  6ED9               	movwf	fsr2l,c
  2827  0002A4  0E00               	movlw	high _LookUP_TABLE_SEN
  2828  0002A6  2043               	addwfc	_Microstep+1,w,c
  2829  0002A8  6EDA               	movwf	fsr2h,c
  2830  0002AA  50DF               	movf	indf2,w,c
  2831  0002AC  6E33               	movwf	??_State8MEF_act& (0+255),c
  2832  0002AE  5033               	movf	??_State8MEF_act,w,c
  2833  0002B0  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2834  0002B2  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2835  0002B4  EC7B  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2836                           
  2837                           ;MotorDriver.c: 190: if (direccion == 1){
  2838  0002B8  0434               	decf	State8MEF_act@direccion,w,c
  2839  0002BA  A4D8               	btfss	status,2,c
  2840  0002BC  D00C               	goto	l2365
  2841                           
  2842                           ;MotorDriver.c: 191: if (Microstep==31){
  2843  0002BE  0E1F               	movlw	31
  2844  0002C0  1842               	xorwf	_Microstep,w,c
  2845  0002C2  1043               	iorwf	_Microstep+1,w,c
  2846  0002C4  A4D8               	btfss	status,2,c
  2847  0002C6  D004               	goto	l2363
  2848                           
  2849                           ;MotorDriver.c: 192: EstadoActual = STATE1;
  2850  0002C8  0E01               	movlw	1
  2851  0002CA  6E50               	movwf	_EstadoActual,c
  2852                           
  2853                           ;MotorDriver.c: 193: Microstep=-1;
  2854  0002CC  6842               	setf	_Microstep,c
  2855  0002CE  6843               	setf	_Microstep+1,c
  2856  0002D0                     l2363:
  2857                           
  2858                           ;MotorDriver.c: 194: }
  2859                           ;MotorDriver.c: 195: Microstep++;
  2860  0002D0  4A42               	infsnz	_Microstep,f,c
  2861  0002D2  2A43               	incf	_Microstep+1,f,c
  2862                           
  2863                           ;MotorDriver.c: 196: }
  2864  0002D4  0012               	return	
  2865  0002D6                     l2365:
  2866                           
  2867                           ;MotorDriver.c: 197: else{
  2868                           ;MotorDriver.c: 198: if (Microstep==24){
  2869  0002D6  0E18               	movlw	24
  2870  0002D8  1842               	xorwf	_Microstep,w,c
  2871  0002DA  1043               	iorwf	_Microstep+1,w,c
  2872  0002DC  A4D8               	btfss	status,2,c
  2873  0002DE  D002               	goto	l2369
  2874                           
  2875                           ;MotorDriver.c: 199: EstadoActual = STATE3;
  2876  0002E0  0E03               	movlw	3
  2877  0002E2  6E50               	movwf	_EstadoActual,c
  2878  0002E4                     l2369:
  2879                           
  2880                           ;MotorDriver.c: 200: }
  2881                           ;MotorDriver.c: 201: Microstep--;
  2882  0002E4  0642               	decf	_Microstep,f,c
  2883  0002E6  A0D8               	btfss	status,0,c
  2884  0002E8  0643               	decf	_Microstep+1,f,c
  2885                           
  2886                           ;MotorDriver.c: 208: }
  2887                           
  2888                           ;MotorDriver.c: 207: break;
  2889                           
  2890                           ;MotorDriver.c: 205: default:
  2891                           
  2892                           ;MotorDriver.c: 202: }
  2893                           ;MotorDriver.c: 203: }
  2894                           ;MotorDriver.c: 204: break;
  2895  0002EA  0012               	return	
  2896  0002EC                     l2373:
  2897  0002EC  5050               	movf	_EstadoActual,w,c
  2898                           
  2899                           ; Switch size 1, requested type "space"
  2900                           ; Number of cases is 4, Range of values is 1 to 4
  2901                           ; switch strategies available:
  2902                           ; Name         Instructions Cycles
  2903                           ; simple_byte           13     7 (average)
  2904                           ;	Chosen strategy is simple_byte
  2905  0002EE  0A01               	xorlw	1	; case 1
  2906  0002F0  B4D8               	btfsc	status,2,c
  2907  0002F2  D6DF               	goto	l2267
  2908  0002F4  0A03               	xorlw	3	; case 2
  2909  0002F6  B4D8               	btfsc	status,2,c
  2910  0002F8  D71F               	goto	l2291
  2911  0002FA  0A01               	xorlw	1	; case 3
  2912  0002FC  B4D8               	btfsc	status,2,c
  2913  0002FE  D764               	goto	l2317
  2914  000300  0A07               	xorlw	7	; case 4
  2915  000302  A4D8               	btfss	status,2,c
  2916  000304  0012               	return	
  2917  000306  D7A8               	goto	l2343
  2918  000308                     l505:
  2919  000308  0012               	return		;funcret
  2920  00030A                     __end_of_State8MEF_act:
  2921                           	opt stack 0
  2922                           tblptru	equ	0xFF8
  2923                           tblptrh	equ	0xFF7
  2924                           tblptrl	equ	0xFF6
  2925                           tablat	equ	0xFF5
  2926                           intcon	equ	0xFF2
  2927                           intcon2	equ	0xFF1
  2928                           postinc0	equ	0xFEE
  2929                           wreg	equ	0xFE8
  2930                           postdec1	equ	0xFE5
  2931                           fsr1l	equ	0xFE1
  2932                           indf2	equ	0xFDF
  2933                           fsr2h	equ	0xFDA
  2934                           fsr2l	equ	0xFD9
  2935                           status	equ	0xFD8
  2936                           
  2937 ;; *************** function _State16MEF_act *****************
  2938 ;; Defined at:
  2939 ;;		line 211 in file "MotorDriver.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  direccion       1    wreg     unsigned char 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  direccion       1   19[COMRAM] unsigned char 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;Total ram usage:        2 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    5
  2960 ;; This function calls:
  2961 ;;		_EPWM1_LoadDutyValue
  2962 ;;		_EPWM2_LoadDutyValue
  2963 ;; This function is called by:
  2964 ;;		_StepMove
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text21
  2969  00030A                     __ptext21:
  2970                           	opt stack 0
  2971  00030A                     _State16MEF_act:
  2972                           	opt stack 24
  2973                           
  2974                           ;incstack = 0
  2975                           ;State16MEF_act@direccion stored from wreg
  2976  00030A  6E34               	movwf	State16MEF_act@direccion,c
  2977                           
  2978                           ;MotorDriver.c: 213: switch(EstadoActual) {
  2979  00030C  D11D               	goto	l2263
  2980  00030E                     l2157:
  2981                           
  2982                           ;MotorDriver.c: 215: PSTR1CON = 0x01; PSTR2CON = 0x01;
  2983  00030E  0E01               	movlw	1
  2984  000310  6EB9               	movwf	4025,c	;volatile
  2985  000312  0E01               	movlw	1
  2986  000314  6E63               	movwf	3939,c	;volatile
  2987                           
  2988                           ;MotorDriver.c: 216: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2989  000316  9A8C               	bcf	3980,5,c	;volatile
  2990  000318  908B               	bcf	3979,0,c	;volatile
  2991                           
  2992                           ;MotorDriver.c: 217: if (Microstep<16){
  2993  00031A  BE43               	btfsc	_Microstep+1,7,c
  2994  00031C  D006               	goto	l2165
  2995  00031E  5043               	movf	_Microstep+1,w,c
  2996  000320  E103               	bnz	u1451
  2997  000322  0E10               	movlw	16
  2998  000324  5C42               	subwf	_Microstep,w,c
  2999  000326  B0D8               	btfsc	status,0,c
  3000  000328                     u1451:
  3001  000328  0012               	return	
  3002  00032A                     l2165:
  3003                           
  3004                           ;MotorDriver.c: 221: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  3005  00032A  0EA0               	movlw	low _LookUP_TABLE_COS_16
  3006  00032C  2442               	addwf	_Microstep,w,c
  3007  00032E  6ED9               	movwf	fsr2l,c
  3008  000330  0E00               	movlw	high _LookUP_TABLE_COS_16
  3009  000332  2043               	addwfc	_Microstep+1,w,c
  3010  000334  6EDA               	movwf	fsr2h,c
  3011  000336  50DF               	movf	indf2,w,c
  3012  000338  6E33               	movwf	??_State16MEF_act& (0+255),c
  3013  00033A  5033               	movf	??_State16MEF_act,w,c
  3014  00033C  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3015  00033E  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3016  000340  EC93  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3017                           
  3018                           ;MotorDriver.c: 222: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  3019  000344  0E60               	movlw	low _LookUP_TABLE_SEN_16
  3020  000346  2442               	addwf	_Microstep,w,c
  3021  000348  6ED9               	movwf	fsr2l,c
  3022  00034A  0E00               	movlw	high _LookUP_TABLE_SEN_16
  3023  00034C  2043               	addwfc	_Microstep+1,w,c
  3024  00034E  6EDA               	movwf	fsr2h,c
  3025  000350  50DF               	movf	indf2,w,c
  3026  000352  6E33               	movwf	??_State16MEF_act& (0+255),c
  3027  000354  5033               	movf	??_State16MEF_act,w,c
  3028  000356  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3029  000358  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3030  00035A  EC7B  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3031                           
  3032                           ;MotorDriver.c: 224: if (direccion == 1){
  3033  00035E  0434               	decf	State16MEF_act@direccion,w,c
  3034  000360  A4D8               	btfss	status,2,c
  3035  000362  D00A               	goto	l2175
  3036                           
  3037                           ;MotorDriver.c: 225: if (Microstep==15){
  3038  000364  0E0F               	movlw	15
  3039  000366  1842               	xorwf	_Microstep,w,c
  3040  000368  1043               	iorwf	_Microstep+1,w,c
  3041  00036A  A4D8               	btfss	status,2,c
  3042  00036C  D002               	goto	l2173
  3043                           
  3044                           ;MotorDriver.c: 226: EstadoActual = STATE2;
  3045  00036E  0E02               	movlw	2
  3046  000370  6E50               	movwf	_EstadoActual,c
  3047  000372                     l2173:
  3048                           
  3049                           ;MotorDriver.c: 227: }
  3050                           ;MotorDriver.c: 228: Microstep++;
  3051  000372  4A42               	infsnz	_Microstep,f,c
  3052  000374  2A43               	incf	_Microstep+1,f,c
  3053                           
  3054                           ;MotorDriver.c: 229: }
  3055  000376  0012               	return	
  3056  000378                     l2175:
  3057                           
  3058                           ;MotorDriver.c: 230: else{
  3059                           ;MotorDriver.c: 231: if (Microstep==0){
  3060  000378  5042               	movf	_Microstep,w,c
  3061  00037A  1043               	iorwf	_Microstep+1,w,c
  3062  00037C  A4D8               	btfss	status,2,c
  3063  00037E  D006               	goto	l2179
  3064                           
  3065                           ;MotorDriver.c: 232: EstadoActual = STATE4;
  3066  000380  0E04               	movlw	4
  3067  000382  6E50               	movwf	_EstadoActual,c
  3068                           
  3069                           ;MotorDriver.c: 233: Microstep=63;
  3070  000384  0E00               	movlw	0
  3071  000386  6E43               	movwf	_Microstep+1,c
  3072  000388  0E3F               	movlw	63
  3073  00038A  6E42               	movwf	_Microstep,c
  3074  00038C                     l2179:
  3075                           
  3076                           ;MotorDriver.c: 234: }
  3077                           ;MotorDriver.c: 235: Microstep--;
  3078  00038C  0642               	decf	_Microstep,f,c
  3079  00038E  A0D8               	btfss	status,0,c
  3080  000390  0643               	decf	_Microstep+1,f,c
  3081                           
  3082                           ;MotorDriver.c: 236: }
  3083                           ;MotorDriver.c: 237: }
  3084                           ;MotorDriver.c: 238: break;
  3085  000392  0012               	return	
  3086  000394                     l2181:
  3087                           
  3088                           ;MotorDriver.c: 240: PSTR1CON = 0x02; PSTR2CON = 0x01;
  3089  000394  0E02               	movlw	2
  3090  000396  6EB9               	movwf	4025,c	;volatile
  3091  000398  0E01               	movlw	1
  3092  00039A  6E63               	movwf	3939,c	;volatile
  3093                           
  3094                           ;MotorDriver.c: 241: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  3095  00039C  948B               	bcf	3979,2,c	;volatile
  3096  00039E  908B               	bcf	3979,0,c	;volatile
  3097                           
  3098                           ;MotorDriver.c: 242: if ((Microstep<32)&&(Microstep>15)){
  3099  0003A0  BE43               	btfsc	_Microstep+1,7,c
  3100  0003A2  D006               	goto	l2189
  3101  0003A4  5043               	movf	_Microstep+1,w,c
  3102  0003A6  E103               	bnz	u1491
  3103  0003A8  0E20               	movlw	32
  3104  0003AA  5C42               	subwf	_Microstep,w,c
  3105  0003AC  B0D8               	btfsc	status,0,c
  3106  0003AE                     u1491:
  3107  0003AE  0012               	return	
  3108  0003B0                     l2189:
  3109  0003B0  BE43               	btfsc	_Microstep+1,7,c
  3110  0003B2  0012               	return	
  3111  0003B4  5043               	movf	_Microstep+1,w,c
  3112  0003B6  E104               	bnz	u1500
  3113  0003B8  0E10               	movlw	16
  3114  0003BA  5C42               	subwf	_Microstep,w,c
  3115  0003BC  A0D8               	btfss	status,0,c
  3116  0003BE  0012               	return	
  3117  0003C0                     u1500:
  3118                           
  3119                           ;MotorDriver.c: 247: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  3120  0003C0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  3121  0003C2  2442               	addwf	_Microstep,w,c
  3122  0003C4  6ED9               	movwf	fsr2l,c
  3123  0003C6  0E00               	movlw	high _LookUP_TABLE_COS_16
  3124  0003C8  2043               	addwfc	_Microstep+1,w,c
  3125  0003CA  6EDA               	movwf	fsr2h,c
  3126  0003CC  50DF               	movf	indf2,w,c
  3127  0003CE  6E33               	movwf	??_State16MEF_act& (0+255),c
  3128  0003D0  5033               	movf	??_State16MEF_act,w,c
  3129  0003D2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3130  0003D4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3131  0003D6  EC93  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3132                           
  3133                           ;MotorDriver.c: 248: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  3134  0003DA  0E60               	movlw	low _LookUP_TABLE_SEN_16
  3135  0003DC  2442               	addwf	_Microstep,w,c
  3136  0003DE  6ED9               	movwf	fsr2l,c
  3137  0003E0  0E00               	movlw	high _LookUP_TABLE_SEN_16
  3138  0003E2  2043               	addwfc	_Microstep+1,w,c
  3139  0003E4  6EDA               	movwf	fsr2h,c
  3140  0003E6  50DF               	movf	indf2,w,c
  3141  0003E8  6E33               	movwf	??_State16MEF_act& (0+255),c
  3142  0003EA  5033               	movf	??_State16MEF_act,w,c
  3143  0003EC  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3144  0003EE  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3145  0003F0  EC7B  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3146                           
  3147                           ;MotorDriver.c: 250: if (direccion == 1){
  3148  0003F4  0434               	decf	State16MEF_act@direccion,w,c
  3149  0003F6  A4D8               	btfss	status,2,c
  3150  0003F8  D00A               	goto	l2201
  3151                           
  3152                           ;MotorDriver.c: 251: if (Microstep==31){
  3153  0003FA  0E1F               	movlw	31
  3154  0003FC  1842               	xorwf	_Microstep,w,c
  3155  0003FE  1043               	iorwf	_Microstep+1,w,c
  3156  000400  A4D8               	btfss	status,2,c
  3157  000402  D002               	goto	l2199
  3158                           
  3159                           ;MotorDriver.c: 252: EstadoActual = STATE3;
  3160  000404  0E03               	movlw	3
  3161  000406  6E50               	movwf	_EstadoActual,c
  3162  000408                     l2199:
  3163                           
  3164                           ;MotorDriver.c: 253: }
  3165                           ;MotorDriver.c: 254: Microstep++;
  3166  000408  4A42               	infsnz	_Microstep,f,c
  3167  00040A  2A43               	incf	_Microstep+1,f,c
  3168                           
  3169                           ;MotorDriver.c: 255: }
  3170  00040C  0012               	return	
  3171  00040E                     l2201:
  3172                           
  3173                           ;MotorDriver.c: 256: else{
  3174                           ;MotorDriver.c: 257: if (Microstep==16){
  3175  00040E  0E10               	movlw	16
  3176  000410  1842               	xorwf	_Microstep,w,c
  3177  000412  1043               	iorwf	_Microstep+1,w,c
  3178  000414  A4D8               	btfss	status,2,c
  3179  000416  D002               	goto	l2205
  3180                           
  3181                           ;MotorDriver.c: 258: EstadoActual = STATE1;
  3182  000418  0E01               	movlw	1
  3183  00041A  6E50               	movwf	_EstadoActual,c
  3184  00041C                     l2205:
  3185                           
  3186                           ;MotorDriver.c: 259: }
  3187                           ;MotorDriver.c: 260: Microstep--;
  3188  00041C  0642               	decf	_Microstep,f,c
  3189  00041E  A0D8               	btfss	status,0,c
  3190  000420  0643               	decf	_Microstep+1,f,c
  3191                           
  3192                           ;MotorDriver.c: 261: }
  3193                           ;MotorDriver.c: 262: }
  3194                           ;MotorDriver.c: 263: break;
  3195  000422  0012               	return	
  3196  000424                     l2207:
  3197                           
  3198                           ;MotorDriver.c: 265: PSTR1CON = 0x02; PSTR2CON = 0x02;
  3199  000424  0E02               	movlw	2
  3200  000426  6EB9               	movwf	4025,c	;volatile
  3201  000428  0E02               	movlw	2
  3202  00042A  6E63               	movwf	3939,c	;volatile
  3203                           
  3204                           ;MotorDriver.c: 266: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  3205  00042C  948B               	bcf	3979,2,c	;volatile
  3206  00042E  928B               	bcf	3979,1,c	;volatile
  3207                           
  3208                           ;MotorDriver.c: 267: if ((Microstep<48)&&(Microstep>31)){
  3209  000430  BE43               	btfsc	_Microstep+1,7,c
  3210  000432  D006               	goto	l2215
  3211  000434  5043               	movf	_Microstep+1,w,c
  3212  000436  E103               	bnz	u1541
  3213  000438  0E30               	movlw	48
  3214  00043A  5C42               	subwf	_Microstep,w,c
  3215  00043C  B0D8               	btfsc	status,0,c
  3216  00043E                     u1541:
  3217  00043E  0012               	return	
  3218  000440                     l2215:
  3219  000440  BE43               	btfsc	_Microstep+1,7,c
  3220  000442  0012               	return	
  3221  000444  5043               	movf	_Microstep+1,w,c
  3222  000446  E104               	bnz	u1550
  3223  000448  0E20               	movlw	32
  3224  00044A  5C42               	subwf	_Microstep,w,c
  3225  00044C  A0D8               	btfss	status,0,c
  3226  00044E  0012               	return	
  3227  000450                     u1550:
  3228                           
  3229                           ;MotorDriver.c: 272: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  3230  000450  0EA0               	movlw	low _LookUP_TABLE_COS_16
  3231  000452  2442               	addwf	_Microstep,w,c
  3232  000454  6ED9               	movwf	fsr2l,c
  3233  000456  0E00               	movlw	high _LookUP_TABLE_COS_16
  3234  000458  2043               	addwfc	_Microstep+1,w,c
  3235  00045A  6EDA               	movwf	fsr2h,c
  3236  00045C  50DF               	movf	indf2,w,c
  3237  00045E  6E33               	movwf	??_State16MEF_act& (0+255),c
  3238  000460  5033               	movf	??_State16MEF_act,w,c
  3239  000462  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3240  000464  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3241  000466  EC93  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3242                           
  3243                           ;MotorDriver.c: 273: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  3244  00046A  0E60               	movlw	low _LookUP_TABLE_SEN_16
  3245  00046C  2442               	addwf	_Microstep,w,c
  3246  00046E  6ED9               	movwf	fsr2l,c
  3247  000470  0E00               	movlw	high _LookUP_TABLE_SEN_16
  3248  000472  2043               	addwfc	_Microstep+1,w,c
  3249  000474  6EDA               	movwf	fsr2h,c
  3250  000476  50DF               	movf	indf2,w,c
  3251  000478  6E33               	movwf	??_State16MEF_act& (0+255),c
  3252  00047A  5033               	movf	??_State16MEF_act,w,c
  3253  00047C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3254  00047E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3255  000480  EC7B  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3256                           
  3257                           ;MotorDriver.c: 275: if (direccion == 1){
  3258  000484  0434               	decf	State16MEF_act@direccion,w,c
  3259  000486  A4D8               	btfss	status,2,c
  3260  000488  D00A               	goto	l2227
  3261                           
  3262                           ;MotorDriver.c: 276: if (Microstep==47){
  3263  00048A  0E2F               	movlw	47
  3264  00048C  1842               	xorwf	_Microstep,w,c
  3265  00048E  1043               	iorwf	_Microstep+1,w,c
  3266  000490  A4D8               	btfss	status,2,c
  3267  000492  D002               	goto	l2225
  3268                           
  3269                           ;MotorDriver.c: 277: EstadoActual = STATE4;
  3270  000494  0E04               	movlw	4
  3271  000496  6E50               	movwf	_EstadoActual,c
  3272  000498                     l2225:
  3273                           
  3274                           ;MotorDriver.c: 278: }
  3275                           ;MotorDriver.c: 279: Microstep++;
  3276  000498  4A42               	infsnz	_Microstep,f,c
  3277  00049A  2A43               	incf	_Microstep+1,f,c
  3278                           
  3279                           ;MotorDriver.c: 280: }
  3280  00049C  0012               	return	
  3281  00049E                     l2227:
  3282                           
  3283                           ;MotorDriver.c: 281: else{
  3284                           ;MotorDriver.c: 282: if (Microstep==32){
  3285  00049E  0E20               	movlw	32
  3286  0004A0  1842               	xorwf	_Microstep,w,c
  3287  0004A2  1043               	iorwf	_Microstep+1,w,c
  3288  0004A4  A4D8               	btfss	status,2,c
  3289  0004A6  D002               	goto	l2231
  3290                           
  3291                           ;MotorDriver.c: 283: EstadoActual = STATE2;
  3292  0004A8  0E02               	movlw	2
  3293  0004AA  6E50               	movwf	_EstadoActual,c
  3294  0004AC                     l2231:
  3295                           
  3296                           ;MotorDriver.c: 284: }
  3297                           ;MotorDriver.c: 285: Microstep--;
  3298  0004AC  0642               	decf	_Microstep,f,c
  3299  0004AE  A0D8               	btfss	status,0,c
  3300  0004B0  0643               	decf	_Microstep+1,f,c
  3301                           
  3302                           ;MotorDriver.c: 286: }
  3303                           ;MotorDriver.c: 287: }
  3304                           ;MotorDriver.c: 288: break;
  3305  0004B2  0012               	return	
  3306  0004B4                     l2233:
  3307                           
  3308                           ;MotorDriver.c: 290: PSTR1CON = 0x01; PSTR2CON = 0x02;
  3309  0004B4  0E01               	movlw	1
  3310  0004B6  6EB9               	movwf	4025,c	;volatile
  3311  0004B8  0E02               	movlw	2
  3312  0004BA  6E63               	movwf	3939,c	;volatile
  3313                           
  3314                           ;MotorDriver.c: 291: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  3315  0004BC  9A8C               	bcf	3980,5,c	;volatile
  3316  0004BE  928B               	bcf	3979,1,c	;volatile
  3317                           
  3318                           ;MotorDriver.c: 292: if ((Microstep<64)&&(Microstep>47)){
  3319  0004C0  BE43               	btfsc	_Microstep+1,7,c
  3320  0004C2  D006               	goto	l2241
  3321  0004C4  5043               	movf	_Microstep+1,w,c
  3322  0004C6  E14E               	bnz	l551
  3323  0004C8  0E40               	movlw	64
  3324  0004CA  5C42               	subwf	_Microstep,w,c
  3325  0004CC  B0D8               	btfsc	status,0,c
  3326  0004CE  0012               	return	
  3327  0004D0                     l2241:
  3328  0004D0  BE43               	btfsc	_Microstep+1,7,c
  3329  0004D2  0012               	return	
  3330  0004D4  5043               	movf	_Microstep+1,w,c
  3331  0004D6  E104               	bnz	u1600
  3332  0004D8  0E30               	movlw	48
  3333  0004DA  5C42               	subwf	_Microstep,w,c
  3334  0004DC  A0D8               	btfss	status,0,c
  3335  0004DE  0012               	return	
  3336  0004E0                     u1600:
  3337                           
  3338                           ;MotorDriver.c: 297: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  3339  0004E0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  3340  0004E2  2442               	addwf	_Microstep,w,c
  3341  0004E4  6ED9               	movwf	fsr2l,c
  3342  0004E6  0E00               	movlw	high _LookUP_TABLE_COS_16
  3343  0004E8  2043               	addwfc	_Microstep+1,w,c
  3344  0004EA  6EDA               	movwf	fsr2h,c
  3345  0004EC  50DF               	movf	indf2,w,c
  3346  0004EE  6E33               	movwf	??_State16MEF_act& (0+255),c
  3347  0004F0  5033               	movf	??_State16MEF_act,w,c
  3348  0004F2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3349  0004F4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3350  0004F6  EC93  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3351                           
  3352                           ;MotorDriver.c: 298: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  3353  0004FA  0E60               	movlw	low _LookUP_TABLE_SEN_16
  3354  0004FC  2442               	addwf	_Microstep,w,c
  3355  0004FE  6ED9               	movwf	fsr2l,c
  3356  000500  0E00               	movlw	high _LookUP_TABLE_SEN_16
  3357  000502  2043               	addwfc	_Microstep+1,w,c
  3358  000504  6EDA               	movwf	fsr2h,c
  3359  000506  50DF               	movf	indf2,w,c
  3360  000508  6E33               	movwf	??_State16MEF_act& (0+255),c
  3361  00050A  5033               	movf	??_State16MEF_act,w,c
  3362  00050C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3363  00050E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3364  000510  EC7B  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3365                           
  3366                           ;MotorDriver.c: 300: if (direccion == 1){
  3367  000514  0434               	decf	State16MEF_act@direccion,w,c
  3368  000516  A4D8               	btfss	status,2,c
  3369  000518  D00C               	goto	l2255
  3370                           
  3371                           ;MotorDriver.c: 301: if (Microstep==63){
  3372  00051A  0E3F               	movlw	63
  3373  00051C  1842               	xorwf	_Microstep,w,c
  3374  00051E  1043               	iorwf	_Microstep+1,w,c
  3375  000520  A4D8               	btfss	status,2,c
  3376  000522  D004               	goto	l2253
  3377                           
  3378                           ;MotorDriver.c: 302: EstadoActual = STATE1;
  3379  000524  0E01               	movlw	1
  3380  000526  6E50               	movwf	_EstadoActual,c
  3381                           
  3382                           ;MotorDriver.c: 303: Microstep=-1;
  3383  000528  6842               	setf	_Microstep,c
  3384  00052A  6843               	setf	_Microstep+1,c
  3385  00052C                     l2253:
  3386                           
  3387                           ;MotorDriver.c: 304: }
  3388                           ;MotorDriver.c: 305: Microstep++;
  3389  00052C  4A42               	infsnz	_Microstep,f,c
  3390  00052E  2A43               	incf	_Microstep+1,f,c
  3391                           
  3392                           ;MotorDriver.c: 306: }
  3393  000530  0012               	return	
  3394  000532                     l2255:
  3395                           
  3396                           ;MotorDriver.c: 307: else{
  3397                           ;MotorDriver.c: 308: if (Microstep==48){
  3398  000532  0E30               	movlw	48
  3399  000534  1842               	xorwf	_Microstep,w,c
  3400  000536  1043               	iorwf	_Microstep+1,w,c
  3401  000538  A4D8               	btfss	status,2,c
  3402  00053A  D002               	goto	l2259
  3403                           
  3404                           ;MotorDriver.c: 309: EstadoActual = STATE3;
  3405  00053C  0E03               	movlw	3
  3406  00053E  6E50               	movwf	_EstadoActual,c
  3407  000540                     l2259:
  3408                           
  3409                           ;MotorDriver.c: 310: }
  3410                           ;MotorDriver.c: 311: Microstep--;
  3411  000540  0642               	decf	_Microstep,f,c
  3412  000542  A0D8               	btfss	status,0,c
  3413  000544  0643               	decf	_Microstep+1,f,c
  3414                           
  3415                           ;MotorDriver.c: 318: }
  3416                           
  3417                           ;MotorDriver.c: 317: break;
  3418                           
  3419                           ;MotorDriver.c: 315: default:
  3420                           
  3421                           ;MotorDriver.c: 312: }
  3422                           ;MotorDriver.c: 313: }
  3423                           ;MotorDriver.c: 314: break;
  3424  000546  0012               	return	
  3425  000548                     l2263:
  3426  000548  5050               	movf	_EstadoActual,w,c
  3427                           
  3428                           ; Switch size 1, requested type "space"
  3429                           ; Number of cases is 4, Range of values is 1 to 4
  3430                           ; switch strategies available:
  3431                           ; Name         Instructions Cycles
  3432                           ; simple_byte           13     7 (average)
  3433                           ;	Chosen strategy is simple_byte
  3434  00054A  0A01               	xorlw	1	; case 1
  3435  00054C  B4D8               	btfsc	status,2,c
  3436  00054E  D6DF               	goto	l2157
  3437  000550  0A03               	xorlw	3	; case 2
  3438  000552  B4D8               	btfsc	status,2,c
  3439  000554  D71F               	goto	l2181
  3440  000556  0A01               	xorlw	1	; case 3
  3441  000558  B4D8               	btfsc	status,2,c
  3442  00055A  D764               	goto	l2207
  3443  00055C  0A07               	xorlw	7	; case 4
  3444  00055E  A4D8               	btfss	status,2,c
  3445  000560  0012               	return	
  3446  000562  D7A8               	goto	l2233
  3447  000564                     l551:
  3448  000564  0012               	return		;funcret
  3449  000566                     __end_of_State16MEF_act:
  3450                           	opt stack 0
  3451                           tblptru	equ	0xFF8
  3452                           tblptrh	equ	0xFF7
  3453                           tblptrl	equ	0xFF6
  3454                           tablat	equ	0xFF5
  3455                           intcon	equ	0xFF2
  3456                           intcon2	equ	0xFF1
  3457                           postinc0	equ	0xFEE
  3458                           wreg	equ	0xFE8
  3459                           postdec1	equ	0xFE5
  3460                           fsr1l	equ	0xFE1
  3461                           indf2	equ	0xFDF
  3462                           fsr2h	equ	0xFDA
  3463                           fsr2l	equ	0xFD9
  3464                           status	equ	0xFD8
  3465                           
  3466 ;; *************** function _EPWM2_LoadDutyValue *****************
  3467 ;; Defined at:
  3468 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  dutyValue       2   14[COMRAM] unsigned int 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;		None
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;Total ram usage:        4 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    4
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		_State8MEF_act
  3493 ;;		_State16MEF_act
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text22
  3498  0008F6                     __ptext22:
  3499                           	opt stack 0
  3500  0008F6                     _EPWM2_LoadDutyValue:
  3501                           	opt stack 24
  3502                           
  3503                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  3504                           
  3505                           ;incstack = 0
  3506  0008F6  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3507  0008FA  C030  F032         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  3508  0008FE  90D8               	bcf	status,0,c
  3509  000900  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  3510  000902  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  3511  000904  90D8               	bcf	status,0,c
  3512  000906  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  3513  000908  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  3514  00090A  5031               	movf	??_EPWM2_LoadDutyValue,w,c
  3515  00090C  6E67               	movwf	3943,c	;volatile
  3516                           
  3517                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3518  00090E  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3519  000912  0E03               	movlw	3
  3520  000914  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  3521  000916  3A31               	swapf	??_EPWM2_LoadDutyValue,f,c
  3522  000918  0EF0               	movlw	240
  3523  00091A  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  3524  00091C  5066               	movf	3942,w,c	;volatile
  3525  00091E  0BCF               	andlw	207
  3526  000920  1031               	iorwf	??_EPWM2_LoadDutyValue,w,c
  3527  000922  6E66               	movwf	3942,c	;volatile
  3528  000924  0012               	return		;funcret
  3529  000926                     __end_of_EPWM2_LoadDutyValue:
  3530                           	opt stack 0
  3531                           tblptru	equ	0xFF8
  3532                           tblptrh	equ	0xFF7
  3533                           tblptrl	equ	0xFF6
  3534                           tablat	equ	0xFF5
  3535                           intcon	equ	0xFF2
  3536                           intcon2	equ	0xFF1
  3537                           postinc0	equ	0xFEE
  3538                           wreg	equ	0xFE8
  3539                           postdec1	equ	0xFE5
  3540                           fsr1l	equ	0xFE1
  3541                           indf2	equ	0xFDF
  3542                           fsr2h	equ	0xFDA
  3543                           fsr2l	equ	0xFD9
  3544                           status	equ	0xFD8
  3545                           
  3546 ;; *************** function _EPWM1_LoadDutyValue *****************
  3547 ;; Defined at:
  3548 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  dutyValue       2   14[COMRAM] unsigned int 
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;Total ram usage:        4 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    4
  3569 ;; This function calls:
  3570 ;;		Nothing
  3571 ;; This function is called by:
  3572 ;;		_State8MEF_act
  3573 ;;		_State16MEF_act
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text23
  3578  000926                     __ptext23:
  3579                           	opt stack 0
  3580  000926                     _EPWM1_LoadDutyValue:
  3581                           	opt stack 24
  3582                           
  3583                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  3584                           
  3585                           ;incstack = 0
  3586  000926  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3587  00092A  C030  F032         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  3588  00092E  90D8               	bcf	status,0,c
  3589  000930  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3590  000932  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3591  000934  90D8               	bcf	status,0,c
  3592  000936  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3593  000938  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3594  00093A  5031               	movf	??_EPWM1_LoadDutyValue,w,c
  3595  00093C  6EBE               	movwf	4030,c	;volatile
  3596                           
  3597                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3598  00093E  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3599  000942  0E03               	movlw	3
  3600  000944  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  3601  000946  3A31               	swapf	??_EPWM1_LoadDutyValue,f,c
  3602  000948  0EF0               	movlw	240
  3603  00094A  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  3604  00094C  50BD               	movf	4029,w,c	;volatile
  3605  00094E  0BCF               	andlw	207
  3606  000950  1031               	iorwf	??_EPWM1_LoadDutyValue,w,c
  3607  000952  6EBD               	movwf	4029,c	;volatile
  3608  000954  0012               	return		;funcret
  3609  000956                     __end_of_EPWM1_LoadDutyValue:
  3610                           	opt stack 0
  3611                           tblptru	equ	0xFF8
  3612                           tblptrh	equ	0xFF7
  3613                           tblptrl	equ	0xFF6
  3614                           tablat	equ	0xFF5
  3615                           intcon	equ	0xFF2
  3616                           intcon2	equ	0xFF1
  3617                           postinc0	equ	0xFEE
  3618                           wreg	equ	0xFE8
  3619                           postdec1	equ	0xFE5
  3620                           fsr1l	equ	0xFE1
  3621                           indf2	equ	0xFDF
  3622                           fsr2h	equ	0xFDA
  3623                           fsr2l	equ	0xFD9
  3624                           status	equ	0xFD8
  3625                           
  3626 ;; *************** function _Motor_Stop *****************
  3627 ;; Defined at:
  3628 ;;		line 81 in file "MotorDriver.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    4
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text24
  3657  000ADA                     __ptext24:
  3658                           	opt stack 0
  3659  000ADA                     _Motor_Stop:
  3660                           	opt stack 26
  3661                           
  3662                           ;MotorDriver.c: 82: PSTR1CON = 0x00; PSTR2CON = 0x00;
  3663                           
  3664                           ;incstack = 0
  3665  000ADA  0E00               	movlw	0
  3666  000ADC  6EB9               	movwf	4025,c	;volatile
  3667  000ADE  0E00               	movlw	0
  3668  000AE0  6E63               	movwf	3939,c	;volatile
  3669                           
  3670                           ;MotorDriver.c: 83: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whil
      +                          e(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  3671  000AE2  948B               	bcf	3979,2,c	;volatile
  3672  000AE4  9A8C               	bcf	3980,5,c	;volatile
  3673  000AE6  928B               	bcf	3979,1,c	;volatile
  3674  000AE8  908B               	bcf	3979,0,c	;volatile
  3675  000AEA  0012               	return	
  3676  000AEC                     __end_of_Motor_Stop:
  3677                           	opt stack 0
  3678                           tblptru	equ	0xFF8
  3679                           tblptrh	equ	0xFF7
  3680                           tblptrl	equ	0xFF6
  3681                           tablat	equ	0xFF5
  3682                           intcon	equ	0xFF2
  3683                           intcon2	equ	0xFF1
  3684                           postinc0	equ	0xFEE
  3685                           wreg	equ	0xFE8
  3686                           postdec1	equ	0xFE5
  3687                           fsr1l	equ	0xFE1
  3688                           indf2	equ	0xFDF
  3689                           fsr2h	equ	0xFDA
  3690                           fsr2l	equ	0xFD9
  3691                           status	equ	0xFD8
  3692                           
  3693 ;; *************** function _DelayTmr2 *****************
  3694 ;; Defined at:
  3695 ;;		line 86 in file "MotorDriver.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  Timeout         2   14[COMRAM] unsigned int 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;Total ram usage:        2 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    4
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_main
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text25
  3724  000A7C                     __ptext25:
  3725                           	opt stack 0
  3726  000A7C                     _DelayTmr2:
  3727                           	opt stack 0
  3728                           
  3729                           ;incstack = 0
  3730  000A7C  D006               	goto	l2093
  3731  000A7E                     l2089:
  3732                           
  3733                           ;MotorDriver.c: 92: {
  3734                           ;MotorDriver.c: 93: if (DelayTimerTicked)
  3735  000A7E  504A               	movf	_DelayTimerTicked,w,c	;volatile
  3736  000A80  B4D8               	btfsc	status,2,c
  3737  000A82  D005               	goto	l2095
  3738                           
  3739                           ;MotorDriver.c: 94: {
  3740                           ;MotorDriver.c: 95: Timeout--;
  3741  000A84  062F               	decf	DelayTmr2@Timeout,f,c
  3742  000A86  A0D8               	btfss	status,0,c
  3743  000A88  0630               	decf	DelayTmr2@Timeout+1,f,c
  3744  000A8A                     l2093:
  3745                           
  3746                           ;MotorDriver.c: 96: DelayTimerTicked = 0;
  3747  000A8A  0E00               	movlw	0
  3748  000A8C  6E4A               	movwf	_DelayTimerTicked,c	;volatile
  3749  000A8E                     l2095:
  3750  000A8E  502F               	movf	DelayTmr2@Timeout,w,c
  3751  000A90  1030               	iorwf	DelayTmr2@Timeout+1,w,c
  3752  000A92  B4D8               	btfsc	status,2,c
  3753  000A94  0012               	return	
  3754  000A96  D7F3               	goto	l2089
  3755  000A98                     __end_of_DelayTmr2:
  3756                           	opt stack 0
  3757                           tblptru	equ	0xFF8
  3758                           tblptrh	equ	0xFF7
  3759                           tblptrl	equ	0xFF6
  3760                           tablat	equ	0xFF5
  3761                           intcon	equ	0xFF2
  3762                           intcon2	equ	0xFF1
  3763                           postinc0	equ	0xFEE
  3764                           wreg	equ	0xFE8
  3765                           postdec1	equ	0xFE5
  3766                           fsr1l	equ	0xFE1
  3767                           indf2	equ	0xFDF
  3768                           fsr2h	equ	0xFDA
  3769                           fsr2l	equ	0xFD9
  3770                           status	equ	0xFD8
  3771                           
  3772 ;; *************** function _INTERRUPT_InterruptManager *****************
  3773 ;; Defined at:
  3774 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;		None
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;Total ram usage:       14 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    3
  3795 ;; This function calls:
  3796 ;;		_ADC_ISR
  3797 ;;		_TMR2_ISR
  3798 ;;		_TMR6_ISR
  3799 ;; This function is called by:
  3800 ;;		Interrupt level 2
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	intcode
  3805  000008                     __pintcode:
  3806                           	opt stack 0
  3807  000008                     _INTERRUPT_InterruptManager:
  3808                           	opt stack 23
  3809                           
  3810                           ;incstack = 0
  3811  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3812  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  3813  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3814  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3815  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3816  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3817  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3818  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3819  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3820  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3821  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3822  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3823  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3824  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3825  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3826                           
  3827                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  3828  000042  BCF2               	btfsc	intcon,6,c	;volatile
  3829  000044  AC9D               	btfss	3997,6,c	;volatile
  3830  000046  D005               	goto	i2l270
  3831  000048  AC9E               	btfss	3998,6,c	;volatile
  3832  00004A  D003               	goto	i2l270
  3833                           
  3834                           ;interrupt_manager.c: 61: {
  3835                           ;interrupt_manager.c: 62: ADC_ISR();
  3836  00004C  EC99  F005         	call	_ADC_ISR	;wreg free
  3837                           
  3838                           ;interrupt_manager.c: 63: }
  3839  000050  D00E               	goto	i2l276
  3840  000052                     i2l270:
  3841                           
  3842                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  3843  000052  BCF2               	btfsc	intcon,6,c	;volatile
  3844  000054  A47D               	btfss	3965,2,c	;volatile
  3845  000056  D005               	goto	i2l272
  3846  000058  A47E               	btfss	3966,2,c	;volatile
  3847  00005A  D003               	goto	i2l272
  3848                           
  3849                           ;interrupt_manager.c: 65: {
  3850                           ;interrupt_manager.c: 66: TMR6_ISR();
  3851  00005C  EC1D  F005         	call	_TMR6_ISR	;wreg free
  3852                           
  3853                           ;interrupt_manager.c: 67: }
  3854  000060  D006               	goto	i2l276
  3855  000062                     i2l272:
  3856                           
  3857                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  3858  000062  BCF2               	btfsc	intcon,6,c	;volatile
  3859  000064  A29D               	btfss	3997,1,c	;volatile
  3860  000066  D003               	goto	i2l276
  3861  000068  B29E               	btfsc	3998,1,c	;volatile
  3862                           
  3863                           ;interrupt_manager.c: 69: {
  3864                           ;interrupt_manager.c: 70: TMR2_ISR();
  3865  00006A  EC8E  F005         	call	_TMR2_ISR	;wreg free
  3866  00006E                     i2l276:
  3867  00006E  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3868  000072  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3869  000076  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3870  00007A  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3871  00007E  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3872  000082  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3873  000086  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3874  00008A  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3875  00008E  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3876  000092  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3877  000096  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3878  00009A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3879  00009E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3880  0000A2  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3881  0000A6  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3882  0000A8  0011               	retfie		f
  3883  0000AA                     __end_of_INTERRUPT_InterruptManager:
  3884                           	opt stack 0
  3885                           pclatu	equ	0xFFB
  3886                           pclath	equ	0xFFA
  3887                           tblptru	equ	0xFF8
  3888                           tblptrh	equ	0xFF7
  3889                           tblptrl	equ	0xFF6
  3890                           tablat	equ	0xFF5
  3891                           prodh	equ	0xFF4
  3892                           prodl	equ	0xFF3
  3893                           intcon	equ	0xFF2
  3894                           intcon2	equ	0xFF1
  3895                           postinc0	equ	0xFEE
  3896                           fsr0h	equ	0xFEA
  3897                           fsr0l	equ	0xFE9
  3898                           wreg	equ	0xFE8
  3899                           postdec1	equ	0xFE5
  3900                           fsr1h	equ	0xFE2
  3901                           fsr1l	equ	0xFE1
  3902                           indf2	equ	0xFDF
  3903                           fsr2h	equ	0xFDA
  3904                           fsr2l	equ	0xFD9
  3905                           status	equ	0xFD8
  3906                           
  3907 ;; *************** function _TMR6_ISR *****************
  3908 ;; Defined at:
  3909 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;Total ram usage:        0 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    1
  3930 ;; This function calls:
  3931 ;;		Absolute function
  3932 ;;		_TMR6_DefaultInterruptHandler
  3933 ;; This function is called by:
  3934 ;;		_INTERRUPT_InterruptManager
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text27
  3939  000A3A                     __ptext27:
  3940                           	opt stack 0
  3941  000A3A                     _TMR6_ISR:
  3942                           	opt stack 24
  3943                           
  3944                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  3945                           
  3946                           ;incstack = 0
  3947  000A3A  947E               	bcf	3966,2,c	;volatile
  3948                           
  3949                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  3950  000A3C  504E               	movf	_TMR6_InterruptHandler,w,c
  3951  000A3E  104F               	iorwf	_TMR6_InterruptHandler+1,w,c
  3952  000A40  B4D8               	btfsc	status,2,c
  3953  000A42  0012               	return	
  3954                           
  3955                           ;tmr6.c: 128: {
  3956                           ;tmr6.c: 129: TMR6_InterruptHandler();
  3957  000A44  D801               	call	i2u46_48
  3958  000A46  0012               	return	
  3959  000A48                     i2u46_48:
  3960  000A48  0005               	push	
  3961  000A4A  6EFA               	movwf	pclath,c
  3962  000A4C  504E               	movf	_TMR6_InterruptHandler,w,c
  3963  000A4E  6EFD               	movwf	tosl,c
  3964  000A50  504F               	movf	_TMR6_InterruptHandler+1,w,c
  3965  000A52  6EFE               	movwf	tosh,c
  3966  000A54  50F8               	movf	tblptru,w,c
  3967  000A56  6EFF               	movwf	tosu,c
  3968  000A58  50FA               	movf	pclath,w,c
  3969  000A5A  0012               	return		;indir
  3970  000A5C                     __end_of_TMR6_ISR:
  3971                           	opt stack 0
  3972                           tosu	equ	0xFFF
  3973                           tosh	equ	0xFFE
  3974                           tosl	equ	0xFFD
  3975                           pclatu	equ	0xFFB
  3976                           pclath	equ	0xFFA
  3977                           tblptru	equ	0xFF8
  3978                           tblptrh	equ	0xFF7
  3979                           tblptrl	equ	0xFF6
  3980                           tablat	equ	0xFF5
  3981                           prodh	equ	0xFF4
  3982                           prodl	equ	0xFF3
  3983                           intcon	equ	0xFF2
  3984                           intcon2	equ	0xFF1
  3985                           postinc0	equ	0xFEE
  3986                           fsr0h	equ	0xFEA
  3987                           fsr0l	equ	0xFE9
  3988                           wreg	equ	0xFE8
  3989                           postdec1	equ	0xFE5
  3990                           fsr1h	equ	0xFE2
  3991                           fsr1l	equ	0xFE1
  3992                           indf2	equ	0xFDF
  3993                           fsr2h	equ	0xFDA
  3994                           fsr2l	equ	0xFD9
  3995                           status	equ	0xFD8
  3996                           
  3997 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  3998 ;; Defined at:
  3999 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;		None
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;		None
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      void 
  4006 ;; Registers used:
  4007 ;;		None
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;Total ram usage:        0 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_TMR6_Initialize
  4023 ;;		_TMR6_ISR
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text28
  4028  000B36                     __ptext28:
  4029                           	opt stack 0
  4030  000B36                     _TMR6_DefaultInterruptHandler:
  4031                           	opt stack 24
  4032                           
  4033                           ;incstack = 0
  4034  000B36  0012               	return		;funcret
  4035  000B38                     __end_of_TMR6_DefaultInterruptHandler:
  4036                           	opt stack 0
  4037                           tosu	equ	0xFFF
  4038                           tosh	equ	0xFFE
  4039                           tosl	equ	0xFFD
  4040                           pclatu	equ	0xFFB
  4041                           pclath	equ	0xFFA
  4042                           tblptru	equ	0xFF8
  4043                           tblptrh	equ	0xFF7
  4044                           tblptrl	equ	0xFF6
  4045                           tablat	equ	0xFF5
  4046                           prodh	equ	0xFF4
  4047                           prodl	equ	0xFF3
  4048                           intcon	equ	0xFF2
  4049                           intcon2	equ	0xFF1
  4050                           postinc0	equ	0xFEE
  4051                           fsr0h	equ	0xFEA
  4052                           fsr0l	equ	0xFE9
  4053                           wreg	equ	0xFE8
  4054                           postdec1	equ	0xFE5
  4055                           fsr1h	equ	0xFE2
  4056                           fsr1l	equ	0xFE1
  4057                           indf2	equ	0xFDF
  4058                           fsr2h	equ	0xFDA
  4059                           fsr2l	equ	0xFD9
  4060                           status	equ	0xFD8
  4061                           
  4062 ;; *************** function _TMR2_ISR *****************
  4063 ;; Defined at:
  4064 ;;		line 126 in file "mcc_generated_files/tmr2.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;		None
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      void 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;Total ram usage:        0 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    2
  4085 ;; This function calls:
  4086 ;;		_TMR2_CallBack
  4087 ;; This function is called by:
  4088 ;;		_INTERRUPT_InterruptManager
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text29
  4093  000B1C                     __ptext29:
  4094                           	opt stack 0
  4095  000B1C                     _TMR2_ISR:
  4096                           	opt stack 23
  4097                           
  4098                           ;tmr2.c: 130: PIR1bits.TMR2IF = 0;
  4099                           
  4100                           ;incstack = 0
  4101  000B1C  929E               	bcf	3998,1,c	;volatile
  4102                           
  4103                           ;tmr2.c: 134: TMR2_CallBack();
  4104  000B1E  ECD4  F004         	call	_TMR2_CallBack	;wreg free
  4105  000B22  0012               	return		;funcret
  4106  000B24                     __end_of_TMR2_ISR:
  4107                           	opt stack 0
  4108                           tosu	equ	0xFFF
  4109                           tosh	equ	0xFFE
  4110                           tosl	equ	0xFFD
  4111                           pclatu	equ	0xFFB
  4112                           pclath	equ	0xFFA
  4113                           tblptru	equ	0xFF8
  4114                           tblptrh	equ	0xFF7
  4115                           tblptrl	equ	0xFF6
  4116                           tablat	equ	0xFF5
  4117                           prodh	equ	0xFF4
  4118                           prodl	equ	0xFF3
  4119                           intcon	equ	0xFF2
  4120                           intcon2	equ	0xFF1
  4121                           postinc0	equ	0xFEE
  4122                           fsr0h	equ	0xFEA
  4123                           fsr0l	equ	0xFE9
  4124                           wreg	equ	0xFE8
  4125                           postdec1	equ	0xFE5
  4126                           fsr1h	equ	0xFE2
  4127                           fsr1l	equ	0xFE1
  4128                           indf2	equ	0xFDF
  4129                           fsr2h	equ	0xFDA
  4130                           fsr2l	equ	0xFD9
  4131                           status	equ	0xFD8
  4132                           
  4133 ;; *************** function _TMR2_CallBack *****************
  4134 ;; Defined at:
  4135 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    1
  4156 ;; This function calls:
  4157 ;;		Absolute function
  4158 ;;		_TMR2_DefaultInterruptHandler
  4159 ;; This function is called by:
  4160 ;;		_TMR2_ISR
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text30
  4165  0009A8                     __ptext30:
  4166                           	opt stack 0
  4167  0009A8                     _TMR2_CallBack:
  4168                           	opt stack 23
  4169                           
  4170                           ;tmr2.c: 140: Timer2Ticked = 1;
  4171                           
  4172                           ;incstack = 0
  4173  0009A8  0E01               	movlw	1
  4174  0009AA  6E4B               	movwf	_Timer2Ticked,c	;volatile
  4175                           
  4176                           ;tmr2.c: 141: DelayTimerTicked = 1;
  4177  0009AC  0E01               	movlw	1
  4178  0009AE  6E4A               	movwf	_DelayTimerTicked,c	;volatile
  4179                           
  4180                           ;tmr2.c: 144: if(TMR2_InterruptHandler)
  4181  0009B0  504C               	movf	_TMR2_InterruptHandler,w,c
  4182  0009B2  104D               	iorwf	_TMR2_InterruptHandler+1,w,c
  4183  0009B4  B4D8               	btfsc	status,2,c
  4184  0009B6  0012               	return	
  4185                           
  4186                           ;tmr2.c: 145: {
  4187                           ;tmr2.c: 146: TMR2_InterruptHandler();
  4188  0009B8  D801               	call	i2u40_48
  4189  0009BA  0012               	return	
  4190  0009BC                     i2u40_48:
  4191  0009BC  0005               	push	
  4192  0009BE  6EFA               	movwf	pclath,c
  4193  0009C0  504C               	movf	_TMR2_InterruptHandler,w,c
  4194  0009C2  6EFD               	movwf	tosl,c
  4195  0009C4  504D               	movf	_TMR2_InterruptHandler+1,w,c
  4196  0009C6  6EFE               	movwf	tosh,c
  4197  0009C8  50F8               	movf	tblptru,w,c
  4198  0009CA  6EFF               	movwf	tosu,c
  4199  0009CC  50FA               	movf	pclath,w,c
  4200  0009CE  0012               	return		;indir
  4201  0009D0                     __end_of_TMR2_CallBack:
  4202                           	opt stack 0
  4203                           tosu	equ	0xFFF
  4204                           tosh	equ	0xFFE
  4205                           tosl	equ	0xFFD
  4206                           pclatu	equ	0xFFB
  4207                           pclath	equ	0xFFA
  4208                           tblptru	equ	0xFF8
  4209                           tblptrh	equ	0xFF7
  4210                           tblptrl	equ	0xFF6
  4211                           tablat	equ	0xFF5
  4212                           prodh	equ	0xFF4
  4213                           prodl	equ	0xFF3
  4214                           intcon	equ	0xFF2
  4215                           intcon2	equ	0xFF1
  4216                           postinc0	equ	0xFEE
  4217                           fsr0h	equ	0xFEA
  4218                           fsr0l	equ	0xFE9
  4219                           wreg	equ	0xFE8
  4220                           postdec1	equ	0xFE5
  4221                           fsr1h	equ	0xFE2
  4222                           fsr1l	equ	0xFE1
  4223                           indf2	equ	0xFDF
  4224                           fsr2h	equ	0xFDA
  4225                           fsr2l	equ	0xFD9
  4226                           status	equ	0xFD8
  4227                           
  4228 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4229 ;; Defined at:
  4230 ;;		line 154 in file "mcc_generated_files/tmr2.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;		None
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;		None
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		None
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;Total ram usage:        0 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_TMR2_Initialize
  4254 ;;		_TMR2_CallBack
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text31
  4259  000B38                     __ptext31:
  4260                           	opt stack 0
  4261  000B38                     _TMR2_DefaultInterruptHandler:
  4262                           	opt stack 23
  4263                           
  4264                           ;incstack = 0
  4265  000B38  0012               	return		;funcret
  4266  000B3A                     __end_of_TMR2_DefaultInterruptHandler:
  4267                           	opt stack 0
  4268                           tosu	equ	0xFFF
  4269                           tosh	equ	0xFFE
  4270                           tosl	equ	0xFFD
  4271                           pclatu	equ	0xFFB
  4272                           pclath	equ	0xFFA
  4273                           tblptru	equ	0xFF8
  4274                           tblptrh	equ	0xFF7
  4275                           tblptrl	equ	0xFF6
  4276                           tablat	equ	0xFF5
  4277                           prodh	equ	0xFF4
  4278                           prodl	equ	0xFF3
  4279                           intcon	equ	0xFF2
  4280                           intcon2	equ	0xFF1
  4281                           postinc0	equ	0xFEE
  4282                           fsr0h	equ	0xFEA
  4283                           fsr0l	equ	0xFE9
  4284                           wreg	equ	0xFE8
  4285                           postdec1	equ	0xFE5
  4286                           fsr1h	equ	0xFE2
  4287                           fsr1l	equ	0xFE1
  4288                           indf2	equ	0xFDF
  4289                           fsr2h	equ	0xFDA
  4290                           fsr2l	equ	0xFD9
  4291                           status	equ	0xFD8
  4292                           
  4293 ;; *************** function _ADC_ISR *****************
  4294 ;; Defined at:
  4295 ;;		line 144 in file "mcc_generated_files/adc.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;		None
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      void 
  4302 ;; Registers used:
  4303 ;;		None
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;Total ram usage:        0 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_INTERRUPT_InterruptManager
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text32
  4323  000B32                     __ptext32:
  4324                           	opt stack 0
  4325  000B32                     _ADC_ISR:
  4326                           	opt stack 25
  4327                           
  4328                           ;adc.c: 149: PIR1bits.ADIF = 0;
  4329                           
  4330                           ;incstack = 0
  4331  000B32  9C9E               	bcf	3998,6,c	;volatile
  4332  000B34  0012               	return		;funcret
  4333  000B36                     __end_of_ADC_ISR:
  4334                           	opt stack 0
  4335  0000                     tosu	equ	0xFFF
  4336                           tosh	equ	0xFFE
  4337                           tosl	equ	0xFFD
  4338                           pclatu	equ	0xFFB
  4339                           pclath	equ	0xFFA
  4340                           tblptru	equ	0xFF8
  4341                           tblptrh	equ	0xFF7
  4342                           tblptrl	equ	0xFF6
  4343                           tablat	equ	0xFF5
  4344                           prodh	equ	0xFF4
  4345                           prodl	equ	0xFF3
  4346                           intcon	equ	0xFF2
  4347                           intcon2	equ	0xFF1
  4348                           postinc0	equ	0xFEE
  4349                           fsr0h	equ	0xFEA
  4350                           fsr0l	equ	0xFE9
  4351                           wreg	equ	0xFE8
  4352                           postdec1	equ	0xFE5
  4353                           fsr1h	equ	0xFE2
  4354                           fsr1l	equ	0xFE1
  4355                           indf2	equ	0xFDF
  4356                           fsr2h	equ	0xFDA
  4357                           fsr2l	equ	0xFD9
  4358                           status	equ	0xFD8
  4359                           tosu	equ	0xFFF
  4360                           tosh	equ	0xFFE
  4361                           tosl	equ	0xFFD
  4362                           pclatu	equ	0xFFB
  4363                           pclath	equ	0xFFA
  4364                           tblptru	equ	0xFF8
  4365                           tblptrh	equ	0xFF7
  4366                           tblptrl	equ	0xFF6
  4367                           tablat	equ	0xFF5
  4368                           prodh	equ	0xFF4
  4369                           prodl	equ	0xFF3
  4370                           intcon	equ	0xFF2
  4371                           intcon2	equ	0xFF1
  4372                           postinc0	equ	0xFEE
  4373                           fsr0h	equ	0xFEA
  4374                           fsr0l	equ	0xFE9
  4375                           wreg	equ	0xFE8
  4376                           postdec1	equ	0xFE5
  4377                           fsr1h	equ	0xFE2
  4378                           fsr1l	equ	0xFE1
  4379                           indf2	equ	0xFDF
  4380                           fsr2h	equ	0xFDA
  4381                           fsr2l	equ	0xFD9
  4382                           status	equ	0xFD8
  4383                           
  4384                           	psect	text33
  4385  000000                     __ptext33:
  4386                           	opt stack 0
  4387                           tosu	equ	0xFFF
  4388                           tosh	equ	0xFFE
  4389                           tosl	equ	0xFFD
  4390                           pclatu	equ	0xFFB
  4391                           pclath	equ	0xFFA
  4392                           tblptru	equ	0xFF8
  4393                           tblptrh	equ	0xFF7
  4394                           tblptrl	equ	0xFF6
  4395                           tablat	equ	0xFF5
  4396                           prodh	equ	0xFF4
  4397                           prodl	equ	0xFF3
  4398                           intcon	equ	0xFF2
  4399                           intcon2	equ	0xFF1
  4400                           postinc0	equ	0xFEE
  4401                           fsr0h	equ	0xFEA
  4402                           fsr0l	equ	0xFE9
  4403                           wreg	equ	0xFE8
  4404                           postdec1	equ	0xFE5
  4405                           fsr1h	equ	0xFE2
  4406                           fsr1l	equ	0xFE1
  4407                           indf2	equ	0xFDF
  4408                           fsr2h	equ	0xFDA
  4409                           fsr2l	equ	0xFD9
  4410                           status	equ	0xFD8
  4411                           
  4412                           	psect	rparam
  4413  0000                     tosu	equ	0xFFF
  4414                           tosh	equ	0xFFE
  4415                           tosl	equ	0xFFD
  4416                           pclatu	equ	0xFFB
  4417                           pclath	equ	0xFFA
  4418                           tblptru	equ	0xFF8
  4419                           tblptrh	equ	0xFF7
  4420                           tblptrl	equ	0xFF6
  4421                           tablat	equ	0xFF5
  4422                           prodh	equ	0xFF4
  4423                           prodl	equ	0xFF3
  4424                           intcon	equ	0xFF2
  4425                           intcon2	equ	0xFF1
  4426                           postinc0	equ	0xFEE
  4427                           fsr0h	equ	0xFEA
  4428                           fsr0l	equ	0xFE9
  4429                           wreg	equ	0xFE8
  4430                           postdec1	equ	0xFE5
  4431                           fsr1h	equ	0xFE2
  4432                           fsr1l	equ	0xFE1
  4433                           indf2	equ	0xFDF
  4434                           fsr2h	equ	0xFDA
  4435                           fsr2l	equ	0xFD9
  4436                           status	equ	0xFD8
  4437                           
  4438                           	psect	temp
  4439  000051                     btemp:
  4440                           	opt stack 0
  4441  000051                     	ds	1
  4442  0000                     int$flags	set	btemp
  4443                           tosu	equ	0xFFF
  4444                           tosh	equ	0xFFE
  4445                           tosl	equ	0xFFD
  4446                           pclatu	equ	0xFFB
  4447                           pclath	equ	0xFFA
  4448                           tblptru	equ	0xFF8
  4449                           tblptrh	equ	0xFF7
  4450                           tblptrl	equ	0xFF6
  4451                           tablat	equ	0xFF5
  4452                           prodh	equ	0xFF4
  4453                           prodl	equ	0xFF3
  4454                           intcon	equ	0xFF2
  4455                           intcon2	equ	0xFF1
  4456                           postinc0	equ	0xFEE
  4457                           fsr0h	equ	0xFEA
  4458                           fsr0l	equ	0xFE9
  4459                           wreg	equ	0xFE8
  4460                           postdec1	equ	0xFE5
  4461                           fsr1h	equ	0xFE2
  4462                           fsr1l	equ	0xFE1
  4463                           indf2	equ	0xFDF
  4464                           fsr2h	equ	0xFDA
  4465                           fsr2l	equ	0xFD9
  4466                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        192
    BSS         19
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      80
    BANK0           160      0     160
    BANK1           256      7       7
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_RectaAceleracion
    _main->_RectaFrenado
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _RectaFrenado->_StepMove
    _RectaAceleracion->_StepMove
    _StepMove->_State16MEF_act
    _StepMove->_State8MEF_act
    _State8MEF_act->_EPWM1_LoadDutyValue
    _State8MEF_act->_EPWM2_LoadDutyValue
    _State16MEF_act->_EPWM1_LoadDutyValue
    _State16MEF_act->_EPWM2_LoadDutyValue

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_RectaAceleracion
    _main->_RectaFrenado
    _RectaFrenado->_StepMove
    _RectaAceleracion->_StepMove

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16534
                          _DelayTmr2
                         _Motor_Stop
                   _RectaAceleracion
                       _RectaFrenado
                  _SYSTEM_Initialize
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RectaFrenado                                         4     2      2    5655
                                             22 COMRAM     2     0      2
                                              5 BANK1      2     2      0
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _RectaAceleracion                                     4     2      2    5593
                                             22 COMRAM     2     0      2
                                              5 BANK1      2     2      0
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StepMove                                             7     2      5    4963
                                             20 COMRAM     2     2      0
                                              0 BANK1      5     0      5
                     _State16MEF_act
                      _State8MEF_act
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act                                        2     2      0    1480
                                             18 COMRAM     2     2      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act                                       2     2      0    1480
                                             18 COMRAM     2     2      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2     678
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     678
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Motor_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayTmr2                                            2     0      2     151
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayTmr2
   _Motor_Stop
   _RectaAceleracion
     _StepMove
       _State16MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
       _State8MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
   _RectaFrenado
     _StepMove
       _State16MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
       _State8MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_ini
   _StepMove
     _State16MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
     _State8MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      7       7       7        2.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     18      50       1       85.1%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F7      12        0.0%
DATA                 0      0      F7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Jun 26 11:25:56 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 0B1C  
                       ??_TMR6_StartTimer 002F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l505 0308                                       l435 084C  
                                     l551 0564                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _PR6 000F4B                           __end_of_ADC_ISR 0B36  
                         _TMR2_Initialize 0A18                                       tosl 000FFD  
                                     wreg 000FE8                  __end_of_EPWM2_Initialize 09F4  
                         _CCP5_Initialize 0AC6                                      l2201 040E  
                                    l2205 041C                                      l2231 04AC  
                                    l2215 0440                                      l2207 0424  
                                    l2311 01B2                                      l2241 04D0  
                                    l2233 04B4                                      l2225 0498  
                                    l2227 049E                                      l2315 01C0  
                                    l2411 071A                                      l2093 0A8A  
                                    l2253 052C                                      l2181 0394  
                                    l2173 0372                                      l2165 032A  
                                    l2157 030E                                      l2341 0250  
                                    l2325 01E4                                      l2317 01C8  
                                    l2309 01AC                                      l2405 06E6  
                                    l2095 0A8E                                      l2255 0532  
                                    l2175 0378                                      l2263 0548  
                                    l2351 0274                                      l2343 0258  
                                    l2335 023C                                      l2415 072A  
                                    l2089 0A7E                                      l2337 0242  
                                    l2409 070C                                      l2425 076E  
                                    l2259 0540                                      l2179 038C  
                                    l2363 02D0                                      l2291 0138  
                                    l2283 0116                                      l2275 00CE  
                                    l2267 00B2                                      l2419 0750  
                                    l2443 07B6                                      l2435 07A0  
                                    l2189 03B0                                      l2365 02D6  
                                    l2285 011C                                      l2373 02EC  
                                    l2429 0778                                      l2199 0408  
                                    l2439 07AC                                      l2369 02E4  
                                    l2289 0130                                      l2393 0836  
                                    l2473 059E                                      l2299 0154  
                                    l2387 0822                                      l2395 083A  
                                    l2389 082A                                      l2397 0840  
                                    l2469 058C                                      l2487 05F0  
                                    u1500 03C0                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    u1600 04E0                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u1451 0328  
                                    u1541 043E                                      u1550 0450  
                                    u1641 00CC                                      u1491 03AE  
                                    u1731 01E2                                      u1740 01F4  
                                    u1681 0152                                      u1690 0164  
                                    u1790 0284                                      _TMR2 000FBC  
                                    _TMR6 000F4C                                      _WPUB 000F61  
                        _RectaAceleracion 06D2                                      _main 0566  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0051  
                           __CFG_BORV$190 000000                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00AA  
                           __CFG_IESO$OFF 000000                     ??_EPWM1_LoadDutyValue 0031  
                            ___param_bank 000000            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 0B08                                     ?_main 0021  
                                   _T2CON 000FBA                                     _T6CON 000F4A  
                          __CFG_DEBUG$OFF 000000                                     i2l270 0052  
                                   i2l272 0062                                     i2l276 006E  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000         __size_of_TMR6_SetInterruptHandler 000A  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                 ?_TMR6_SetInterruptHandler 002F  
                        __end_of_TMR2_ISR 0B24                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                        __end_of_TMR6_ISR 0A5C                            __CFG_EBTRB$OFF 000000  
                        _LookUP_TABLE_COS 0001                          _LookUP_TABLE_SEN 00E0  
                      __CFG_MCLRE$EXTMCLR 000000                        StepMove@StepNumber 0100  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 0B2A                            __CFG_PBADEN$ON 000000  
          ??_TMR6_DefaultInterruptHandler 0021                           __initialization 0850  
              __end_of_EUSART1_Initialize 0AC6                              __end_of_main 0632  
                 __end_of_TMR2_Initialize 0A3A                                 ??_ADC_ISR 0021  
                      __size_of_DelayTmr2 001C               ?_INTERRUPT_InterruptManager 0021  
                _TMR2_SetInterruptHandler 0B12                                    ??_main 0039  
                 __end_of_CCP5_Initialize 0ADA                             __activetblptr 000002  
                        DelayTmr2@Timeout 002F                           _TMR6_Initialize 0980  
                        __end_of_StepMove 0850                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                           ?_RectaFrenado 0037                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1H 000FBF  
                                  _CCPR2H 000F68                                    _CCPR1L 000FBE  
                                  _CCPR2L 000F67                                    _CCPR5H 000F56  
                                  _CCPR5L 000F55                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAE  
                                  _RCSTA1 000FAB                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                            __CFG_XINST$OFF 000000  
                            _CCPTMRS0bits 000F49                                _Motor_Stop 0ADA  
                          __CFG_STVREN$ON 000000                   __size_of_State16MEF_act 025C  
                                  clear_0 0896                              __pdataCOMRAM 0001  
                StepMove@microstep_number 0103                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                          ??_RectaFrenado 0039                       _EPWM2_LoadDutyValue 08F6  
                 __end_of_TMR2_StartTimer 0B2E  TMR2_SetInterruptHandler@InterruptHandler 002F  
TMR6_SetInterruptHandler@InterruptHandler 002F             __size_of_INTERRUPT_Initialize 0004  
                       __end_of_DelayTmr2 0A98                         _SYSTEM_Initialize 0956  
                              __accesstop 0060                   __end_of__initialization 089C  
                   __end_of_TMR2_CallBack 09D0                        ?_SYSTEM_Initialize 0021  
                         _TMR6_StartTimer 0B24                             ___rparam_used 000001  
                       ?_EPWM1_Initialize 0021                            __pcstackCOMRAM 0021  
                    ?_EPWM2_LoadDutyValue 002F                              __pidataBANK0 0632  
                     ??_SYSTEM_Initialize 0031                     __end_of_State8MEF_act 030A  
                               ?_TMR2_ISR 0021                                 ?_TMR6_ISR 0021  
                      ??_EPWM1_Initialize 002F                          ?_TMR2_Initialize 0021  
                 __end_of_TMR6_Initialize 09A8                  __end_of_RectaAceleracion 075E  
                        ?_CCP5_Initialize 0021              RectaFrenado@microstep_number 0037  
                       ?_EPWM2_Initialize 0021                 __end_of_SYSTEM_Initialize 0980  
                      ??_EPWM2_Initialize 002F                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 004C                        __CFG_CCP2MX$PORTC1 000000  
                   ??_EPWM2_LoadDutyValue 0031                               ?_Motor_Stop 0021  
        __end_of_TMR6_SetInterruptHandler 0B12                                ??_TMR2_ISR 0021  
                      __CFG_CCP3MX$PORTB5 000000                                 ?_StepMove 0100  
                              ??_TMR6_ISR 0021                                   _CCP1CON 000FBD  
                                 _CCP2CON 000F66                                   _CCP5CON 000F54  
                                 _ECCP1AS 000FB6                                   _ECCP2AS 000F64  
                                 _ADC_ISR 0B32                   __size_of_ADC_Initialize 0018  
                                 _OSCCON2 000FD2                                   i2u40_48 09BC  
                                 _OSCTUNE 000F9B                                   i2u46_48 0A48  
                                 _PWM1CON 000FB7                                   _PWM2CON 000F65  
                                 _SPBRGH1 000FB0                          ?_TMR2_StartTimer 0021  
                 __end_of_TMR6_StartTimer 0B2A               __end_of_EPWM1_LoadDutyValue 0956  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0031  
                    __end_of_RectaFrenado 07DE                                ??_StepMove 0035  
                          _State16MEF_act 030A                                   __pcinit 0850  
                        ?_TMR6_Initialize 0021                                   __ramtop 1000  
                                 __ptext0 0566                                   __ptext1 0AEC  
                                 __ptext2 0956                                   __ptext3 0980  
                                 __ptext4 0B24                                   __ptext5 0B08  
                                 __ptext6 0A18                                   __ptext7 0B2A  
                                 __ptext8 0B12                                   __ptext9 08AA  
                   _OSCILLATOR_Initialize 0AFA                                 _T2CONbits 000FBA  
                           ?_StateMEF_ini 0021                        _EUSART1_Initialize 0AB0  
                ??_PIN_MANAGER_Initialize 002F                     RectaFrenado@direccion 0038  
                               _T6CONbits 000F4A                __size_of_SYSTEM_Initialize 002A  
                     __size_of_Motor_Stop 0012                      end_of_initialization 089C  
                     ?_EUSART1_Initialize 0021                             __Lmediumconst 0000  
                  __end_of_State16MEF_act 0566                                   postdec1 000FE5  
                                 postinc0 000FEE                      ??_EUSART1_Initialize 002F  
                _TMR6_SetInterruptHandler 0B08                            ??_StateMEF_ini 002F  
                   RectaFrenado@velocidad 0105                          ?_TMR6_StartTimer 0021  
                            _EstadoActual 0050                         RectaAceleracion@i 0106  
                               _DelayTmr2 0A7C                           ?_State16MEF_act 0021  
            __end_of_INTERRUPT_Initialize 0B32      __end_of_TMR2_DefaultInterruptHandler 0B3A  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 0B38  
               RectaAceleracion@direccion 0038                         StepMove@Velocidad 0102  
                           __pidataCOMRAM 0A5C                         __size_of_TMR2_ISR 0008  
                          _ADC_Initialize 0A98                         __size_of_TMR6_ISR 0022  
                  ?_OSCILLATOR_Initialize 0021                         ?_RectaAceleracion 0037  
                     start_initialization 0850                        ??_RectaAceleracion 0039  
               __size_of_EPWM1_Initialize 0024           __size_of_PIN_MANAGER_Initialize 004C  
                               _Microstep 0042              EPWM1_LoadDutyValue@dutyValue 002F  
                   __size_of_RectaFrenado 0080                                ?_DelayTmr2 002F  
               __size_of_EPWM2_Initialize 0024                              ??_Motor_Stop 002F  
                        _DelayTimerTicked 004A                    __end_of_ADC_Initialize 0AB0  
                             __pdataBANK0 0060                 RectaAceleracion@velocidad 0105  
                                ?_ADC_ISR 0021                                 _StepCount 0040  
                       StepMove@direccion 0104             ?_TMR2_DefaultInterruptHandler 0021  
                       __size_of_StepMove 0072                    __size_of_TMR2_CallBack 0028  
                             __pbssCOMRAM 0039                             __pcstackBANK1 0100  
                __size_of_TMR2_Initialize 0022                              _RectaFrenado 075E  
                __size_of_CCP5_Initialize 0014                        __end_of_Motor_Stop 0AEC  
                  __size_of_State8MEF_act 025C               __end_of_EPWM2_LoadDutyValue 0926  
                   _TMR6_InterruptHandler 004E                      __end_of_StateMEF_ini 0AFA  
                  _PIN_MANAGER_Initialize 08AA                                 __pintcode 0008  
                         ?_ADC_Initialize 0021                   State16MEF_act@direccion 0034  
            ??_INTERRUPT_InterruptManager 0021                          __CFG_PRICLKEN$ON 000000  
                                _BAUDCON1 000FB8                                  _ANALOG_0 0046  
                                _ANALOG_1 0044                      _INTERRUPT_Initialize 0B2E  
                                _LATBbits 000F8A                                  _LATCbits 000F8B  
                                _LATDbits 000F8C                             _TMR2_CallBack 09A8  
                                _PIE1bits 000F9D                                  _PIE5bits 000F7D  
                             ??_DelayTmr2 0031                  __size_of_TMR2_StartTimer 0004  
     __size_of_INTERRUPT_InterruptManager 00A2                                  _PIR1bits 000F9E  
                                _PIR5bits 000F7E              __size_of_EPWM1_LoadDutyValue 0030  
              ??_TMR6_SetInterruptHandler 0031                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR2_ISR 0B1C  
                                _PSTR1CON 000FB9                                  _PSTR2CON 000F63  
                                _TMR6_ISR 0A3A                             _State8MEF_act 00AE  
                        _Timer2Tick_count 003E                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2            ??_TMR2_DefaultInterruptHandler 0021  
                        _EPWM1_Initialize 09F4         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 002F                  __size_of_TMR6_Initialize 0028  
                             _INTCON2bits 000FF1                                 copy_data0 0864  
                               copy_data1 0884                     ?_INTERRUPT_Initialize 0021  
                       ??_TMR2_Initialize 0031                            ?_TMR2_CallBack 0021  
                        ??_State16MEF_act 0033                         ??_CCP5_Initialize 002F  
                                _MoveDone 0048                                  __Hrparam 0000  
                            _Timer2Ticked 004B                          _EPWM2_Initialize 09D0  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTC0 000000                            ?_State8MEF_act 0021  
                                _StepMove 07DE                   ??_OSCILLATOR_Initialize 002F  
             __size_of_EUSART1_Initialize 0016                             RectaFrenado@i 0106  
                                __ptext10 0AFA                                  __ptext11 0B2E  
                                __ptext20 00AE                                  __ptext12 0AB0  
                                __ptext21 030A                                  __ptext13 09D0  
                                __ptext30 09A8                                  __ptext22 08F6  
                                __ptext14 09F4                                  __ptext31 0B38  
                                __ptext23 0926                                  __ptext15 0AC6  
                                __ptext32 0B32                                  __ptext24 0ADA  
                                __ptext16 0A98                                  __ptext33 0000  
                                __ptext25 0A7C                                  __ptext17 075E  
                                __ptext18 06D2                                  __ptext27 0A3A  
                                __ptext19 07DE                                  __ptext28 0B36  
                                __ptext29 0B1C                     __size_of_StateMEF_ini 000E  
               __size_of_RectaAceleracion 008C                             __size_of_main 00CC  
        RectaAceleracion@microstep_number 0037                       _LookUP_TABLE_COS_16 00A0  
                     _LookUP_TABLE_SEN_16 0060                  __size_of_TMR6_StartTimer 0006  
                                int$flags 0051                         ??_TMR2_StartTimer 002F  
      __end_of_INTERRUPT_InterruptManager 00AA                _INTERRUPT_InterruptManager 0008  
                              _INTCONbits 000FF2                              _StateMEF_ini 0AEC  
                  ??_INTERRUPT_Initialize 002F      __end_of_TMR6_DefaultInterruptHandler 0B38  
   __size_of_TMR6_DefaultInterruptHandler 0002              _TMR6_DefaultInterruptHandler 0B36  
                                intlevel2 0000                           ??_TMR2_CallBack 0021  
            EPWM2_LoadDutyValue@dutyValue 002F                   ?_PIN_MANAGER_Initialize 0021  
                       ??_TMR6_Initialize 0031                                _RCSTA1bits 000FAB  
                        ??_ADC_Initialize 002F                             _StepsComplete 0049  
                         ??_State8MEF_act 0033                    State8MEF_act@direccion 0034  
                       __CFG_T3CMX$PORTC0 000000                       _EPWM1_LoadDutyValue 0926  
          __end_of_PIN_MANAGER_Initialize 08F6             ?_TMR6_DefaultInterruptHandler 0021  
                       __CFG_FOSC$INTIO67 000000                              _StepperMotor 0039  
                   _TMR2_InterruptHandler 004C                  __end_of_EPWM1_Initialize 0A18  
                    ?_EPWM1_LoadDutyValue 002F  
