

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Jun 27 11:50:46 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 1.41
    50                           ; Generated 25/01/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F46K22 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataCOMRAM
    85  0008DC                     __pidataCOMRAM:
    86                           	opt stack 0
    87                           
    88                           ;initializer for _LookUP_TABLE_COS
    89  0008DC  7D                 	db	125
    90  0008DD  76                 	db	118
    91  0008DE  6C                 	db	108
    92  0008DF  5E                 	db	94
    93  0008E0  4D                 	db	77
    94  0008E1  39                 	db	57
    95  0008E2  22                 	db	34
    96  0008E3  0C                 	db	12
    97  0008E4  0C                 	db	12
    98  0008E5  22                 	db	34
    99  0008E6  39                 	db	57
   100  0008E7  4D                 	db	77
   101  0008E8  5E                 	db	94
   102  0008E9  6C                 	db	108
   103  0008EA  76                 	db	118
   104  0008EB  7D                 	db	125
   105  0008EC  7D                 	db	125
   106  0008ED  76                 	db	118
   107  0008EE  6C                 	db	108
   108  0008EF  5E                 	db	94
   109  0008F0  4D                 	db	77
   110  0008F1  39                 	db	57
   111  0008F2  22                 	db	34
   112  0008F3  0C                 	db	12
   113  0008F4  0C                 	db	12
   114  0008F5  22                 	db	34
   115  0008F6  39                 	db	57
   116  0008F7  4D                 	db	77
   117  0008F8  5E                 	db	94
   118  0008F9  6C                 	db	108
   119  0008FA  76                 	db	118
   120  0008FB  7D                 	db	125
   121                           
   122                           	psect	idataBANK0
   123  000566                     __pidataBANK0:
   124                           	opt stack 0
   125                           
   126                           ;initializer for _LookUP_TABLE_SEN_16
   127  000566  06                 	db	6
   128  000567  12                 	db	18
   129  000568  1D                 	db	29
   130  000569  2A                 	db	42
   131  00056A  35                 	db	53
   132  00056B  3F                 	db	63
   133  00056C  49                 	db	73
   134  00056D  53                 	db	83
   135  00056E  5B                 	db	91
   136  00056F  63                 	db	99
   137  000570  6A                 	db	106
   138  000571  70                 	db	112
   139  000572  75                 	db	117
   140  000573  79                 	db	121
   141  000574  7C                 	db	124
   142  000575  7E                 	db	126
   143  000576  7E                 	db	126
   144  000577  7C                 	db	124
   145  000578  79                 	db	121
   146  000579  75                 	db	117
   147  00057A  70                 	db	112
   148  00057B  6A                 	db	106
   149  00057C  63                 	db	99
   150  00057D  5B                 	db	91
   151  00057E  53                 	db	83
   152  00057F  49                 	db	73
   153  000580  3F                 	db	63
   154  000581  35                 	db	53
   155  000582  2A                 	db	42
   156  000583  1D                 	db	29
   157  000584  12                 	db	18
   158  000585  06                 	db	6
   159  000586  06                 	db	6
   160  000587  12                 	db	18
   161  000588  1D                 	db	29
   162  000589  2A                 	db	42
   163  00058A  35                 	db	53
   164  00058B  3F                 	db	63
   165  00058C  49                 	db	73
   166  00058D  53                 	db	83
   167  00058E  5B                 	db	91
   168  00058F  63                 	db	99
   169  000590  6A                 	db	106
   170  000591  70                 	db	112
   171  000592  75                 	db	117
   172  000593  79                 	db	121
   173  000594  7C                 	db	124
   174  000595  7E                 	db	126
   175  000596  7E                 	db	126
   176  000597  7C                 	db	124
   177  000598  79                 	db	121
   178  000599  75                 	db	117
   179  00059A  70                 	db	112
   180  00059B  6A                 	db	106
   181  00059C  63                 	db	99
   182  00059D  5B                 	db	91
   183  00059E  53                 	db	83
   184  00059F  49                 	db	73
   185  0005A0  3F                 	db	63
   186  0005A1  35                 	db	53
   187  0005A2  2A                 	db	42
   188  0005A3  1D                 	db	29
   189  0005A4  12                 	db	18
   190  0005A5  06                 	db	6
   191                           
   192                           ;initializer for _LookUP_TABLE_COS_16
   193  0005A6  7E                 	db	126
   194  0005A7  7C                 	db	124
   195  0005A8  79                 	db	121
   196  0005A9  75                 	db	117
   197  0005AA  70                 	db	112
   198  0005AB  6A                 	db	106
   199  0005AC  63                 	db	99
   200  0005AD  5B                 	db	91
   201  0005AE  53                 	db	83
   202  0005AF  49                 	db	73
   203  0005B0  3F                 	db	63
   204  0005B1  35                 	db	53
   205  0005B2  2A                 	db	42
   206  0005B3  1D                 	db	29
   207  0005B4  12                 	db	18
   208  0005B5  06                 	db	6
   209  0005B6  06                 	db	6
   210  0005B7  12                 	db	18
   211  0005B8  1D                 	db	29
   212  0005B9  2A                 	db	42
   213  0005BA  35                 	db	53
   214  0005BB  3F                 	db	63
   215  0005BC  49                 	db	73
   216  0005BD  53                 	db	83
   217  0005BE  5B                 	db	91
   218  0005BF  63                 	db	99
   219  0005C0  6A                 	db	106
   220  0005C1  70                 	db	112
   221  0005C2  75                 	db	117
   222  0005C3  79                 	db	121
   223  0005C4  7C                 	db	124
   224  0005C5  7E                 	db	126
   225  0005C6  7E                 	db	126
   226  0005C7  7C                 	db	124
   227  0005C8  79                 	db	121
   228  0005C9  75                 	db	117
   229  0005CA  70                 	db	112
   230  0005CB  6A                 	db	106
   231  0005CC  63                 	db	99
   232  0005CD  5B                 	db	91
   233  0005CE  53                 	db	83
   234  0005CF  49                 	db	73
   235  0005D0  3F                 	db	63
   236  0005D1  35                 	db	53
   237  0005D2  2A                 	db	42
   238  0005D3  1D                 	db	29
   239  0005D4  12                 	db	18
   240  0005D5  06                 	db	6
   241  0005D6  06                 	db	6
   242  0005D7  12                 	db	18
   243  0005D8  1D                 	db	29
   244  0005D9  2A                 	db	42
   245  0005DA  35                 	db	53
   246  0005DB  3F                 	db	63
   247  0005DC  49                 	db	73
   248  0005DD  53                 	db	83
   249  0005DE  5B                 	db	91
   250  0005DF  63                 	db	99
   251  0005E0  6A                 	db	106
   252  0005E1  70                 	db	112
   253  0005E2  75                 	db	117
   254  0005E3  79                 	db	121
   255  0005E4  7C                 	db	124
   256  0005E5  7E                 	db	126
   257                           
   258                           ;initializer for _LookUP_TABLE_SEN
   259  0005E6  0C                 	db	12
   260  0005E7  22                 	db	34
   261  0005E8  39                 	db	57
   262  0005E9  4D                 	db	77
   263  0005EA  5E                 	db	94
   264  0005EB  6C                 	db	108
   265  0005EC  76                 	db	118
   266  0005ED  7D                 	db	125
   267  0005EE  7D                 	db	125
   268  0005EF  76                 	db	118
   269  0005F0  6C                 	db	108
   270  0005F1  5E                 	db	94
   271  0005F2  4D                 	db	77
   272  0005F3  39                 	db	57
   273  0005F4  22                 	db	34
   274  0005F5  0C                 	db	12
   275  0005F6  0C                 	db	12
   276  0005F7  22                 	db	34
   277  0005F8  39                 	db	57
   278  0005F9  4D                 	db	77
   279  0005FA  5E                 	db	94
   280  0005FB  6C                 	db	108
   281  0005FC  76                 	db	118
   282  0005FD  7D                 	db	125
   283  0005FE  7D                 	db	125
   284  0005FF  76                 	db	118
   285  000600  6C                 	db	108
   286  000601  5E                 	db	94
   287  000602  4D                 	db	77
   288  000603  39                 	db	57
   289  000604  22                 	db	34
   290  000605  0C                 	db	12
   291                           
   292                           	psect	nvCOMRAM
   293  00004B                     __pnvCOMRAM:
   294                           	opt stack 0
   295  00004B                     _TMR2_InterruptHandler:
   296                           	opt stack 0
   297  00004B                     	ds	2
   298  00004D                     _TMR6_InterruptHandler:
   299                           	opt stack 0
   300  00004D                     	ds	2
   301  00004F                     _EstadoActual:
   302                           	opt stack 0
   303  00004F                     	ds	1
   304  0000                     _CCPTMRS0bits	set	3913
   305  0000                     _ANSELA	set	3896
   306  0000                     _ANSELE	set	3900
   307  0000                     _ANSELD	set	3899
   308  0000                     _ANSELB	set	3897
   309  0000                     _ANSELC	set	3898
   310  0000                     _CCPR5H	set	3926
   311  0000                     _CCPR5L	set	3925
   312  0000                     _CCP5CON	set	3924
   313  0000                     _T6CONbits	set	3914
   314  0000                     _TMR6	set	3916
   315  0000                     _PR6	set	3915
   316  0000                     _T6CON	set	3914
   317  0000                     _LATCbits	set	3979
   318  0000                     _LATDbits	set	3980
   319  0000                     _LATBbits	set	3978
   320  0000                     _TXREG1	set	4013
   321  0000                     _RCREG1	set	4014
   322  0000                     _RCSTA1bits	set	4011
   323  0000                     _SPBRGH1	set	4016
   324  0000                     _SPBRG1	set	4015
   325  0000                     _TXSTA1	set	4012
   326  0000                     _RCSTA1	set	4011
   327  0000                     _BAUDCON1	set	4024
   328  0000                     _OSCTUNE	set	3995
   329  0000                     _OSCCON2	set	4050
   330  0000                     _OSCCON	set	4051
   331  0000                     _INTCONbits	set	4082
   332  0000                     _RCONbits	set	4048
   333  0000                     _ADCON0bits	set	4034
   334  0000                     _ADRESH	set	4036
   335  0000                     _ADRESL	set	4035
   336  0000                     _ADCON2	set	4032
   337  0000                     _ADCON1	set	4033
   338  0000                     _ADCON0	set	4034
   339  0000                     _CCPR1H	set	4031
   340  0000                     _CCPR1L	set	4030
   341  0000                     _PSTR1CON	set	4025
   342  0000                     _PWM1CON	set	4023
   343  0000                     _ECCP1AS	set	4022
   344  0000                     _CCP1CON	set	4029
   345  0000                     _CCPR2H	set	3944
   346  0000                     _CCPR2L	set	3943
   347  0000                     _PSTR2CON	set	3939
   348  0000                     _PWM2CON	set	3941
   349  0000                     _ECCP2AS	set	3940
   350  0000                     _CCP2CON	set	3942
   351  0000                     _INTCON2bits	set	4081
   352  0000                     _WPUB	set	3937
   353  0000                     _TRISD	set	3989
   354  0000                     _TRISC	set	3988
   355  0000                     _TRISB	set	3987
   356  0000                     _TRISA	set	3986
   357  0000                     _TRISE	set	3990
   358  0000                     _LATC	set	3979
   359  0000                     _LATB	set	3978
   360  0000                     _LATA	set	3977
   361  0000                     _LATD	set	3980
   362  0000                     _LATE	set	3981
   363  0000                     _T2CONbits	set	4026
   364  0000                     _PIE1bits	set	3997
   365  0000                     _PIR1bits	set	3998
   366  0000                     _TMR2	set	4028
   367  0000                     _PR2	set	4027
   368  0000                     _T2CON	set	4026
   369  0000                     _PIE5bits	set	3965
   370  0000                     _PIR5bits	set	3966
   371                           
   372                           ; #config settings
   373  0000                     
   374                           	psect	cinit
   375  000678                     __pcinit:
   376                           	opt stack 0
   377  000678                     start_initialization:
   378                           	opt stack 0
   379  000678                     __initialization:
   380                           	opt stack 0
   381                           
   382                           ; Initialize objects allocated to BANK0 (160 bytes)
   383                           ; load TBLPTR registers with __pidataBANK0
   384  000678  0E66               	movlw	low __pidataBANK0
   385  00067A  6EF6               	movwf	tblptrl,c
   386  00067C  0E05               	movlw	high __pidataBANK0
   387  00067E  6EF7               	movwf	tblptrh,c
   388  000680  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   389  000682  6EF8               	movwf	tblptru,c
   390  000684  EE00  F060         	lfsr	0,__pdataBANK0
   391  000688  EE10 F0A0          	lfsr	1,160
   392  00068C                     copy_data0:
   393  00068C  0009               	tblrd		*+
   394  00068E  CFF5 FFEE          	movff	tablat,postinc0
   395  000692  50E5               	movf	postdec1,w,c
   396  000694  50E1               	movf	fsr1l,w,c
   397  000696  E1FA               	bnz	copy_data0
   398                           
   399                           ; Initialize objects allocated to COMRAM (32 bytes)
   400                           ; load TBLPTR registers with __pidataCOMRAM
   401  000698  0EDC               	movlw	low __pidataCOMRAM
   402  00069A  6EF6               	movwf	tblptrl,c
   403  00069C  0E08               	movlw	high __pidataCOMRAM
   404  00069E  6EF7               	movwf	tblptrh,c
   405  0006A0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   406  0006A2  6EF8               	movwf	tblptru,c
   407  0006A4  EE00  F001         	lfsr	0,__pdataCOMRAM
   408  0006A8  EE10 F020          	lfsr	1,32
   409  0006AC                     copy_data1:
   410  0006AC  0009               	tblrd		*+
   411  0006AE  CFF5 FFEE          	movff	tablat,postinc0
   412  0006B2  50E5               	movf	postdec1,w,c
   413  0006B4  50E1               	movf	fsr1l,w,c
   414  0006B6  E1FA               	bnz	copy_data1
   415                           
   416                           ; Clear objects allocated to COMRAM (20 bytes)
   417  0006B8  EE00  F037         	lfsr	0,__pbssCOMRAM
   418  0006BC  0E14               	movlw	20
   419  0006BE                     clear_0:
   420  0006BE  6AEE               	clrf	postinc0,c
   421  0006C0  06E8               	decf	wreg,f,c
   422  0006C2  E1FD               	bnz	clear_0
   423  0006C4                     end_of_initialization:
   424                           	opt stack 0
   425  0006C4                     __end_of__initialization:
   426                           	opt stack 0
   427  0006C4  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   428  0006C6  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   429  0006C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   430  0006CA  6EF8               	movwf	tblptru,c
   431  0006CC  0100               	movlb	0
   432  0006CE  EF69  F003         	goto	_main	;jump to C main() function
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           postinc0	equ	0xFEE
   438                           wreg	equ	0xFE8
   439                           postdec1	equ	0xFE5
   440                           fsr1l	equ	0xFE1
   441                           
   442                           	psect	bssCOMRAM
   443  000037                     __pbssCOMRAM:
   444                           	opt stack 0
   445  000037                     _StepperMotor:
   446                           	opt stack 0
   447  000037                     	ds	5
   448  00003C                     _Timer2Tick_count:
   449                           	opt stack 0
   450  00003C                     	ds	2
   451  00003E                     _StepCount:
   452                           	opt stack 0
   453  00003E                     	ds	2
   454  000040                     _Microstep:
   455                           	opt stack 0
   456  000040                     	ds	2
   457  000042                     _ANALOG_1:
   458                           	opt stack 0
   459  000042                     	ds	2
   460  000044                     _ANALOG_0:
   461                           	opt stack 0
   462  000044                     	ds	2
   463  000046                     	ds	1
   464  000047                     _parar:
   465                           	opt stack 0
   466  000047                     	ds	1
   467  000048                     _StepsComplete:
   468                           	opt stack 0
   469  000048                     	ds	1
   470  000049                     _DelayTimerTicked:
   471                           	opt stack 0
   472  000049                     	ds	1
   473  00004A                     _Timer2Ticked:
   474                           	opt stack 0
   475  00004A                     	ds	1
   476                           tblptru	equ	0xFF8
   477                           tblptrh	equ	0xFF7
   478                           tblptrl	equ	0xFF6
   479                           tablat	equ	0xFF5
   480                           postinc0	equ	0xFEE
   481                           wreg	equ	0xFE8
   482                           postdec1	equ	0xFE5
   483                           fsr1l	equ	0xFE1
   484                           
   485                           	psect	dataCOMRAM
   486  000001                     __pdataCOMRAM:
   487                           	opt stack 0
   488  000001                     _LookUP_TABLE_COS:
   489                           	opt stack 0
   490  000001                     	ds	32
   491                           tblptru	equ	0xFF8
   492                           tblptrh	equ	0xFF7
   493                           tblptrl	equ	0xFF6
   494                           tablat	equ	0xFF5
   495                           postinc0	equ	0xFEE
   496                           wreg	equ	0xFE8
   497                           postdec1	equ	0xFE5
   498                           fsr1l	equ	0xFE1
   499                           
   500                           	psect	dataBANK0
   501  000060                     __pdataBANK0:
   502                           	opt stack 0
   503  000060                     _LookUP_TABLE_SEN_16:
   504                           	opt stack 0
   505  000060                     	ds	64
   506  0000A0                     _LookUP_TABLE_COS_16:
   507                           	opt stack 0
   508  0000A0                     	ds	64
   509  0000E0                     _LookUP_TABLE_SEN:
   510                           	opt stack 0
   511  0000E0                     	ds	32
   512                           tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           postdec1	equ	0xFE5
   519                           fsr1l	equ	0xFE1
   520                           
   521                           	psect	cstackBANK1
   522  000100                     __pcstackBANK1:
   523                           	opt stack 0
   524  000100                     StepMove@StepNumber:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x0
   528  000100                     	ds	2
   529  000102                     StepMove@Velocidad:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x2
   533  000102                     	ds	1
   534  000103                     StepMove@microstep_number:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x3
   538  000103                     	ds	1
   539  000104                     StepMove@direccion:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x4
   543  000104                     	ds	1
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           postdec1	equ	0xFE5
   551                           fsr1l	equ	0xFE1
   552                           
   553                           	psect	cstackCOMRAM
   554  000021                     __pcstackCOMRAM:
   555                           	opt stack 0
   556  000021                     ??_INTERRUPT_InterruptManager:
   557  000021                     
   558                           ; 1 bytes @ 0x0
   559  000021                     	ds	14
   560  00002F                     TMR6_SetInterruptHandler@InterruptHandler:
   561                           	opt stack 0
   562  00002F                     TMR2_SetInterruptHandler@InterruptHandler:
   563                           	opt stack 0
   564  00002F                     EPWM2_LoadDutyValue@dutyValue:
   565                           	opt stack 0
   566  00002F                     EPWM1_LoadDutyValue@dutyValue:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0xE
   570  00002F                     	ds	2
   571  000031                     ??_EPWM2_LoadDutyValue:
   572  000031                     ??_EPWM1_LoadDutyValue:
   573  000031                     
   574                           ; 1 bytes @ 0x10
   575  000031                     	ds	2
   576  000033                     ??_State8MEF_act:
   577  000033                     ??_State16MEF_act:
   578                           
   579                           ; 1 bytes @ 0x12
   580  000033                     	ds	1
   581  000034                     State8MEF_act@direccion:
   582                           	opt stack 0
   583  000034                     State16MEF_act@direccion:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x13
   587  000034                     	ds	1
   588  000035                     ??_StepMove:
   589                           
   590                           ; 1 bytes @ 0x14
   591  000035                     	ds	2
   592  000037                     tblptru	equ	0xFF8
   593                           tblptrh	equ	0xFF7
   594                           tblptrl	equ	0xFF6
   595                           tablat	equ	0xFF5
   596                           postinc0	equ	0xFEE
   597                           wreg	equ	0xFE8
   598                           postdec1	equ	0xFE5
   599                           fsr1l	equ	0xFE1
   600                           
   601                           ; 1 bytes @ 0x16
   602 ;;
   603 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   604 ;;
   605 ;; *************** function _main *****************
   606 ;; Defined at:
   607 ;;		line 23 in file "main.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;Total ram usage:        0 bytes
   626 ;; Hardware stack levels required when called:    7
   627 ;; This function calls:
   628 ;;		_Motor_Stop
   629 ;;		_SYSTEM_Initialize
   630 ;;		_StateMEF_ini
   631 ;;		_StepMove
   632 ;; This function is called by:
   633 ;;		Startup code after reset
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text0
   638  0006D2                     __ptext0:
   639                           	opt stack 0
   640  0006D2                     _main:
   641                           	opt stack 24
   642                           
   643                           ;main.c: 26: SYSTEM_Initialize();
   644                           
   645                           ;incstack = 0
   646  0006D2  ECEB  F003         	call	_SYSTEM_Initialize	;wreg free
   647                           
   648                           ;main.c: 27: StateMEF_ini();
   649  0006D6  ECA8  F004         	call	_StateMEF_ini	;wreg free
   650                           
   651                           ;main.c: 28: Timer2Ticked=0;
   652  0006DA  0E00               	movlw	0
   653  0006DC  6E4A               	movwf	_Timer2Ticked,c	;volatile
   654                           
   655                           ;main.c: 29: DelayTimerTicked=0;
   656  0006DE  0E00               	movlw	0
   657  0006E0  6E49               	movwf	_DelayTimerTicked,c	;volatile
   658                           
   659                           ;main.c: 30: do { LATBbits.LATB6 = 1; } while(0);
   660  0006E2  8C8A               	bsf	3978,6,c	;volatile
   661                           
   662                           ;main.c: 33: StepperMotor.Velocidad = 12;
   663  0006E4  0E0C               	movlw	12
   664  0006E6  6E37               	movwf	_StepperMotor,c
   665                           
   666                           ;main.c: 34: StepperMotor.StepsNumber = 2*(1600);
   667  0006E8  0E0C               	movlw	12
   668  0006EA  6E3B               	movwf	_StepperMotor+4,c
   669  0006EC  0E80               	movlw	128
   670  0006EE  6E3A               	movwf	_StepperMotor+3,c
   671                           
   672                           ;main.c: 35: StepperMotor.MicroStepNumber = 8;
   673  0006F0  0E08               	movlw	8
   674  0006F2  6E38               	movwf	_StepperMotor+1,c
   675                           
   676                           ;main.c: 38: (INTCONbits.GIE = 1);
   677  0006F4  8EF2               	bsf	intcon,7,c	;volatile
   678                           
   679                           ;main.c: 41: (INTCONbits.PEIE = 1);
   680  0006F6  8CF2               	bsf	intcon,6,c	;volatile
   681  0006F8                     l2137:
   682                           
   683                           ;main.c: 43: {
   684                           ;main.c: 68: if (parar==0){
   685  0006F8  5047               	movf	_parar,w,c
   686  0006FA  A4D8               	btfss	status,2,c
   687  0006FC  D7FD               	goto	l2137
   688                           
   689                           ;main.c: 69: parar=1;
   690  0006FE  0E01               	movlw	1
   691  000700  6E47               	movwf	_parar,c
   692                           
   693                           ;main.c: 70: StepperMotor.Direccion = 1;
   694  000702  0E01               	movlw	1
   695  000704  6E39               	movwf	_StepperMotor+2,c
   696  000706                     l2141:
   697  000706  C03A  F100         	movff	_StepperMotor+3,StepMove@StepNumber
   698  00070A  C03B  F101         	movff	_StepperMotor+4,StepMove@StepNumber+1
   699  00070E  C037  F102         	movff	_StepperMotor,StepMove@Velocidad
   700  000712  C038  F103         	movff	_StepperMotor+1,StepMove@microstep_number
   701  000716  C039  F104         	movff	_StepperMotor+2,StepMove@direccion
   702  00071A  EC03  F003         	call	_StepMove	;wreg free
   703  00071E  0900               	iorlw	0
   704  000720  B4D8               	btfsc	status,2,c
   705  000722  D7F1               	goto	l2141
   706                           
   707                           ;main.c: 72: Motor_Stop();
   708  000724  EC9F  F004         	call	_Motor_Stop	;wreg free
   709  000728  D7E7               	goto	l2137
   710  00072A                     __end_of_main:
   711                           	opt stack 0
   712                           tblptru	equ	0xFF8
   713                           tblptrh	equ	0xFF7
   714                           tblptrl	equ	0xFF6
   715                           tablat	equ	0xFF5
   716                           intcon	equ	0xFF2
   717                           postinc0	equ	0xFEE
   718                           wreg	equ	0xFE8
   719                           postdec1	equ	0xFE5
   720                           fsr1l	equ	0xFE1
   721                           status	equ	0xFD8
   722                           
   723 ;; *************** function _StepMove *****************
   724 ;; Defined at:
   725 ;;		line 262 in file "MotorDriver.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;  StepNumber      2    0[BANK1 ] unsigned int 
   728 ;;  Velocidad       1    2[BANK1 ] unsigned char 
   729 ;;  microstep_nu    1    3[BANK1 ] unsigned char 
   730 ;;  direccion       1    4[BANK1 ] unsigned char 
   731 ;; Auto vars:     Size  Location     Type
   732 ;;		None
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      unsigned char 
   735 ;; Registers used:
   736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   742 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;      Totals:         2       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;Total ram usage:        7 bytes
   747 ;; Hardware stack levels used:    1
   748 ;; Hardware stack levels required when called:    6
   749 ;; This function calls:
   750 ;;		_State16MEF_act
   751 ;;		_State8MEF_act
   752 ;; This function is called by:
   753 ;;		_main
   754 ;;		_RectaAceleracion
   755 ;;		_RectaFrenado
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           	psect	text1
   760  000606                     __ptext1:
   761                           	opt stack 0
   762  000606                     _StepMove:
   763                           	opt stack 24
   764                           
   765                           ;MotorDriver.c: 264: if ((StepCount<StepNumber)){
   766                           
   767                           ;incstack = 0
   768  000606  0101               	movlb	1	; () banked
   769  000608  5100               	movf	StepMove@StepNumber& (0+255),w,b
   770  00060A  5C3E               	subwf	_StepCount,w,c
   771  00060C  0101               	movlb	1	; () banked
   772  00060E  5101               	movf	(StepMove@StepNumber+1)& (0+255),w,b
   773  000610  583F               	subwfb	_StepCount+1,w,c
   774  000612  B0D8               	btfsc	status,0,c
   775  000614  D029               	goto	l2113
   776                           
   777                           ; BSR set to: 1
   778                           ;MotorDriver.c: 265: if (Timer2Ticked){
   779  000616  504A               	movf	_Timer2Ticked,w,c	;volatile
   780  000618  B4D8               	btfsc	status,2,c
   781  00061A  D023               	goto	l2111
   782                           
   783                           ; BSR set to: 1
   784                           ;MotorDriver.c: 266: Timer2Tick_count++;
   785  00061C  4A3C               	infsnz	_Timer2Tick_count,f,c
   786  00061E  2A3D               	incf	_Timer2Tick_count+1,f,c
   787                           
   788                           ; BSR set to: 1
   789                           ;MotorDriver.c: 267: if (Timer2Tick_count == Velocidad){
   790  000620  0101               	movlb	1	; () banked
   791  000622  5102               	movf	StepMove@Velocidad& (0+255),w,b
   792  000624  6E35               	movwf	??_StepMove& (0+255),c
   793  000626  6A36               	clrf	(??_StepMove+1)& (0+255),c
   794  000628  503C               	movf	_Timer2Tick_count,w,c
   795  00062A  1835               	xorwf	??_StepMove,w,c
   796  00062C  E118               	bnz	l2109
   797  00062E  503D               	movf	_Timer2Tick_count+1,w,c
   798  000630  1836               	xorwf	??_StepMove+1,w,c
   799  000632  A4D8               	btfss	status,2,c
   800  000634  D014               	goto	l2109
   801                           
   802                           ; BSR set to: 1
   803                           ;MotorDriver.c: 268: if (microstep_number==16){
   804  000636  0E10               	movlw	16
   805  000638  0101               	movlb	1	; () banked
   806  00063A  1903               	xorwf	StepMove@microstep_number& (0+255),w,b
   807  00063C  A4D8               	btfss	status,2,c
   808  00063E  D005               	goto	l2103
   809                           
   810                           ; BSR set to: 1
   811                           ;MotorDriver.c: 269: State16MEF_act( direccion );
   812  000640  0101               	movlb	1	; () banked
   813  000642  5104               	movf	StepMove@direccion& (0+255),w,b
   814  000644  EC85  F001         	call	_State16MEF_act
   815                           
   816                           ;MotorDriver.c: 270: }
   817  000648  D004               	goto	l2105
   818  00064A                     l2103:
   819                           
   820                           ;MotorDriver.c: 271: else{
   821                           ;MotorDriver.c: 272: State8MEF_act( direccion );
   822  00064A  0101               	movlb	1	; () banked
   823  00064C  5104               	movf	StepMove@direccion& (0+255),w,b
   824  00064E  EC57  F000         	call	_State8MEF_act
   825  000652                     l2105:
   826                           
   827                           ;MotorDriver.c: 273: }
   828                           ;MotorDriver.c: 274: StepCount++;
   829  000652  4A3E               	infsnz	_StepCount,f,c
   830  000654  2A3F               	incf	_StepCount+1,f,c
   831                           
   832                           ;MotorDriver.c: 275: Timer2Tick_count=0;
   833  000656  0E00               	movlw	0
   834  000658  6E3D               	movwf	_Timer2Tick_count+1,c
   835  00065A  0E00               	movlw	0
   836  00065C  6E3C               	movwf	_Timer2Tick_count,c
   837  00065E                     l2109:
   838                           
   839                           ;MotorDriver.c: 276: }
   840                           ;MotorDriver.c: 277: Timer2Ticked = 0;
   841  00065E  0E00               	movlw	0
   842  000660  6E4A               	movwf	_Timer2Ticked,c	;volatile
   843  000662                     l2111:
   844                           
   845                           ;MotorDriver.c: 278: }
   846                           ;MotorDriver.c: 279: StepsComplete=0;
   847  000662  0E00               	movlw	0
   848  000664  6E48               	movwf	_StepsComplete,c
   849                           
   850                           ;MotorDriver.c: 280: }
   851  000666  D006               	goto	l517
   852  000668                     l2113:
   853                           
   854                           ;MotorDriver.c: 281: else{
   855                           ;MotorDriver.c: 282: StepsComplete=1;
   856  000668  0E01               	movlw	1
   857  00066A  6E48               	movwf	_StepsComplete,c
   858                           
   859                           ;MotorDriver.c: 283: StepCount=0;
   860  00066C  0E00               	movlw	0
   861  00066E  6E3F               	movwf	_StepCount+1,c
   862  000670  0E00               	movlw	0
   863  000672  6E3E               	movwf	_StepCount,c
   864  000674                     l517:
   865                           
   866                           ;MotorDriver.c: 285: }
   867                           ;MotorDriver.c: 286: return(StepsComplete);
   868  000674  5048               	movf	_StepsComplete,w,c
   869  000676  0012               	return	
   870  000678                     __end_of_StepMove:
   871                           	opt stack 0
   872                           tblptru	equ	0xFF8
   873                           tblptrh	equ	0xFF7
   874                           tblptrl	equ	0xFF6
   875                           tablat	equ	0xFF5
   876                           intcon	equ	0xFF2
   877                           postinc0	equ	0xFEE
   878                           wreg	equ	0xFE8
   879                           postdec1	equ	0xFE5
   880                           fsr1l	equ	0xFE1
   881                           status	equ	0xFD8
   882                           
   883 ;; *************** function _State8MEF_act *****************
   884 ;; Defined at:
   885 ;;		line 42 in file "MotorDriver.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  direccion       1    wreg     unsigned char 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  direccion       1   19[COMRAM] unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;Total ram usage:        2 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    5
   906 ;; This function calls:
   907 ;;		_EPWM1_LoadDutyValue
   908 ;;		_EPWM2_LoadDutyValue
   909 ;; This function is called by:
   910 ;;		_StepMove
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text2
   915  0000AE                     __ptext2:
   916                           	opt stack 0
   917  0000AE                     _State8MEF_act:
   918                           	opt stack 24
   919                           
   920                           ;incstack = 0
   921                           ;State8MEF_act@direccion stored from wreg
   922  0000AE  6E34               	movwf	State8MEF_act@direccion,c
   923                           
   924                           ;MotorDriver.c: 44: switch(EstadoActual) {
   925  0000B0  D11D               	goto	l1851
   926  0000B2                     l1745:
   927                           
   928                           ;MotorDriver.c: 46: PSTR1CON = 0x01; PSTR2CON = 0x01;
   929  0000B2  0E01               	movlw	1
   930  0000B4  6EB9               	movwf	4025,c	;volatile
   931  0000B6  0E01               	movlw	1
   932  0000B8  6E63               	movwf	3939,c	;volatile
   933                           
   934                           ;MotorDriver.c: 47: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
   935  0000BA  9A8C               	bcf	3980,5,c	;volatile
   936  0000BC  908B               	bcf	3979,0,c	;volatile
   937                           
   938                           ;MotorDriver.c: 48: if (Microstep<8){
   939  0000BE  BE41               	btfsc	_Microstep+1,7,c
   940  0000C0  D006               	goto	l1753
   941  0000C2  5041               	movf	_Microstep+1,w,c
   942  0000C4  E103               	bnz	u831
   943  0000C6  0E08               	movlw	8
   944  0000C8  5C40               	subwf	_Microstep,w,c
   945  0000CA  B0D8               	btfsc	status,0,c
   946  0000CC                     u831:
   947  0000CC  0012               	return	
   948  0000CE                     l1753:
   949                           
   950                           ;MotorDriver.c: 52: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   951  0000CE  0E01               	movlw	low _LookUP_TABLE_COS
   952  0000D0  2440               	addwf	_Microstep,w,c
   953  0000D2  6ED9               	movwf	fsr2l,c
   954  0000D4  0E00               	movlw	high _LookUP_TABLE_COS
   955  0000D6  2041               	addwfc	_Microstep+1,w,c
   956  0000D8  6EDA               	movwf	fsr2h,c
   957  0000DA  50DF               	movf	indf2,w,c
   958  0000DC  6E33               	movwf	??_State8MEF_act& (0+255),c
   959  0000DE  5033               	movf	??_State8MEF_act,w,c
   960  0000E0  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   961  0000E2  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   962  0000E4  ECD3  F003         	call	_EPWM1_LoadDutyValue	;wreg free
   963                           
   964                           ;MotorDriver.c: 53: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   965  0000E8  0EE0               	movlw	low _LookUP_TABLE_SEN
   966  0000EA  2440               	addwf	_Microstep,w,c
   967  0000EC  6ED9               	movwf	fsr2l,c
   968  0000EE  0E00               	movlw	high _LookUP_TABLE_SEN
   969  0000F0  2041               	addwfc	_Microstep+1,w,c
   970  0000F2  6EDA               	movwf	fsr2h,c
   971  0000F4  50DF               	movf	indf2,w,c
   972  0000F6  6E33               	movwf	??_State8MEF_act& (0+255),c
   973  0000F8  5033               	movf	??_State8MEF_act,w,c
   974  0000FA  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   975  0000FC  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   976  0000FE  ECBB  F003         	call	_EPWM2_LoadDutyValue	;wreg free
   977                           
   978                           ;MotorDriver.c: 55: if (direccion == 1){
   979  000102  0434               	decf	State8MEF_act@direccion,w,c
   980  000104  A4D8               	btfss	status,2,c
   981  000106  D00A               	goto	l1763
   982                           
   983                           ;MotorDriver.c: 56: if (Microstep==7){
   984  000108  0E07               	movlw	7
   985  00010A  1840               	xorwf	_Microstep,w,c
   986  00010C  1041               	iorwf	_Microstep+1,w,c
   987  00010E  A4D8               	btfss	status,2,c
   988  000110  D002               	goto	l1761
   989                           
   990                           ;MotorDriver.c: 57: EstadoActual = STATE2;
   991  000112  0E02               	movlw	2
   992  000114  6E4F               	movwf	_EstadoActual,c
   993  000116                     l1761:
   994                           
   995                           ;MotorDriver.c: 58: }
   996                           ;MotorDriver.c: 59: Microstep++;
   997  000116  4A40               	infsnz	_Microstep,f,c
   998  000118  2A41               	incf	_Microstep+1,f,c
   999                           
  1000                           ;MotorDriver.c: 60: }
  1001  00011A  0012               	return	
  1002  00011C                     l1763:
  1003                           
  1004                           ;MotorDriver.c: 61: else{
  1005                           ;MotorDriver.c: 62: if (Microstep==0){
  1006  00011C  5040               	movf	_Microstep,w,c
  1007  00011E  1041               	iorwf	_Microstep+1,w,c
  1008  000120  A4D8               	btfss	status,2,c
  1009  000122  D006               	goto	l1767
  1010                           
  1011                           ;MotorDriver.c: 63: EstadoActual = STATE4;
  1012  000124  0E04               	movlw	4
  1013  000126  6E4F               	movwf	_EstadoActual,c
  1014                           
  1015                           ;MotorDriver.c: 64: Microstep=31;
  1016  000128  0E00               	movlw	0
  1017  00012A  6E41               	movwf	_Microstep+1,c
  1018  00012C  0E1F               	movlw	31
  1019  00012E  6E40               	movwf	_Microstep,c
  1020  000130                     l1767:
  1021                           
  1022                           ;MotorDriver.c: 65: }
  1023                           ;MotorDriver.c: 66: Microstep--;
  1024  000130  0640               	decf	_Microstep,f,c
  1025  000132  A0D8               	btfss	status,0,c
  1026  000134  0641               	decf	_Microstep+1,f,c
  1027                           
  1028                           ;MotorDriver.c: 67: }
  1029                           ;MotorDriver.c: 68: }
  1030                           ;MotorDriver.c: 69: break;
  1031  000136  0012               	return	
  1032  000138                     l1769:
  1033                           
  1034                           ;MotorDriver.c: 71: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1035  000138  0E02               	movlw	2
  1036  00013A  6EB9               	movwf	4025,c	;volatile
  1037  00013C  0E01               	movlw	1
  1038  00013E  6E63               	movwf	3939,c	;volatile
  1039                           
  1040                           ;MotorDriver.c: 72: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  1041  000140  948B               	bcf	3979,2,c	;volatile
  1042  000142  908B               	bcf	3979,0,c	;volatile
  1043                           
  1044                           ;MotorDriver.c: 73: if ((Microstep<16)&&(Microstep>7)){
  1045  000144  BE41               	btfsc	_Microstep+1,7,c
  1046  000146  D006               	goto	l1777
  1047  000148  5041               	movf	_Microstep+1,w,c
  1048  00014A  E103               	bnz	u871
  1049  00014C  0E10               	movlw	16
  1050  00014E  5C40               	subwf	_Microstep,w,c
  1051  000150  B0D8               	btfsc	status,0,c
  1052  000152                     u871:
  1053  000152  0012               	return	
  1054  000154                     l1777:
  1055  000154  BE41               	btfsc	_Microstep+1,7,c
  1056  000156  0012               	return	
  1057  000158  5041               	movf	_Microstep+1,w,c
  1058  00015A  E104               	bnz	u880
  1059  00015C  0E08               	movlw	8
  1060  00015E  5C40               	subwf	_Microstep,w,c
  1061  000160  A0D8               	btfss	status,0,c
  1062  000162  0012               	return	
  1063  000164                     u880:
  1064                           
  1065                           ;MotorDriver.c: 78: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1066  000164  0E01               	movlw	low _LookUP_TABLE_COS
  1067  000166  2440               	addwf	_Microstep,w,c
  1068  000168  6ED9               	movwf	fsr2l,c
  1069  00016A  0E00               	movlw	high _LookUP_TABLE_COS
  1070  00016C  2041               	addwfc	_Microstep+1,w,c
  1071  00016E  6EDA               	movwf	fsr2h,c
  1072  000170  50DF               	movf	indf2,w,c
  1073  000172  6E33               	movwf	??_State8MEF_act& (0+255),c
  1074  000174  5033               	movf	??_State8MEF_act,w,c
  1075  000176  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1076  000178  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1077  00017A  ECD3  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1078                           
  1079                           ;MotorDriver.c: 79: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1080  00017E  0EE0               	movlw	low _LookUP_TABLE_SEN
  1081  000180  2440               	addwf	_Microstep,w,c
  1082  000182  6ED9               	movwf	fsr2l,c
  1083  000184  0E00               	movlw	high _LookUP_TABLE_SEN
  1084  000186  2041               	addwfc	_Microstep+1,w,c
  1085  000188  6EDA               	movwf	fsr2h,c
  1086  00018A  50DF               	movf	indf2,w,c
  1087  00018C  6E33               	movwf	??_State8MEF_act& (0+255),c
  1088  00018E  5033               	movf	??_State8MEF_act,w,c
  1089  000190  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1090  000192  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1091  000194  ECBB  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1092                           
  1093                           ;MotorDriver.c: 81: if (direccion == 1){
  1094  000198  0434               	decf	State8MEF_act@direccion,w,c
  1095  00019A  A4D8               	btfss	status,2,c
  1096  00019C  D00A               	goto	l1789
  1097                           
  1098                           ;MotorDriver.c: 82: if (Microstep==15){
  1099  00019E  0E0F               	movlw	15
  1100  0001A0  1840               	xorwf	_Microstep,w,c
  1101  0001A2  1041               	iorwf	_Microstep+1,w,c
  1102  0001A4  A4D8               	btfss	status,2,c
  1103  0001A6  D002               	goto	l1787
  1104                           
  1105                           ;MotorDriver.c: 83: EstadoActual = STATE3;
  1106  0001A8  0E03               	movlw	3
  1107  0001AA  6E4F               	movwf	_EstadoActual,c
  1108  0001AC                     l1787:
  1109                           
  1110                           ;MotorDriver.c: 84: }
  1111                           ;MotorDriver.c: 85: Microstep++;
  1112  0001AC  4A40               	infsnz	_Microstep,f,c
  1113  0001AE  2A41               	incf	_Microstep+1,f,c
  1114                           
  1115                           ;MotorDriver.c: 86: }
  1116  0001B0  0012               	return	
  1117  0001B2                     l1789:
  1118                           
  1119                           ;MotorDriver.c: 87: else{
  1120                           ;MotorDriver.c: 88: if (Microstep==8){
  1121  0001B2  0E08               	movlw	8
  1122  0001B4  1840               	xorwf	_Microstep,w,c
  1123  0001B6  1041               	iorwf	_Microstep+1,w,c
  1124  0001B8  A4D8               	btfss	status,2,c
  1125  0001BA  D002               	goto	l1793
  1126                           
  1127                           ;MotorDriver.c: 89: EstadoActual = STATE1;
  1128  0001BC  0E01               	movlw	1
  1129  0001BE  6E4F               	movwf	_EstadoActual,c
  1130  0001C0                     l1793:
  1131                           
  1132                           ;MotorDriver.c: 90: }
  1133                           ;MotorDriver.c: 91: Microstep--;
  1134  0001C0  0640               	decf	_Microstep,f,c
  1135  0001C2  A0D8               	btfss	status,0,c
  1136  0001C4  0641               	decf	_Microstep+1,f,c
  1137                           
  1138                           ;MotorDriver.c: 92: }
  1139                           ;MotorDriver.c: 93: }
  1140                           ;MotorDriver.c: 94: break;
  1141  0001C6  0012               	return	
  1142  0001C8                     l1795:
  1143                           
  1144                           ;MotorDriver.c: 96: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1145  0001C8  0E02               	movlw	2
  1146  0001CA  6EB9               	movwf	4025,c	;volatile
  1147  0001CC  0E02               	movlw	2
  1148  0001CE  6E63               	movwf	3939,c	;volatile
  1149                           
  1150                           ;MotorDriver.c: 97: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
  1151  0001D0  948B               	bcf	3979,2,c	;volatile
  1152  0001D2  928B               	bcf	3979,1,c	;volatile
  1153                           
  1154                           ;MotorDriver.c: 98: if ((Microstep<24)&&(Microstep>15)){
  1155  0001D4  BE41               	btfsc	_Microstep+1,7,c
  1156  0001D6  D006               	goto	l1803
  1157  0001D8  5041               	movf	_Microstep+1,w,c
  1158  0001DA  E103               	bnz	u921
  1159  0001DC  0E18               	movlw	24
  1160  0001DE  5C40               	subwf	_Microstep,w,c
  1161  0001E0  B0D8               	btfsc	status,0,c
  1162  0001E2                     u921:
  1163  0001E2  0012               	return	
  1164  0001E4                     l1803:
  1165  0001E4  BE41               	btfsc	_Microstep+1,7,c
  1166  0001E6  0012               	return	
  1167  0001E8  5041               	movf	_Microstep+1,w,c
  1168  0001EA  E104               	bnz	u930
  1169  0001EC  0E10               	movlw	16
  1170  0001EE  5C40               	subwf	_Microstep,w,c
  1171  0001F0  A0D8               	btfss	status,0,c
  1172  0001F2  0012               	return	
  1173  0001F4                     u930:
  1174                           
  1175                           ;MotorDriver.c: 103: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1176  0001F4  0E01               	movlw	low _LookUP_TABLE_COS
  1177  0001F6  2440               	addwf	_Microstep,w,c
  1178  0001F8  6ED9               	movwf	fsr2l,c
  1179  0001FA  0E00               	movlw	high _LookUP_TABLE_COS
  1180  0001FC  2041               	addwfc	_Microstep+1,w,c
  1181  0001FE  6EDA               	movwf	fsr2h,c
  1182  000200  50DF               	movf	indf2,w,c
  1183  000202  6E33               	movwf	??_State8MEF_act& (0+255),c
  1184  000204  5033               	movf	??_State8MEF_act,w,c
  1185  000206  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1186  000208  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1187  00020A  ECD3  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1188                           
  1189                           ;MotorDriver.c: 104: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1190  00020E  0EE0               	movlw	low _LookUP_TABLE_SEN
  1191  000210  2440               	addwf	_Microstep,w,c
  1192  000212  6ED9               	movwf	fsr2l,c
  1193  000214  0E00               	movlw	high _LookUP_TABLE_SEN
  1194  000216  2041               	addwfc	_Microstep+1,w,c
  1195  000218  6EDA               	movwf	fsr2h,c
  1196  00021A  50DF               	movf	indf2,w,c
  1197  00021C  6E33               	movwf	??_State8MEF_act& (0+255),c
  1198  00021E  5033               	movf	??_State8MEF_act,w,c
  1199  000220  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1200  000222  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1201  000224  ECBB  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1202                           
  1203                           ;MotorDriver.c: 106: if (direccion == 1){
  1204  000228  0434               	decf	State8MEF_act@direccion,w,c
  1205  00022A  A4D8               	btfss	status,2,c
  1206  00022C  D00A               	goto	l1815
  1207                           
  1208                           ;MotorDriver.c: 107: if (Microstep==23){
  1209  00022E  0E17               	movlw	23
  1210  000230  1840               	xorwf	_Microstep,w,c
  1211  000232  1041               	iorwf	_Microstep+1,w,c
  1212  000234  A4D8               	btfss	status,2,c
  1213  000236  D002               	goto	l1813
  1214                           
  1215                           ;MotorDriver.c: 108: EstadoActual = STATE4;
  1216  000238  0E04               	movlw	4
  1217  00023A  6E4F               	movwf	_EstadoActual,c
  1218  00023C                     l1813:
  1219                           
  1220                           ;MotorDriver.c: 109: }
  1221                           ;MotorDriver.c: 110: Microstep++;
  1222  00023C  4A40               	infsnz	_Microstep,f,c
  1223  00023E  2A41               	incf	_Microstep+1,f,c
  1224                           
  1225                           ;MotorDriver.c: 111: }
  1226  000240  0012               	return	
  1227  000242                     l1815:
  1228                           
  1229                           ;MotorDriver.c: 112: else{
  1230                           ;MotorDriver.c: 113: if (Microstep==16){
  1231  000242  0E10               	movlw	16
  1232  000244  1840               	xorwf	_Microstep,w,c
  1233  000246  1041               	iorwf	_Microstep+1,w,c
  1234  000248  A4D8               	btfss	status,2,c
  1235  00024A  D002               	goto	l1819
  1236                           
  1237                           ;MotorDriver.c: 114: EstadoActual = STATE2;
  1238  00024C  0E02               	movlw	2
  1239  00024E  6E4F               	movwf	_EstadoActual,c
  1240  000250                     l1819:
  1241                           
  1242                           ;MotorDriver.c: 115: }
  1243                           ;MotorDriver.c: 116: Microstep--;
  1244  000250  0640               	decf	_Microstep,f,c
  1245  000252  A0D8               	btfss	status,0,c
  1246  000254  0641               	decf	_Microstep+1,f,c
  1247                           
  1248                           ;MotorDriver.c: 117: }
  1249                           ;MotorDriver.c: 118: }
  1250                           ;MotorDriver.c: 119: break;
  1251  000256  0012               	return	
  1252  000258                     l1821:
  1253                           
  1254                           ;MotorDriver.c: 121: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1255  000258  0E01               	movlw	1
  1256  00025A  6EB9               	movwf	4025,c	;volatile
  1257  00025C  0E02               	movlw	2
  1258  00025E  6E63               	movwf	3939,c	;volatile
  1259                           
  1260                           ;MotorDriver.c: 122: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1261  000260  9A8C               	bcf	3980,5,c	;volatile
  1262  000262  928B               	bcf	3979,1,c	;volatile
  1263                           
  1264                           ;MotorDriver.c: 123: if ((Microstep<32)&&(Microstep>23)){
  1265  000264  BE41               	btfsc	_Microstep+1,7,c
  1266  000266  D006               	goto	l1829
  1267  000268  5041               	movf	_Microstep+1,w,c
  1268  00026A  E14E               	bnz	l463
  1269  00026C  0E20               	movlw	32
  1270  00026E  5C40               	subwf	_Microstep,w,c
  1271  000270  B0D8               	btfsc	status,0,c
  1272  000272  0012               	return	
  1273  000274                     l1829:
  1274  000274  BE41               	btfsc	_Microstep+1,7,c
  1275  000276  0012               	return	
  1276  000278  5041               	movf	_Microstep+1,w,c
  1277  00027A  E104               	bnz	u980
  1278  00027C  0E18               	movlw	24
  1279  00027E  5C40               	subwf	_Microstep,w,c
  1280  000280  A0D8               	btfss	status,0,c
  1281  000282  0012               	return	
  1282  000284                     u980:
  1283                           
  1284                           ;MotorDriver.c: 128: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1285  000284  0E01               	movlw	low _LookUP_TABLE_COS
  1286  000286  2440               	addwf	_Microstep,w,c
  1287  000288  6ED9               	movwf	fsr2l,c
  1288  00028A  0E00               	movlw	high _LookUP_TABLE_COS
  1289  00028C  2041               	addwfc	_Microstep+1,w,c
  1290  00028E  6EDA               	movwf	fsr2h,c
  1291  000290  50DF               	movf	indf2,w,c
  1292  000292  6E33               	movwf	??_State8MEF_act& (0+255),c
  1293  000294  5033               	movf	??_State8MEF_act,w,c
  1294  000296  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1295  000298  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1296  00029A  ECD3  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1297                           
  1298                           ;MotorDriver.c: 129: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1299  00029E  0EE0               	movlw	low _LookUP_TABLE_SEN
  1300  0002A0  2440               	addwf	_Microstep,w,c
  1301  0002A2  6ED9               	movwf	fsr2l,c
  1302  0002A4  0E00               	movlw	high _LookUP_TABLE_SEN
  1303  0002A6  2041               	addwfc	_Microstep+1,w,c
  1304  0002A8  6EDA               	movwf	fsr2h,c
  1305  0002AA  50DF               	movf	indf2,w,c
  1306  0002AC  6E33               	movwf	??_State8MEF_act& (0+255),c
  1307  0002AE  5033               	movf	??_State8MEF_act,w,c
  1308  0002B0  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1309  0002B2  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1310  0002B4  ECBB  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1311                           
  1312                           ;MotorDriver.c: 131: if (direccion == 1){
  1313  0002B8  0434               	decf	State8MEF_act@direccion,w,c
  1314  0002BA  A4D8               	btfss	status,2,c
  1315  0002BC  D00C               	goto	l1843
  1316                           
  1317                           ;MotorDriver.c: 132: if (Microstep==31){
  1318  0002BE  0E1F               	movlw	31
  1319  0002C0  1840               	xorwf	_Microstep,w,c
  1320  0002C2  1041               	iorwf	_Microstep+1,w,c
  1321  0002C4  A4D8               	btfss	status,2,c
  1322  0002C6  D004               	goto	l1841
  1323                           
  1324                           ;MotorDriver.c: 133: EstadoActual = STATE1;
  1325  0002C8  0E01               	movlw	1
  1326  0002CA  6E4F               	movwf	_EstadoActual,c
  1327                           
  1328                           ;MotorDriver.c: 134: Microstep=-1;
  1329  0002CC  6840               	setf	_Microstep,c
  1330  0002CE  6841               	setf	_Microstep+1,c
  1331  0002D0                     l1841:
  1332                           
  1333                           ;MotorDriver.c: 135: }
  1334                           ;MotorDriver.c: 136: Microstep++;
  1335  0002D0  4A40               	infsnz	_Microstep,f,c
  1336  0002D2  2A41               	incf	_Microstep+1,f,c
  1337                           
  1338                           ;MotorDriver.c: 137: }
  1339  0002D4  0012               	return	
  1340  0002D6                     l1843:
  1341                           
  1342                           ;MotorDriver.c: 138: else{
  1343                           ;MotorDriver.c: 139: if (Microstep==24){
  1344  0002D6  0E18               	movlw	24
  1345  0002D8  1840               	xorwf	_Microstep,w,c
  1346  0002DA  1041               	iorwf	_Microstep+1,w,c
  1347  0002DC  A4D8               	btfss	status,2,c
  1348  0002DE  D002               	goto	l1847
  1349                           
  1350                           ;MotorDriver.c: 140: EstadoActual = STATE3;
  1351  0002E0  0E03               	movlw	3
  1352  0002E2  6E4F               	movwf	_EstadoActual,c
  1353  0002E4                     l1847:
  1354                           
  1355                           ;MotorDriver.c: 141: }
  1356                           ;MotorDriver.c: 142: Microstep--;
  1357  0002E4  0640               	decf	_Microstep,f,c
  1358  0002E6  A0D8               	btfss	status,0,c
  1359  0002E8  0641               	decf	_Microstep+1,f,c
  1360                           
  1361                           ;MotorDriver.c: 149: }
  1362                           
  1363                           ;MotorDriver.c: 148: break;
  1364                           
  1365                           ;MotorDriver.c: 146: default:
  1366                           
  1367                           ;MotorDriver.c: 143: }
  1368                           ;MotorDriver.c: 144: }
  1369                           ;MotorDriver.c: 145: break;
  1370  0002EA  0012               	return	
  1371  0002EC                     l1851:
  1372  0002EC  504F               	movf	_EstadoActual,w,c
  1373                           
  1374                           ; Switch size 1, requested type "space"
  1375                           ; Number of cases is 4, Range of values is 1 to 4
  1376                           ; switch strategies available:
  1377                           ; Name         Instructions Cycles
  1378                           ; simple_byte           13     7 (average)
  1379                           ;	Chosen strategy is simple_byte
  1380  0002EE  0A01               	xorlw	1	; case 1
  1381  0002F0  B4D8               	btfsc	status,2,c
  1382  0002F2  D6DF               	goto	l1745
  1383  0002F4  0A03               	xorlw	3	; case 2
  1384  0002F6  B4D8               	btfsc	status,2,c
  1385  0002F8  D71F               	goto	l1769
  1386  0002FA  0A01               	xorlw	1	; case 3
  1387  0002FC  B4D8               	btfsc	status,2,c
  1388  0002FE  D764               	goto	l1795
  1389  000300  0A07               	xorlw	7	; case 4
  1390  000302  A4D8               	btfss	status,2,c
  1391  000304  0012               	return	
  1392  000306  D7A8               	goto	l1821
  1393  000308                     l463:
  1394  000308  0012               	return		;funcret
  1395  00030A                     __end_of_State8MEF_act:
  1396                           	opt stack 0
  1397                           tblptru	equ	0xFF8
  1398                           tblptrh	equ	0xFF7
  1399                           tblptrl	equ	0xFF6
  1400                           tablat	equ	0xFF5
  1401                           intcon	equ	0xFF2
  1402                           postinc0	equ	0xFEE
  1403                           wreg	equ	0xFE8
  1404                           postdec1	equ	0xFE5
  1405                           fsr1l	equ	0xFE1
  1406                           indf2	equ	0xFDF
  1407                           fsr2h	equ	0xFDA
  1408                           fsr2l	equ	0xFD9
  1409                           status	equ	0xFD8
  1410                           
  1411 ;; *************** function _State16MEF_act *****************
  1412 ;; Defined at:
  1413 ;;		line 152 in file "MotorDriver.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  direccion       1    wreg     unsigned char 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  direccion       1   19[COMRAM] unsigned char 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;Total ram usage:        2 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    5
  1434 ;; This function calls:
  1435 ;;		_EPWM1_LoadDutyValue
  1436 ;;		_EPWM2_LoadDutyValue
  1437 ;; This function is called by:
  1438 ;;		_StepMove
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text3
  1443  00030A                     __ptext3:
  1444                           	opt stack 0
  1445  00030A                     _State16MEF_act:
  1446                           	opt stack 24
  1447                           
  1448                           ;incstack = 0
  1449                           ;State16MEF_act@direccion stored from wreg
  1450  00030A  6E34               	movwf	State16MEF_act@direccion,c
  1451                           
  1452                           ;MotorDriver.c: 154: switch(EstadoActual) {
  1453  00030C  D11D               	goto	l1961
  1454  00030E                     l1855:
  1455                           
  1456                           ;MotorDriver.c: 156: PSTR1CON = 0x01; PSTR2CON = 0x01;
  1457  00030E  0E01               	movlw	1
  1458  000310  6EB9               	movwf	4025,c	;volatile
  1459  000312  0E01               	movlw	1
  1460  000314  6E63               	movwf	3939,c	;volatile
  1461                           
  1462                           ;MotorDriver.c: 157: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1463  000316  9A8C               	bcf	3980,5,c	;volatile
  1464  000318  908B               	bcf	3979,0,c	;volatile
  1465                           
  1466                           ;MotorDriver.c: 158: if (Microstep<16){
  1467  00031A  BE41               	btfsc	_Microstep+1,7,c
  1468  00031C  D006               	goto	l1863
  1469  00031E  5041               	movf	_Microstep+1,w,c
  1470  000320  E103               	bnz	u1021
  1471  000322  0E10               	movlw	16
  1472  000324  5C40               	subwf	_Microstep,w,c
  1473  000326  B0D8               	btfsc	status,0,c
  1474  000328                     u1021:
  1475  000328  0012               	return	
  1476  00032A                     l1863:
  1477                           
  1478                           ;MotorDriver.c: 162: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1479  00032A  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1480  00032C  2440               	addwf	_Microstep,w,c
  1481  00032E  6ED9               	movwf	fsr2l,c
  1482  000330  0E00               	movlw	high _LookUP_TABLE_COS_16
  1483  000332  2041               	addwfc	_Microstep+1,w,c
  1484  000334  6EDA               	movwf	fsr2h,c
  1485  000336  50DF               	movf	indf2,w,c
  1486  000338  6E33               	movwf	??_State16MEF_act& (0+255),c
  1487  00033A  5033               	movf	??_State16MEF_act,w,c
  1488  00033C  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1489  00033E  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1490  000340  ECD3  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1491                           
  1492                           ;MotorDriver.c: 163: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1493  000344  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1494  000346  2440               	addwf	_Microstep,w,c
  1495  000348  6ED9               	movwf	fsr2l,c
  1496  00034A  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1497  00034C  2041               	addwfc	_Microstep+1,w,c
  1498  00034E  6EDA               	movwf	fsr2h,c
  1499  000350  50DF               	movf	indf2,w,c
  1500  000352  6E33               	movwf	??_State16MEF_act& (0+255),c
  1501  000354  5033               	movf	??_State16MEF_act,w,c
  1502  000356  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1503  000358  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1504  00035A  ECBB  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1505                           
  1506                           ;MotorDriver.c: 165: if (direccion == 1){
  1507  00035E  0434               	decf	State16MEF_act@direccion,w,c
  1508  000360  A4D8               	btfss	status,2,c
  1509  000362  D00A               	goto	l1873
  1510                           
  1511                           ;MotorDriver.c: 166: if (Microstep==15){
  1512  000364  0E0F               	movlw	15
  1513  000366  1840               	xorwf	_Microstep,w,c
  1514  000368  1041               	iorwf	_Microstep+1,w,c
  1515  00036A  A4D8               	btfss	status,2,c
  1516  00036C  D002               	goto	l1871
  1517                           
  1518                           ;MotorDriver.c: 167: EstadoActual = STATE2;
  1519  00036E  0E02               	movlw	2
  1520  000370  6E4F               	movwf	_EstadoActual,c
  1521  000372                     l1871:
  1522                           
  1523                           ;MotorDriver.c: 168: }
  1524                           ;MotorDriver.c: 169: Microstep++;
  1525  000372  4A40               	infsnz	_Microstep,f,c
  1526  000374  2A41               	incf	_Microstep+1,f,c
  1527                           
  1528                           ;MotorDriver.c: 170: }
  1529  000376  0012               	return	
  1530  000378                     l1873:
  1531                           
  1532                           ;MotorDriver.c: 171: else{
  1533                           ;MotorDriver.c: 172: if (Microstep==0){
  1534  000378  5040               	movf	_Microstep,w,c
  1535  00037A  1041               	iorwf	_Microstep+1,w,c
  1536  00037C  A4D8               	btfss	status,2,c
  1537  00037E  D006               	goto	l1877
  1538                           
  1539                           ;MotorDriver.c: 173: EstadoActual = STATE4;
  1540  000380  0E04               	movlw	4
  1541  000382  6E4F               	movwf	_EstadoActual,c
  1542                           
  1543                           ;MotorDriver.c: 174: Microstep=63;
  1544  000384  0E00               	movlw	0
  1545  000386  6E41               	movwf	_Microstep+1,c
  1546  000388  0E3F               	movlw	63
  1547  00038A  6E40               	movwf	_Microstep,c
  1548  00038C                     l1877:
  1549                           
  1550                           ;MotorDriver.c: 175: }
  1551                           ;MotorDriver.c: 176: Microstep--;
  1552  00038C  0640               	decf	_Microstep,f,c
  1553  00038E  A0D8               	btfss	status,0,c
  1554  000390  0641               	decf	_Microstep+1,f,c
  1555                           
  1556                           ;MotorDriver.c: 177: }
  1557                           ;MotorDriver.c: 178: }
  1558                           ;MotorDriver.c: 179: break;
  1559  000392  0012               	return	
  1560  000394                     l1879:
  1561                           
  1562                           ;MotorDriver.c: 181: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1563  000394  0E02               	movlw	2
  1564  000396  6EB9               	movwf	4025,c	;volatile
  1565  000398  0E01               	movlw	1
  1566  00039A  6E63               	movwf	3939,c	;volatile
  1567                           
  1568                           ;MotorDriver.c: 182: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1569  00039C  948B               	bcf	3979,2,c	;volatile
  1570  00039E  908B               	bcf	3979,0,c	;volatile
  1571                           
  1572                           ;MotorDriver.c: 183: if ((Microstep<32)&&(Microstep>15)){
  1573  0003A0  BE41               	btfsc	_Microstep+1,7,c
  1574  0003A2  D006               	goto	l1887
  1575  0003A4  5041               	movf	_Microstep+1,w,c
  1576  0003A6  E103               	bnz	u1061
  1577  0003A8  0E20               	movlw	32
  1578  0003AA  5C40               	subwf	_Microstep,w,c
  1579  0003AC  B0D8               	btfsc	status,0,c
  1580  0003AE                     u1061:
  1581  0003AE  0012               	return	
  1582  0003B0                     l1887:
  1583  0003B0  BE41               	btfsc	_Microstep+1,7,c
  1584  0003B2  0012               	return	
  1585  0003B4  5041               	movf	_Microstep+1,w,c
  1586  0003B6  E104               	bnz	u1070
  1587  0003B8  0E10               	movlw	16
  1588  0003BA  5C40               	subwf	_Microstep,w,c
  1589  0003BC  A0D8               	btfss	status,0,c
  1590  0003BE  0012               	return	
  1591  0003C0                     u1070:
  1592                           
  1593                           ;MotorDriver.c: 188: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1594  0003C0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1595  0003C2  2440               	addwf	_Microstep,w,c
  1596  0003C4  6ED9               	movwf	fsr2l,c
  1597  0003C6  0E00               	movlw	high _LookUP_TABLE_COS_16
  1598  0003C8  2041               	addwfc	_Microstep+1,w,c
  1599  0003CA  6EDA               	movwf	fsr2h,c
  1600  0003CC  50DF               	movf	indf2,w,c
  1601  0003CE  6E33               	movwf	??_State16MEF_act& (0+255),c
  1602  0003D0  5033               	movf	??_State16MEF_act,w,c
  1603  0003D2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1604  0003D4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1605  0003D6  ECD3  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1606                           
  1607                           ;MotorDriver.c: 189: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1608  0003DA  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1609  0003DC  2440               	addwf	_Microstep,w,c
  1610  0003DE  6ED9               	movwf	fsr2l,c
  1611  0003E0  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1612  0003E2  2041               	addwfc	_Microstep+1,w,c
  1613  0003E4  6EDA               	movwf	fsr2h,c
  1614  0003E6  50DF               	movf	indf2,w,c
  1615  0003E8  6E33               	movwf	??_State16MEF_act& (0+255),c
  1616  0003EA  5033               	movf	??_State16MEF_act,w,c
  1617  0003EC  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1618  0003EE  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1619  0003F0  ECBB  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1620                           
  1621                           ;MotorDriver.c: 191: if (direccion == 1){
  1622  0003F4  0434               	decf	State16MEF_act@direccion,w,c
  1623  0003F6  A4D8               	btfss	status,2,c
  1624  0003F8  D00A               	goto	l1899
  1625                           
  1626                           ;MotorDriver.c: 192: if (Microstep==31){
  1627  0003FA  0E1F               	movlw	31
  1628  0003FC  1840               	xorwf	_Microstep,w,c
  1629  0003FE  1041               	iorwf	_Microstep+1,w,c
  1630  000400  A4D8               	btfss	status,2,c
  1631  000402  D002               	goto	l1897
  1632                           
  1633                           ;MotorDriver.c: 193: EstadoActual = STATE3;
  1634  000404  0E03               	movlw	3
  1635  000406  6E4F               	movwf	_EstadoActual,c
  1636  000408                     l1897:
  1637                           
  1638                           ;MotorDriver.c: 194: }
  1639                           ;MotorDriver.c: 195: Microstep++;
  1640  000408  4A40               	infsnz	_Microstep,f,c
  1641  00040A  2A41               	incf	_Microstep+1,f,c
  1642                           
  1643                           ;MotorDriver.c: 196: }
  1644  00040C  0012               	return	
  1645  00040E                     l1899:
  1646                           
  1647                           ;MotorDriver.c: 197: else{
  1648                           ;MotorDriver.c: 198: if (Microstep==16){
  1649  00040E  0E10               	movlw	16
  1650  000410  1840               	xorwf	_Microstep,w,c
  1651  000412  1041               	iorwf	_Microstep+1,w,c
  1652  000414  A4D8               	btfss	status,2,c
  1653  000416  D002               	goto	l1903
  1654                           
  1655                           ;MotorDriver.c: 199: EstadoActual = STATE1;
  1656  000418  0E01               	movlw	1
  1657  00041A  6E4F               	movwf	_EstadoActual,c
  1658  00041C                     l1903:
  1659                           
  1660                           ;MotorDriver.c: 200: }
  1661                           ;MotorDriver.c: 201: Microstep--;
  1662  00041C  0640               	decf	_Microstep,f,c
  1663  00041E  A0D8               	btfss	status,0,c
  1664  000420  0641               	decf	_Microstep+1,f,c
  1665                           
  1666                           ;MotorDriver.c: 202: }
  1667                           ;MotorDriver.c: 203: }
  1668                           ;MotorDriver.c: 204: break;
  1669  000422  0012               	return	
  1670  000424                     l1905:
  1671                           
  1672                           ;MotorDriver.c: 206: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1673  000424  0E02               	movlw	2
  1674  000426  6EB9               	movwf	4025,c	;volatile
  1675  000428  0E02               	movlw	2
  1676  00042A  6E63               	movwf	3939,c	;volatile
  1677                           
  1678                           ;MotorDriver.c: 207: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1679  00042C  948B               	bcf	3979,2,c	;volatile
  1680  00042E  928B               	bcf	3979,1,c	;volatile
  1681                           
  1682                           ;MotorDriver.c: 208: if ((Microstep<48)&&(Microstep>31)){
  1683  000430  BE41               	btfsc	_Microstep+1,7,c
  1684  000432  D006               	goto	l1913
  1685  000434  5041               	movf	_Microstep+1,w,c
  1686  000436  E103               	bnz	u1111
  1687  000438  0E30               	movlw	48
  1688  00043A  5C40               	subwf	_Microstep,w,c
  1689  00043C  B0D8               	btfsc	status,0,c
  1690  00043E                     u1111:
  1691  00043E  0012               	return	
  1692  000440                     l1913:
  1693  000440  BE41               	btfsc	_Microstep+1,7,c
  1694  000442  0012               	return	
  1695  000444  5041               	movf	_Microstep+1,w,c
  1696  000446  E104               	bnz	u1120
  1697  000448  0E20               	movlw	32
  1698  00044A  5C40               	subwf	_Microstep,w,c
  1699  00044C  A0D8               	btfss	status,0,c
  1700  00044E  0012               	return	
  1701  000450                     u1120:
  1702                           
  1703                           ;MotorDriver.c: 213: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1704  000450  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1705  000452  2440               	addwf	_Microstep,w,c
  1706  000454  6ED9               	movwf	fsr2l,c
  1707  000456  0E00               	movlw	high _LookUP_TABLE_COS_16
  1708  000458  2041               	addwfc	_Microstep+1,w,c
  1709  00045A  6EDA               	movwf	fsr2h,c
  1710  00045C  50DF               	movf	indf2,w,c
  1711  00045E  6E33               	movwf	??_State16MEF_act& (0+255),c
  1712  000460  5033               	movf	??_State16MEF_act,w,c
  1713  000462  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1714  000464  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1715  000466  ECD3  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1716                           
  1717                           ;MotorDriver.c: 214: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1718  00046A  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1719  00046C  2440               	addwf	_Microstep,w,c
  1720  00046E  6ED9               	movwf	fsr2l,c
  1721  000470  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1722  000472  2041               	addwfc	_Microstep+1,w,c
  1723  000474  6EDA               	movwf	fsr2h,c
  1724  000476  50DF               	movf	indf2,w,c
  1725  000478  6E33               	movwf	??_State16MEF_act& (0+255),c
  1726  00047A  5033               	movf	??_State16MEF_act,w,c
  1727  00047C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1728  00047E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1729  000480  ECBB  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1730                           
  1731                           ;MotorDriver.c: 216: if (direccion == 1){
  1732  000484  0434               	decf	State16MEF_act@direccion,w,c
  1733  000486  A4D8               	btfss	status,2,c
  1734  000488  D00A               	goto	l1925
  1735                           
  1736                           ;MotorDriver.c: 217: if (Microstep==47){
  1737  00048A  0E2F               	movlw	47
  1738  00048C  1840               	xorwf	_Microstep,w,c
  1739  00048E  1041               	iorwf	_Microstep+1,w,c
  1740  000490  A4D8               	btfss	status,2,c
  1741  000492  D002               	goto	l1923
  1742                           
  1743                           ;MotorDriver.c: 218: EstadoActual = STATE4;
  1744  000494  0E04               	movlw	4
  1745  000496  6E4F               	movwf	_EstadoActual,c
  1746  000498                     l1923:
  1747                           
  1748                           ;MotorDriver.c: 219: }
  1749                           ;MotorDriver.c: 220: Microstep++;
  1750  000498  4A40               	infsnz	_Microstep,f,c
  1751  00049A  2A41               	incf	_Microstep+1,f,c
  1752                           
  1753                           ;MotorDriver.c: 221: }
  1754  00049C  0012               	return	
  1755  00049E                     l1925:
  1756                           
  1757                           ;MotorDriver.c: 222: else{
  1758                           ;MotorDriver.c: 223: if (Microstep==32){
  1759  00049E  0E20               	movlw	32
  1760  0004A0  1840               	xorwf	_Microstep,w,c
  1761  0004A2  1041               	iorwf	_Microstep+1,w,c
  1762  0004A4  A4D8               	btfss	status,2,c
  1763  0004A6  D002               	goto	l1929
  1764                           
  1765                           ;MotorDriver.c: 224: EstadoActual = STATE2;
  1766  0004A8  0E02               	movlw	2
  1767  0004AA  6E4F               	movwf	_EstadoActual,c
  1768  0004AC                     l1929:
  1769                           
  1770                           ;MotorDriver.c: 225: }
  1771                           ;MotorDriver.c: 226: Microstep--;
  1772  0004AC  0640               	decf	_Microstep,f,c
  1773  0004AE  A0D8               	btfss	status,0,c
  1774  0004B0  0641               	decf	_Microstep+1,f,c
  1775                           
  1776                           ;MotorDriver.c: 227: }
  1777                           ;MotorDriver.c: 228: }
  1778                           ;MotorDriver.c: 229: break;
  1779  0004B2  0012               	return	
  1780  0004B4                     l1931:
  1781                           
  1782                           ;MotorDriver.c: 231: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1783  0004B4  0E01               	movlw	1
  1784  0004B6  6EB9               	movwf	4025,c	;volatile
  1785  0004B8  0E02               	movlw	2
  1786  0004BA  6E63               	movwf	3939,c	;volatile
  1787                           
  1788                           ;MotorDriver.c: 232: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1789  0004BC  9A8C               	bcf	3980,5,c	;volatile
  1790  0004BE  928B               	bcf	3979,1,c	;volatile
  1791                           
  1792                           ;MotorDriver.c: 233: if ((Microstep<64)&&(Microstep>47)){
  1793  0004C0  BE41               	btfsc	_Microstep+1,7,c
  1794  0004C2  D006               	goto	l1939
  1795  0004C4  5041               	movf	_Microstep+1,w,c
  1796  0004C6  E14E               	bnz	l509
  1797  0004C8  0E40               	movlw	64
  1798  0004CA  5C40               	subwf	_Microstep,w,c
  1799  0004CC  B0D8               	btfsc	status,0,c
  1800  0004CE  0012               	return	
  1801  0004D0                     l1939:
  1802  0004D0  BE41               	btfsc	_Microstep+1,7,c
  1803  0004D2  0012               	return	
  1804  0004D4  5041               	movf	_Microstep+1,w,c
  1805  0004D6  E104               	bnz	u1170
  1806  0004D8  0E30               	movlw	48
  1807  0004DA  5C40               	subwf	_Microstep,w,c
  1808  0004DC  A0D8               	btfss	status,0,c
  1809  0004DE  0012               	return	
  1810  0004E0                     u1170:
  1811                           
  1812                           ;MotorDriver.c: 238: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1813  0004E0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1814  0004E2  2440               	addwf	_Microstep,w,c
  1815  0004E4  6ED9               	movwf	fsr2l,c
  1816  0004E6  0E00               	movlw	high _LookUP_TABLE_COS_16
  1817  0004E8  2041               	addwfc	_Microstep+1,w,c
  1818  0004EA  6EDA               	movwf	fsr2h,c
  1819  0004EC  50DF               	movf	indf2,w,c
  1820  0004EE  6E33               	movwf	??_State16MEF_act& (0+255),c
  1821  0004F0  5033               	movf	??_State16MEF_act,w,c
  1822  0004F2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1823  0004F4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1824  0004F6  ECD3  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1825                           
  1826                           ;MotorDriver.c: 239: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1827  0004FA  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1828  0004FC  2440               	addwf	_Microstep,w,c
  1829  0004FE  6ED9               	movwf	fsr2l,c
  1830  000500  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1831  000502  2041               	addwfc	_Microstep+1,w,c
  1832  000504  6EDA               	movwf	fsr2h,c
  1833  000506  50DF               	movf	indf2,w,c
  1834  000508  6E33               	movwf	??_State16MEF_act& (0+255),c
  1835  00050A  5033               	movf	??_State16MEF_act,w,c
  1836  00050C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1837  00050E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1838  000510  ECBB  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1839                           
  1840                           ;MotorDriver.c: 241: if (direccion == 1){
  1841  000514  0434               	decf	State16MEF_act@direccion,w,c
  1842  000516  A4D8               	btfss	status,2,c
  1843  000518  D00C               	goto	l1953
  1844                           
  1845                           ;MotorDriver.c: 242: if (Microstep==63){
  1846  00051A  0E3F               	movlw	63
  1847  00051C  1840               	xorwf	_Microstep,w,c
  1848  00051E  1041               	iorwf	_Microstep+1,w,c
  1849  000520  A4D8               	btfss	status,2,c
  1850  000522  D004               	goto	l1951
  1851                           
  1852                           ;MotorDriver.c: 243: EstadoActual = STATE1;
  1853  000524  0E01               	movlw	1
  1854  000526  6E4F               	movwf	_EstadoActual,c
  1855                           
  1856                           ;MotorDriver.c: 244: Microstep=-1;
  1857  000528  6840               	setf	_Microstep,c
  1858  00052A  6841               	setf	_Microstep+1,c
  1859  00052C                     l1951:
  1860                           
  1861                           ;MotorDriver.c: 245: }
  1862                           ;MotorDriver.c: 246: Microstep++;
  1863  00052C  4A40               	infsnz	_Microstep,f,c
  1864  00052E  2A41               	incf	_Microstep+1,f,c
  1865                           
  1866                           ;MotorDriver.c: 247: }
  1867  000530  0012               	return	
  1868  000532                     l1953:
  1869                           
  1870                           ;MotorDriver.c: 248: else{
  1871                           ;MotorDriver.c: 249: if (Microstep==48){
  1872  000532  0E30               	movlw	48
  1873  000534  1840               	xorwf	_Microstep,w,c
  1874  000536  1041               	iorwf	_Microstep+1,w,c
  1875  000538  A4D8               	btfss	status,2,c
  1876  00053A  D002               	goto	l1957
  1877                           
  1878                           ;MotorDriver.c: 250: EstadoActual = STATE3;
  1879  00053C  0E03               	movlw	3
  1880  00053E  6E4F               	movwf	_EstadoActual,c
  1881  000540                     l1957:
  1882                           
  1883                           ;MotorDriver.c: 251: }
  1884                           ;MotorDriver.c: 252: Microstep--;
  1885  000540  0640               	decf	_Microstep,f,c
  1886  000542  A0D8               	btfss	status,0,c
  1887  000544  0641               	decf	_Microstep+1,f,c
  1888                           
  1889                           ;MotorDriver.c: 259: }
  1890                           
  1891                           ;MotorDriver.c: 258: break;
  1892                           
  1893                           ;MotorDriver.c: 256: default:
  1894                           
  1895                           ;MotorDriver.c: 253: }
  1896                           ;MotorDriver.c: 254: }
  1897                           ;MotorDriver.c: 255: break;
  1898  000546  0012               	return	
  1899  000548                     l1961:
  1900  000548  504F               	movf	_EstadoActual,w,c
  1901                           
  1902                           ; Switch size 1, requested type "space"
  1903                           ; Number of cases is 4, Range of values is 1 to 4
  1904                           ; switch strategies available:
  1905                           ; Name         Instructions Cycles
  1906                           ; simple_byte           13     7 (average)
  1907                           ;	Chosen strategy is simple_byte
  1908  00054A  0A01               	xorlw	1	; case 1
  1909  00054C  B4D8               	btfsc	status,2,c
  1910  00054E  D6DF               	goto	l1855
  1911  000550  0A03               	xorlw	3	; case 2
  1912  000552  B4D8               	btfsc	status,2,c
  1913  000554  D71F               	goto	l1879
  1914  000556  0A01               	xorlw	1	; case 3
  1915  000558  B4D8               	btfsc	status,2,c
  1916  00055A  D764               	goto	l1905
  1917  00055C  0A07               	xorlw	7	; case 4
  1918  00055E  A4D8               	btfss	status,2,c
  1919  000560  0012               	return	
  1920  000562  D7A8               	goto	l1931
  1921  000564                     l509:
  1922  000564  0012               	return		;funcret
  1923  000566                     __end_of_State16MEF_act:
  1924                           	opt stack 0
  1925                           tblptru	equ	0xFF8
  1926                           tblptrh	equ	0xFF7
  1927                           tblptrl	equ	0xFF6
  1928                           tablat	equ	0xFF5
  1929                           intcon	equ	0xFF2
  1930                           postinc0	equ	0xFEE
  1931                           wreg	equ	0xFE8
  1932                           postdec1	equ	0xFE5
  1933                           fsr1l	equ	0xFE1
  1934                           indf2	equ	0xFDF
  1935                           fsr2h	equ	0xFDA
  1936                           fsr2l	equ	0xFD9
  1937                           status	equ	0xFD8
  1938                           
  1939 ;; *************** function _EPWM2_LoadDutyValue *****************
  1940 ;; Defined at:
  1941 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2, status,0
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;Total ram usage:        4 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    4
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_State8MEF_act
  1966 ;;		_State16MEF_act
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text4
  1971  000776                     __ptext4:
  1972                           	opt stack 0
  1973  000776                     _EPWM2_LoadDutyValue:
  1974                           	opt stack 24
  1975                           
  1976                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  1977                           
  1978                           ;incstack = 0
  1979  000776  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1980  00077A  C030  F032         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  1981  00077E  90D8               	bcf	status,0,c
  1982  000780  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1983  000782  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1984  000784  90D8               	bcf	status,0,c
  1985  000786  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1986  000788  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1987  00078A  5031               	movf	??_EPWM2_LoadDutyValue,w,c
  1988  00078C  6E67               	movwf	3943,c	;volatile
  1989                           
  1990                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1991  00078E  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1992  000792  0E03               	movlw	3
  1993  000794  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  1994  000796  3A31               	swapf	??_EPWM2_LoadDutyValue,f,c
  1995  000798  0EF0               	movlw	240
  1996  00079A  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  1997  00079C  5066               	movf	3942,w,c	;volatile
  1998  00079E  0BCF               	andlw	207
  1999  0007A0  1031               	iorwf	??_EPWM2_LoadDutyValue,w,c
  2000  0007A2  6E66               	movwf	3942,c	;volatile
  2001  0007A4  0012               	return		;funcret
  2002  0007A6                     __end_of_EPWM2_LoadDutyValue:
  2003                           	opt stack 0
  2004                           tblptru	equ	0xFF8
  2005                           tblptrh	equ	0xFF7
  2006                           tblptrl	equ	0xFF6
  2007                           tablat	equ	0xFF5
  2008                           intcon	equ	0xFF2
  2009                           postinc0	equ	0xFEE
  2010                           wreg	equ	0xFE8
  2011                           postdec1	equ	0xFE5
  2012                           fsr1l	equ	0xFE1
  2013                           indf2	equ	0xFDF
  2014                           fsr2h	equ	0xFDA
  2015                           fsr2l	equ	0xFD9
  2016                           status	equ	0xFD8
  2017                           
  2018 ;; *************** function _EPWM1_LoadDutyValue *****************
  2019 ;; Defined at:
  2020 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  dutyValue       2   14[COMRAM] unsigned int 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;Total ram usage:        4 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    4
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_State8MEF_act
  2045 ;;		_State16MEF_act
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text5
  2050  0007A6                     __ptext5:
  2051                           	opt stack 0
  2052  0007A6                     _EPWM1_LoadDutyValue:
  2053                           	opt stack 24
  2054                           
  2055                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  2056                           
  2057                           ;incstack = 0
  2058  0007A6  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  2059  0007AA  C030  F032         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  2060  0007AE  90D8               	bcf	status,0,c
  2061  0007B0  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  2062  0007B2  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  2063  0007B4  90D8               	bcf	status,0,c
  2064  0007B6  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  2065  0007B8  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  2066  0007BA  5031               	movf	??_EPWM1_LoadDutyValue,w,c
  2067  0007BC  6EBE               	movwf	4030,c	;volatile
  2068                           
  2069                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2070  0007BE  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  2071  0007C2  0E03               	movlw	3
  2072  0007C4  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  2073  0007C6  3A31               	swapf	??_EPWM1_LoadDutyValue,f,c
  2074  0007C8  0EF0               	movlw	240
  2075  0007CA  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  2076  0007CC  50BD               	movf	4029,w,c	;volatile
  2077  0007CE  0BCF               	andlw	207
  2078  0007D0  1031               	iorwf	??_EPWM1_LoadDutyValue,w,c
  2079  0007D2  6EBD               	movwf	4029,c	;volatile
  2080  0007D4  0012               	return		;funcret
  2081  0007D6                     __end_of_EPWM1_LoadDutyValue:
  2082                           	opt stack 0
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           intcon	equ	0xFF2
  2088                           postinc0	equ	0xFEE
  2089                           wreg	equ	0xFE8
  2090                           postdec1	equ	0xFE5
  2091                           fsr1l	equ	0xFE1
  2092                           indf2	equ	0xFDF
  2093                           fsr2h	equ	0xFDA
  2094                           fsr2l	equ	0xFD9
  2095                           status	equ	0xFD8
  2096                           
  2097 ;; *************** function _StateMEF_ini *****************
  2098 ;; Defined at:
  2099 ;;		line 36 in file "MotorDriver.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;Total ram usage:        0 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    4
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text6
  2128  000950                     __ptext6:
  2129                           	opt stack 0
  2130  000950                     _StateMEF_ini:
  2131                           	opt stack 26
  2132                           
  2133                           ;MotorDriver.c: 38: EstadoActual = STATE1;
  2134                           
  2135                           ;incstack = 0
  2136  000950  0E01               	movlw	1
  2137  000952  6E4F               	movwf	_EstadoActual,c
  2138                           
  2139                           ;MotorDriver.c: 39: Microstep=0;
  2140  000954  0E00               	movlw	0
  2141  000956  6E41               	movwf	_Microstep+1,c
  2142  000958  0E00               	movlw	0
  2143  00095A  6E40               	movwf	_Microstep,c
  2144  00095C  0012               	return		;funcret
  2145  00095E                     __end_of_StateMEF_ini:
  2146                           	opt stack 0
  2147                           tblptru	equ	0xFF8
  2148                           tblptrh	equ	0xFF7
  2149                           tblptrl	equ	0xFF6
  2150                           tablat	equ	0xFF5
  2151                           intcon	equ	0xFF2
  2152                           postinc0	equ	0xFEE
  2153                           wreg	equ	0xFE8
  2154                           postdec1	equ	0xFE5
  2155                           fsr1l	equ	0xFE1
  2156                           indf2	equ	0xFDF
  2157                           fsr2h	equ	0xFDA
  2158                           fsr2l	equ	0xFD9
  2159                           status	equ	0xFD8
  2160                           
  2161 ;; *************** function _SYSTEM_Initialize *****************
  2162 ;; Defined at:
  2163 ;;		line 111 in file "mcc_generated_files/mcc.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      void 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;Total ram usage:        0 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    6
  2184 ;; This function calls:
  2185 ;;		_ADC_Initialize
  2186 ;;		_CCP5_Initialize
  2187 ;;		_EPWM1_Initialize
  2188 ;;		_EPWM2_Initialize
  2189 ;;		_EUSART1_Initialize
  2190 ;;		_INTERRUPT_Initialize
  2191 ;;		_OSCILLATOR_Initialize
  2192 ;;		_PIN_MANAGER_Initialize
  2193 ;;		_TMR2_Initialize
  2194 ;;		_TMR6_Initialize
  2195 ;; This function is called by:
  2196 ;;		_main
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text7
  2201  0007D6                     __ptext7:
  2202                           	opt stack 0
  2203  0007D6                     _SYSTEM_Initialize:
  2204                           	opt stack 24
  2205                           
  2206                           ;mcc.c: 114: INTERRUPT_Initialize();
  2207                           
  2208                           ;incstack = 0
  2209  0007D6  ECC9  F004         	call	_INTERRUPT_Initialize	;wreg free
  2210                           
  2211                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  2212  0007DA  EC95  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  2213                           
  2214                           ;mcc.c: 116: OSCILLATOR_Initialize();
  2215  0007DE  ECAF  F004         	call	_OSCILLATOR_Initialize	;wreg free
  2216                           
  2217                           ;mcc.c: 117: TMR6_Initialize();
  2218  0007E2  EC00  F004         	call	_TMR6_Initialize	;wreg free
  2219                           
  2220                           ;mcc.c: 118: EPWM2_Initialize();
  2221  0007E6  EC28  F004         	call	_EPWM2_Initialize	;wreg free
  2222                           
  2223                           ;mcc.c: 119: CCP5_Initialize();
  2224  0007EA  EC95  F004         	call	_CCP5_Initialize	;wreg free
  2225                           
  2226                           ;mcc.c: 120: ADC_Initialize();
  2227  0007EE  EC7E  F004         	call	_ADC_Initialize	;wreg free
  2228                           
  2229                           ;mcc.c: 121: EPWM1_Initialize();
  2230  0007F2  EC3A  F004         	call	_EPWM1_Initialize	;wreg free
  2231                           
  2232                           ;mcc.c: 122: TMR2_Initialize();
  2233  0007F6  EC4C  F004         	call	_TMR2_Initialize	;wreg free
  2234                           
  2235                           ;mcc.c: 123: EUSART1_Initialize();
  2236  0007FA  EC8A  F004         	call	_EUSART1_Initialize	;wreg free
  2237  0007FE  0012               	return		;funcret
  2238  000800                     __end_of_SYSTEM_Initialize:
  2239                           	opt stack 0
  2240                           tblptru	equ	0xFF8
  2241                           tblptrh	equ	0xFF7
  2242                           tblptrl	equ	0xFF6
  2243                           tablat	equ	0xFF5
  2244                           intcon	equ	0xFF2
  2245                           postinc0	equ	0xFEE
  2246                           wreg	equ	0xFE8
  2247                           postdec1	equ	0xFE5
  2248                           fsr1l	equ	0xFE1
  2249                           indf2	equ	0xFDF
  2250                           fsr2h	equ	0xFDA
  2251                           fsr2l	equ	0xFD9
  2252                           status	equ	0xFD8
  2253                           
  2254 ;; *************** function _TMR6_Initialize *****************
  2255 ;; Defined at:
  2256 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;Total ram usage:        0 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    5
  2277 ;; This function calls:
  2278 ;;		_TMR6_SetInterruptHandler
  2279 ;;		_TMR6_StartTimer
  2280 ;; This function is called by:
  2281 ;;		_SYSTEM_Initialize
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text8
  2286  000800                     __ptext8:
  2287                           	opt stack 0
  2288  000800                     _TMR6_Initialize:
  2289                           	opt stack 24
  2290                           
  2291                           ;tmr6.c: 68: T6CON = 0x01;
  2292                           
  2293                           ;incstack = 0
  2294  000800  0E01               	movlw	1
  2295  000802  010F               	movlb	15	; () banked
  2296  000804  6F4A               	movwf	74,b	;volatile
  2297                           
  2298                           ;tmr6.c: 71: PR6 = 0x45;
  2299  000806  0E45               	movlw	69
  2300  000808  010F               	movlb	15	; () banked
  2301  00080A  6F4B               	movwf	75,b	;volatile
  2302                           
  2303                           ;tmr6.c: 74: TMR6 = 0x00;
  2304  00080C  0E00               	movlw	0
  2305  00080E  010F               	movlb	15	; () banked
  2306  000810  6F4C               	movwf	76,b	;volatile
  2307                           
  2308                           ; BSR set to: 15
  2309                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
  2310  000812  947E               	bcf	3966,2,c	;volatile
  2311                           
  2312                           ; BSR set to: 15
  2313                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
  2314  000814  847D               	bsf	3965,2,c	;volatile
  2315                           
  2316                           ; BSR set to: 15
  2317                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  2318  000816  0E9A               	movlw	low _TMR6_DefaultInterruptHandler
  2319  000818  6E2F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  2320  00081A  0E09               	movlw	high _TMR6_DefaultInterruptHandler
  2321  00081C  6E30               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  2322  00081E  ECB6  F004         	call	_TMR6_SetInterruptHandler	;wreg free
  2323                           
  2324                           ;tmr6.c: 86: TMR6_StartTimer();
  2325  000822  ECC4  F004         	call	_TMR6_StartTimer	;wreg free
  2326  000826  0012               	return		;funcret
  2327  000828                     __end_of_TMR6_Initialize:
  2328                           	opt stack 0
  2329                           tblptru	equ	0xFF8
  2330                           tblptrh	equ	0xFF7
  2331                           tblptrl	equ	0xFF6
  2332                           tablat	equ	0xFF5
  2333                           intcon	equ	0xFF2
  2334                           postinc0	equ	0xFEE
  2335                           wreg	equ	0xFE8
  2336                           postdec1	equ	0xFE5
  2337                           fsr1l	equ	0xFE1
  2338                           indf2	equ	0xFDF
  2339                           fsr2h	equ	0xFDA
  2340                           fsr2l	equ	0xFD9
  2341                           status	equ	0xFD8
  2342                           
  2343 ;; *************** function _TMR6_StartTimer *****************
  2344 ;; Defined at:
  2345 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		None
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;Total ram usage:        0 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    4
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_TMR6_Initialize
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text9
  2374  000988                     __ptext9:
  2375                           	opt stack 0
  2376  000988                     _TMR6_StartTimer:
  2377                           	opt stack 24
  2378                           
  2379                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  2380                           
  2381                           ;incstack = 0
  2382  000988  010F               	movlb	15	; () banked
  2383  00098A  854A               	bsf	74,2,b	;volatile
  2384                           
  2385                           ; BSR set to: 15
  2386  00098C  0012               	return		;funcret
  2387  00098E                     __end_of_TMR6_StartTimer:
  2388                           	opt stack 0
  2389                           tblptru	equ	0xFF8
  2390                           tblptrh	equ	0xFF7
  2391                           tblptrl	equ	0xFF6
  2392                           tablat	equ	0xFF5
  2393                           intcon	equ	0xFF2
  2394                           postinc0	equ	0xFEE
  2395                           wreg	equ	0xFE8
  2396                           postdec1	equ	0xFE5
  2397                           fsr1l	equ	0xFE1
  2398                           indf2	equ	0xFDF
  2399                           fsr2h	equ	0xFDA
  2400                           fsr2l	equ	0xFD9
  2401                           status	equ	0xFD8
  2402                           
  2403 ;; *************** function _TMR6_SetInterruptHandler *****************
  2404 ;; Defined at:
  2405 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  InterruptHan    2   14[COMRAM] PTR void 
  2408 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2420 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;Total ram usage:        2 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    4
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_TMR6_Initialize
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text10
  2435  00096C                     __ptext10:
  2436                           	opt stack 0
  2437  00096C                     _TMR6_SetInterruptHandler:
  2438                           	opt stack 24
  2439                           
  2440                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  2441                           
  2442                           ; BSR set to: 15
  2443                           ;incstack = 0
  2444  00096C  C02F  F04D         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  2445  000970  C030  F04E         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  2446  000974  0012               	return		;funcret
  2447  000976                     __end_of_TMR6_SetInterruptHandler:
  2448                           	opt stack 0
  2449                           tblptru	equ	0xFF8
  2450                           tblptrh	equ	0xFF7
  2451                           tblptrl	equ	0xFF6
  2452                           tablat	equ	0xFF5
  2453                           intcon	equ	0xFF2
  2454                           postinc0	equ	0xFEE
  2455                           wreg	equ	0xFE8
  2456                           postdec1	equ	0xFE5
  2457                           fsr1l	equ	0xFE1
  2458                           indf2	equ	0xFDF
  2459                           fsr2h	equ	0xFDA
  2460                           fsr2l	equ	0xFD9
  2461                           status	equ	0xFD8
  2462                           
  2463 ;; *************** function _TMR2_Initialize *****************
  2464 ;; Defined at:
  2465 ;;		line 68 in file "mcc_generated_files/tmr2.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;		None
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;		None
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg, status,2, status,0, cstack
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2483 ;;Total ram usage:        0 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; Hardware stack levels required when called:    5
  2486 ;; This function calls:
  2487 ;;		_TMR2_SetInterruptHandler
  2488 ;;		_TMR2_StartTimer
  2489 ;; This function is called by:
  2490 ;;		_SYSTEM_Initialize
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text11
  2495  000898                     __ptext11:
  2496                           	opt stack 0
  2497  000898                     _TMR2_Initialize:
  2498                           	opt stack 24
  2499                           
  2500                           ;tmr2.c: 73: T2CON = 0x02;
  2501                           
  2502                           ;incstack = 0
  2503  000898  0E02               	movlw	2
  2504  00089A  6EBA               	movwf	4026,c	;volatile
  2505                           
  2506                           ;tmr2.c: 76: PR2 = 0x0C;
  2507  00089C  0E0C               	movlw	12
  2508  00089E  6EBB               	movwf	4027,c	;volatile
  2509                           
  2510                           ;tmr2.c: 79: TMR2 = 0x00;
  2511  0008A0  0E00               	movlw	0
  2512  0008A2  6EBC               	movwf	4028,c	;volatile
  2513                           
  2514                           ;tmr2.c: 82: PIR1bits.TMR2IF = 0;
  2515  0008A4  929E               	bcf	3998,1,c	;volatile
  2516                           
  2517                           ;tmr2.c: 85: PIE1bits.TMR2IE = 1;
  2518  0008A6  829D               	bsf	3997,1,c	;volatile
  2519                           
  2520                           ;tmr2.c: 88: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  2521  0008A8  0E9C               	movlw	low _TMR2_DefaultInterruptHandler
  2522  0008AA  6E2F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  2523  0008AC  0E09               	movlw	high _TMR2_DefaultInterruptHandler
  2524  0008AE  6E30               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  2525  0008B0  ECBB  F004         	call	_TMR2_SetInterruptHandler	;wreg free
  2526                           
  2527                           ;tmr2.c: 91: TMR2_StartTimer();
  2528  0008B4  ECC7  F004         	call	_TMR2_StartTimer	;wreg free
  2529  0008B8  0012               	return		;funcret
  2530  0008BA                     __end_of_TMR2_Initialize:
  2531                           	opt stack 0
  2532                           tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           intcon	equ	0xFF2
  2537                           postinc0	equ	0xFEE
  2538                           wreg	equ	0xFE8
  2539                           postdec1	equ	0xFE5
  2540                           fsr1l	equ	0xFE1
  2541                           indf2	equ	0xFDF
  2542                           fsr2h	equ	0xFDA
  2543                           fsr2l	equ	0xFD9
  2544                           status	equ	0xFD8
  2545                           
  2546 ;; *************** function _TMR2_StartTimer *****************
  2547 ;; Defined at:
  2548 ;;		line 94 in file "mcc_generated_files/tmr2.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		None
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    4
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_TMR2_Initialize
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text12
  2577  00098E                     __ptext12:
  2578                           	opt stack 0
  2579  00098E                     _TMR2_StartTimer:
  2580                           	opt stack 24
  2581                           
  2582                           ;tmr2.c: 97: T2CONbits.TMR2ON = 1;
  2583                           
  2584                           ;incstack = 0
  2585  00098E  84BA               	bsf	4026,2,c	;volatile
  2586  000990  0012               	return		;funcret
  2587  000992                     __end_of_TMR2_StartTimer:
  2588                           	opt stack 0
  2589                           tblptru	equ	0xFF8
  2590                           tblptrh	equ	0xFF7
  2591                           tblptrl	equ	0xFF6
  2592                           tablat	equ	0xFF5
  2593                           intcon	equ	0xFF2
  2594                           postinc0	equ	0xFEE
  2595                           wreg	equ	0xFE8
  2596                           postdec1	equ	0xFE5
  2597                           fsr1l	equ	0xFE1
  2598                           indf2	equ	0xFDF
  2599                           fsr2h	equ	0xFDA
  2600                           fsr2l	equ	0xFD9
  2601                           status	equ	0xFD8
  2602                           
  2603 ;; *************** function _TMR2_SetInterruptHandler *****************
  2604 ;; Defined at:
  2605 ;;		line 150 in file "mcc_generated_files/tmr2.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  InterruptHan    2   14[COMRAM] PTR void 
  2608 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;Total ram usage:        2 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    4
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_TMR2_Initialize
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text13
  2635  000976                     __ptext13:
  2636                           	opt stack 0
  2637  000976                     _TMR2_SetInterruptHandler:
  2638                           	opt stack 24
  2639                           
  2640                           ;tmr2.c: 151: TMR2_InterruptHandler = InterruptHandler;
  2641                           
  2642                           ;incstack = 0
  2643  000976  C02F  F04B         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  2644  00097A  C030  F04C         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  2645  00097E  0012               	return		;funcret
  2646  000980                     __end_of_TMR2_SetInterruptHandler:
  2647                           	opt stack 0
  2648                           tblptru	equ	0xFF8
  2649                           tblptrh	equ	0xFF7
  2650                           tblptrl	equ	0xFF6
  2651                           tablat	equ	0xFF5
  2652                           intcon	equ	0xFF2
  2653                           postinc0	equ	0xFEE
  2654                           wreg	equ	0xFE8
  2655                           postdec1	equ	0xFE5
  2656                           fsr1l	equ	0xFE1
  2657                           indf2	equ	0xFDF
  2658                           fsr2h	equ	0xFDA
  2659                           fsr2l	equ	0xFD9
  2660                           status	equ	0xFD8
  2661                           
  2662 ;; *************** function _PIN_MANAGER_Initialize *****************
  2663 ;; Defined at:
  2664 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;		None
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg, status,2
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;Total ram usage:        0 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    4
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_SYSTEM_Initialize
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text14
  2693  00072A                     __ptext14:
  2694                           	opt stack 0
  2695  00072A                     _PIN_MANAGER_Initialize:
  2696                           	opt stack 25
  2697                           
  2698                           ;pin_manager.c: 56: LATE = 0x00;
  2699                           
  2700                           ;incstack = 0
  2701  00072A  0E00               	movlw	0
  2702  00072C  6E8D               	movwf	3981,c	;volatile
  2703                           
  2704                           ;pin_manager.c: 57: LATD = 0x00;
  2705  00072E  0E00               	movlw	0
  2706  000730  6E8C               	movwf	3980,c	;volatile
  2707                           
  2708                           ;pin_manager.c: 58: LATA = 0x00;
  2709  000732  0E00               	movlw	0
  2710  000734  6E89               	movwf	3977,c	;volatile
  2711                           
  2712                           ;pin_manager.c: 59: LATB = 0x00;
  2713  000736  0E00               	movlw	0
  2714  000738  6E8A               	movwf	3978,c	;volatile
  2715                           
  2716                           ;pin_manager.c: 60: LATC = 0x00;
  2717  00073A  0E00               	movlw	0
  2718  00073C  6E8B               	movwf	3979,c	;volatile
  2719                           
  2720                           ;pin_manager.c: 65: TRISE = 0x07;
  2721  00073E  0E07               	movlw	7
  2722  000740  6E96               	movwf	3990,c	;volatile
  2723                           
  2724                           ;pin_manager.c: 66: TRISA = 0xEB;
  2725  000742  0EEB               	movlw	235
  2726  000744  6E92               	movwf	3986,c	;volatile
  2727                           
  2728                           ;pin_manager.c: 67: TRISB = 0xBF;
  2729  000746  0EBF               	movlw	191
  2730  000748  6E93               	movwf	3987,c	;volatile
  2731                           
  2732                           ;pin_manager.c: 68: TRISC = 0xB8;
  2733  00074A  0EB8               	movlw	184
  2734  00074C  6E94               	movwf	3988,c	;volatile
  2735                           
  2736                           ;pin_manager.c: 69: TRISD = 0xDF;
  2737  00074E  0EDF               	movlw	223
  2738  000750  6E95               	movwf	3989,c	;volatile
  2739                           
  2740                           ;pin_manager.c: 74: ANSELC = 0x38;
  2741  000752  0E38               	movlw	56
  2742  000754  010F               	movlb	15	; () banked
  2743  000756  6F3A               	movwf	58,b	;volatile
  2744                           
  2745                           ;pin_manager.c: 75: ANSELB = 0x3E;
  2746  000758  0E3E               	movlw	62
  2747  00075A  010F               	movlb	15	; () banked
  2748  00075C  6F39               	movwf	57,b	;volatile
  2749                           
  2750                           ;pin_manager.c: 76: ANSELD = 0xDF;
  2751  00075E  0EDF               	movlw	223
  2752  000760  010F               	movlb	15	; () banked
  2753  000762  6F3B               	movwf	59,b	;volatile
  2754                           
  2755                           ;pin_manager.c: 77: ANSELE = 0x03;
  2756  000764  0E03               	movlw	3
  2757  000766  010F               	movlb	15	; () banked
  2758  000768  6F3C               	movwf	60,b	;volatile
  2759                           
  2760                           ;pin_manager.c: 78: ANSELA = 0x2B;
  2761  00076A  0E2B               	movlw	43
  2762  00076C  010F               	movlb	15	; () banked
  2763  00076E  6F38               	movwf	56,b	;volatile
  2764                           
  2765                           ; BSR set to: 15
  2766                           ;pin_manager.c: 83: WPUB = 0xFF;
  2767  000770  6861               	setf	3937,c	;volatile
  2768                           
  2769                           ; BSR set to: 15
  2770                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  2771  000772  9EF1               	bcf	intcon2,7,c	;volatile
  2772                           
  2773                           ; BSR set to: 15
  2774  000774  0012               	return		;funcret
  2775  000776                     __end_of_PIN_MANAGER_Initialize:
  2776                           	opt stack 0
  2777                           tblptru	equ	0xFF8
  2778                           tblptrh	equ	0xFF7
  2779                           tblptrl	equ	0xFF6
  2780                           tablat	equ	0xFF5
  2781                           intcon	equ	0xFF2
  2782                           intcon2	equ	0xFF1
  2783                           postinc0	equ	0xFEE
  2784                           wreg	equ	0xFE8
  2785                           postdec1	equ	0xFE5
  2786                           fsr1l	equ	0xFE1
  2787                           indf2	equ	0xFDF
  2788                           fsr2h	equ	0xFDA
  2789                           fsr2l	equ	0xFD9
  2790                           status	equ	0xFD8
  2791                           
  2792 ;; *************** function _OSCILLATOR_Initialize *****************
  2793 ;; Defined at:
  2794 ;;		line 126 in file "mcc_generated_files/mcc.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;Total ram usage:        0 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    4
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_SYSTEM_Initialize
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text15
  2823  00095E                     __ptext15:
  2824                           	opt stack 0
  2825  00095E                     _OSCILLATOR_Initialize:
  2826                           	opt stack 25
  2827                           
  2828                           ;mcc.c: 129: OSCCON = 0x70;
  2829                           
  2830                           ; BSR set to: 15
  2831                           ;incstack = 0
  2832  00095E  0E70               	movlw	112
  2833  000960  6ED3               	movwf	4051,c	;volatile
  2834                           
  2835                           ;mcc.c: 131: OSCCON2 = 0x04;
  2836  000962  0E04               	movlw	4
  2837  000964  6ED2               	movwf	4050,c	;volatile
  2838                           
  2839                           ;mcc.c: 133: OSCTUNE = 0x00;
  2840  000966  0E00               	movlw	0
  2841  000968  6E9B               	movwf	3995,c	;volatile
  2842  00096A  0012               	return		;funcret
  2843  00096C                     __end_of_OSCILLATOR_Initialize:
  2844                           	opt stack 0
  2845                           tblptru	equ	0xFF8
  2846                           tblptrh	equ	0xFF7
  2847                           tblptrl	equ	0xFF6
  2848                           tablat	equ	0xFF5
  2849                           intcon	equ	0xFF2
  2850                           intcon2	equ	0xFF1
  2851                           postinc0	equ	0xFEE
  2852                           wreg	equ	0xFE8
  2853                           postdec1	equ	0xFE5
  2854                           fsr1l	equ	0xFE1
  2855                           indf2	equ	0xFDF
  2856                           fsr2h	equ	0xFDA
  2857                           fsr2l	equ	0xFD9
  2858                           status	equ	0xFD8
  2859                           
  2860 ;; *************** function _INTERRUPT_Initialize *****************
  2861 ;; Defined at:
  2862 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		None
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    4
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_SYSTEM_Initialize
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text16
  2891  000992                     __ptext16:
  2892                           	opt stack 0
  2893  000992                     _INTERRUPT_Initialize:
  2894                           	opt stack 25
  2895                           
  2896                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2897                           
  2898                           ;incstack = 0
  2899  000992  9ED0               	bcf	4048,7,c	;volatile
  2900  000994  0012               	return		;funcret
  2901  000996                     __end_of_INTERRUPT_Initialize:
  2902                           	opt stack 0
  2903                           tblptru	equ	0xFF8
  2904                           tblptrh	equ	0xFF7
  2905                           tblptrl	equ	0xFF6
  2906                           tablat	equ	0xFF5
  2907                           intcon	equ	0xFF2
  2908                           intcon2	equ	0xFF1
  2909                           postinc0	equ	0xFEE
  2910                           wreg	equ	0xFE8
  2911                           postdec1	equ	0xFE5
  2912                           fsr1l	equ	0xFE1
  2913                           indf2	equ	0xFDF
  2914                           fsr2h	equ	0xFDA
  2915                           fsr2l	equ	0xFD9
  2916                           status	equ	0xFD8
  2917                           
  2918 ;; *************** function _EUSART1_Initialize *****************
  2919 ;; Defined at:
  2920 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    4
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_SYSTEM_Initialize
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text17
  2949  000914                     __ptext17:
  2950                           	opt stack 0
  2951  000914                     _EUSART1_Initialize:
  2952                           	opt stack 25
  2953                           
  2954                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  2955                           
  2956                           ;incstack = 0
  2957  000914  0E08               	movlw	8
  2958  000916  6EB8               	movwf	4024,c	;volatile
  2959                           
  2960                           ;eusart1.c: 63: RCSTA1 = 0x90;
  2961  000918  0E90               	movlw	144
  2962  00091A  6EAB               	movwf	4011,c	;volatile
  2963                           
  2964                           ;eusart1.c: 66: TXSTA1 = 0x24;
  2965  00091C  0E24               	movlw	36
  2966  00091E  6EAC               	movwf	4012,c	;volatile
  2967                           
  2968                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  2969  000920  0EA0               	movlw	160
  2970  000922  6EAF               	movwf	4015,c	;volatile
  2971                           
  2972                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  2973  000924  0E01               	movlw	1
  2974  000926  6EB0               	movwf	4016,c	;volatile
  2975  000928  0012               	return		;funcret
  2976  00092A                     __end_of_EUSART1_Initialize:
  2977                           	opt stack 0
  2978                           tblptru	equ	0xFF8
  2979                           tblptrh	equ	0xFF7
  2980                           tblptrl	equ	0xFF6
  2981                           tablat	equ	0xFF5
  2982                           intcon	equ	0xFF2
  2983                           intcon2	equ	0xFF1
  2984                           postinc0	equ	0xFEE
  2985                           wreg	equ	0xFE8
  2986                           postdec1	equ	0xFE5
  2987                           fsr1l	equ	0xFE1
  2988                           indf2	equ	0xFDF
  2989                           fsr2h	equ	0xFDA
  2990                           fsr2l	equ	0xFD9
  2991                           status	equ	0xFD8
  2992                           
  2993 ;; *************** function _EPWM2_Initialize *****************
  2994 ;; Defined at:
  2995 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;		None
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      void 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;Total ram usage:        0 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    4
  3016 ;; This function calls:
  3017 ;;		Nothing
  3018 ;; This function is called by:
  3019 ;;		_SYSTEM_Initialize
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text18
  3024  000850                     __ptext18:
  3025                           	opt stack 0
  3026  000850                     _EPWM2_Initialize:
  3027                           	opt stack 25
  3028                           
  3029                           ;epwm2.c: 68: CCP2CON = 0x3C;
  3030                           
  3031                           ;incstack = 0
  3032  000850  0E3C               	movlw	60
  3033  000852  6E66               	movwf	3942,c	;volatile
  3034                           
  3035                           ;epwm2.c: 71: ECCP2AS = 0x00;
  3036  000854  0E00               	movlw	0
  3037  000856  6E64               	movwf	3940,c	;volatile
  3038                           
  3039                           ;epwm2.c: 74: PWM2CON = 0x80;
  3040  000858  0E80               	movlw	128
  3041  00085A  6E65               	movwf	3941,c	;volatile
  3042                           
  3043                           ;epwm2.c: 77: PSTR2CON = 0x03;
  3044  00085C  0E03               	movlw	3
  3045  00085E  6E63               	movwf	3939,c	;volatile
  3046                           
  3047                           ;epwm2.c: 80: CCPR2L = 0x14;
  3048  000860  0E14               	movlw	20
  3049  000862  6E67               	movwf	3943,c	;volatile
  3050                           
  3051                           ;epwm2.c: 83: CCPR2H = 0x00;
  3052  000864  0E00               	movlw	0
  3053  000866  6E68               	movwf	3944,c	;volatile
  3054                           
  3055                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  3056  000868  010F               	movlb	15	; () banked
  3057  00086A  5149               	movf	73,w,b	;volatile
  3058  00086C  0BE7               	andlw	-25
  3059  00086E  0910               	iorlw	16
  3060  000870  6F49               	movwf	73,b	;volatile
  3061                           
  3062                           ; BSR set to: 15
  3063  000872  0012               	return		;funcret
  3064  000874                     __end_of_EPWM2_Initialize:
  3065                           	opt stack 0
  3066                           tblptru	equ	0xFF8
  3067                           tblptrh	equ	0xFF7
  3068                           tblptrl	equ	0xFF6
  3069                           tablat	equ	0xFF5
  3070                           intcon	equ	0xFF2
  3071                           intcon2	equ	0xFF1
  3072                           postinc0	equ	0xFEE
  3073                           wreg	equ	0xFE8
  3074                           postdec1	equ	0xFE5
  3075                           fsr1l	equ	0xFE1
  3076                           indf2	equ	0xFDF
  3077                           fsr2h	equ	0xFDA
  3078                           fsr2l	equ	0xFD9
  3079                           status	equ	0xFD8
  3080                           
  3081 ;; *************** function _EPWM1_Initialize *****************
  3082 ;; Defined at:
  3083 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		wreg, status,2
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;Total ram usage:        0 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:    4
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_SYSTEM_Initialize
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text19
  3112  000874                     __ptext19:
  3113                           	opt stack 0
  3114  000874                     _EPWM1_Initialize:
  3115                           	opt stack 25
  3116                           
  3117                           ;epwm1.c: 68: CCP1CON = 0x3C;
  3118                           
  3119                           ; BSR set to: 15
  3120                           ;incstack = 0
  3121  000874  0E3C               	movlw	60
  3122  000876  6EBD               	movwf	4029,c	;volatile
  3123                           
  3124                           ;epwm1.c: 71: ECCP1AS = 0x00;
  3125  000878  0E00               	movlw	0
  3126  00087A  6EB6               	movwf	4022,c	;volatile
  3127                           
  3128                           ;epwm1.c: 74: PWM1CON = 0x80;
  3129  00087C  0E80               	movlw	128
  3130  00087E  6EB7               	movwf	4023,c	;volatile
  3131                           
  3132                           ;epwm1.c: 77: PSTR1CON = 0x03;
  3133  000880  0E03               	movlw	3
  3134  000882  6EB9               	movwf	4025,c	;volatile
  3135                           
  3136                           ;epwm1.c: 80: CCPR1L = 0x14;
  3137  000884  0E14               	movlw	20
  3138  000886  6EBE               	movwf	4030,c	;volatile
  3139                           
  3140                           ;epwm1.c: 83: CCPR1H = 0x00;
  3141  000888  0E00               	movlw	0
  3142  00088A  6EBF               	movwf	4031,c	;volatile
  3143                           
  3144                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  3145  00088C  010F               	movlb	15	; () banked
  3146  00088E  5149               	movf	73,w,b	;volatile
  3147  000890  0BFC               	andlw	-4
  3148  000892  0902               	iorlw	2
  3149  000894  6F49               	movwf	73,b	;volatile
  3150                           
  3151                           ; BSR set to: 15
  3152  000896  0012               	return		;funcret
  3153  000898                     __end_of_EPWM1_Initialize:
  3154                           	opt stack 0
  3155                           tblptru	equ	0xFF8
  3156                           tblptrh	equ	0xFF7
  3157                           tblptrl	equ	0xFF6
  3158                           tablat	equ	0xFF5
  3159                           intcon	equ	0xFF2
  3160                           intcon2	equ	0xFF1
  3161                           postinc0	equ	0xFEE
  3162                           wreg	equ	0xFE8
  3163                           postdec1	equ	0xFE5
  3164                           fsr1l	equ	0xFE1
  3165                           indf2	equ	0xFDF
  3166                           fsr2h	equ	0xFDA
  3167                           fsr2l	equ	0xFD9
  3168                           status	equ	0xFD8
  3169                           
  3170 ;; *************** function _CCP5_Initialize *****************
  3171 ;; Defined at:
  3172 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    4
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_SYSTEM_Initialize
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text20
  3201  00092A                     __ptext20:
  3202                           	opt stack 0
  3203  00092A                     _CCP5_Initialize:
  3204                           	opt stack 25
  3205                           
  3206                           ;ccp5.c: 60: CCP5CON = 0x00;
  3207                           
  3208                           ; BSR set to: 15
  3209                           ;incstack = 0
  3210  00092A  0E00               	movlw	0
  3211  00092C  010F               	movlb	15	; () banked
  3212  00092E  6F54               	movwf	84,b	;volatile
  3213                           
  3214                           ;ccp5.c: 62: CCPR5L = 0x00;
  3215  000930  0E00               	movlw	0
  3216  000932  010F               	movlb	15	; () banked
  3217  000934  6F55               	movwf	85,b	;volatile
  3218                           
  3219                           ;ccp5.c: 64: CCPR5H = 0x00;
  3220  000936  0E00               	movlw	0
  3221  000938  010F               	movlb	15	; () banked
  3222  00093A  6F56               	movwf	86,b	;volatile
  3223                           
  3224                           ; BSR set to: 15
  3225  00093C  0012               	return		;funcret
  3226  00093E                     __end_of_CCP5_Initialize:
  3227                           	opt stack 0
  3228                           tblptru	equ	0xFF8
  3229                           tblptrh	equ	0xFF7
  3230                           tblptrl	equ	0xFF6
  3231                           tablat	equ	0xFF5
  3232                           intcon	equ	0xFF2
  3233                           intcon2	equ	0xFF1
  3234                           postinc0	equ	0xFEE
  3235                           wreg	equ	0xFE8
  3236                           postdec1	equ	0xFE5
  3237                           fsr1l	equ	0xFE1
  3238                           indf2	equ	0xFDF
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           status	equ	0xFD8
  3242                           
  3243 ;; *************** function _ADC_Initialize *****************
  3244 ;; Defined at:
  3245 ;;		line 61 in file "mcc_generated_files/adc.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;		None
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;Total ram usage:        0 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    4
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_SYSTEM_Initialize
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text21
  3274  0008FC                     __ptext21:
  3275                           	opt stack 0
  3276  0008FC                     _ADC_Initialize:
  3277                           	opt stack 25
  3278                           
  3279                           ;adc.c: 66: ADCON0 = 0x01;
  3280                           
  3281                           ; BSR set to: 15
  3282                           ;incstack = 0
  3283  0008FC  0E01               	movlw	1
  3284  0008FE  6EC2               	movwf	4034,c	;volatile
  3285                           
  3286                           ;adc.c: 69: ADCON1 = 0x00;
  3287  000900  0E00               	movlw	0
  3288  000902  6EC1               	movwf	4033,c	;volatile
  3289                           
  3290                           ;adc.c: 72: ADCON2 = 0x05;
  3291  000904  0E05               	movlw	5
  3292  000906  6EC0               	movwf	4032,c	;volatile
  3293                           
  3294                           ;adc.c: 75: ADRESL = 0x00;
  3295  000908  0E00               	movlw	0
  3296  00090A  6EC3               	movwf	4035,c	;volatile
  3297                           
  3298                           ;adc.c: 78: ADRESH = 0x00;
  3299  00090C  0E00               	movlw	0
  3300  00090E  6EC4               	movwf	4036,c	;volatile
  3301                           
  3302                           ;adc.c: 81: PIE1bits.ADIE = 1;
  3303  000910  8C9D               	bsf	3997,6,c	;volatile
  3304  000912  0012               	return		;funcret
  3305  000914                     __end_of_ADC_Initialize:
  3306                           	opt stack 0
  3307                           tblptru	equ	0xFF8
  3308                           tblptrh	equ	0xFF7
  3309                           tblptrl	equ	0xFF6
  3310                           tablat	equ	0xFF5
  3311                           intcon	equ	0xFF2
  3312                           intcon2	equ	0xFF1
  3313                           postinc0	equ	0xFEE
  3314                           wreg	equ	0xFE8
  3315                           postdec1	equ	0xFE5
  3316                           fsr1l	equ	0xFE1
  3317                           indf2	equ	0xFDF
  3318                           fsr2h	equ	0xFDA
  3319                           fsr2l	equ	0xFD9
  3320                           status	equ	0xFD8
  3321                           
  3322 ;; *************** function _Motor_Stop *****************
  3323 ;; Defined at:
  3324 ;;		line 299 in file "MotorDriver.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;Total ram usage:        0 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    4
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text22
  3353  00093E                     __ptext22:
  3354                           	opt stack 0
  3355  00093E                     _Motor_Stop:
  3356                           	opt stack 26
  3357                           
  3358                           ;MotorDriver.c: 300: PSTR1CON = 0x00; PSTR2CON = 0x00;
  3359                           
  3360                           ;incstack = 0
  3361  00093E  0E00               	movlw	0
  3362  000940  6EB9               	movwf	4025,c	;volatile
  3363  000942  0E00               	movlw	0
  3364  000944  6E63               	movwf	3939,c	;volatile
  3365                           
  3366                           ;MotorDriver.c: 301: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  3367  000946  948B               	bcf	3979,2,c	;volatile
  3368  000948  9A8C               	bcf	3980,5,c	;volatile
  3369  00094A  928B               	bcf	3979,1,c	;volatile
  3370  00094C  908B               	bcf	3979,0,c	;volatile
  3371  00094E  0012               	return	
  3372  000950                     __end_of_Motor_Stop:
  3373                           	opt stack 0
  3374                           tblptru	equ	0xFF8
  3375                           tblptrh	equ	0xFF7
  3376                           tblptrl	equ	0xFF6
  3377                           tablat	equ	0xFF5
  3378                           intcon	equ	0xFF2
  3379                           intcon2	equ	0xFF1
  3380                           postinc0	equ	0xFEE
  3381                           wreg	equ	0xFE8
  3382                           postdec1	equ	0xFE5
  3383                           fsr1l	equ	0xFE1
  3384                           indf2	equ	0xFDF
  3385                           fsr2h	equ	0xFDA
  3386                           fsr2l	equ	0xFD9
  3387                           status	equ	0xFD8
  3388                           
  3389 ;; *************** function _INTERRUPT_InterruptManager *****************
  3390 ;; Defined at:
  3391 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;		None
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;		None
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;Total ram usage:       14 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; Hardware stack levels required when called:    3
  3412 ;; This function calls:
  3413 ;;		_ADC_ISR
  3414 ;;		_TMR2_ISR
  3415 ;;		_TMR6_ISR
  3416 ;; This function is called by:
  3417 ;;		Interrupt level 2
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           	psect	intcode
  3422  000008                     __pintcode:
  3423                           	opt stack 0
  3424  000008                     _INTERRUPT_InterruptManager:
  3425                           	opt stack 24
  3426                           
  3427                           ;incstack = 0
  3428  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3429  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  3430  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3431  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3432  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3433  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3434  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3435  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3436  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3437  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3438  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3439  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3440  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3441  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3442  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3443                           
  3444                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  3445  000042  BCF2               	btfsc	intcon,6,c	;volatile
  3446  000044  AC9D               	btfss	3997,6,c	;volatile
  3447  000046  D005               	goto	i2l270
  3448  000048  AC9E               	btfss	3998,6,c	;volatile
  3449  00004A  D003               	goto	i2l270
  3450                           
  3451                           ;interrupt_manager.c: 61: {
  3452                           ;interrupt_manager.c: 62: ADC_ISR();
  3453  00004C  ECCB  F004         	call	_ADC_ISR	;wreg free
  3454                           
  3455                           ;interrupt_manager.c: 63: }
  3456  000050  D00E               	goto	i2l276
  3457  000052                     i2l270:
  3458                           
  3459                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  3460  000052  BCF2               	btfsc	intcon,6,c	;volatile
  3461  000054  A47D               	btfss	3965,2,c	;volatile
  3462  000056  D005               	goto	i2l272
  3463  000058  A47E               	btfss	3966,2,c	;volatile
  3464  00005A  D003               	goto	i2l272
  3465                           
  3466                           ;interrupt_manager.c: 65: {
  3467                           ;interrupt_manager.c: 66: TMR6_ISR();
  3468  00005C  EC5D  F004         	call	_TMR6_ISR	;wreg free
  3469                           
  3470                           ;interrupt_manager.c: 67: }
  3471  000060  D006               	goto	i2l276
  3472  000062                     i2l272:
  3473                           
  3474                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  3475  000062  BCF2               	btfsc	intcon,6,c	;volatile
  3476  000064  A29D               	btfss	3997,1,c	;volatile
  3477  000066  D003               	goto	i2l276
  3478  000068  B29E               	btfsc	3998,1,c	;volatile
  3479                           
  3480                           ;interrupt_manager.c: 69: {
  3481                           ;interrupt_manager.c: 70: TMR2_ISR();
  3482  00006A  ECC0  F004         	call	_TMR2_ISR	;wreg free
  3483  00006E                     i2l276:
  3484  00006E  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3485  000072  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3486  000076  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3487  00007A  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3488  00007E  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3489  000082  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3490  000086  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3491  00008A  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3492  00008E  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3493  000092  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3494  000096  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3495  00009A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3496  00009E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3497  0000A2  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3498  0000A6  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3499  0000A8  0011               	retfie		f
  3500  0000AA                     __end_of_INTERRUPT_InterruptManager:
  3501                           	opt stack 0
  3502                           pclatu	equ	0xFFB
  3503                           pclath	equ	0xFFA
  3504                           tblptru	equ	0xFF8
  3505                           tblptrh	equ	0xFF7
  3506                           tblptrl	equ	0xFF6
  3507                           tablat	equ	0xFF5
  3508                           prodh	equ	0xFF4
  3509                           prodl	equ	0xFF3
  3510                           intcon	equ	0xFF2
  3511                           intcon2	equ	0xFF1
  3512                           postinc0	equ	0xFEE
  3513                           fsr0h	equ	0xFEA
  3514                           fsr0l	equ	0xFE9
  3515                           wreg	equ	0xFE8
  3516                           postdec1	equ	0xFE5
  3517                           fsr1h	equ	0xFE2
  3518                           fsr1l	equ	0xFE1
  3519                           indf2	equ	0xFDF
  3520                           fsr2h	equ	0xFDA
  3521                           fsr2l	equ	0xFD9
  3522                           status	equ	0xFD8
  3523                           
  3524 ;; *************** function _TMR6_ISR *****************
  3525 ;; Defined at:
  3526 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;		None
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;		None
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;Total ram usage:        0 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    1
  3547 ;; This function calls:
  3548 ;;		Absolute function
  3549 ;;		_TMR6_DefaultInterruptHandler
  3550 ;; This function is called by:
  3551 ;;		_INTERRUPT_InterruptManager
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text24
  3556  0008BA                     __ptext24:
  3557                           	opt stack 0
  3558  0008BA                     _TMR6_ISR:
  3559                           	opt stack 25
  3560                           
  3561                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  3562                           
  3563                           ;incstack = 0
  3564  0008BA  947E               	bcf	3966,2,c	;volatile
  3565                           
  3566                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  3567  0008BC  504D               	movf	_TMR6_InterruptHandler,w,c
  3568  0008BE  104E               	iorwf	_TMR6_InterruptHandler+1,w,c
  3569  0008C0  B4D8               	btfsc	status,2,c
  3570  0008C2  0012               	return	
  3571                           
  3572                           ;tmr6.c: 128: {
  3573                           ;tmr6.c: 129: TMR6_InterruptHandler();
  3574  0008C4  D801               	call	i2u42_48
  3575  0008C6  0012               	return	
  3576  0008C8                     i2u42_48:
  3577  0008C8  0005               	push	
  3578  0008CA  6EFA               	movwf	pclath,c
  3579  0008CC  504D               	movf	_TMR6_InterruptHandler,w,c
  3580  0008CE  6EFD               	movwf	tosl,c
  3581  0008D0  504E               	movf	_TMR6_InterruptHandler+1,w,c
  3582  0008D2  6EFE               	movwf	tosh,c
  3583  0008D4  50F8               	movf	tblptru,w,c
  3584  0008D6  6EFF               	movwf	tosu,c
  3585  0008D8  50FA               	movf	pclath,w,c
  3586  0008DA  0012               	return		;indir
  3587  0008DC                     __end_of_TMR6_ISR:
  3588                           	opt stack 0
  3589                           tosu	equ	0xFFF
  3590                           tosh	equ	0xFFE
  3591                           tosl	equ	0xFFD
  3592                           pclatu	equ	0xFFB
  3593                           pclath	equ	0xFFA
  3594                           tblptru	equ	0xFF8
  3595                           tblptrh	equ	0xFF7
  3596                           tblptrl	equ	0xFF6
  3597                           tablat	equ	0xFF5
  3598                           prodh	equ	0xFF4
  3599                           prodl	equ	0xFF3
  3600                           intcon	equ	0xFF2
  3601                           intcon2	equ	0xFF1
  3602                           postinc0	equ	0xFEE
  3603                           fsr0h	equ	0xFEA
  3604                           fsr0l	equ	0xFE9
  3605                           wreg	equ	0xFE8
  3606                           postdec1	equ	0xFE5
  3607                           fsr1h	equ	0xFE2
  3608                           fsr1l	equ	0xFE1
  3609                           indf2	equ	0xFDF
  3610                           fsr2h	equ	0xFDA
  3611                           fsr2l	equ	0xFD9
  3612                           status	equ	0xFD8
  3613                           
  3614 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  3615 ;; Defined at:
  3616 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      void 
  3623 ;; Registers used:
  3624 ;;		None
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;Total ram usage:        0 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_TMR6_Initialize
  3640 ;;		_TMR6_ISR
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text25
  3645  00099A                     __ptext25:
  3646                           	opt stack 0
  3647  00099A                     _TMR6_DefaultInterruptHandler:
  3648                           	opt stack 25
  3649                           
  3650                           ;incstack = 0
  3651  00099A  0012               	return		;funcret
  3652  00099C                     __end_of_TMR6_DefaultInterruptHandler:
  3653                           	opt stack 0
  3654                           tosu	equ	0xFFF
  3655                           tosh	equ	0xFFE
  3656                           tosl	equ	0xFFD
  3657                           pclatu	equ	0xFFB
  3658                           pclath	equ	0xFFA
  3659                           tblptru	equ	0xFF8
  3660                           tblptrh	equ	0xFF7
  3661                           tblptrl	equ	0xFF6
  3662                           tablat	equ	0xFF5
  3663                           prodh	equ	0xFF4
  3664                           prodl	equ	0xFF3
  3665                           intcon	equ	0xFF2
  3666                           intcon2	equ	0xFF1
  3667                           postinc0	equ	0xFEE
  3668                           fsr0h	equ	0xFEA
  3669                           fsr0l	equ	0xFE9
  3670                           wreg	equ	0xFE8
  3671                           postdec1	equ	0xFE5
  3672                           fsr1h	equ	0xFE2
  3673                           fsr1l	equ	0xFE1
  3674                           indf2	equ	0xFDF
  3675                           fsr2h	equ	0xFDA
  3676                           fsr2l	equ	0xFD9
  3677                           status	equ	0xFD8
  3678                           
  3679 ;; *************** function _TMR2_ISR *****************
  3680 ;; Defined at:
  3681 ;;		line 126 in file "mcc_generated_files/tmr2.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3699 ;;Total ram usage:        0 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; Hardware stack levels required when called:    2
  3702 ;; This function calls:
  3703 ;;		_TMR2_CallBack
  3704 ;; This function is called by:
  3705 ;;		_INTERRUPT_InterruptManager
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text26
  3710  000980                     __ptext26:
  3711                           	opt stack 0
  3712  000980                     _TMR2_ISR:
  3713                           	opt stack 24
  3714                           
  3715                           ;tmr2.c: 130: PIR1bits.TMR2IF = 0;
  3716                           
  3717                           ;incstack = 0
  3718  000980  929E               	bcf	3998,1,c	;volatile
  3719                           
  3720                           ;tmr2.c: 134: TMR2_CallBack();
  3721  000982  EC14  F004         	call	_TMR2_CallBack	;wreg free
  3722  000986  0012               	return		;funcret
  3723  000988                     __end_of_TMR2_ISR:
  3724                           	opt stack 0
  3725                           tosu	equ	0xFFF
  3726                           tosh	equ	0xFFE
  3727                           tosl	equ	0xFFD
  3728                           pclatu	equ	0xFFB
  3729                           pclath	equ	0xFFA
  3730                           tblptru	equ	0xFF8
  3731                           tblptrh	equ	0xFF7
  3732                           tblptrl	equ	0xFF6
  3733                           tablat	equ	0xFF5
  3734                           prodh	equ	0xFF4
  3735                           prodl	equ	0xFF3
  3736                           intcon	equ	0xFF2
  3737                           intcon2	equ	0xFF1
  3738                           postinc0	equ	0xFEE
  3739                           fsr0h	equ	0xFEA
  3740                           fsr0l	equ	0xFE9
  3741                           wreg	equ	0xFE8
  3742                           postdec1	equ	0xFE5
  3743                           fsr1h	equ	0xFE2
  3744                           fsr1l	equ	0xFE1
  3745                           indf2	equ	0xFDF
  3746                           fsr2h	equ	0xFDA
  3747                           fsr2l	equ	0xFD9
  3748                           status	equ	0xFD8
  3749                           
  3750 ;; *************** function _TMR2_CallBack *****************
  3751 ;; Defined at:
  3752 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;		None
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;		None
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;Total ram usage:        0 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; Hardware stack levels required when called:    1
  3773 ;; This function calls:
  3774 ;;		Absolute function
  3775 ;;		_TMR2_DefaultInterruptHandler
  3776 ;; This function is called by:
  3777 ;;		_TMR2_ISR
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text27
  3782  000828                     __ptext27:
  3783                           	opt stack 0
  3784  000828                     _TMR2_CallBack:
  3785                           	opt stack 24
  3786                           
  3787                           ;tmr2.c: 140: Timer2Ticked = 1;
  3788                           
  3789                           ;incstack = 0
  3790  000828  0E01               	movlw	1
  3791  00082A  6E4A               	movwf	_Timer2Ticked,c	;volatile
  3792                           
  3793                           ;tmr2.c: 141: DelayTimerTicked = 1;
  3794  00082C  0E01               	movlw	1
  3795  00082E  6E49               	movwf	_DelayTimerTicked,c	;volatile
  3796                           
  3797                           ;tmr2.c: 144: if(TMR2_InterruptHandler)
  3798  000830  504B               	movf	_TMR2_InterruptHandler,w,c
  3799  000832  104C               	iorwf	_TMR2_InterruptHandler+1,w,c
  3800  000834  B4D8               	btfsc	status,2,c
  3801  000836  0012               	return	
  3802                           
  3803                           ;tmr2.c: 145: {
  3804                           ;tmr2.c: 146: TMR2_InterruptHandler();
  3805  000838  D801               	call	i2u2_48
  3806  00083A  0012               	return	
  3807  00083C                     i2u2_48:
  3808  00083C  0005               	push	
  3809  00083E  6EFA               	movwf	pclath,c
  3810  000840  504B               	movf	_TMR2_InterruptHandler,w,c
  3811  000842  6EFD               	movwf	tosl,c
  3812  000844  504C               	movf	_TMR2_InterruptHandler+1,w,c
  3813  000846  6EFE               	movwf	tosh,c
  3814  000848  50F8               	movf	tblptru,w,c
  3815  00084A  6EFF               	movwf	tosu,c
  3816  00084C  50FA               	movf	pclath,w,c
  3817  00084E  0012               	return		;indir
  3818  000850                     __end_of_TMR2_CallBack:
  3819                           	opt stack 0
  3820                           tosu	equ	0xFFF
  3821                           tosh	equ	0xFFE
  3822                           tosl	equ	0xFFD
  3823                           pclatu	equ	0xFFB
  3824                           pclath	equ	0xFFA
  3825                           tblptru	equ	0xFF8
  3826                           tblptrh	equ	0xFF7
  3827                           tblptrl	equ	0xFF6
  3828                           tablat	equ	0xFF5
  3829                           prodh	equ	0xFF4
  3830                           prodl	equ	0xFF3
  3831                           intcon	equ	0xFF2
  3832                           intcon2	equ	0xFF1
  3833                           postinc0	equ	0xFEE
  3834                           fsr0h	equ	0xFEA
  3835                           fsr0l	equ	0xFE9
  3836                           wreg	equ	0xFE8
  3837                           postdec1	equ	0xFE5
  3838                           fsr1h	equ	0xFE2
  3839                           fsr1l	equ	0xFE1
  3840                           indf2	equ	0xFDF
  3841                           fsr2h	equ	0xFDA
  3842                           fsr2l	equ	0xFD9
  3843                           status	equ	0xFD8
  3844                           
  3845 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3846 ;; Defined at:
  3847 ;;		line 154 in file "mcc_generated_files/tmr2.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;		None
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		None
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;Total ram usage:        0 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; This function calls:
  3868 ;;		Nothing
  3869 ;; This function is called by:
  3870 ;;		_TMR2_Initialize
  3871 ;;		_TMR2_CallBack
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text28
  3876  00099C                     __ptext28:
  3877                           	opt stack 0
  3878  00099C                     _TMR2_DefaultInterruptHandler:
  3879                           	opt stack 24
  3880                           
  3881                           ;incstack = 0
  3882  00099C  0012               	return		;funcret
  3883  00099E                     __end_of_TMR2_DefaultInterruptHandler:
  3884                           	opt stack 0
  3885                           tosu	equ	0xFFF
  3886                           tosh	equ	0xFFE
  3887                           tosl	equ	0xFFD
  3888                           pclatu	equ	0xFFB
  3889                           pclath	equ	0xFFA
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           prodh	equ	0xFF4
  3895                           prodl	equ	0xFF3
  3896                           intcon	equ	0xFF2
  3897                           intcon2	equ	0xFF1
  3898                           postinc0	equ	0xFEE
  3899                           fsr0h	equ	0xFEA
  3900                           fsr0l	equ	0xFE9
  3901                           wreg	equ	0xFE8
  3902                           postdec1	equ	0xFE5
  3903                           fsr1h	equ	0xFE2
  3904                           fsr1l	equ	0xFE1
  3905                           indf2	equ	0xFDF
  3906                           fsr2h	equ	0xFDA
  3907                           fsr2l	equ	0xFD9
  3908                           status	equ	0xFD8
  3909                           
  3910 ;; *************** function _ADC_ISR *****************
  3911 ;; Defined at:
  3912 ;;		line 144 in file "mcc_generated_files/adc.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;		None
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		None
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;Total ram usage:        0 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_INTERRUPT_InterruptManager
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text29
  3940  000996                     __ptext29:
  3941                           	opt stack 0
  3942  000996                     _ADC_ISR:
  3943                           	opt stack 26
  3944                           
  3945                           ;adc.c: 149: PIR1bits.ADIF = 0;
  3946                           
  3947                           ;incstack = 0
  3948  000996  9C9E               	bcf	3998,6,c	;volatile
  3949  000998  0012               	return		;funcret
  3950  00099A                     __end_of_ADC_ISR:
  3951                           	opt stack 0
  3952  0000                     tosu	equ	0xFFF
  3953                           tosh	equ	0xFFE
  3954                           tosl	equ	0xFFD
  3955                           pclatu	equ	0xFFB
  3956                           pclath	equ	0xFFA
  3957                           tblptru	equ	0xFF8
  3958                           tblptrh	equ	0xFF7
  3959                           tblptrl	equ	0xFF6
  3960                           tablat	equ	0xFF5
  3961                           prodh	equ	0xFF4
  3962                           prodl	equ	0xFF3
  3963                           intcon	equ	0xFF2
  3964                           intcon2	equ	0xFF1
  3965                           postinc0	equ	0xFEE
  3966                           fsr0h	equ	0xFEA
  3967                           fsr0l	equ	0xFE9
  3968                           wreg	equ	0xFE8
  3969                           postdec1	equ	0xFE5
  3970                           fsr1h	equ	0xFE2
  3971                           fsr1l	equ	0xFE1
  3972                           indf2	equ	0xFDF
  3973                           fsr2h	equ	0xFDA
  3974                           fsr2l	equ	0xFD9
  3975                           status	equ	0xFD8
  3976                           tosu	equ	0xFFF
  3977                           tosh	equ	0xFFE
  3978                           tosl	equ	0xFFD
  3979                           pclatu	equ	0xFFB
  3980                           pclath	equ	0xFFA
  3981                           tblptru	equ	0xFF8
  3982                           tblptrh	equ	0xFF7
  3983                           tblptrl	equ	0xFF6
  3984                           tablat	equ	0xFF5
  3985                           prodh	equ	0xFF4
  3986                           prodl	equ	0xFF3
  3987                           intcon	equ	0xFF2
  3988                           intcon2	equ	0xFF1
  3989                           postinc0	equ	0xFEE
  3990                           fsr0h	equ	0xFEA
  3991                           fsr0l	equ	0xFE9
  3992                           wreg	equ	0xFE8
  3993                           postdec1	equ	0xFE5
  3994                           fsr1h	equ	0xFE2
  3995                           fsr1l	equ	0xFE1
  3996                           indf2	equ	0xFDF
  3997                           fsr2h	equ	0xFDA
  3998                           fsr2l	equ	0xFD9
  3999                           status	equ	0xFD8
  4000                           
  4001                           	psect	text30
  4002  000000                     __ptext30:
  4003                           	opt stack 0
  4004                           tosu	equ	0xFFF
  4005                           tosh	equ	0xFFE
  4006                           tosl	equ	0xFFD
  4007                           pclatu	equ	0xFFB
  4008                           pclath	equ	0xFFA
  4009                           tblptru	equ	0xFF8
  4010                           tblptrh	equ	0xFF7
  4011                           tblptrl	equ	0xFF6
  4012                           tablat	equ	0xFF5
  4013                           prodh	equ	0xFF4
  4014                           prodl	equ	0xFF3
  4015                           intcon	equ	0xFF2
  4016                           intcon2	equ	0xFF1
  4017                           postinc0	equ	0xFEE
  4018                           fsr0h	equ	0xFEA
  4019                           fsr0l	equ	0xFE9
  4020                           wreg	equ	0xFE8
  4021                           postdec1	equ	0xFE5
  4022                           fsr1h	equ	0xFE2
  4023                           fsr1l	equ	0xFE1
  4024                           indf2	equ	0xFDF
  4025                           fsr2h	equ	0xFDA
  4026                           fsr2l	equ	0xFD9
  4027                           status	equ	0xFD8
  4028                           
  4029                           	psect	rparam
  4030  0000                     tosu	equ	0xFFF
  4031                           tosh	equ	0xFFE
  4032                           tosl	equ	0xFFD
  4033                           pclatu	equ	0xFFB
  4034                           pclath	equ	0xFFA
  4035                           tblptru	equ	0xFF8
  4036                           tblptrh	equ	0xFF7
  4037                           tblptrl	equ	0xFF6
  4038                           tablat	equ	0xFF5
  4039                           prodh	equ	0xFF4
  4040                           prodl	equ	0xFF3
  4041                           intcon	equ	0xFF2
  4042                           intcon2	equ	0xFF1
  4043                           postinc0	equ	0xFEE
  4044                           fsr0h	equ	0xFEA
  4045                           fsr0l	equ	0xFE9
  4046                           wreg	equ	0xFE8
  4047                           postdec1	equ	0xFE5
  4048                           fsr1h	equ	0xFE2
  4049                           fsr1l	equ	0xFE1
  4050                           indf2	equ	0xFDF
  4051                           fsr2h	equ	0xFDA
  4052                           fsr2l	equ	0xFD9
  4053                           status	equ	0xFD8
  4054                           
  4055                           	psect	temp
  4056  000050                     btemp:
  4057                           	opt stack 0
  4058  000050                     	ds	1
  4059  0000                     int$flags	set	btemp
  4060                           tosu	equ	0xFFF
  4061                           tosh	equ	0xFFE
  4062                           tosl	equ	0xFFD
  4063                           pclatu	equ	0xFFB
  4064                           pclath	equ	0xFFA
  4065                           tblptru	equ	0xFF8
  4066                           tblptrh	equ	0xFF7
  4067                           tblptrl	equ	0xFF6
  4068                           tablat	equ	0xFF5
  4069                           prodh	equ	0xFF4
  4070                           prodl	equ	0xFF3
  4071                           intcon	equ	0xFF2
  4072                           intcon2	equ	0xFF1
  4073                           postinc0	equ	0xFEE
  4074                           fsr0h	equ	0xFEA
  4075                           fsr0l	equ	0xFE9
  4076                           wreg	equ	0xFE8
  4077                           postdec1	equ	0xFE5
  4078                           fsr1h	equ	0xFE2
  4079                           fsr1l	equ	0xFE1
  4080                           indf2	equ	0xFDF
  4081                           fsr2h	equ	0xFDA
  4082                           fsr2l	equ	0xFD9
  4083                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        192
    BSS         20
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      79
    BANK0           160      0     160
    BANK1           256      5       5
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StepMove
    _StepMove->_State16MEF_act
    _StepMove->_State8MEF_act
    _State8MEF_act->_EPWM1_LoadDutyValue
    _State8MEF_act->_EPWM2_LoadDutyValue
    _State16MEF_act->_EPWM1_LoadDutyValue
    _State16MEF_act->_EPWM2_LoadDutyValue
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_StepMove

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4267
                         _Motor_Stop
                  _SYSTEM_Initialize
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StepMove                                             7     2      5    4095
                                             20 COMRAM     2     2      0
                                              0 BANK1      5     0      5
                     _State16MEF_act
                      _State8MEF_act
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act                                        2     2      0    1200
                                             18 COMRAM     2     2      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act                                       2     2      0    1200
                                             18 COMRAM     2     2      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2     556
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     556
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Motor_Stop
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_ini
   _StepMove
     _State16MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
     _State8MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      5       5       7        2.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      4F       1       84.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F4      12        0.0%
DATA                 0      0      F4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Jun 27 11:50:46 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 0980  
                       ??_TMR6_StartTimer 002F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l509 0564                                       l517 0674  
                                     l463 0308                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _PR6 000F4B                                       u831 00CC  
                                     u921 01E2                                       u930 01F4  
                                     u871 0152                                       u880 0164  
                                     u980 0284                           __end_of_ADC_ISR 099A  
                         _TMR2_Initialize 0898                                       tosl 000FFD  
                                     wreg 000FE8                  __end_of_EPWM2_Initialize 0874  
                         _CCP5_Initialize 092A                                      l2103 064A  
                                    l2111 0662                                      l2105 0652  
                                    l2113 0668                                      l2109 065E  
                                    l2141 0706                                      l2137 06F8  
                                    l1803 01E4                                      l1821 0258  
                                    l1813 023C                                      l1903 041C  
                                    l1815 0242                                      l1913 0440  
                                    l1905 0424                                      l1841 02D0  
                                    l1761 0116                                      l1753 00CE  
                                    l1745 00B2                                      l1931 04B4  
                                    l1923 0498                                      l1843 02D6  
                                    l1819 0250                                      l1763 011C  
                                    l1851 02EC                                      l1925 049E  
                                    l1829 0274                                      l1951 052C  
                                    l1871 0372                                      l1863 032A  
                                    l1855 030E                                      l1847 02E4  
                                    l1767 0130                                      l1953 0532  
                                    l1929 04AC                                      l1873 0378  
                                    l1961 0548                                      l1793 01C0  
                                    l1777 0154                                      l1769 0138  
                                    l1939 04D0                                      l1795 01C8  
                                    l1787 01AC                                      l1957 0540  
                                    l1877 038C                                      l1789 01B2  
                                    l1887 03B0                                      l1879 0394  
                                    l1897 0408                                      l1899 040E  
                                    u1021 0328                                      u1111 043E  
                                    u1120 0450                                      u1061 03AE  
                                    u1070 03C0                                      u1170 04E0  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _TMR2 000FBC  
                                    _TMR6 000F4C                                      _WPUB 000F61  
                                    _main 06D2                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0050                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00AA                             __CFG_IESO$OFF 000000  
                   ??_EPWM1_LoadDutyValue 0031                              ___param_bank 000000  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 096C  
                                   ?_main 0021                                     _T2CON 000FBA  
                                   _T6CON 000F4A                            __CFG_DEBUG$OFF 000000  
                                   i2l270 0052                                     i2l272 0062  
                                   i2l276 006E                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
       __size_of_TMR6_SetInterruptHandler 000A                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
               ?_TMR6_SetInterruptHandler 002F                          __end_of_TMR2_ISR 0988  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                          __end_of_TMR6_ISR 08DC  
                          __CFG_EBTRB$OFF 000000                                     _parar 0047  
                        _LookUP_TABLE_COS 0001                          _LookUP_TABLE_SEN 00E0  
                      __CFG_MCLRE$EXTMCLR 000000                        StepMove@StepNumber 0100  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 098E                            __CFG_PBADEN$ON 000000  
          ??_TMR6_DefaultInterruptHandler 0021                           __initialization 0678  
              __end_of_EUSART1_Initialize 092A                              __end_of_main 072A  
                 __end_of_TMR2_Initialize 08BA                                 ??_ADC_ISR 0021  
             ?_INTERRUPT_InterruptManager 0021                  _TMR2_SetInterruptHandler 0976  
                                  ??_main 0037                   __end_of_CCP5_Initialize 093E  
                           __activetblptr 000002                           _TMR6_Initialize 0800  
                        __end_of_StepMove 0678                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR1H 000FBF                                    _CCPR2H 000F68  
                                  _CCPR1L 000FBE                                    _CCPR2L 000F67  
                                  _CCPR5H 000F56                                    _CCPR5L 000F55  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  i2u2_48 083C                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                            __CFG_XINST$OFF 000000  
                            _CCPTMRS0bits 000F49                                _Motor_Stop 093E  
                          __CFG_STVREN$ON 000000                   __size_of_State16MEF_act 025C  
                                  clear_0 06BE                              __pdataCOMRAM 0001  
                StepMove@microstep_number 0103                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                     _EPWM2_LoadDutyValue 0776                   __end_of_TMR2_StartTimer 0992  
TMR2_SetInterruptHandler@InterruptHandler 002F  TMR6_SetInterruptHandler@InterruptHandler 002F  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 07D6  
                              __accesstop 0060                   __end_of__initialization 06C4  
                   __end_of_TMR2_CallBack 0850                        ?_SYSTEM_Initialize 0021  
                         _TMR6_StartTimer 0988                             ___rparam_used 000001  
                       ?_EPWM1_Initialize 0021                            __pcstackCOMRAM 0021  
                    ?_EPWM2_LoadDutyValue 002F                              __pidataBANK0 0566  
                     ??_SYSTEM_Initialize 0031                     __end_of_State8MEF_act 030A  
                               ?_TMR2_ISR 0021                                 ?_TMR6_ISR 0021  
                      ??_EPWM1_Initialize 002F                          ?_TMR2_Initialize 0021  
                 __end_of_TMR6_Initialize 0828                          ?_CCP5_Initialize 0021  
                       ?_EPWM2_Initialize 0021                 __end_of_SYSTEM_Initialize 0800  
                      ??_EPWM2_Initialize 002F                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 004B                        __CFG_CCP2MX$PORTC1 000000  
                   ??_EPWM2_LoadDutyValue 0031                               ?_Motor_Stop 0021  
        __end_of_TMR6_SetInterruptHandler 0976                                ??_TMR2_ISR 0021  
                      __CFG_CCP3MX$PORTB5 000000                                 ?_StepMove 0100  
                              ??_TMR6_ISR 0021                                   _CCP1CON 000FBD  
                                 _CCP2CON 000F66                                   _CCP5CON 000F54  
                                 _ECCP1AS 000FB6                                   _ECCP2AS 000F64  
                                 _ADC_ISR 0996                   __size_of_ADC_Initialize 0018  
                                 _OSCCON2 000FD2                                   i2u42_48 08C8  
                                 _OSCTUNE 000F9B                                   _PWM1CON 000FB7  
                                 _PWM2CON 000F65                                   _SPBRGH1 000FB0  
                        ?_TMR2_StartTimer 0021                   __end_of_TMR6_StartTimer 098E  
             __end_of_EPWM1_LoadDutyValue 07D6                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 0031                                ??_StepMove 0035  
                          _State16MEF_act 030A                                   __pcinit 0678  
                        ?_TMR6_Initialize 0021                                   __ramtop 1000  
                                 __ptext0 06D2                                   __ptext1 0606  
                                 __ptext2 00AE                                   __ptext3 030A  
                                 __ptext4 0776                                   __ptext5 07A6  
                                 __ptext6 0950                                   __ptext7 07D6  
                                 __ptext8 0800                                   __ptext9 0988  
                   _OSCILLATOR_Initialize 095E                                 _T2CONbits 000FBA  
                           ?_StateMEF_ini 0021                        _EUSART1_Initialize 0914  
                ??_PIN_MANAGER_Initialize 002F                                 _T6CONbits 000F4A  
              __size_of_SYSTEM_Initialize 002A                       __size_of_Motor_Stop 0012  
                    end_of_initialization 06C4                       ?_EUSART1_Initialize 0021  
                           __Lmediumconst 0000                    __end_of_State16MEF_act 0566  
                                 postdec1 000FE5                                   postinc0 000FEE  
                    ??_EUSART1_Initialize 002F                  _TMR6_SetInterruptHandler 096C  
                          ??_StateMEF_ini 002F                          ?_TMR6_StartTimer 0021  
                            _EstadoActual 004F                           ?_State16MEF_act 0021  
            __end_of_INTERRUPT_Initialize 0996      __end_of_TMR2_DefaultInterruptHandler 099E  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 099C  
                       StepMove@Velocidad 0102                             __pidataCOMRAM 08DC  
                       __size_of_TMR2_ISR 0008                            _ADC_Initialize 08FC  
                       __size_of_TMR6_ISR 0022                    ?_OSCILLATOR_Initialize 0021  
                     start_initialization 0678                 __size_of_EPWM1_Initialize 0024  
         __size_of_PIN_MANAGER_Initialize 004C                                 _Microstep 0040  
            EPWM1_LoadDutyValue@dutyValue 002F                 __size_of_EPWM2_Initialize 0024  
                            ??_Motor_Stop 002F                          _DelayTimerTicked 0049  
                  __end_of_ADC_Initialize 0914                               __pdataBANK0 0060  
                                ?_ADC_ISR 0021                                 _StepCount 003E  
                       StepMove@direccion 0104             ?_TMR2_DefaultInterruptHandler 0021  
                       __size_of_StepMove 0072                    __size_of_TMR2_CallBack 0028  
                             __pbssCOMRAM 0037                             __pcstackBANK1 0100  
                __size_of_TMR2_Initialize 0022                  __size_of_CCP5_Initialize 0014  
                      __end_of_Motor_Stop 0950                    __size_of_State8MEF_act 025C  
             __end_of_EPWM2_LoadDutyValue 07A6                     _TMR6_InterruptHandler 004D  
                    __end_of_StateMEF_ini 095E                    _PIN_MANAGER_Initialize 072A  
                               __pintcode 0008                           ?_ADC_Initialize 0021  
                 State16MEF_act@direccion 0034              ??_INTERRUPT_InterruptManager 0021  
                        __CFG_PRICLKEN$ON 000000                                  _BAUDCON1 000FB8  
                                _ANALOG_0 0044                                  _ANALOG_1 0042  
                    _INTERRUPT_Initialize 0992                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                           _TMR2_CallBack 0828                                  _PIE1bits 000F9D  
                                _PIE5bits 000F7D                  __size_of_TMR2_StartTimer 0004  
     __size_of_INTERRUPT_InterruptManager 00A2                                  _PIR1bits 000F9E  
                                _PIR5bits 000F7E              __size_of_EPWM1_LoadDutyValue 0030  
              ??_TMR6_SetInterruptHandler 0031                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR2_ISR 0980  
                                _PSTR1CON 000FB9                                  _PSTR2CON 000F63  
                                _TMR6_ISR 08BA                             _State8MEF_act 00AE  
                        _Timer2Tick_count 003C                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2            ??_TMR2_DefaultInterruptHandler 0021  
                        _EPWM1_Initialize 0874         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 002F                  __size_of_TMR6_Initialize 0028  
                             _INTCON2bits 000FF1                                 copy_data0 068C  
                               copy_data1 06AC                     ?_INTERRUPT_Initialize 0021  
                       ??_TMR2_Initialize 0031                            ?_TMR2_CallBack 0021  
                        ??_State16MEF_act 0033                         ??_CCP5_Initialize 002F  
                                _MoveDone 0046                                  __Hrparam 0000  
                            _Timer2Ticked 004A                          _EPWM2_Initialize 0850  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTC0 000000                            ?_State8MEF_act 0021  
                                _StepMove 0606                   ??_OSCILLATOR_Initialize 002F  
             __size_of_EUSART1_Initialize 0016                                  __ptext10 096C  
                                __ptext11 0898                                  __ptext20 092A  
                                __ptext12 098E                                  __ptext21 08FC  
                                __ptext13 0976                                  __ptext30 0000  
                                __ptext22 093E                                  __ptext14 072A  
                                __ptext15 095E                                  __ptext24 08BA  
                                __ptext16 0992                                  __ptext25 099A  
                                __ptext17 0914                                  __ptext26 0980  
                                __ptext18 0850                                  __ptext27 0828  
                                __ptext19 0874                                  __ptext28 099C  
                                __ptext29 0996                     __size_of_StateMEF_ini 000E  
                           __size_of_main 0058                       _LookUP_TABLE_COS_16 00A0  
                     _LookUP_TABLE_SEN_16 0060                  __size_of_TMR6_StartTimer 0006  
                                int$flags 0050                         ??_TMR2_StartTimer 002F  
      __end_of_INTERRUPT_InterruptManager 00AA                _INTERRUPT_InterruptManager 0008  
                              _INTCONbits 000FF2                              _StateMEF_ini 0950  
                  ??_INTERRUPT_Initialize 002F      __end_of_TMR6_DefaultInterruptHandler 099C  
   __size_of_TMR6_DefaultInterruptHandler 0002              _TMR6_DefaultInterruptHandler 099A  
                                intlevel2 0000                           ??_TMR2_CallBack 0021  
            EPWM2_LoadDutyValue@dutyValue 002F                   ?_PIN_MANAGER_Initialize 0021  
                       ??_TMR6_Initialize 0031                                _RCSTA1bits 000FAB  
                        ??_ADC_Initialize 002F                             _StepsComplete 0048  
                         ??_State8MEF_act 0033                    State8MEF_act@direccion 0034  
                       __CFG_T3CMX$PORTC0 000000                       _EPWM1_LoadDutyValue 07A6  
          __end_of_PIN_MANAGER_Initialize 0776             ?_TMR6_DefaultInterruptHandler 0021  
                       __CFG_FOSC$INTIO67 000000                              _StepperMotor 0037  
                   _TMR2_InterruptHandler 004B                  __end_of_EPWM1_Initialize 0898  
                    ?_EPWM1_LoadDutyValue 002F  
