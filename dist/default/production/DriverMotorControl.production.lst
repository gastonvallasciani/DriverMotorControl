

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Jun 29 10:31:09 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           ; Version 1.41
    51                           ; Generated 25/01/2017 GMT
    52                           ; 
    53                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F46K22 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	idataCOMRAM
    86  00097A                     __pidataCOMRAM:
    87                           	opt stack 0
    88                           
    89                           ;initializer for _LookUP_TABLE_COS
    90  00097A  7D                 	db	125
    91  00097B  76                 	db	118
    92  00097C  6C                 	db	108
    93  00097D  5E                 	db	94
    94  00097E  4D                 	db	77
    95  00097F  39                 	db	57
    96  000980  22                 	db	34
    97  000981  0C                 	db	12
    98  000982  0C                 	db	12
    99  000983  22                 	db	34
   100  000984  39                 	db	57
   101  000985  4D                 	db	77
   102  000986  5E                 	db	94
   103  000987  6C                 	db	108
   104  000988  76                 	db	118
   105  000989  7D                 	db	125
   106  00098A  7D                 	db	125
   107  00098B  76                 	db	118
   108  00098C  6C                 	db	108
   109  00098D  5E                 	db	94
   110  00098E  4D                 	db	77
   111  00098F  39                 	db	57
   112  000990  22                 	db	34
   113  000991  0C                 	db	12
   114  000992  0C                 	db	12
   115  000993  22                 	db	34
   116  000994  39                 	db	57
   117  000995  4D                 	db	77
   118  000996  5E                 	db	94
   119  000997  6C                 	db	108
   120  000998  76                 	db	118
   121  000999  7D                 	db	125
   122                           
   123                           	psect	idataBANK0
   124  000566                     __pidataBANK0:
   125                           	opt stack 0
   126                           
   127                           ;initializer for _LookUP_TABLE_SEN_16
   128  000566  06                 	db	6
   129  000567  12                 	db	18
   130  000568  1D                 	db	29
   131  000569  2A                 	db	42
   132  00056A  35                 	db	53
   133  00056B  3F                 	db	63
   134  00056C  49                 	db	73
   135  00056D  53                 	db	83
   136  00056E  5B                 	db	91
   137  00056F  63                 	db	99
   138  000570  6A                 	db	106
   139  000571  70                 	db	112
   140  000572  75                 	db	117
   141  000573  79                 	db	121
   142  000574  7C                 	db	124
   143  000575  7E                 	db	126
   144  000576  7E                 	db	126
   145  000577  7C                 	db	124
   146  000578  79                 	db	121
   147  000579  75                 	db	117
   148  00057A  70                 	db	112
   149  00057B  6A                 	db	106
   150  00057C  63                 	db	99
   151  00057D  5B                 	db	91
   152  00057E  53                 	db	83
   153  00057F  49                 	db	73
   154  000580  3F                 	db	63
   155  000581  35                 	db	53
   156  000582  2A                 	db	42
   157  000583  1D                 	db	29
   158  000584  12                 	db	18
   159  000585  06                 	db	6
   160  000586  06                 	db	6
   161  000587  12                 	db	18
   162  000588  1D                 	db	29
   163  000589  2A                 	db	42
   164  00058A  35                 	db	53
   165  00058B  3F                 	db	63
   166  00058C  49                 	db	73
   167  00058D  53                 	db	83
   168  00058E  5B                 	db	91
   169  00058F  63                 	db	99
   170  000590  6A                 	db	106
   171  000591  70                 	db	112
   172  000592  75                 	db	117
   173  000593  79                 	db	121
   174  000594  7C                 	db	124
   175  000595  7E                 	db	126
   176  000596  7E                 	db	126
   177  000597  7C                 	db	124
   178  000598  79                 	db	121
   179  000599  75                 	db	117
   180  00059A  70                 	db	112
   181  00059B  6A                 	db	106
   182  00059C  63                 	db	99
   183  00059D  5B                 	db	91
   184  00059E  53                 	db	83
   185  00059F  49                 	db	73
   186  0005A0  3F                 	db	63
   187  0005A1  35                 	db	53
   188  0005A2  2A                 	db	42
   189  0005A3  1D                 	db	29
   190  0005A4  12                 	db	18
   191  0005A5  06                 	db	6
   192                           
   193                           ;initializer for _LookUP_TABLE_COS_16
   194  0005A6  7E                 	db	126
   195  0005A7  7C                 	db	124
   196  0005A8  79                 	db	121
   197  0005A9  75                 	db	117
   198  0005AA  70                 	db	112
   199  0005AB  6A                 	db	106
   200  0005AC  63                 	db	99
   201  0005AD  5B                 	db	91
   202  0005AE  53                 	db	83
   203  0005AF  49                 	db	73
   204  0005B0  3F                 	db	63
   205  0005B1  35                 	db	53
   206  0005B2  2A                 	db	42
   207  0005B3  1D                 	db	29
   208  0005B4  12                 	db	18
   209  0005B5  06                 	db	6
   210  0005B6  06                 	db	6
   211  0005B7  12                 	db	18
   212  0005B8  1D                 	db	29
   213  0005B9  2A                 	db	42
   214  0005BA  35                 	db	53
   215  0005BB  3F                 	db	63
   216  0005BC  49                 	db	73
   217  0005BD  53                 	db	83
   218  0005BE  5B                 	db	91
   219  0005BF  63                 	db	99
   220  0005C0  6A                 	db	106
   221  0005C1  70                 	db	112
   222  0005C2  75                 	db	117
   223  0005C3  79                 	db	121
   224  0005C4  7C                 	db	124
   225  0005C5  7E                 	db	126
   226  0005C6  7E                 	db	126
   227  0005C7  7C                 	db	124
   228  0005C8  79                 	db	121
   229  0005C9  75                 	db	117
   230  0005CA  70                 	db	112
   231  0005CB  6A                 	db	106
   232  0005CC  63                 	db	99
   233  0005CD  5B                 	db	91
   234  0005CE  53                 	db	83
   235  0005CF  49                 	db	73
   236  0005D0  3F                 	db	63
   237  0005D1  35                 	db	53
   238  0005D2  2A                 	db	42
   239  0005D3  1D                 	db	29
   240  0005D4  12                 	db	18
   241  0005D5  06                 	db	6
   242  0005D6  06                 	db	6
   243  0005D7  12                 	db	18
   244  0005D8  1D                 	db	29
   245  0005D9  2A                 	db	42
   246  0005DA  35                 	db	53
   247  0005DB  3F                 	db	63
   248  0005DC  49                 	db	73
   249  0005DD  53                 	db	83
   250  0005DE  5B                 	db	91
   251  0005DF  63                 	db	99
   252  0005E0  6A                 	db	106
   253  0005E1  70                 	db	112
   254  0005E2  75                 	db	117
   255  0005E3  79                 	db	121
   256  0005E4  7C                 	db	124
   257  0005E5  7E                 	db	126
   258                           
   259                           ;initializer for _LookUP_TABLE_SEN
   260  0005E6  0C                 	db	12
   261  0005E7  22                 	db	34
   262  0005E8  39                 	db	57
   263  0005E9  4D                 	db	77
   264  0005EA  5E                 	db	94
   265  0005EB  6C                 	db	108
   266  0005EC  76                 	db	118
   267  0005ED  7D                 	db	125
   268  0005EE  7D                 	db	125
   269  0005EF  76                 	db	118
   270  0005F0  6C                 	db	108
   271  0005F1  5E                 	db	94
   272  0005F2  4D                 	db	77
   273  0005F3  39                 	db	57
   274  0005F4  22                 	db	34
   275  0005F5  0C                 	db	12
   276  0005F6  0C                 	db	12
   277  0005F7  22                 	db	34
   278  0005F8  39                 	db	57
   279  0005F9  4D                 	db	77
   280  0005FA  5E                 	db	94
   281  0005FB  6C                 	db	108
   282  0005FC  76                 	db	118
   283  0005FD  7D                 	db	125
   284  0005FE  7D                 	db	125
   285  0005FF  76                 	db	118
   286  000600  6C                 	db	108
   287  000601  5E                 	db	94
   288  000602  4D                 	db	77
   289  000603  39                 	db	57
   290  000604  22                 	db	34
   291  000605  0C                 	db	12
   292                           
   293                           	psect	nvCOMRAM
   294  00004B                     __pnvCOMRAM:
   295                           	opt stack 0
   296  00004B                     _TMR2_InterruptHandler:
   297                           	opt stack 0
   298  00004B                     	ds	2
   299  00004D                     _TMR6_InterruptHandler:
   300                           	opt stack 0
   301  00004D                     	ds	2
   302  00004F                     _EstadoActual:
   303                           	opt stack 0
   304  00004F                     	ds	1
   305  0000                     _CCPTMRS0bits	set	3913
   306  0000                     _ANSELA	set	3896
   307  0000                     _ANSELE	set	3900
   308  0000                     _ANSELD	set	3899
   309  0000                     _ANSELB	set	3897
   310  0000                     _ANSELC	set	3898
   311  0000                     _CCPR5H	set	3926
   312  0000                     _CCPR5L	set	3925
   313  0000                     _CCP5CON	set	3924
   314  0000                     _T6CONbits	set	3914
   315  0000                     _TMR6	set	3916
   316  0000                     _PR6	set	3915
   317  0000                     _T6CON	set	3914
   318  0000                     _LATCbits	set	3979
   319  0000                     _LATDbits	set	3980
   320  0000                     _LATBbits	set	3978
   321  0000                     _TXREG1	set	4013
   322  0000                     _RCREG1	set	4014
   323  0000                     _RCSTA1bits	set	4011
   324  0000                     _SPBRGH1	set	4016
   325  0000                     _SPBRG1	set	4015
   326  0000                     _TXSTA1	set	4012
   327  0000                     _RCSTA1	set	4011
   328  0000                     _BAUDCON1	set	4024
   329  0000                     _OSCTUNE	set	3995
   330  0000                     _OSCCON2	set	4050
   331  0000                     _OSCCON	set	4051
   332  0000                     _INTCONbits	set	4082
   333  0000                     _RCONbits	set	4048
   334  0000                     _ADCON0bits	set	4034
   335  0000                     _ADRESH	set	4036
   336  0000                     _ADRESL	set	4035
   337  0000                     _ADCON2	set	4032
   338  0000                     _ADCON1	set	4033
   339  0000                     _ADCON0	set	4034
   340  0000                     _CCPR1H	set	4031
   341  0000                     _CCPR1L	set	4030
   342  0000                     _PSTR1CON	set	4025
   343  0000                     _PWM1CON	set	4023
   344  0000                     _ECCP1AS	set	4022
   345  0000                     _CCP1CON	set	4029
   346  0000                     _CCPR2H	set	3944
   347  0000                     _CCPR2L	set	3943
   348  0000                     _PSTR2CON	set	3939
   349  0000                     _PWM2CON	set	3941
   350  0000                     _ECCP2AS	set	3940
   351  0000                     _CCP2CON	set	3942
   352  0000                     _INTCON2bits	set	4081
   353  0000                     _WPUB	set	3937
   354  0000                     _TRISD	set	3989
   355  0000                     _TRISC	set	3988
   356  0000                     _TRISB	set	3987
   357  0000                     _TRISA	set	3986
   358  0000                     _TRISE	set	3990
   359  0000                     _LATC	set	3979
   360  0000                     _LATB	set	3978
   361  0000                     _LATA	set	3977
   362  0000                     _LATD	set	3980
   363  0000                     _LATE	set	3981
   364  0000                     _T2CONbits	set	4026
   365  0000                     _PIE1bits	set	3997
   366  0000                     _PIR1bits	set	3998
   367  0000                     _TMR2	set	4028
   368  0000                     _PR2	set	4027
   369  0000                     _T2CON	set	4026
   370  0000                     _PIE5bits	set	3965
   371  0000                     _PIR5bits	set	3966
   372                           
   373                           ; #config settings
   374  0000                     
   375                           	psect	cinit
   376  00076E                     __pcinit:
   377                           	opt stack 0
   378  00076E                     start_initialization:
   379                           	opt stack 0
   380  00076E                     __initialization:
   381                           	opt stack 0
   382                           
   383                           ; Initialize objects allocated to BANK0 (160 bytes)
   384                           ; load TBLPTR registers with __pidataBANK0
   385  00076E  0E66               	movlw	low __pidataBANK0
   386  000770  6EF6               	movwf	tblptrl,c
   387  000772  0E05               	movlw	high __pidataBANK0
   388  000774  6EF7               	movwf	tblptrh,c
   389  000776  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   390  000778  6EF8               	movwf	tblptru,c
   391  00077A  EE00  F060         	lfsr	0,__pdataBANK0
   392  00077E  EE10 F0A0          	lfsr	1,160
   393  000782                     copy_data0:
   394  000782  0009               	tblrd		*+
   395  000784  CFF5 FFEE          	movff	tablat,postinc0
   396  000788  50E5               	movf	postdec1,w,c
   397  00078A  50E1               	movf	fsr1l,w,c
   398  00078C  E1FA               	bnz	copy_data0
   399                           
   400                           ; Initialize objects allocated to COMRAM (32 bytes)
   401                           ; load TBLPTR registers with __pidataCOMRAM
   402  00078E  0E7A               	movlw	low __pidataCOMRAM
   403  000790  6EF6               	movwf	tblptrl,c
   404  000792  0E09               	movlw	high __pidataCOMRAM
   405  000794  6EF7               	movwf	tblptrh,c
   406  000796  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   407  000798  6EF8               	movwf	tblptru,c
   408  00079A  EE00  F001         	lfsr	0,__pdataCOMRAM
   409  00079E  EE10 F020          	lfsr	1,32
   410  0007A2                     copy_data1:
   411  0007A2  0009               	tblrd		*+
   412  0007A4  CFF5 FFEE          	movff	tablat,postinc0
   413  0007A8  50E5               	movf	postdec1,w,c
   414  0007AA  50E1               	movf	fsr1l,w,c
   415  0007AC  E1FA               	bnz	copy_data1
   416                           
   417                           ; Clear objects allocated to COMRAM (20 bytes)
   418  0007AE  EE00  F037         	lfsr	0,__pbssCOMRAM
   419  0007B2  0E14               	movlw	20
   420  0007B4                     clear_0:
   421  0007B4  6AEE               	clrf	postinc0,c
   422  0007B6  06E8               	decf	wreg,f,c
   423  0007B8  E1FD               	bnz	clear_0
   424  0007BA                     end_of_initialization:
   425                           	opt stack 0
   426  0007BA                     __end_of__initialization:
   427                           	opt stack 0
   428  0007BA  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   429  0007BC  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   430  0007BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   431  0007C0  6EF8               	movwf	tblptru,c
   432  0007C2  0100               	movlb	0
   433  0007C4  EF84  F003         	goto	_main	;jump to C main() function
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           wreg	equ	0xFE8
   440                           postdec1	equ	0xFE5
   441                           fsr1l	equ	0xFE1
   442                           
   443                           	psect	bssCOMRAM
   444  000037                     __pbssCOMRAM:
   445                           	opt stack 0
   446  000037                     _StepperMotor:
   447                           	opt stack 0
   448  000037                     	ds	5
   449  00003C                     _Timer2Tick_count:
   450                           	opt stack 0
   451  00003C                     	ds	2
   452  00003E                     _StepCount:
   453                           	opt stack 0
   454  00003E                     	ds	2
   455  000040                     _Microstep:
   456                           	opt stack 0
   457  000040                     	ds	2
   458  000042                     _ANALOG_1:
   459                           	opt stack 0
   460  000042                     	ds	2
   461  000044                     _ANALOG_0:
   462                           	opt stack 0
   463  000044                     	ds	2
   464  000046                     	ds	1
   465  000047                     _parar:
   466                           	opt stack 0
   467  000047                     	ds	1
   468  000048                     _StepsComplete:
   469                           	opt stack 0
   470  000048                     	ds	1
   471  000049                     _DelayTimerTicked:
   472                           	opt stack 0
   473  000049                     	ds	1
   474  00004A                     _Timer2Ticked:
   475                           	opt stack 0
   476  00004A                     	ds	1
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	dataCOMRAM
   487  000001                     __pdataCOMRAM:
   488                           	opt stack 0
   489  000001                     _LookUP_TABLE_COS:
   490                           	opt stack 0
   491  000001                     	ds	32
   492                           tblptru	equ	0xFF8
   493                           tblptrh	equ	0xFF7
   494                           tblptrl	equ	0xFF6
   495                           tablat	equ	0xFF5
   496                           postinc0	equ	0xFEE
   497                           wreg	equ	0xFE8
   498                           postdec1	equ	0xFE5
   499                           fsr1l	equ	0xFE1
   500                           
   501                           	psect	dataBANK0
   502  000060                     __pdataBANK0:
   503                           	opt stack 0
   504  000060                     _LookUP_TABLE_SEN_16:
   505                           	opt stack 0
   506  000060                     	ds	64
   507  0000A0                     _LookUP_TABLE_COS_16:
   508                           	opt stack 0
   509  0000A0                     	ds	64
   510  0000E0                     _LookUP_TABLE_SEN:
   511                           	opt stack 0
   512  0000E0                     	ds	32
   513                           tblptru	equ	0xFF8
   514                           tblptrh	equ	0xFF7
   515                           tblptrl	equ	0xFF6
   516                           tablat	equ	0xFF5
   517                           postinc0	equ	0xFEE
   518                           wreg	equ	0xFE8
   519                           postdec1	equ	0xFE5
   520                           fsr1l	equ	0xFE1
   521                           
   522                           	psect	cstackBANK1
   523  000100                     __pcstackBANK1:
   524                           	opt stack 0
   525  000100                     StepMove@StepNumber:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x0
   529  000100                     	ds	2
   530  000102                     StepMove@Velocidad:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x2
   534  000102                     	ds	1
   535  000103                     StepMove@microstep_number:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x3
   539  000103                     	ds	1
   540  000104                     StepMove@direccion:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x4
   544  000104                     	ds	1
   545  000105                     RectaAceleracion@microstep_number:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x5
   549  000105                     	ds	1
   550  000106                     RectaAceleracion@direccion:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x6
   554  000106                     	ds	1
   555  000107                     RectaAceleracion@velocidad:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x7
   559  000107                     	ds	1
   560  000108                     RectaAceleracion@i:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x8
   564  000108                     	ds	1
   565                           tblptru	equ	0xFF8
   566                           tblptrh	equ	0xFF7
   567                           tblptrl	equ	0xFF6
   568                           tablat	equ	0xFF5
   569                           postinc0	equ	0xFEE
   570                           wreg	equ	0xFE8
   571                           postdec1	equ	0xFE5
   572                           fsr1l	equ	0xFE1
   573                           
   574                           	psect	cstackCOMRAM
   575  000021                     __pcstackCOMRAM:
   576                           	opt stack 0
   577  000021                     ??_INTERRUPT_InterruptManager:
   578  000021                     
   579                           ; 1 bytes @ 0x0
   580  000021                     	ds	14
   581  00002F                     TMR6_SetInterruptHandler@InterruptHandler:
   582                           	opt stack 0
   583  00002F                     TMR2_SetInterruptHandler@InterruptHandler:
   584                           	opt stack 0
   585  00002F                     EPWM2_LoadDutyValue@dutyValue:
   586                           	opt stack 0
   587  00002F                     EPWM1_LoadDutyValue@dutyValue:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0xE
   591  00002F                     	ds	2
   592  000031                     ??_EPWM2_LoadDutyValue:
   593  000031                     ??_EPWM1_LoadDutyValue:
   594  000031                     
   595                           ; 1 bytes @ 0x10
   596  000031                     	ds	2
   597  000033                     ??_State8MEF_act:
   598  000033                     ??_State16MEF_act:
   599                           
   600                           ; 1 bytes @ 0x12
   601  000033                     	ds	1
   602  000034                     State8MEF_act@direccion:
   603                           	opt stack 0
   604  000034                     State16MEF_act@direccion:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x13
   608  000034                     	ds	1
   609  000035                     ??_StepMove:
   610                           
   611                           ; 1 bytes @ 0x14
   612  000035                     	ds	2
   613  000037                     tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           postinc0	equ	0xFEE
   618                           wreg	equ	0xFE8
   619                           postdec1	equ	0xFE5
   620                           fsr1l	equ	0xFE1
   621                           
   622                           ; 1 bytes @ 0x16
   623 ;;
   624 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   625 ;;
   626 ;; *************** function _main *****************
   627 ;; Defined at:
   628 ;;		line 23 in file "main.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels required when called:    8
   648 ;; This function calls:
   649 ;;		_Motor_Stop
   650 ;;		_RectaAceleracion
   651 ;;		_SYSTEM_Initialize
   652 ;;		_StateMEF_ini
   653 ;;		_StepMove
   654 ;; This function is called by:
   655 ;;		Startup code after reset
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text0
   660  000708                     __ptext0:
   661                           	opt stack 0
   662  000708                     _main:
   663                           	opt stack 23
   664                           
   665                           ;main.c: 26: SYSTEM_Initialize();
   666                           
   667                           ;incstack = 0
   668  000708  EC3A  F004         	call	_SYSTEM_Initialize	;wreg free
   669                           
   670                           ;main.c: 27: StateMEF_ini();
   671  00070C  ECF7  F004         	call	_StateMEF_ini	;wreg free
   672                           
   673                           ;main.c: 28: Timer2Ticked=0;
   674  000710  0E00               	movlw	0
   675  000712  6E4A               	movwf	_Timer2Ticked,c	;volatile
   676                           
   677                           ;main.c: 29: DelayTimerTicked=0;
   678  000714  0E00               	movlw	0
   679  000716  6E49               	movwf	_DelayTimerTicked,c	;volatile
   680                           
   681                           ;main.c: 30: do { LATBbits.LATB6 = 1; } while(0);
   682  000718  8C8A               	bsf	3978,6,c	;volatile
   683                           
   684                           ;main.c: 33: StepperMotor.Velocidad = 15;
   685  00071A  0E0F               	movlw	15
   686  00071C  6E37               	movwf	_StepperMotor,c
   687                           
   688                           ;main.c: 34: StepperMotor.StepsNumber = 100;
   689  00071E  0E00               	movlw	0
   690  000720  6E3B               	movwf	_StepperMotor+4,c
   691  000722  0E64               	movlw	100
   692  000724  6E3A               	movwf	_StepperMotor+3,c
   693                           
   694                           ;main.c: 35: StepperMotor.MicroStepNumber = 16;
   695  000726  0E10               	movlw	16
   696  000728  6E38               	movwf	_StepperMotor+1,c
   697                           
   698                           ;main.c: 36: StepperMotor.Direccion = 1;
   699  00072A  0E01               	movlw	1
   700  00072C  6E39               	movwf	_StepperMotor+2,c
   701                           
   702                           ;main.c: 39: (INTCONbits.GIE = 1);
   703  00072E  8EF2               	bsf	intcon,7,c	;volatile
   704                           
   705                           ;main.c: 42: (INTCONbits.PEIE = 1);
   706  000730  8CF2               	bsf	intcon,6,c	;volatile
   707  000732                     l2518:
   708                           
   709                           ;main.c: 44: {
   710                           ;main.c: 58: if (parar==0){
   711  000732  5047               	movf	_parar,w,c
   712  000734  A4D8               	btfss	status,2,c
   713  000736  D7FD               	goto	l2518
   714                           
   715                           ;main.c: 59: parar=1;
   716  000738  0E01               	movlw	1
   717  00073A  6E47               	movwf	_parar,c
   718                           
   719                           ;main.c: 60: RectaAceleracion( StepperMotor.Velocidad , StepperMotor.MicroStepNumber , S
      +                          tepperMotor.Direccion );
   720  00073C  C038  F105         	movff	_StepperMotor+1,RectaAceleracion@microstep_number
   721  000740  C039  F106         	movff	_StepperMotor+2,RectaAceleracion@direccion
   722  000744  5037               	movf	_StepperMotor,w,c
   723  000746  EC03  F003         	call	_RectaAceleracion
   724  00074A                     l2524:
   725  00074A  C03A  F100         	movff	_StepperMotor+3,StepMove@StepNumber
   726  00074E  C03B  F101         	movff	_StepperMotor+4,StepMove@StepNumber+1
   727  000752  C037  F102         	movff	_StepperMotor,StepMove@Velocidad
   728  000756  C038  F103         	movff	_StepperMotor+1,StepMove@microstep_number
   729  00075A  C039  F104         	movff	_StepperMotor+2,StepMove@direccion
   730  00075E  EC4B  F003         	call	_StepMove	;wreg free
   731  000762  0900               	iorlw	0
   732  000764  B4D8               	btfsc	status,2,c
   733  000766  D7F1               	goto	l2524
   734                           
   735                           ;main.c: 62: Motor_Stop();
   736  000768  ECEE  F004         	call	_Motor_Stop	;wreg free
   737  00076C  D7E2               	goto	l2518
   738  00076E                     __end_of_main:
   739                           	opt stack 0
   740                           tblptru	equ	0xFF8
   741                           tblptrh	equ	0xFF7
   742                           tblptrl	equ	0xFF6
   743                           tablat	equ	0xFF5
   744                           intcon	equ	0xFF2
   745                           postinc0	equ	0xFEE
   746                           wreg	equ	0xFE8
   747                           postdec1	equ	0xFE5
   748                           fsr1l	equ	0xFE1
   749                           status	equ	0xFD8
   750                           
   751 ;; *************** function _StateMEF_ini *****************
   752 ;; Defined at:
   753 ;;		line 62 in file "MotorDriver.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   771 ;;Total ram usage:        0 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; Hardware stack levels required when called:    4
   774 ;; This function calls:
   775 ;;		Nothing
   776 ;; This function is called by:
   777 ;;		_main
   778 ;;		_goDark
   779 ;;		_goReference
   780 ;;		_goInitMovement
   781 ;;		_Measure
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text1
   786  0009EE                     __ptext1:
   787                           	opt stack 0
   788  0009EE                     _StateMEF_ini:
   789                           	opt stack 26
   790                           
   791                           ;MotorDriver.c: 64: EstadoActual = STATE1;
   792                           
   793                           ;incstack = 0
   794  0009EE  0E01               	movlw	1
   795  0009F0  6E4F               	movwf	_EstadoActual,c
   796                           
   797                           ;MotorDriver.c: 65: Microstep=0;
   798  0009F2  0E00               	movlw	0
   799  0009F4  6E41               	movwf	_Microstep+1,c
   800  0009F6  0E00               	movlw	0
   801  0009F8  6E40               	movwf	_Microstep,c
   802  0009FA  0012               	return		;funcret
   803  0009FC                     __end_of_StateMEF_ini:
   804                           	opt stack 0
   805                           tblptru	equ	0xFF8
   806                           tblptrh	equ	0xFF7
   807                           tblptrl	equ	0xFF6
   808                           tablat	equ	0xFF5
   809                           intcon	equ	0xFF2
   810                           postinc0	equ	0xFEE
   811                           wreg	equ	0xFE8
   812                           postdec1	equ	0xFE5
   813                           fsr1l	equ	0xFE1
   814                           status	equ	0xFD8
   815                           
   816 ;; *************** function _SYSTEM_Initialize *****************
   817 ;; Defined at:
   818 ;;		line 111 in file "mcc_generated_files/mcc.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;Total ram usage:        0 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; Hardware stack levels required when called:    6
   839 ;; This function calls:
   840 ;;		_ADC_Initialize
   841 ;;		_CCP5_Initialize
   842 ;;		_EPWM1_Initialize
   843 ;;		_EPWM2_Initialize
   844 ;;		_EUSART1_Initialize
   845 ;;		_INTERRUPT_Initialize
   846 ;;		_OSCILLATOR_Initialize
   847 ;;		_PIN_MANAGER_Initialize
   848 ;;		_TMR2_Initialize
   849 ;;		_TMR6_Initialize
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	text2
   856  000874                     __ptext2:
   857                           	opt stack 0
   858  000874                     _SYSTEM_Initialize:
   859                           	opt stack 24
   860                           
   861                           ;mcc.c: 114: INTERRUPT_Initialize();
   862                           
   863                           ;incstack = 0
   864  000874  EC18  F005         	call	_INTERRUPT_Initialize	;wreg free
   865                           
   866                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   867  000878  ECE4  F003         	call	_PIN_MANAGER_Initialize	;wreg free
   868                           
   869                           ;mcc.c: 116: OSCILLATOR_Initialize();
   870  00087C  ECFE  F004         	call	_OSCILLATOR_Initialize	;wreg free
   871                           
   872                           ;mcc.c: 117: TMR6_Initialize();
   873  000880  EC4F  F004         	call	_TMR6_Initialize	;wreg free
   874                           
   875                           ;mcc.c: 118: EPWM2_Initialize();
   876  000884  EC77  F004         	call	_EPWM2_Initialize	;wreg free
   877                           
   878                           ;mcc.c: 119: CCP5_Initialize();
   879  000888  ECE4  F004         	call	_CCP5_Initialize	;wreg free
   880                           
   881                           ;mcc.c: 120: ADC_Initialize();
   882  00088C  ECCD  F004         	call	_ADC_Initialize	;wreg free
   883                           
   884                           ;mcc.c: 121: EPWM1_Initialize();
   885  000890  EC89  F004         	call	_EPWM1_Initialize	;wreg free
   886                           
   887                           ;mcc.c: 122: TMR2_Initialize();
   888  000894  EC9B  F004         	call	_TMR2_Initialize	;wreg free
   889                           
   890                           ;mcc.c: 123: EUSART1_Initialize();
   891  000898  ECD9  F004         	call	_EUSART1_Initialize	;wreg free
   892  00089C  0012               	return		;funcret
   893  00089E                     __end_of_SYSTEM_Initialize:
   894                           	opt stack 0
   895                           tblptru	equ	0xFF8
   896                           tblptrh	equ	0xFF7
   897                           tblptrl	equ	0xFF6
   898                           tablat	equ	0xFF5
   899                           intcon	equ	0xFF2
   900                           postinc0	equ	0xFEE
   901                           wreg	equ	0xFE8
   902                           postdec1	equ	0xFE5
   903                           fsr1l	equ	0xFE1
   904                           status	equ	0xFD8
   905                           
   906 ;; *************** function _TMR6_Initialize *****************
   907 ;; Defined at:
   908 ;;		line 63 in file "mcc_generated_files/tmr6.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, status,2, status,0, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;Total ram usage:        0 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    5
   929 ;; This function calls:
   930 ;;		_TMR6_SetInterruptHandler
   931 ;;		_TMR6_StartTimer
   932 ;; This function is called by:
   933 ;;		_SYSTEM_Initialize
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text3
   938  00089E                     __ptext3:
   939                           	opt stack 0
   940  00089E                     _TMR6_Initialize:
   941                           	opt stack 24
   942                           
   943                           ;tmr6.c: 68: T6CON = 0x01;
   944                           
   945                           ;incstack = 0
   946  00089E  0E01               	movlw	1
   947  0008A0  010F               	movlb	15	; () banked
   948  0008A2  6F4A               	movwf	74,b	;volatile
   949                           
   950                           ;tmr6.c: 71: PR6 = 0x45;
   951  0008A4  0E45               	movlw	69
   952  0008A6  010F               	movlb	15	; () banked
   953  0008A8  6F4B               	movwf	75,b	;volatile
   954                           
   955                           ;tmr6.c: 74: TMR6 = 0x00;
   956  0008AA  0E00               	movlw	0
   957  0008AC  010F               	movlb	15	; () banked
   958  0008AE  6F4C               	movwf	76,b	;volatile
   959                           
   960                           ; BSR set to: 15
   961                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
   962  0008B0  947E               	bcf	3966,2,c	;volatile
   963                           
   964                           ; BSR set to: 15
   965                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
   966  0008B2  847D               	bsf	3965,2,c	;volatile
   967                           
   968                           ; BSR set to: 15
   969                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
   970  0008B4  0E38               	movlw	low _TMR6_DefaultInterruptHandler
   971  0008B6  6E2F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
   972  0008B8  0E0A               	movlw	high _TMR6_DefaultInterruptHandler
   973  0008BA  6E30               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
   974  0008BC  EC05  F005         	call	_TMR6_SetInterruptHandler	;wreg free
   975                           
   976                           ;tmr6.c: 86: TMR6_StartTimer();
   977  0008C0  EC13  F005         	call	_TMR6_StartTimer	;wreg free
   978  0008C4  0012               	return		;funcret
   979  0008C6                     __end_of_TMR6_Initialize:
   980                           	opt stack 0
   981                           tblptru	equ	0xFF8
   982                           tblptrh	equ	0xFF7
   983                           tblptrl	equ	0xFF6
   984                           tablat	equ	0xFF5
   985                           intcon	equ	0xFF2
   986                           postinc0	equ	0xFEE
   987                           wreg	equ	0xFE8
   988                           postdec1	equ	0xFE5
   989                           fsr1l	equ	0xFE1
   990                           status	equ	0xFD8
   991                           
   992 ;; *************** function _TMR6_StartTimer *****************
   993 ;; Defined at:
   994 ;;		line 89 in file "mcc_generated_files/tmr6.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		None
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;Total ram usage:        0 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    4
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_TMR6_Initialize
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text4
  1023  000A26                     __ptext4:
  1024                           	opt stack 0
  1025  000A26                     _TMR6_StartTimer:
  1026                           	opt stack 24
  1027                           
  1028                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  1029                           
  1030                           ;incstack = 0
  1031  000A26  010F               	movlb	15	; () banked
  1032  000A28  854A               	bsf	74,2,b	;volatile
  1033                           
  1034                           ; BSR set to: 15
  1035  000A2A  0012               	return		;funcret
  1036  000A2C                     __end_of_TMR6_StartTimer:
  1037                           	opt stack 0
  1038                           tblptru	equ	0xFF8
  1039                           tblptrh	equ	0xFF7
  1040                           tblptrl	equ	0xFF6
  1041                           tablat	equ	0xFF5
  1042                           intcon	equ	0xFF2
  1043                           postinc0	equ	0xFEE
  1044                           wreg	equ	0xFE8
  1045                           postdec1	equ	0xFE5
  1046                           fsr1l	equ	0xFE1
  1047                           status	equ	0xFD8
  1048                           
  1049 ;; *************** function _TMR6_SetInterruptHandler *****************
  1050 ;; Defined at:
  1051 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1054 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;Total ram usage:        2 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    4
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_TMR6_Initialize
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text5
  1081  000A0A                     __ptext5:
  1082                           	opt stack 0
  1083  000A0A                     _TMR6_SetInterruptHandler:
  1084                           	opt stack 24
  1085                           
  1086                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  1087                           
  1088                           ; BSR set to: 15
  1089                           ;incstack = 0
  1090  000A0A  C02F  F04D         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  1091  000A0E  C030  F04E         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  1092  000A12  0012               	return		;funcret
  1093  000A14                     __end_of_TMR6_SetInterruptHandler:
  1094                           	opt stack 0
  1095                           tblptru	equ	0xFF8
  1096                           tblptrh	equ	0xFF7
  1097                           tblptrl	equ	0xFF6
  1098                           tablat	equ	0xFF5
  1099                           intcon	equ	0xFF2
  1100                           postinc0	equ	0xFEE
  1101                           wreg	equ	0xFE8
  1102                           postdec1	equ	0xFE5
  1103                           fsr1l	equ	0xFE1
  1104                           status	equ	0xFD8
  1105                           
  1106 ;; *************** function _TMR2_Initialize *****************
  1107 ;; Defined at:
  1108 ;;		line 68 in file "mcc_generated_files/tmr2.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;Total ram usage:        0 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    5
  1129 ;; This function calls:
  1130 ;;		_TMR2_SetInterruptHandler
  1131 ;;		_TMR2_StartTimer
  1132 ;; This function is called by:
  1133 ;;		_SYSTEM_Initialize
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text6
  1138  000936                     __ptext6:
  1139                           	opt stack 0
  1140  000936                     _TMR2_Initialize:
  1141                           	opt stack 24
  1142                           
  1143                           ;tmr2.c: 73: T2CON = 0x02;
  1144                           
  1145                           ;incstack = 0
  1146  000936  0E02               	movlw	2
  1147  000938  6EBA               	movwf	4026,c	;volatile
  1148                           
  1149                           ;tmr2.c: 76: PR2 = 0x0C;
  1150  00093A  0E0C               	movlw	12
  1151  00093C  6EBB               	movwf	4027,c	;volatile
  1152                           
  1153                           ;tmr2.c: 79: TMR2 = 0x00;
  1154  00093E  0E00               	movlw	0
  1155  000940  6EBC               	movwf	4028,c	;volatile
  1156                           
  1157                           ;tmr2.c: 82: PIR1bits.TMR2IF = 0;
  1158  000942  929E               	bcf	3998,1,c	;volatile
  1159                           
  1160                           ;tmr2.c: 85: PIE1bits.TMR2IE = 1;
  1161  000944  829D               	bsf	3997,1,c	;volatile
  1162                           
  1163                           ;tmr2.c: 88: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  1164  000946  0E3A               	movlw	low _TMR2_DefaultInterruptHandler
  1165  000948  6E2F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  1166  00094A  0E0A               	movlw	high _TMR2_DefaultInterruptHandler
  1167  00094C  6E30               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  1168  00094E  EC0A  F005         	call	_TMR2_SetInterruptHandler	;wreg free
  1169                           
  1170                           ;tmr2.c: 91: TMR2_StartTimer();
  1171  000952  EC16  F005         	call	_TMR2_StartTimer	;wreg free
  1172  000956  0012               	return		;funcret
  1173  000958                     __end_of_TMR2_Initialize:
  1174                           	opt stack 0
  1175                           tblptru	equ	0xFF8
  1176                           tblptrh	equ	0xFF7
  1177                           tblptrl	equ	0xFF6
  1178                           tablat	equ	0xFF5
  1179                           intcon	equ	0xFF2
  1180                           postinc0	equ	0xFEE
  1181                           wreg	equ	0xFE8
  1182                           postdec1	equ	0xFE5
  1183                           fsr1l	equ	0xFE1
  1184                           status	equ	0xFD8
  1185                           
  1186 ;; *************** function _TMR2_StartTimer *****************
  1187 ;; Defined at:
  1188 ;;		line 94 in file "mcc_generated_files/tmr2.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		None
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;Total ram usage:        0 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    4
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_TMR2_Initialize
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text7
  1217  000A2C                     __ptext7:
  1218                           	opt stack 0
  1219  000A2C                     _TMR2_StartTimer:
  1220                           	opt stack 24
  1221                           
  1222                           ;tmr2.c: 97: T2CONbits.TMR2ON = 1;
  1223                           
  1224                           ;incstack = 0
  1225  000A2C  84BA               	bsf	4026,2,c	;volatile
  1226  000A2E  0012               	return		;funcret
  1227  000A30                     __end_of_TMR2_StartTimer:
  1228                           	opt stack 0
  1229                           tblptru	equ	0xFF8
  1230                           tblptrh	equ	0xFF7
  1231                           tblptrl	equ	0xFF6
  1232                           tablat	equ	0xFF5
  1233                           intcon	equ	0xFF2
  1234                           postinc0	equ	0xFEE
  1235                           wreg	equ	0xFE8
  1236                           postdec1	equ	0xFE5
  1237                           fsr1l	equ	0xFE1
  1238                           status	equ	0xFD8
  1239                           
  1240 ;; *************** function _TMR2_SetInterruptHandler *****************
  1241 ;; Defined at:
  1242 ;;		line 150 in file "mcc_generated_files/tmr2.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1245 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;		None
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;Total ram usage:        2 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    4
  1264 ;; This function calls:
  1265 ;;		Nothing
  1266 ;; This function is called by:
  1267 ;;		_TMR2_Initialize
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text8
  1272  000A14                     __ptext8:
  1273                           	opt stack 0
  1274  000A14                     _TMR2_SetInterruptHandler:
  1275                           	opt stack 24
  1276                           
  1277                           ;tmr2.c: 151: TMR2_InterruptHandler = InterruptHandler;
  1278                           
  1279                           ;incstack = 0
  1280  000A14  C02F  F04B         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1281  000A18  C030  F04C         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1282  000A1C  0012               	return		;funcret
  1283  000A1E                     __end_of_TMR2_SetInterruptHandler:
  1284                           	opt stack 0
  1285                           tblptru	equ	0xFF8
  1286                           tblptrh	equ	0xFF7
  1287                           tblptrl	equ	0xFF6
  1288                           tablat	equ	0xFF5
  1289                           intcon	equ	0xFF2
  1290                           postinc0	equ	0xFEE
  1291                           wreg	equ	0xFE8
  1292                           postdec1	equ	0xFE5
  1293                           fsr1l	equ	0xFE1
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _PIN_MANAGER_Initialize *****************
  1297 ;; Defined at:
  1298 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    4
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_SYSTEM_Initialize
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text9
  1327  0007C8                     __ptext9:
  1328                           	opt stack 0
  1329  0007C8                     _PIN_MANAGER_Initialize:
  1330                           	opt stack 25
  1331                           
  1332                           ;pin_manager.c: 56: LATE = 0x00;
  1333                           
  1334                           ;incstack = 0
  1335  0007C8  0E00               	movlw	0
  1336  0007CA  6E8D               	movwf	3981,c	;volatile
  1337                           
  1338                           ;pin_manager.c: 57: LATD = 0x00;
  1339  0007CC  0E00               	movlw	0
  1340  0007CE  6E8C               	movwf	3980,c	;volatile
  1341                           
  1342                           ;pin_manager.c: 58: LATA = 0x00;
  1343  0007D0  0E00               	movlw	0
  1344  0007D2  6E89               	movwf	3977,c	;volatile
  1345                           
  1346                           ;pin_manager.c: 59: LATB = 0x00;
  1347  0007D4  0E00               	movlw	0
  1348  0007D6  6E8A               	movwf	3978,c	;volatile
  1349                           
  1350                           ;pin_manager.c: 60: LATC = 0x00;
  1351  0007D8  0E00               	movlw	0
  1352  0007DA  6E8B               	movwf	3979,c	;volatile
  1353                           
  1354                           ;pin_manager.c: 65: TRISE = 0x07;
  1355  0007DC  0E07               	movlw	7
  1356  0007DE  6E96               	movwf	3990,c	;volatile
  1357                           
  1358                           ;pin_manager.c: 66: TRISA = 0xEB;
  1359  0007E0  0EEB               	movlw	235
  1360  0007E2  6E92               	movwf	3986,c	;volatile
  1361                           
  1362                           ;pin_manager.c: 67: TRISB = 0xBF;
  1363  0007E4  0EBF               	movlw	191
  1364  0007E6  6E93               	movwf	3987,c	;volatile
  1365                           
  1366                           ;pin_manager.c: 68: TRISC = 0xB8;
  1367  0007E8  0EB8               	movlw	184
  1368  0007EA  6E94               	movwf	3988,c	;volatile
  1369                           
  1370                           ;pin_manager.c: 69: TRISD = 0xDF;
  1371  0007EC  0EDF               	movlw	223
  1372  0007EE  6E95               	movwf	3989,c	;volatile
  1373                           
  1374                           ;pin_manager.c: 74: ANSELC = 0x38;
  1375  0007F0  0E38               	movlw	56
  1376  0007F2  010F               	movlb	15	; () banked
  1377  0007F4  6F3A               	movwf	58,b	;volatile
  1378                           
  1379                           ;pin_manager.c: 75: ANSELB = 0x3E;
  1380  0007F6  0E3E               	movlw	62
  1381  0007F8  010F               	movlb	15	; () banked
  1382  0007FA  6F39               	movwf	57,b	;volatile
  1383                           
  1384                           ;pin_manager.c: 76: ANSELD = 0xDF;
  1385  0007FC  0EDF               	movlw	223
  1386  0007FE  010F               	movlb	15	; () banked
  1387  000800  6F3B               	movwf	59,b	;volatile
  1388                           
  1389                           ;pin_manager.c: 77: ANSELE = 0x03;
  1390  000802  0E03               	movlw	3
  1391  000804  010F               	movlb	15	; () banked
  1392  000806  6F3C               	movwf	60,b	;volatile
  1393                           
  1394                           ;pin_manager.c: 78: ANSELA = 0x2B;
  1395  000808  0E2B               	movlw	43
  1396  00080A  010F               	movlb	15	; () banked
  1397  00080C  6F38               	movwf	56,b	;volatile
  1398                           
  1399                           ; BSR set to: 15
  1400                           ;pin_manager.c: 83: WPUB = 0xFF;
  1401  00080E  6861               	setf	3937,c	;volatile
  1402                           
  1403                           ; BSR set to: 15
  1404                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1405  000810  9EF1               	bcf	intcon2,7,c	;volatile
  1406                           
  1407                           ; BSR set to: 15
  1408  000812  0012               	return		;funcret
  1409  000814                     __end_of_PIN_MANAGER_Initialize:
  1410                           	opt stack 0
  1411                           tblptru	equ	0xFF8
  1412                           tblptrh	equ	0xFF7
  1413                           tblptrl	equ	0xFF6
  1414                           tablat	equ	0xFF5
  1415                           intcon	equ	0xFF2
  1416                           intcon2	equ	0xFF1
  1417                           postinc0	equ	0xFEE
  1418                           wreg	equ	0xFE8
  1419                           postdec1	equ	0xFE5
  1420                           fsr1l	equ	0xFE1
  1421                           status	equ	0xFD8
  1422                           
  1423 ;; *************** function _OSCILLATOR_Initialize *****************
  1424 ;; Defined at:
  1425 ;;		line 126 in file "mcc_generated_files/mcc.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    4
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_SYSTEM_Initialize
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text10
  1454  0009FC                     __ptext10:
  1455                           	opt stack 0
  1456  0009FC                     _OSCILLATOR_Initialize:
  1457                           	opt stack 25
  1458                           
  1459                           ;mcc.c: 129: OSCCON = 0x70;
  1460                           
  1461                           ; BSR set to: 15
  1462                           ;incstack = 0
  1463  0009FC  0E70               	movlw	112
  1464  0009FE  6ED3               	movwf	4051,c	;volatile
  1465                           
  1466                           ;mcc.c: 131: OSCCON2 = 0x04;
  1467  000A00  0E04               	movlw	4
  1468  000A02  6ED2               	movwf	4050,c	;volatile
  1469                           
  1470                           ;mcc.c: 133: OSCTUNE = 0x00;
  1471  000A04  0E00               	movlw	0
  1472  000A06  6E9B               	movwf	3995,c	;volatile
  1473  000A08  0012               	return		;funcret
  1474  000A0A                     __end_of_OSCILLATOR_Initialize:
  1475                           	opt stack 0
  1476                           tblptru	equ	0xFF8
  1477                           tblptrh	equ	0xFF7
  1478                           tblptrl	equ	0xFF6
  1479                           tablat	equ	0xFF5
  1480                           intcon	equ	0xFF2
  1481                           intcon2	equ	0xFF1
  1482                           postinc0	equ	0xFEE
  1483                           wreg	equ	0xFE8
  1484                           postdec1	equ	0xFE5
  1485                           fsr1l	equ	0xFE1
  1486                           status	equ	0xFD8
  1487                           
  1488 ;; *************** function _INTERRUPT_Initialize *****************
  1489 ;; Defined at:
  1490 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;		None
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      void 
  1497 ;; Registers used:
  1498 ;;		None
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;Total ram usage:        0 bytes
  1509 ;; Hardware stack levels used:    1
  1510 ;; Hardware stack levels required when called:    4
  1511 ;; This function calls:
  1512 ;;		Nothing
  1513 ;; This function is called by:
  1514 ;;		_SYSTEM_Initialize
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text11
  1519  000A30                     __ptext11:
  1520                           	opt stack 0
  1521  000A30                     _INTERRUPT_Initialize:
  1522                           	opt stack 25
  1523                           
  1524                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1525                           
  1526                           ;incstack = 0
  1527  000A30  9ED0               	bcf	4048,7,c	;volatile
  1528  000A32  0012               	return		;funcret
  1529  000A34                     __end_of_INTERRUPT_Initialize:
  1530                           	opt stack 0
  1531                           tblptru	equ	0xFF8
  1532                           tblptrh	equ	0xFF7
  1533                           tblptrl	equ	0xFF6
  1534                           tablat	equ	0xFF5
  1535                           intcon	equ	0xFF2
  1536                           intcon2	equ	0xFF1
  1537                           postinc0	equ	0xFEE
  1538                           wreg	equ	0xFE8
  1539                           postdec1	equ	0xFE5
  1540                           fsr1l	equ	0xFE1
  1541                           status	equ	0xFD8
  1542                           
  1543 ;; *************** function _EUSART1_Initialize *****************
  1544 ;; Defined at:
  1545 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;Total ram usage:        0 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    4
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_SYSTEM_Initialize
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text12
  1574  0009B2                     __ptext12:
  1575                           	opt stack 0
  1576  0009B2                     _EUSART1_Initialize:
  1577                           	opt stack 25
  1578                           
  1579                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1580                           
  1581                           ;incstack = 0
  1582  0009B2  0E08               	movlw	8
  1583  0009B4  6EB8               	movwf	4024,c	;volatile
  1584                           
  1585                           ;eusart1.c: 63: RCSTA1 = 0x90;
  1586  0009B6  0E90               	movlw	144
  1587  0009B8  6EAB               	movwf	4011,c	;volatile
  1588                           
  1589                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1590  0009BA  0E24               	movlw	36
  1591  0009BC  6EAC               	movwf	4012,c	;volatile
  1592                           
  1593                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  1594  0009BE  0EA0               	movlw	160
  1595  0009C0  6EAF               	movwf	4015,c	;volatile
  1596                           
  1597                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  1598  0009C2  0E01               	movlw	1
  1599  0009C4  6EB0               	movwf	4016,c	;volatile
  1600  0009C6  0012               	return		;funcret
  1601  0009C8                     __end_of_EUSART1_Initialize:
  1602                           	opt stack 0
  1603                           tblptru	equ	0xFF8
  1604                           tblptrh	equ	0xFF7
  1605                           tblptrl	equ	0xFF6
  1606                           tablat	equ	0xFF5
  1607                           intcon	equ	0xFF2
  1608                           intcon2	equ	0xFF1
  1609                           postinc0	equ	0xFEE
  1610                           wreg	equ	0xFE8
  1611                           postdec1	equ	0xFE5
  1612                           fsr1l	equ	0xFE1
  1613                           status	equ	0xFD8
  1614                           
  1615 ;; *************** function _EPWM2_Initialize *****************
  1616 ;; Defined at:
  1617 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;Total ram usage:        0 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    4
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_SYSTEM_Initialize
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text13
  1646  0008EE                     __ptext13:
  1647                           	opt stack 0
  1648  0008EE                     _EPWM2_Initialize:
  1649                           	opt stack 25
  1650                           
  1651                           ;epwm2.c: 68: CCP2CON = 0x3C;
  1652                           
  1653                           ;incstack = 0
  1654  0008EE  0E3C               	movlw	60
  1655  0008F0  6E66               	movwf	3942,c	;volatile
  1656                           
  1657                           ;epwm2.c: 71: ECCP2AS = 0x00;
  1658  0008F2  0E00               	movlw	0
  1659  0008F4  6E64               	movwf	3940,c	;volatile
  1660                           
  1661                           ;epwm2.c: 74: PWM2CON = 0x80;
  1662  0008F6  0E80               	movlw	128
  1663  0008F8  6E65               	movwf	3941,c	;volatile
  1664                           
  1665                           ;epwm2.c: 77: PSTR2CON = 0x03;
  1666  0008FA  0E03               	movlw	3
  1667  0008FC  6E63               	movwf	3939,c	;volatile
  1668                           
  1669                           ;epwm2.c: 80: CCPR2L = 0x14;
  1670  0008FE  0E14               	movlw	20
  1671  000900  6E67               	movwf	3943,c	;volatile
  1672                           
  1673                           ;epwm2.c: 83: CCPR2H = 0x00;
  1674  000902  0E00               	movlw	0
  1675  000904  6E68               	movwf	3944,c	;volatile
  1676                           
  1677                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  1678  000906  010F               	movlb	15	; () banked
  1679  000908  5149               	movf	73,w,b	;volatile
  1680  00090A  0BE7               	andlw	-25
  1681  00090C  0910               	iorlw	16
  1682  00090E  6F49               	movwf	73,b	;volatile
  1683                           
  1684                           ; BSR set to: 15
  1685  000910  0012               	return		;funcret
  1686  000912                     __end_of_EPWM2_Initialize:
  1687                           	opt stack 0
  1688                           tblptru	equ	0xFF8
  1689                           tblptrh	equ	0xFF7
  1690                           tblptrl	equ	0xFF6
  1691                           tablat	equ	0xFF5
  1692                           intcon	equ	0xFF2
  1693                           intcon2	equ	0xFF1
  1694                           postinc0	equ	0xFEE
  1695                           wreg	equ	0xFE8
  1696                           postdec1	equ	0xFE5
  1697                           fsr1l	equ	0xFE1
  1698                           status	equ	0xFD8
  1699                           
  1700 ;; *************** function _EPWM1_Initialize *****************
  1701 ;; Defined at:
  1702 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    4
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_SYSTEM_Initialize
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text14
  1731  000912                     __ptext14:
  1732                           	opt stack 0
  1733  000912                     _EPWM1_Initialize:
  1734                           	opt stack 25
  1735                           
  1736                           ;epwm1.c: 68: CCP1CON = 0x3C;
  1737                           
  1738                           ; BSR set to: 15
  1739                           ;incstack = 0
  1740  000912  0E3C               	movlw	60
  1741  000914  6EBD               	movwf	4029,c	;volatile
  1742                           
  1743                           ;epwm1.c: 71: ECCP1AS = 0x00;
  1744  000916  0E00               	movlw	0
  1745  000918  6EB6               	movwf	4022,c	;volatile
  1746                           
  1747                           ;epwm1.c: 74: PWM1CON = 0x80;
  1748  00091A  0E80               	movlw	128
  1749  00091C  6EB7               	movwf	4023,c	;volatile
  1750                           
  1751                           ;epwm1.c: 77: PSTR1CON = 0x03;
  1752  00091E  0E03               	movlw	3
  1753  000920  6EB9               	movwf	4025,c	;volatile
  1754                           
  1755                           ;epwm1.c: 80: CCPR1L = 0x14;
  1756  000922  0E14               	movlw	20
  1757  000924  6EBE               	movwf	4030,c	;volatile
  1758                           
  1759                           ;epwm1.c: 83: CCPR1H = 0x00;
  1760  000926  0E00               	movlw	0
  1761  000928  6EBF               	movwf	4031,c	;volatile
  1762                           
  1763                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  1764  00092A  010F               	movlb	15	; () banked
  1765  00092C  5149               	movf	73,w,b	;volatile
  1766  00092E  0BFC               	andlw	-4
  1767  000930  0902               	iorlw	2
  1768  000932  6F49               	movwf	73,b	;volatile
  1769                           
  1770                           ; BSR set to: 15
  1771  000934  0012               	return		;funcret
  1772  000936                     __end_of_EPWM1_Initialize:
  1773                           	opt stack 0
  1774                           tblptru	equ	0xFF8
  1775                           tblptrh	equ	0xFF7
  1776                           tblptrl	equ	0xFF6
  1777                           tablat	equ	0xFF5
  1778                           intcon	equ	0xFF2
  1779                           intcon2	equ	0xFF1
  1780                           postinc0	equ	0xFEE
  1781                           wreg	equ	0xFE8
  1782                           postdec1	equ	0xFE5
  1783                           fsr1l	equ	0xFE1
  1784                           status	equ	0xFD8
  1785                           
  1786 ;; *************** function _CCP5_Initialize *****************
  1787 ;; Defined at:
  1788 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;Total ram usage:        0 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    4
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_SYSTEM_Initialize
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text15
  1817  0009C8                     __ptext15:
  1818                           	opt stack 0
  1819  0009C8                     _CCP5_Initialize:
  1820                           	opt stack 25
  1821                           
  1822                           ;ccp5.c: 60: CCP5CON = 0x00;
  1823                           
  1824                           ; BSR set to: 15
  1825                           ;incstack = 0
  1826  0009C8  0E00               	movlw	0
  1827  0009CA  010F               	movlb	15	; () banked
  1828  0009CC  6F54               	movwf	84,b	;volatile
  1829                           
  1830                           ;ccp5.c: 62: CCPR5L = 0x00;
  1831  0009CE  0E00               	movlw	0
  1832  0009D0  010F               	movlb	15	; () banked
  1833  0009D2  6F55               	movwf	85,b	;volatile
  1834                           
  1835                           ;ccp5.c: 64: CCPR5H = 0x00;
  1836  0009D4  0E00               	movlw	0
  1837  0009D6  010F               	movlb	15	; () banked
  1838  0009D8  6F56               	movwf	86,b	;volatile
  1839                           
  1840                           ; BSR set to: 15
  1841  0009DA  0012               	return		;funcret
  1842  0009DC                     __end_of_CCP5_Initialize:
  1843                           	opt stack 0
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           intcon	equ	0xFF2
  1849                           intcon2	equ	0xFF1
  1850                           postinc0	equ	0xFEE
  1851                           wreg	equ	0xFE8
  1852                           postdec1	equ	0xFE5
  1853                           fsr1l	equ	0xFE1
  1854                           status	equ	0xFD8
  1855                           
  1856 ;; *************** function _ADC_Initialize *****************
  1857 ;; Defined at:
  1858 ;;		line 61 in file "mcc_generated_files/adc.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;Total ram usage:        0 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    4
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_SYSTEM_Initialize
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text16
  1887  00099A                     __ptext16:
  1888                           	opt stack 0
  1889  00099A                     _ADC_Initialize:
  1890                           	opt stack 25
  1891                           
  1892                           ;adc.c: 66: ADCON0 = 0x01;
  1893                           
  1894                           ; BSR set to: 15
  1895                           ;incstack = 0
  1896  00099A  0E01               	movlw	1
  1897  00099C  6EC2               	movwf	4034,c	;volatile
  1898                           
  1899                           ;adc.c: 69: ADCON1 = 0x00;
  1900  00099E  0E00               	movlw	0
  1901  0009A0  6EC1               	movwf	4033,c	;volatile
  1902                           
  1903                           ;adc.c: 72: ADCON2 = 0x05;
  1904  0009A2  0E05               	movlw	5
  1905  0009A4  6EC0               	movwf	4032,c	;volatile
  1906                           
  1907                           ;adc.c: 75: ADRESL = 0x00;
  1908  0009A6  0E00               	movlw	0
  1909  0009A8  6EC3               	movwf	4035,c	;volatile
  1910                           
  1911                           ;adc.c: 78: ADRESH = 0x00;
  1912  0009AA  0E00               	movlw	0
  1913  0009AC  6EC4               	movwf	4036,c	;volatile
  1914                           
  1915                           ;adc.c: 81: PIE1bits.ADIE = 1;
  1916  0009AE  8C9D               	bsf	3997,6,c	;volatile
  1917  0009B0  0012               	return		;funcret
  1918  0009B2                     __end_of_ADC_Initialize:
  1919                           	opt stack 0
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           intcon	equ	0xFF2
  1925                           intcon2	equ	0xFF1
  1926                           postinc0	equ	0xFEE
  1927                           wreg	equ	0xFE8
  1928                           postdec1	equ	0xFE5
  1929                           fsr1l	equ	0xFE1
  1930                           status	equ	0xFD8
  1931                           
  1932 ;; *************** function _RectaAceleracion *****************
  1933 ;; Defined at:
  1934 ;;		line 330 in file "MotorDriver.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  velocidad       1    wreg     unsigned char 
  1937 ;;  microstep_nu    1    5[BANK1 ] unsigned char 
  1938 ;;  direccion       1    6[BANK1 ] unsigned char 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  velocidad       1    7[BANK1 ] unsigned char 
  1941 ;;  i               1    8[BANK1 ] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1951 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;Total ram usage:        4 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    7
  1958 ;; This function calls:
  1959 ;;		_StepMove
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;;		_Measure
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text17
  1967  000606                     __ptext17:
  1968                           	opt stack 0
  1969  000606                     _RectaAceleracion:
  1970                           	opt stack 23
  1971                           
  1972                           ;incstack = 0
  1973                           ;RectaAceleracion@velocidad stored from wreg
  1974  000606  0101               	movlb	1	; () banked
  1975  000608  6F07               	movwf	RectaAceleracion@velocidad& (0+255),b
  1976                           
  1977                           ;MotorDriver.c: 331: uint8_t i;
  1978                           ;MotorDriver.c: 332: if (microstep_number == 8){
  1979  00060A  0E08               	movlw	8
  1980  00060C  0101               	movlb	1	; () banked
  1981  00060E  1905               	xorwf	RectaAceleracion@microstep_number& (0+255),w,b
  1982  000610  A4D8               	btfss	status,2,c
  1983  000612  D01E               	goto	l2458
  1984                           
  1985                           ; BSR set to: 1
  1986                           ;MotorDriver.c: 333: for (i=30;i>velocidad;i--){
  1987  000614  0E1E               	movlw	30
  1988  000616  0101               	movlb	1	; () banked
  1989  000618  6F08               	movwf	RectaAceleracion@i& (0+255),b
  1990  00061A  D013               	goto	l2456
  1991  00061C                     l2452:
  1992  00061C  0E00               	movlw	0
  1993  00061E  0101               	movlb	1	; () banked
  1994  000620  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
  1995  000622  0E01               	movlw	1
  1996  000624  6F00               	movwf	StepMove@StepNumber& (0+255),b
  1997  000626  C108  F102         	movff	RectaAceleracion@i,StepMove@Velocidad
  1998  00062A  0E08               	movlw	8
  1999  00062C  0101               	movlb	1	; () banked
  2000  00062E  6F03               	movwf	StepMove@microstep_number& (0+255),b
  2001  000630  C106  F104         	movff	RectaAceleracion@direccion,StepMove@direccion
  2002  000634  EC4B  F003         	call	_StepMove	;wreg free
  2003  000638  0900               	iorlw	0
  2004  00063A  B4D8               	btfsc	status,2,c
  2005  00063C  D7EF               	goto	l2452
  2006  00063E  0101               	movlb	1	; () banked
  2007  000640  0708               	decf	RectaAceleracion@i& (0+255),f,b
  2008  000642                     l2456:
  2009                           
  2010                           ; BSR set to: 1
  2011  000642  0101               	movlb	1	; () banked
  2012  000644  5108               	movf	RectaAceleracion@i& (0+255),w,b
  2013  000646  0101               	movlb	1	; () banked
  2014  000648  5D07               	subwf	RectaAceleracion@velocidad& (0+255),w,b
  2015  00064A  B0D8               	btfsc	status,0,c
  2016  00064C  0012               	return	
  2017  00064E  D7E6               	goto	l2452
  2018  000650                     l2458:
  2019                           
  2020                           ; BSR set to: 1
  2021                           ;MotorDriver.c: 337: else if (microstep_number == 16){
  2022  000650  0E10               	movlw	16
  2023  000652  0101               	movlb	1	; () banked
  2024  000654  1905               	xorwf	RectaAceleracion@microstep_number& (0+255),w,b
  2025  000656  A4D8               	btfss	status,2,c
  2026  000658  0012               	return	
  2027                           
  2028                           ; BSR set to: 1
  2029                           ;MotorDriver.c: 338: for (i=30;i>velocidad;i--){
  2030  00065A  0E1E               	movlw	30
  2031  00065C  0101               	movlb	1	; () banked
  2032  00065E  6F08               	movwf	RectaAceleracion@i& (0+255),b
  2033  000660  D013               	goto	l2466
  2034  000662                     l2462:
  2035  000662  0E00               	movlw	0
  2036  000664  0101               	movlb	1	; () banked
  2037  000666  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
  2038  000668  0E01               	movlw	1
  2039  00066A  6F00               	movwf	StepMove@StepNumber& (0+255),b
  2040  00066C  C108  F102         	movff	RectaAceleracion@i,StepMove@Velocidad
  2041  000670  0E10               	movlw	16
  2042  000672  0101               	movlb	1	; () banked
  2043  000674  6F03               	movwf	StepMove@microstep_number& (0+255),b
  2044  000676  C106  F104         	movff	RectaAceleracion@direccion,StepMove@direccion
  2045  00067A  EC4B  F003         	call	_StepMove	;wreg free
  2046  00067E  0900               	iorlw	0
  2047  000680  B4D8               	btfsc	status,2,c
  2048  000682  D7EF               	goto	l2462
  2049  000684  0101               	movlb	1	; () banked
  2050  000686  0708               	decf	RectaAceleracion@i& (0+255),f,b
  2051  000688                     l2466:
  2052                           
  2053                           ; BSR set to: 1
  2054  000688  0101               	movlb	1	; () banked
  2055  00068A  5108               	movf	RectaAceleracion@i& (0+255),w,b
  2056  00068C  0101               	movlb	1	; () banked
  2057  00068E  5D07               	subwf	RectaAceleracion@velocidad& (0+255),w,b
  2058  000690  B0D8               	btfsc	status,0,c
  2059  000692  0012               	return	
  2060  000694  D7E6               	goto	l2462
  2061  000696                     __end_of_RectaAceleracion:
  2062                           	opt stack 0
  2063                           tblptru	equ	0xFF8
  2064                           tblptrh	equ	0xFF7
  2065                           tblptrl	equ	0xFF6
  2066                           tablat	equ	0xFF5
  2067                           intcon	equ	0xFF2
  2068                           intcon2	equ	0xFF1
  2069                           postinc0	equ	0xFEE
  2070                           wreg	equ	0xFE8
  2071                           postdec1	equ	0xFE5
  2072                           fsr1l	equ	0xFE1
  2073                           status	equ	0xFD8
  2074                           
  2075 ;; *************** function _StepMove *****************
  2076 ;; Defined at:
  2077 ;;		line 288 in file "MotorDriver.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  StepNumber      2    0[BANK1 ] unsigned int 
  2080 ;;  Velocidad       1    2[BANK1 ] unsigned char 
  2081 ;;  microstep_nu    1    3[BANK1 ] unsigned char 
  2082 ;;  direccion       1    4[BANK1 ] unsigned char 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      unsigned char 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2094 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Totals:         2       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;Total ram usage:        7 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    6
  2101 ;; This function calls:
  2102 ;;		_State16MEF_act
  2103 ;;		_State8MEF_act
  2104 ;; This function is called by:
  2105 ;;		_main
  2106 ;;		_RectaAceleracion
  2107 ;;		_RectaFrenado
  2108 ;;		_goDark
  2109 ;;		_goReference
  2110 ;;		_goInitMovement
  2111 ;;		_Measure
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text18
  2116  000696                     __ptext18:
  2117                           	opt stack 0
  2118  000696                     _StepMove:
  2119                           	opt stack 24
  2120                           
  2121                           ;MotorDriver.c: 290: if ((StepCount<StepNumber)){
  2122                           
  2123                           ; BSR set to: 1
  2124                           ;incstack = 0
  2125  000696  0101               	movlb	1	; () banked
  2126  000698  5100               	movf	StepMove@StepNumber& (0+255),w,b
  2127  00069A  5C3E               	subwf	_StepCount,w,c
  2128  00069C  0101               	movlb	1	; () banked
  2129  00069E  5101               	movf	(StepMove@StepNumber+1)& (0+255),w,b
  2130  0006A0  583F               	subwfb	_StepCount+1,w,c
  2131  0006A2  B0D8               	btfsc	status,0,c
  2132  0006A4  D029               	goto	l2444
  2133                           
  2134                           ; BSR set to: 1
  2135                           ;MotorDriver.c: 291: if (Timer2Ticked){
  2136  0006A6  504A               	movf	_Timer2Ticked,w,c	;volatile
  2137  0006A8  B4D8               	btfsc	status,2,c
  2138  0006AA  D023               	goto	l2442
  2139                           
  2140                           ; BSR set to: 1
  2141                           ;MotorDriver.c: 292: Timer2Tick_count++;
  2142  0006AC  4A3C               	infsnz	_Timer2Tick_count,f,c
  2143  0006AE  2A3D               	incf	_Timer2Tick_count+1,f,c
  2144                           
  2145                           ; BSR set to: 1
  2146                           ;MotorDriver.c: 293: if (Timer2Tick_count == Velocidad){
  2147  0006B0  0101               	movlb	1	; () banked
  2148  0006B2  5102               	movf	StepMove@Velocidad& (0+255),w,b
  2149  0006B4  6E35               	movwf	??_StepMove& (0+255),c
  2150  0006B6  6A36               	clrf	(??_StepMove+1)& (0+255),c
  2151  0006B8  503C               	movf	_Timer2Tick_count,w,c
  2152  0006BA  1835               	xorwf	??_StepMove,w,c
  2153  0006BC  E118               	bnz	l2440
  2154  0006BE  503D               	movf	_Timer2Tick_count+1,w,c
  2155  0006C0  1836               	xorwf	??_StepMove+1,w,c
  2156  0006C2  A4D8               	btfss	status,2,c
  2157  0006C4  D014               	goto	l2440
  2158                           
  2159                           ; BSR set to: 1
  2160                           ;MotorDriver.c: 294: if (microstep_number==16){
  2161  0006C6  0E10               	movlw	16
  2162  0006C8  0101               	movlb	1	; () banked
  2163  0006CA  1903               	xorwf	StepMove@microstep_number& (0+255),w,b
  2164  0006CC  A4D8               	btfss	status,2,c
  2165  0006CE  D005               	goto	l2434
  2166                           
  2167                           ; BSR set to: 1
  2168                           ;MotorDriver.c: 295: State16MEF_act( direccion );
  2169  0006D0  0101               	movlb	1	; () banked
  2170  0006D2  5104               	movf	StepMove@direccion& (0+255),w,b
  2171  0006D4  EC85  F001         	call	_State16MEF_act
  2172                           
  2173                           ;MotorDriver.c: 296: }
  2174  0006D8  D004               	goto	l2436
  2175  0006DA                     l2434:
  2176                           
  2177                           ;MotorDriver.c: 297: else{
  2178                           ;MotorDriver.c: 298: State8MEF_act( direccion );
  2179  0006DA  0101               	movlb	1	; () banked
  2180  0006DC  5104               	movf	StepMove@direccion& (0+255),w,b
  2181  0006DE  EC57  F000         	call	_State8MEF_act
  2182  0006E2                     l2436:
  2183                           
  2184                           ;MotorDriver.c: 299: }
  2185                           ;MotorDriver.c: 300: StepCount++;
  2186  0006E2  4A3E               	infsnz	_StepCount,f,c
  2187  0006E4  2A3F               	incf	_StepCount+1,f,c
  2188                           
  2189                           ;MotorDriver.c: 301: Timer2Tick_count=0;
  2190  0006E6  0E00               	movlw	0
  2191  0006E8  6E3D               	movwf	_Timer2Tick_count+1,c
  2192  0006EA  0E00               	movlw	0
  2193  0006EC  6E3C               	movwf	_Timer2Tick_count,c
  2194  0006EE                     l2440:
  2195                           
  2196                           ;MotorDriver.c: 302: }
  2197                           ;MotorDriver.c: 303: Timer2Ticked = 0;
  2198  0006EE  0E00               	movlw	0
  2199  0006F0  6E4A               	movwf	_Timer2Ticked,c	;volatile
  2200  0006F2                     l2442:
  2201                           
  2202                           ;MotorDriver.c: 304: }
  2203                           ;MotorDriver.c: 305: StepsComplete=0;
  2204  0006F2  0E00               	movlw	0
  2205  0006F4  6E48               	movwf	_StepsComplete,c
  2206                           
  2207                           ;MotorDriver.c: 306: }
  2208  0006F6  D006               	goto	l521
  2209  0006F8                     l2444:
  2210                           
  2211                           ;MotorDriver.c: 307: else{
  2212                           ;MotorDriver.c: 308: StepsComplete=1;
  2213  0006F8  0E01               	movlw	1
  2214  0006FA  6E48               	movwf	_StepsComplete,c
  2215                           
  2216                           ;MotorDriver.c: 309: StepCount=0;
  2217  0006FC  0E00               	movlw	0
  2218  0006FE  6E3F               	movwf	_StepCount+1,c
  2219  000700  0E00               	movlw	0
  2220  000702  6E3E               	movwf	_StepCount,c
  2221  000704                     l521:
  2222                           
  2223                           ;MotorDriver.c: 311: }
  2224                           ;MotorDriver.c: 312: return(StepsComplete);
  2225  000704  5048               	movf	_StepsComplete,w,c
  2226  000706  0012               	return	
  2227  000708                     __end_of_StepMove:
  2228                           	opt stack 0
  2229                           tblptru	equ	0xFF8
  2230                           tblptrh	equ	0xFF7
  2231                           tblptrl	equ	0xFF6
  2232                           tablat	equ	0xFF5
  2233                           intcon	equ	0xFF2
  2234                           intcon2	equ	0xFF1
  2235                           postinc0	equ	0xFEE
  2236                           wreg	equ	0xFE8
  2237                           postdec1	equ	0xFE5
  2238                           fsr1l	equ	0xFE1
  2239                           status	equ	0xFD8
  2240                           
  2241 ;; *************** function _State8MEF_act *****************
  2242 ;; Defined at:
  2243 ;;		line 68 in file "MotorDriver.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  direccion       1    wreg     unsigned char 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  direccion       1   19[COMRAM] unsigned char 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;Total ram usage:        2 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    5
  2264 ;; This function calls:
  2265 ;;		_EPWM1_LoadDutyValue
  2266 ;;		_EPWM2_LoadDutyValue
  2267 ;; This function is called by:
  2268 ;;		_StepMove
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text19
  2273  0000AE                     __ptext19:
  2274                           	opt stack 0
  2275  0000AE                     _State8MEF_act:
  2276                           	opt stack 24
  2277                           
  2278                           ;incstack = 0
  2279                           ;State8MEF_act@direccion stored from wreg
  2280  0000AE  6E34               	movwf	State8MEF_act@direccion,c
  2281                           
  2282                           ;MotorDriver.c: 70: switch(EstadoActual) {
  2283  0000B0  D11D               	goto	l2310
  2284  0000B2                     l2204:
  2285                           
  2286                           ;MotorDriver.c: 72: PSTR1CON = 0x01; PSTR2CON = 0x01;
  2287  0000B2  0E01               	movlw	1
  2288  0000B4  6EB9               	movwf	4025,c	;volatile
  2289  0000B6  0E01               	movlw	1
  2290  0000B8  6E63               	movwf	3939,c	;volatile
  2291                           
  2292                           ;MotorDriver.c: 73: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  2293  0000BA  9A8C               	bcf	3980,5,c	;volatile
  2294  0000BC  908B               	bcf	3979,0,c	;volatile
  2295                           
  2296                           ;MotorDriver.c: 74: if (Microstep<8){
  2297  0000BE  BE41               	btfsc	_Microstep+1,7,c
  2298  0000C0  D006               	goto	l2212
  2299  0000C2  5041               	movf	_Microstep+1,w,c
  2300  0000C4  E103               	bnz	u1531
  2301  0000C6  0E08               	movlw	8
  2302  0000C8  5C40               	subwf	_Microstep,w,c
  2303  0000CA  B0D8               	btfsc	status,0,c
  2304  0000CC                     u1531:
  2305  0000CC  0012               	return	
  2306  0000CE                     l2212:
  2307                           
  2308                           ;MotorDriver.c: 78: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2309  0000CE  0E01               	movlw	low _LookUP_TABLE_COS
  2310  0000D0  2440               	addwf	_Microstep,w,c
  2311  0000D2  6ED9               	movwf	fsr2l,c
  2312  0000D4  0E00               	movlw	high _LookUP_TABLE_COS
  2313  0000D6  2041               	addwfc	_Microstep+1,w,c
  2314  0000D8  6EDA               	movwf	fsr2h,c
  2315  0000DA  50DF               	movf	indf2,w,c
  2316  0000DC  6E33               	movwf	??_State8MEF_act& (0+255),c
  2317  0000DE  5033               	movf	??_State8MEF_act,w,c
  2318  0000E0  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2319  0000E2  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2320  0000E4  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2321                           
  2322                           ;MotorDriver.c: 79: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2323  0000E8  0EE0               	movlw	low _LookUP_TABLE_SEN
  2324  0000EA  2440               	addwf	_Microstep,w,c
  2325  0000EC  6ED9               	movwf	fsr2l,c
  2326  0000EE  0E00               	movlw	high _LookUP_TABLE_SEN
  2327  0000F0  2041               	addwfc	_Microstep+1,w,c
  2328  0000F2  6EDA               	movwf	fsr2h,c
  2329  0000F4  50DF               	movf	indf2,w,c
  2330  0000F6  6E33               	movwf	??_State8MEF_act& (0+255),c
  2331  0000F8  5033               	movf	??_State8MEF_act,w,c
  2332  0000FA  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2333  0000FC  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2334  0000FE  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2335                           
  2336                           ;MotorDriver.c: 81: if (direccion == 1){
  2337  000102  0434               	decf	State8MEF_act@direccion,w,c
  2338  000104  A4D8               	btfss	status,2,c
  2339  000106  D00A               	goto	l2222
  2340                           
  2341                           ;MotorDriver.c: 82: if (Microstep==7){
  2342  000108  0E07               	movlw	7
  2343  00010A  1840               	xorwf	_Microstep,w,c
  2344  00010C  1041               	iorwf	_Microstep+1,w,c
  2345  00010E  A4D8               	btfss	status,2,c
  2346  000110  D002               	goto	l2220
  2347                           
  2348                           ;MotorDriver.c: 83: EstadoActual = STATE2;
  2349  000112  0E02               	movlw	2
  2350  000114  6E4F               	movwf	_EstadoActual,c
  2351  000116                     l2220:
  2352                           
  2353                           ;MotorDriver.c: 84: }
  2354                           ;MotorDriver.c: 85: Microstep++;
  2355  000116  4A40               	infsnz	_Microstep,f,c
  2356  000118  2A41               	incf	_Microstep+1,f,c
  2357                           
  2358                           ;MotorDriver.c: 86: }
  2359  00011A  0012               	return	
  2360  00011C                     l2222:
  2361                           
  2362                           ;MotorDriver.c: 87: else{
  2363                           ;MotorDriver.c: 88: if (Microstep==0){
  2364  00011C  5040               	movf	_Microstep,w,c
  2365  00011E  1041               	iorwf	_Microstep+1,w,c
  2366  000120  A4D8               	btfss	status,2,c
  2367  000122  D006               	goto	l2226
  2368                           
  2369                           ;MotorDriver.c: 89: EstadoActual = STATE4;
  2370  000124  0E04               	movlw	4
  2371  000126  6E4F               	movwf	_EstadoActual,c
  2372                           
  2373                           ;MotorDriver.c: 90: Microstep=31;
  2374  000128  0E00               	movlw	0
  2375  00012A  6E41               	movwf	_Microstep+1,c
  2376  00012C  0E1F               	movlw	31
  2377  00012E  6E40               	movwf	_Microstep,c
  2378  000130                     l2226:
  2379                           
  2380                           ;MotorDriver.c: 91: }
  2381                           ;MotorDriver.c: 92: Microstep--;
  2382  000130  0640               	decf	_Microstep,f,c
  2383  000132  A0D8               	btfss	status,0,c
  2384  000134  0641               	decf	_Microstep+1,f,c
  2385                           
  2386                           ;MotorDriver.c: 93: }
  2387                           ;MotorDriver.c: 94: }
  2388                           ;MotorDriver.c: 95: break;
  2389  000136  0012               	return	
  2390  000138                     l2228:
  2391                           
  2392                           ;MotorDriver.c: 97: PSTR1CON = 0x02; PSTR2CON = 0x01;
  2393  000138  0E02               	movlw	2
  2394  00013A  6EB9               	movwf	4025,c	;volatile
  2395  00013C  0E01               	movlw	1
  2396  00013E  6E63               	movwf	3939,c	;volatile
  2397                           
  2398                           ;MotorDriver.c: 98: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  2399  000140  948B               	bcf	3979,2,c	;volatile
  2400  000142  908B               	bcf	3979,0,c	;volatile
  2401                           
  2402                           ;MotorDriver.c: 99: if ((Microstep<16)&&(Microstep>7)){
  2403  000144  BE41               	btfsc	_Microstep+1,7,c
  2404  000146  D006               	goto	l2236
  2405  000148  5041               	movf	_Microstep+1,w,c
  2406  00014A  E103               	bnz	u1571
  2407  00014C  0E10               	movlw	16
  2408  00014E  5C40               	subwf	_Microstep,w,c
  2409  000150  B0D8               	btfsc	status,0,c
  2410  000152                     u1571:
  2411  000152  0012               	return	
  2412  000154                     l2236:
  2413  000154  BE41               	btfsc	_Microstep+1,7,c
  2414  000156  0012               	return	
  2415  000158  5041               	movf	_Microstep+1,w,c
  2416  00015A  E104               	bnz	u1580
  2417  00015C  0E08               	movlw	8
  2418  00015E  5C40               	subwf	_Microstep,w,c
  2419  000160  A0D8               	btfss	status,0,c
  2420  000162  0012               	return	
  2421  000164                     u1580:
  2422                           
  2423                           ;MotorDriver.c: 104: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2424  000164  0E01               	movlw	low _LookUP_TABLE_COS
  2425  000166  2440               	addwf	_Microstep,w,c
  2426  000168  6ED9               	movwf	fsr2l,c
  2427  00016A  0E00               	movlw	high _LookUP_TABLE_COS
  2428  00016C  2041               	addwfc	_Microstep+1,w,c
  2429  00016E  6EDA               	movwf	fsr2h,c
  2430  000170  50DF               	movf	indf2,w,c
  2431  000172  6E33               	movwf	??_State8MEF_act& (0+255),c
  2432  000174  5033               	movf	??_State8MEF_act,w,c
  2433  000176  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2434  000178  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2435  00017A  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2436                           
  2437                           ;MotorDriver.c: 105: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2438  00017E  0EE0               	movlw	low _LookUP_TABLE_SEN
  2439  000180  2440               	addwf	_Microstep,w,c
  2440  000182  6ED9               	movwf	fsr2l,c
  2441  000184  0E00               	movlw	high _LookUP_TABLE_SEN
  2442  000186  2041               	addwfc	_Microstep+1,w,c
  2443  000188  6EDA               	movwf	fsr2h,c
  2444  00018A  50DF               	movf	indf2,w,c
  2445  00018C  6E33               	movwf	??_State8MEF_act& (0+255),c
  2446  00018E  5033               	movf	??_State8MEF_act,w,c
  2447  000190  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2448  000192  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2449  000194  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2450                           
  2451                           ;MotorDriver.c: 107: if (direccion == 1){
  2452  000198  0434               	decf	State8MEF_act@direccion,w,c
  2453  00019A  A4D8               	btfss	status,2,c
  2454  00019C  D00A               	goto	l2248
  2455                           
  2456                           ;MotorDriver.c: 108: if (Microstep==15){
  2457  00019E  0E0F               	movlw	15
  2458  0001A0  1840               	xorwf	_Microstep,w,c
  2459  0001A2  1041               	iorwf	_Microstep+1,w,c
  2460  0001A4  A4D8               	btfss	status,2,c
  2461  0001A6  D002               	goto	l2246
  2462                           
  2463                           ;MotorDriver.c: 109: EstadoActual = STATE3;
  2464  0001A8  0E03               	movlw	3
  2465  0001AA  6E4F               	movwf	_EstadoActual,c
  2466  0001AC                     l2246:
  2467                           
  2468                           ;MotorDriver.c: 110: }
  2469                           ;MotorDriver.c: 111: Microstep++;
  2470  0001AC  4A40               	infsnz	_Microstep,f,c
  2471  0001AE  2A41               	incf	_Microstep+1,f,c
  2472                           
  2473                           ;MotorDriver.c: 112: }
  2474  0001B0  0012               	return	
  2475  0001B2                     l2248:
  2476                           
  2477                           ;MotorDriver.c: 113: else{
  2478                           ;MotorDriver.c: 114: if (Microstep==8){
  2479  0001B2  0E08               	movlw	8
  2480  0001B4  1840               	xorwf	_Microstep,w,c
  2481  0001B6  1041               	iorwf	_Microstep+1,w,c
  2482  0001B8  A4D8               	btfss	status,2,c
  2483  0001BA  D002               	goto	l2252
  2484                           
  2485                           ;MotorDriver.c: 115: EstadoActual = STATE1;
  2486  0001BC  0E01               	movlw	1
  2487  0001BE  6E4F               	movwf	_EstadoActual,c
  2488  0001C0                     l2252:
  2489                           
  2490                           ;MotorDriver.c: 116: }
  2491                           ;MotorDriver.c: 117: Microstep--;
  2492  0001C0  0640               	decf	_Microstep,f,c
  2493  0001C2  A0D8               	btfss	status,0,c
  2494  0001C4  0641               	decf	_Microstep+1,f,c
  2495                           
  2496                           ;MotorDriver.c: 118: }
  2497                           ;MotorDriver.c: 119: }
  2498                           ;MotorDriver.c: 120: break;
  2499  0001C6  0012               	return	
  2500  0001C8                     l2254:
  2501                           
  2502                           ;MotorDriver.c: 122: PSTR1CON = 0x02; PSTR2CON = 0x02;
  2503  0001C8  0E02               	movlw	2
  2504  0001CA  6EB9               	movwf	4025,c	;volatile
  2505  0001CC  0E02               	movlw	2
  2506  0001CE  6E63               	movwf	3939,c	;volatile
  2507                           
  2508                           ;MotorDriver.c: 123: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2509  0001D0  948B               	bcf	3979,2,c	;volatile
  2510  0001D2  928B               	bcf	3979,1,c	;volatile
  2511                           
  2512                           ;MotorDriver.c: 124: if ((Microstep<24)&&(Microstep>15)){
  2513  0001D4  BE41               	btfsc	_Microstep+1,7,c
  2514  0001D6  D006               	goto	l2262
  2515  0001D8  5041               	movf	_Microstep+1,w,c
  2516  0001DA  E103               	bnz	u1621
  2517  0001DC  0E18               	movlw	24
  2518  0001DE  5C40               	subwf	_Microstep,w,c
  2519  0001E0  B0D8               	btfsc	status,0,c
  2520  0001E2                     u1621:
  2521  0001E2  0012               	return	
  2522  0001E4                     l2262:
  2523  0001E4  BE41               	btfsc	_Microstep+1,7,c
  2524  0001E6  0012               	return	
  2525  0001E8  5041               	movf	_Microstep+1,w,c
  2526  0001EA  E104               	bnz	u1630
  2527  0001EC  0E10               	movlw	16
  2528  0001EE  5C40               	subwf	_Microstep,w,c
  2529  0001F0  A0D8               	btfss	status,0,c
  2530  0001F2  0012               	return	
  2531  0001F4                     u1630:
  2532                           
  2533                           ;MotorDriver.c: 129: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2534  0001F4  0E01               	movlw	low _LookUP_TABLE_COS
  2535  0001F6  2440               	addwf	_Microstep,w,c
  2536  0001F8  6ED9               	movwf	fsr2l,c
  2537  0001FA  0E00               	movlw	high _LookUP_TABLE_COS
  2538  0001FC  2041               	addwfc	_Microstep+1,w,c
  2539  0001FE  6EDA               	movwf	fsr2h,c
  2540  000200  50DF               	movf	indf2,w,c
  2541  000202  6E33               	movwf	??_State8MEF_act& (0+255),c
  2542  000204  5033               	movf	??_State8MEF_act,w,c
  2543  000206  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2544  000208  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2545  00020A  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2546                           
  2547                           ;MotorDriver.c: 130: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2548  00020E  0EE0               	movlw	low _LookUP_TABLE_SEN
  2549  000210  2440               	addwf	_Microstep,w,c
  2550  000212  6ED9               	movwf	fsr2l,c
  2551  000214  0E00               	movlw	high _LookUP_TABLE_SEN
  2552  000216  2041               	addwfc	_Microstep+1,w,c
  2553  000218  6EDA               	movwf	fsr2h,c
  2554  00021A  50DF               	movf	indf2,w,c
  2555  00021C  6E33               	movwf	??_State8MEF_act& (0+255),c
  2556  00021E  5033               	movf	??_State8MEF_act,w,c
  2557  000220  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2558  000222  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2559  000224  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2560                           
  2561                           ;MotorDriver.c: 132: if (direccion == 1){
  2562  000228  0434               	decf	State8MEF_act@direccion,w,c
  2563  00022A  A4D8               	btfss	status,2,c
  2564  00022C  D00A               	goto	l2274
  2565                           
  2566                           ;MotorDriver.c: 133: if (Microstep==23){
  2567  00022E  0E17               	movlw	23
  2568  000230  1840               	xorwf	_Microstep,w,c
  2569  000232  1041               	iorwf	_Microstep+1,w,c
  2570  000234  A4D8               	btfss	status,2,c
  2571  000236  D002               	goto	l2272
  2572                           
  2573                           ;MotorDriver.c: 134: EstadoActual = STATE4;
  2574  000238  0E04               	movlw	4
  2575  00023A  6E4F               	movwf	_EstadoActual,c
  2576  00023C                     l2272:
  2577                           
  2578                           ;MotorDriver.c: 135: }
  2579                           ;MotorDriver.c: 136: Microstep++;
  2580  00023C  4A40               	infsnz	_Microstep,f,c
  2581  00023E  2A41               	incf	_Microstep+1,f,c
  2582                           
  2583                           ;MotorDriver.c: 137: }
  2584  000240  0012               	return	
  2585  000242                     l2274:
  2586                           
  2587                           ;MotorDriver.c: 138: else{
  2588                           ;MotorDriver.c: 139: if (Microstep==16){
  2589  000242  0E10               	movlw	16
  2590  000244  1840               	xorwf	_Microstep,w,c
  2591  000246  1041               	iorwf	_Microstep+1,w,c
  2592  000248  A4D8               	btfss	status,2,c
  2593  00024A  D002               	goto	l2278
  2594                           
  2595                           ;MotorDriver.c: 140: EstadoActual = STATE2;
  2596  00024C  0E02               	movlw	2
  2597  00024E  6E4F               	movwf	_EstadoActual,c
  2598  000250                     l2278:
  2599                           
  2600                           ;MotorDriver.c: 141: }
  2601                           ;MotorDriver.c: 142: Microstep--;
  2602  000250  0640               	decf	_Microstep,f,c
  2603  000252  A0D8               	btfss	status,0,c
  2604  000254  0641               	decf	_Microstep+1,f,c
  2605                           
  2606                           ;MotorDriver.c: 143: }
  2607                           ;MotorDriver.c: 144: }
  2608                           ;MotorDriver.c: 145: break;
  2609  000256  0012               	return	
  2610  000258                     l2280:
  2611                           
  2612                           ;MotorDriver.c: 147: PSTR1CON = 0x01; PSTR2CON = 0x02;
  2613  000258  0E01               	movlw	1
  2614  00025A  6EB9               	movwf	4025,c	;volatile
  2615  00025C  0E02               	movlw	2
  2616  00025E  6E63               	movwf	3939,c	;volatile
  2617                           
  2618                           ;MotorDriver.c: 148: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2619  000260  9A8C               	bcf	3980,5,c	;volatile
  2620  000262  928B               	bcf	3979,1,c	;volatile
  2621                           
  2622                           ;MotorDriver.c: 149: if ((Microstep<32)&&(Microstep>23)){
  2623  000264  BE41               	btfsc	_Microstep+1,7,c
  2624  000266  D006               	goto	l2288
  2625  000268  5041               	movf	_Microstep+1,w,c
  2626  00026A  E14E               	bnz	l467
  2627  00026C  0E20               	movlw	32
  2628  00026E  5C40               	subwf	_Microstep,w,c
  2629  000270  B0D8               	btfsc	status,0,c
  2630  000272  0012               	return	
  2631  000274                     l2288:
  2632  000274  BE41               	btfsc	_Microstep+1,7,c
  2633  000276  0012               	return	
  2634  000278  5041               	movf	_Microstep+1,w,c
  2635  00027A  E104               	bnz	u1680
  2636  00027C  0E18               	movlw	24
  2637  00027E  5C40               	subwf	_Microstep,w,c
  2638  000280  A0D8               	btfss	status,0,c
  2639  000282  0012               	return	
  2640  000284                     u1680:
  2641                           
  2642                           ;MotorDriver.c: 154: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2643  000284  0E01               	movlw	low _LookUP_TABLE_COS
  2644  000286  2440               	addwf	_Microstep,w,c
  2645  000288  6ED9               	movwf	fsr2l,c
  2646  00028A  0E00               	movlw	high _LookUP_TABLE_COS
  2647  00028C  2041               	addwfc	_Microstep+1,w,c
  2648  00028E  6EDA               	movwf	fsr2h,c
  2649  000290  50DF               	movf	indf2,w,c
  2650  000292  6E33               	movwf	??_State8MEF_act& (0+255),c
  2651  000294  5033               	movf	??_State8MEF_act,w,c
  2652  000296  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2653  000298  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2654  00029A  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2655                           
  2656                           ;MotorDriver.c: 155: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2657  00029E  0EE0               	movlw	low _LookUP_TABLE_SEN
  2658  0002A0  2440               	addwf	_Microstep,w,c
  2659  0002A2  6ED9               	movwf	fsr2l,c
  2660  0002A4  0E00               	movlw	high _LookUP_TABLE_SEN
  2661  0002A6  2041               	addwfc	_Microstep+1,w,c
  2662  0002A8  6EDA               	movwf	fsr2h,c
  2663  0002AA  50DF               	movf	indf2,w,c
  2664  0002AC  6E33               	movwf	??_State8MEF_act& (0+255),c
  2665  0002AE  5033               	movf	??_State8MEF_act,w,c
  2666  0002B0  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2667  0002B2  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2668  0002B4  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2669                           
  2670                           ;MotorDriver.c: 157: if (direccion == 1){
  2671  0002B8  0434               	decf	State8MEF_act@direccion,w,c
  2672  0002BA  A4D8               	btfss	status,2,c
  2673  0002BC  D00C               	goto	l2302
  2674                           
  2675                           ;MotorDriver.c: 158: if (Microstep==31){
  2676  0002BE  0E1F               	movlw	31
  2677  0002C0  1840               	xorwf	_Microstep,w,c
  2678  0002C2  1041               	iorwf	_Microstep+1,w,c
  2679  0002C4  A4D8               	btfss	status,2,c
  2680  0002C6  D004               	goto	l2300
  2681                           
  2682                           ;MotorDriver.c: 159: EstadoActual = STATE1;
  2683  0002C8  0E01               	movlw	1
  2684  0002CA  6E4F               	movwf	_EstadoActual,c
  2685                           
  2686                           ;MotorDriver.c: 160: Microstep=-1;
  2687  0002CC  6840               	setf	_Microstep,c
  2688  0002CE  6841               	setf	_Microstep+1,c
  2689  0002D0                     l2300:
  2690                           
  2691                           ;MotorDriver.c: 161: }
  2692                           ;MotorDriver.c: 162: Microstep++;
  2693  0002D0  4A40               	infsnz	_Microstep,f,c
  2694  0002D2  2A41               	incf	_Microstep+1,f,c
  2695                           
  2696                           ;MotorDriver.c: 163: }
  2697  0002D4  0012               	return	
  2698  0002D6                     l2302:
  2699                           
  2700                           ;MotorDriver.c: 164: else{
  2701                           ;MotorDriver.c: 165: if (Microstep==24){
  2702  0002D6  0E18               	movlw	24
  2703  0002D8  1840               	xorwf	_Microstep,w,c
  2704  0002DA  1041               	iorwf	_Microstep+1,w,c
  2705  0002DC  A4D8               	btfss	status,2,c
  2706  0002DE  D002               	goto	l2306
  2707                           
  2708                           ;MotorDriver.c: 166: EstadoActual = STATE3;
  2709  0002E0  0E03               	movlw	3
  2710  0002E2  6E4F               	movwf	_EstadoActual,c
  2711  0002E4                     l2306:
  2712                           
  2713                           ;MotorDriver.c: 167: }
  2714                           ;MotorDriver.c: 168: Microstep--;
  2715  0002E4  0640               	decf	_Microstep,f,c
  2716  0002E6  A0D8               	btfss	status,0,c
  2717  0002E8  0641               	decf	_Microstep+1,f,c
  2718                           
  2719                           ;MotorDriver.c: 175: }
  2720                           
  2721                           ;MotorDriver.c: 174: break;
  2722                           
  2723                           ;MotorDriver.c: 172: default:
  2724                           
  2725                           ;MotorDriver.c: 169: }
  2726                           ;MotorDriver.c: 170: }
  2727                           ;MotorDriver.c: 171: break;
  2728  0002EA  0012               	return	
  2729  0002EC                     l2310:
  2730  0002EC  504F               	movf	_EstadoActual,w,c
  2731                           
  2732                           ; Switch size 1, requested type "space"
  2733                           ; Number of cases is 4, Range of values is 1 to 4
  2734                           ; switch strategies available:
  2735                           ; Name         Instructions Cycles
  2736                           ; simple_byte           13     7 (average)
  2737                           ;	Chosen strategy is simple_byte
  2738  0002EE  0A01               	xorlw	1	; case 1
  2739  0002F0  B4D8               	btfsc	status,2,c
  2740  0002F2  D6DF               	goto	l2204
  2741  0002F4  0A03               	xorlw	3	; case 2
  2742  0002F6  B4D8               	btfsc	status,2,c
  2743  0002F8  D71F               	goto	l2228
  2744  0002FA  0A01               	xorlw	1	; case 3
  2745  0002FC  B4D8               	btfsc	status,2,c
  2746  0002FE  D764               	goto	l2254
  2747  000300  0A07               	xorlw	7	; case 4
  2748  000302  A4D8               	btfss	status,2,c
  2749  000304  0012               	return	
  2750  000306  D7A8               	goto	l2280
  2751  000308                     l467:
  2752  000308  0012               	return		;funcret
  2753  00030A                     __end_of_State8MEF_act:
  2754                           	opt stack 0
  2755                           tblptru	equ	0xFF8
  2756                           tblptrh	equ	0xFF7
  2757                           tblptrl	equ	0xFF6
  2758                           tablat	equ	0xFF5
  2759                           intcon	equ	0xFF2
  2760                           intcon2	equ	0xFF1
  2761                           postinc0	equ	0xFEE
  2762                           wreg	equ	0xFE8
  2763                           postdec1	equ	0xFE5
  2764                           fsr1l	equ	0xFE1
  2765                           indf2	equ	0xFDF
  2766                           fsr2h	equ	0xFDA
  2767                           fsr2l	equ	0xFD9
  2768                           status	equ	0xFD8
  2769                           
  2770 ;; *************** function _State16MEF_act *****************
  2771 ;; Defined at:
  2772 ;;		line 178 in file "MotorDriver.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  direccion       1    wreg     unsigned char 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  direccion       1   19[COMRAM] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;Total ram usage:        2 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    5
  2793 ;; This function calls:
  2794 ;;		_EPWM1_LoadDutyValue
  2795 ;;		_EPWM2_LoadDutyValue
  2796 ;; This function is called by:
  2797 ;;		_StepMove
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text20
  2802  00030A                     __ptext20:
  2803                           	opt stack 0
  2804  00030A                     _State16MEF_act:
  2805                           	opt stack 24
  2806                           
  2807                           ;incstack = 0
  2808                           ;State16MEF_act@direccion stored from wreg
  2809  00030A  6E34               	movwf	State16MEF_act@direccion,c
  2810                           
  2811                           ;MotorDriver.c: 180: switch(EstadoActual) {
  2812  00030C  D11D               	goto	l2420
  2813  00030E                     l2314:
  2814                           
  2815                           ;MotorDriver.c: 182: PSTR1CON = 0x01; PSTR2CON = 0x01;
  2816  00030E  0E01               	movlw	1
  2817  000310  6EB9               	movwf	4025,c	;volatile
  2818  000312  0E01               	movlw	1
  2819  000314  6E63               	movwf	3939,c	;volatile
  2820                           
  2821                           ;MotorDriver.c: 183: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2822  000316  9A8C               	bcf	3980,5,c	;volatile
  2823  000318  908B               	bcf	3979,0,c	;volatile
  2824                           
  2825                           ;MotorDriver.c: 184: if (Microstep<16){
  2826  00031A  BE41               	btfsc	_Microstep+1,7,c
  2827  00031C  D006               	goto	l2322
  2828  00031E  5041               	movf	_Microstep+1,w,c
  2829  000320  E103               	bnz	u1721
  2830  000322  0E10               	movlw	16
  2831  000324  5C40               	subwf	_Microstep,w,c
  2832  000326  B0D8               	btfsc	status,0,c
  2833  000328                     u1721:
  2834  000328  0012               	return	
  2835  00032A                     l2322:
  2836                           
  2837                           ;MotorDriver.c: 188: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2838  00032A  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2839  00032C  2440               	addwf	_Microstep,w,c
  2840  00032E  6ED9               	movwf	fsr2l,c
  2841  000330  0E00               	movlw	high _LookUP_TABLE_COS_16
  2842  000332  2041               	addwfc	_Microstep+1,w,c
  2843  000334  6EDA               	movwf	fsr2h,c
  2844  000336  50DF               	movf	indf2,w,c
  2845  000338  6E33               	movwf	??_State16MEF_act& (0+255),c
  2846  00033A  5033               	movf	??_State16MEF_act,w,c
  2847  00033C  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2848  00033E  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2849  000340  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2850                           
  2851                           ;MotorDriver.c: 189: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2852  000344  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2853  000346  2440               	addwf	_Microstep,w,c
  2854  000348  6ED9               	movwf	fsr2l,c
  2855  00034A  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2856  00034C  2041               	addwfc	_Microstep+1,w,c
  2857  00034E  6EDA               	movwf	fsr2h,c
  2858  000350  50DF               	movf	indf2,w,c
  2859  000352  6E33               	movwf	??_State16MEF_act& (0+255),c
  2860  000354  5033               	movf	??_State16MEF_act,w,c
  2861  000356  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2862  000358  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2863  00035A  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2864                           
  2865                           ;MotorDriver.c: 191: if (direccion == 1){
  2866  00035E  0434               	decf	State16MEF_act@direccion,w,c
  2867  000360  A4D8               	btfss	status,2,c
  2868  000362  D00A               	goto	l2332
  2869                           
  2870                           ;MotorDriver.c: 192: if (Microstep==15){
  2871  000364  0E0F               	movlw	15
  2872  000366  1840               	xorwf	_Microstep,w,c
  2873  000368  1041               	iorwf	_Microstep+1,w,c
  2874  00036A  A4D8               	btfss	status,2,c
  2875  00036C  D002               	goto	l2330
  2876                           
  2877                           ;MotorDriver.c: 193: EstadoActual = STATE2;
  2878  00036E  0E02               	movlw	2
  2879  000370  6E4F               	movwf	_EstadoActual,c
  2880  000372                     l2330:
  2881                           
  2882                           ;MotorDriver.c: 194: }
  2883                           ;MotorDriver.c: 195: Microstep++;
  2884  000372  4A40               	infsnz	_Microstep,f,c
  2885  000374  2A41               	incf	_Microstep+1,f,c
  2886                           
  2887                           ;MotorDriver.c: 196: }
  2888  000376  0012               	return	
  2889  000378                     l2332:
  2890                           
  2891                           ;MotorDriver.c: 197: else{
  2892                           ;MotorDriver.c: 198: if (Microstep==0){
  2893  000378  5040               	movf	_Microstep,w,c
  2894  00037A  1041               	iorwf	_Microstep+1,w,c
  2895  00037C  A4D8               	btfss	status,2,c
  2896  00037E  D006               	goto	l2336
  2897                           
  2898                           ;MotorDriver.c: 199: EstadoActual = STATE4;
  2899  000380  0E04               	movlw	4
  2900  000382  6E4F               	movwf	_EstadoActual,c
  2901                           
  2902                           ;MotorDriver.c: 200: Microstep=63;
  2903  000384  0E00               	movlw	0
  2904  000386  6E41               	movwf	_Microstep+1,c
  2905  000388  0E3F               	movlw	63
  2906  00038A  6E40               	movwf	_Microstep,c
  2907  00038C                     l2336:
  2908                           
  2909                           ;MotorDriver.c: 201: }
  2910                           ;MotorDriver.c: 202: Microstep--;
  2911  00038C  0640               	decf	_Microstep,f,c
  2912  00038E  A0D8               	btfss	status,0,c
  2913  000390  0641               	decf	_Microstep+1,f,c
  2914                           
  2915                           ;MotorDriver.c: 203: }
  2916                           ;MotorDriver.c: 204: }
  2917                           ;MotorDriver.c: 205: break;
  2918  000392  0012               	return	
  2919  000394                     l2338:
  2920                           
  2921                           ;MotorDriver.c: 207: PSTR1CON = 0x02; PSTR2CON = 0x01;
  2922  000394  0E02               	movlw	2
  2923  000396  6EB9               	movwf	4025,c	;volatile
  2924  000398  0E01               	movlw	1
  2925  00039A  6E63               	movwf	3939,c	;volatile
  2926                           
  2927                           ;MotorDriver.c: 208: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2928  00039C  948B               	bcf	3979,2,c	;volatile
  2929  00039E  908B               	bcf	3979,0,c	;volatile
  2930                           
  2931                           ;MotorDriver.c: 209: if ((Microstep<32)&&(Microstep>15)){
  2932  0003A0  BE41               	btfsc	_Microstep+1,7,c
  2933  0003A2  D006               	goto	l2346
  2934  0003A4  5041               	movf	_Microstep+1,w,c
  2935  0003A6  E103               	bnz	u1761
  2936  0003A8  0E20               	movlw	32
  2937  0003AA  5C40               	subwf	_Microstep,w,c
  2938  0003AC  B0D8               	btfsc	status,0,c
  2939  0003AE                     u1761:
  2940  0003AE  0012               	return	
  2941  0003B0                     l2346:
  2942  0003B0  BE41               	btfsc	_Microstep+1,7,c
  2943  0003B2  0012               	return	
  2944  0003B4  5041               	movf	_Microstep+1,w,c
  2945  0003B6  E104               	bnz	u1770
  2946  0003B8  0E10               	movlw	16
  2947  0003BA  5C40               	subwf	_Microstep,w,c
  2948  0003BC  A0D8               	btfss	status,0,c
  2949  0003BE  0012               	return	
  2950  0003C0                     u1770:
  2951                           
  2952                           ;MotorDriver.c: 214: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2953  0003C0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2954  0003C2  2440               	addwf	_Microstep,w,c
  2955  0003C4  6ED9               	movwf	fsr2l,c
  2956  0003C6  0E00               	movlw	high _LookUP_TABLE_COS_16
  2957  0003C8  2041               	addwfc	_Microstep+1,w,c
  2958  0003CA  6EDA               	movwf	fsr2h,c
  2959  0003CC  50DF               	movf	indf2,w,c
  2960  0003CE  6E33               	movwf	??_State16MEF_act& (0+255),c
  2961  0003D0  5033               	movf	??_State16MEF_act,w,c
  2962  0003D2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2963  0003D4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2964  0003D6  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2965                           
  2966                           ;MotorDriver.c: 215: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2967  0003DA  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2968  0003DC  2440               	addwf	_Microstep,w,c
  2969  0003DE  6ED9               	movwf	fsr2l,c
  2970  0003E0  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2971  0003E2  2041               	addwfc	_Microstep+1,w,c
  2972  0003E4  6EDA               	movwf	fsr2h,c
  2973  0003E6  50DF               	movf	indf2,w,c
  2974  0003E8  6E33               	movwf	??_State16MEF_act& (0+255),c
  2975  0003EA  5033               	movf	??_State16MEF_act,w,c
  2976  0003EC  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2977  0003EE  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2978  0003F0  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2979                           
  2980                           ;MotorDriver.c: 217: if (direccion == 1){
  2981  0003F4  0434               	decf	State16MEF_act@direccion,w,c
  2982  0003F6  A4D8               	btfss	status,2,c
  2983  0003F8  D00A               	goto	l2358
  2984                           
  2985                           ;MotorDriver.c: 218: if (Microstep==31){
  2986  0003FA  0E1F               	movlw	31
  2987  0003FC  1840               	xorwf	_Microstep,w,c
  2988  0003FE  1041               	iorwf	_Microstep+1,w,c
  2989  000400  A4D8               	btfss	status,2,c
  2990  000402  D002               	goto	l2356
  2991                           
  2992                           ;MotorDriver.c: 219: EstadoActual = STATE3;
  2993  000404  0E03               	movlw	3
  2994  000406  6E4F               	movwf	_EstadoActual,c
  2995  000408                     l2356:
  2996                           
  2997                           ;MotorDriver.c: 220: }
  2998                           ;MotorDriver.c: 221: Microstep++;
  2999  000408  4A40               	infsnz	_Microstep,f,c
  3000  00040A  2A41               	incf	_Microstep+1,f,c
  3001                           
  3002                           ;MotorDriver.c: 222: }
  3003  00040C  0012               	return	
  3004  00040E                     l2358:
  3005                           
  3006                           ;MotorDriver.c: 223: else{
  3007                           ;MotorDriver.c: 224: if (Microstep==16){
  3008  00040E  0E10               	movlw	16
  3009  000410  1840               	xorwf	_Microstep,w,c
  3010  000412  1041               	iorwf	_Microstep+1,w,c
  3011  000414  A4D8               	btfss	status,2,c
  3012  000416  D002               	goto	l2362
  3013                           
  3014                           ;MotorDriver.c: 225: EstadoActual = STATE1;
  3015  000418  0E01               	movlw	1
  3016  00041A  6E4F               	movwf	_EstadoActual,c
  3017  00041C                     l2362:
  3018                           
  3019                           ;MotorDriver.c: 226: }
  3020                           ;MotorDriver.c: 227: Microstep--;
  3021  00041C  0640               	decf	_Microstep,f,c
  3022  00041E  A0D8               	btfss	status,0,c
  3023  000420  0641               	decf	_Microstep+1,f,c
  3024                           
  3025                           ;MotorDriver.c: 228: }
  3026                           ;MotorDriver.c: 229: }
  3027                           ;MotorDriver.c: 230: break;
  3028  000422  0012               	return	
  3029  000424                     l2364:
  3030                           
  3031                           ;MotorDriver.c: 232: PSTR1CON = 0x02; PSTR2CON = 0x02;
  3032  000424  0E02               	movlw	2
  3033  000426  6EB9               	movwf	4025,c	;volatile
  3034  000428  0E02               	movlw	2
  3035  00042A  6E63               	movwf	3939,c	;volatile
  3036                           
  3037                           ;MotorDriver.c: 233: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  3038  00042C  948B               	bcf	3979,2,c	;volatile
  3039  00042E  928B               	bcf	3979,1,c	;volatile
  3040                           
  3041                           ;MotorDriver.c: 234: if ((Microstep<48)&&(Microstep>31)){
  3042  000430  BE41               	btfsc	_Microstep+1,7,c
  3043  000432  D006               	goto	l2372
  3044  000434  5041               	movf	_Microstep+1,w,c
  3045  000436  E103               	bnz	u1811
  3046  000438  0E30               	movlw	48
  3047  00043A  5C40               	subwf	_Microstep,w,c
  3048  00043C  B0D8               	btfsc	status,0,c
  3049  00043E                     u1811:
  3050  00043E  0012               	return	
  3051  000440                     l2372:
  3052  000440  BE41               	btfsc	_Microstep+1,7,c
  3053  000442  0012               	return	
  3054  000444  5041               	movf	_Microstep+1,w,c
  3055  000446  E104               	bnz	u1820
  3056  000448  0E20               	movlw	32
  3057  00044A  5C40               	subwf	_Microstep,w,c
  3058  00044C  A0D8               	btfss	status,0,c
  3059  00044E  0012               	return	
  3060  000450                     u1820:
  3061                           
  3062                           ;MotorDriver.c: 239: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  3063  000450  0EA0               	movlw	low _LookUP_TABLE_COS_16
  3064  000452  2440               	addwf	_Microstep,w,c
  3065  000454  6ED9               	movwf	fsr2l,c
  3066  000456  0E00               	movlw	high _LookUP_TABLE_COS_16
  3067  000458  2041               	addwfc	_Microstep+1,w,c
  3068  00045A  6EDA               	movwf	fsr2h,c
  3069  00045C  50DF               	movf	indf2,w,c
  3070  00045E  6E33               	movwf	??_State16MEF_act& (0+255),c
  3071  000460  5033               	movf	??_State16MEF_act,w,c
  3072  000462  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3073  000464  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3074  000466  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3075                           
  3076                           ;MotorDriver.c: 240: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  3077  00046A  0E60               	movlw	low _LookUP_TABLE_SEN_16
  3078  00046C  2440               	addwf	_Microstep,w,c
  3079  00046E  6ED9               	movwf	fsr2l,c
  3080  000470  0E00               	movlw	high _LookUP_TABLE_SEN_16
  3081  000472  2041               	addwfc	_Microstep+1,w,c
  3082  000474  6EDA               	movwf	fsr2h,c
  3083  000476  50DF               	movf	indf2,w,c
  3084  000478  6E33               	movwf	??_State16MEF_act& (0+255),c
  3085  00047A  5033               	movf	??_State16MEF_act,w,c
  3086  00047C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3087  00047E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3088  000480  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3089                           
  3090                           ;MotorDriver.c: 242: if (direccion == 1){
  3091  000484  0434               	decf	State16MEF_act@direccion,w,c
  3092  000486  A4D8               	btfss	status,2,c
  3093  000488  D00A               	goto	l2384
  3094                           
  3095                           ;MotorDriver.c: 243: if (Microstep==47){
  3096  00048A  0E2F               	movlw	47
  3097  00048C  1840               	xorwf	_Microstep,w,c
  3098  00048E  1041               	iorwf	_Microstep+1,w,c
  3099  000490  A4D8               	btfss	status,2,c
  3100  000492  D002               	goto	l2382
  3101                           
  3102                           ;MotorDriver.c: 244: EstadoActual = STATE4;
  3103  000494  0E04               	movlw	4
  3104  000496  6E4F               	movwf	_EstadoActual,c
  3105  000498                     l2382:
  3106                           
  3107                           ;MotorDriver.c: 245: }
  3108                           ;MotorDriver.c: 246: Microstep++;
  3109  000498  4A40               	infsnz	_Microstep,f,c
  3110  00049A  2A41               	incf	_Microstep+1,f,c
  3111                           
  3112                           ;MotorDriver.c: 247: }
  3113  00049C  0012               	return	
  3114  00049E                     l2384:
  3115                           
  3116                           ;MotorDriver.c: 248: else{
  3117                           ;MotorDriver.c: 249: if (Microstep==32){
  3118  00049E  0E20               	movlw	32
  3119  0004A0  1840               	xorwf	_Microstep,w,c
  3120  0004A2  1041               	iorwf	_Microstep+1,w,c
  3121  0004A4  A4D8               	btfss	status,2,c
  3122  0004A6  D002               	goto	l2388
  3123                           
  3124                           ;MotorDriver.c: 250: EstadoActual = STATE2;
  3125  0004A8  0E02               	movlw	2
  3126  0004AA  6E4F               	movwf	_EstadoActual,c
  3127  0004AC                     l2388:
  3128                           
  3129                           ;MotorDriver.c: 251: }
  3130                           ;MotorDriver.c: 252: Microstep--;
  3131  0004AC  0640               	decf	_Microstep,f,c
  3132  0004AE  A0D8               	btfss	status,0,c
  3133  0004B0  0641               	decf	_Microstep+1,f,c
  3134                           
  3135                           ;MotorDriver.c: 253: }
  3136                           ;MotorDriver.c: 254: }
  3137                           ;MotorDriver.c: 255: break;
  3138  0004B2  0012               	return	
  3139  0004B4                     l2390:
  3140                           
  3141                           ;MotorDriver.c: 257: PSTR1CON = 0x01; PSTR2CON = 0x02;
  3142  0004B4  0E01               	movlw	1
  3143  0004B6  6EB9               	movwf	4025,c	;volatile
  3144  0004B8  0E02               	movlw	2
  3145  0004BA  6E63               	movwf	3939,c	;volatile
  3146                           
  3147                           ;MotorDriver.c: 258: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  3148  0004BC  9A8C               	bcf	3980,5,c	;volatile
  3149  0004BE  928B               	bcf	3979,1,c	;volatile
  3150                           
  3151                           ;MotorDriver.c: 259: if ((Microstep<64)&&(Microstep>47)){
  3152  0004C0  BE41               	btfsc	_Microstep+1,7,c
  3153  0004C2  D006               	goto	l2398
  3154  0004C4  5041               	movf	_Microstep+1,w,c
  3155  0004C6  E14E               	bnz	l513
  3156  0004C8  0E40               	movlw	64
  3157  0004CA  5C40               	subwf	_Microstep,w,c
  3158  0004CC  B0D8               	btfsc	status,0,c
  3159  0004CE  0012               	return	
  3160  0004D0                     l2398:
  3161  0004D0  BE41               	btfsc	_Microstep+1,7,c
  3162  0004D2  0012               	return	
  3163  0004D4  5041               	movf	_Microstep+1,w,c
  3164  0004D6  E104               	bnz	u1870
  3165  0004D8  0E30               	movlw	48
  3166  0004DA  5C40               	subwf	_Microstep,w,c
  3167  0004DC  A0D8               	btfss	status,0,c
  3168  0004DE  0012               	return	
  3169  0004E0                     u1870:
  3170                           
  3171                           ;MotorDriver.c: 264: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  3172  0004E0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  3173  0004E2  2440               	addwf	_Microstep,w,c
  3174  0004E4  6ED9               	movwf	fsr2l,c
  3175  0004E6  0E00               	movlw	high _LookUP_TABLE_COS_16
  3176  0004E8  2041               	addwfc	_Microstep+1,w,c
  3177  0004EA  6EDA               	movwf	fsr2h,c
  3178  0004EC  50DF               	movf	indf2,w,c
  3179  0004EE  6E33               	movwf	??_State16MEF_act& (0+255),c
  3180  0004F0  5033               	movf	??_State16MEF_act,w,c
  3181  0004F2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3182  0004F4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3183  0004F6  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3184                           
  3185                           ;MotorDriver.c: 265: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  3186  0004FA  0E60               	movlw	low _LookUP_TABLE_SEN_16
  3187  0004FC  2440               	addwf	_Microstep,w,c
  3188  0004FE  6ED9               	movwf	fsr2l,c
  3189  000500  0E00               	movlw	high _LookUP_TABLE_SEN_16
  3190  000502  2041               	addwfc	_Microstep+1,w,c
  3191  000504  6EDA               	movwf	fsr2h,c
  3192  000506  50DF               	movf	indf2,w,c
  3193  000508  6E33               	movwf	??_State16MEF_act& (0+255),c
  3194  00050A  5033               	movf	??_State16MEF_act,w,c
  3195  00050C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3196  00050E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3197  000510  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3198                           
  3199                           ;MotorDriver.c: 267: if (direccion == 1){
  3200  000514  0434               	decf	State16MEF_act@direccion,w,c
  3201  000516  A4D8               	btfss	status,2,c
  3202  000518  D00C               	goto	l2412
  3203                           
  3204                           ;MotorDriver.c: 268: if (Microstep==63){
  3205  00051A  0E3F               	movlw	63
  3206  00051C  1840               	xorwf	_Microstep,w,c
  3207  00051E  1041               	iorwf	_Microstep+1,w,c
  3208  000520  A4D8               	btfss	status,2,c
  3209  000522  D004               	goto	l2410
  3210                           
  3211                           ;MotorDriver.c: 269: EstadoActual = STATE1;
  3212  000524  0E01               	movlw	1
  3213  000526  6E4F               	movwf	_EstadoActual,c
  3214                           
  3215                           ;MotorDriver.c: 270: Microstep=-1;
  3216  000528  6840               	setf	_Microstep,c
  3217  00052A  6841               	setf	_Microstep+1,c
  3218  00052C                     l2410:
  3219                           
  3220                           ;MotorDriver.c: 271: }
  3221                           ;MotorDriver.c: 272: Microstep++;
  3222  00052C  4A40               	infsnz	_Microstep,f,c
  3223  00052E  2A41               	incf	_Microstep+1,f,c
  3224                           
  3225                           ;MotorDriver.c: 273: }
  3226  000530  0012               	return	
  3227  000532                     l2412:
  3228                           
  3229                           ;MotorDriver.c: 274: else{
  3230                           ;MotorDriver.c: 275: if (Microstep==48){
  3231  000532  0E30               	movlw	48
  3232  000534  1840               	xorwf	_Microstep,w,c
  3233  000536  1041               	iorwf	_Microstep+1,w,c
  3234  000538  A4D8               	btfss	status,2,c
  3235  00053A  D002               	goto	l2416
  3236                           
  3237                           ;MotorDriver.c: 276: EstadoActual = STATE3;
  3238  00053C  0E03               	movlw	3
  3239  00053E  6E4F               	movwf	_EstadoActual,c
  3240  000540                     l2416:
  3241                           
  3242                           ;MotorDriver.c: 277: }
  3243                           ;MotorDriver.c: 278: Microstep--;
  3244  000540  0640               	decf	_Microstep,f,c
  3245  000542  A0D8               	btfss	status,0,c
  3246  000544  0641               	decf	_Microstep+1,f,c
  3247                           
  3248                           ;MotorDriver.c: 285: }
  3249                           
  3250                           ;MotorDriver.c: 284: break;
  3251                           
  3252                           ;MotorDriver.c: 282: default:
  3253                           
  3254                           ;MotorDriver.c: 279: }
  3255                           ;MotorDriver.c: 280: }
  3256                           ;MotorDriver.c: 281: break;
  3257  000546  0012               	return	
  3258  000548                     l2420:
  3259  000548  504F               	movf	_EstadoActual,w,c
  3260                           
  3261                           ; Switch size 1, requested type "space"
  3262                           ; Number of cases is 4, Range of values is 1 to 4
  3263                           ; switch strategies available:
  3264                           ; Name         Instructions Cycles
  3265                           ; simple_byte           13     7 (average)
  3266                           ;	Chosen strategy is simple_byte
  3267  00054A  0A01               	xorlw	1	; case 1
  3268  00054C  B4D8               	btfsc	status,2,c
  3269  00054E  D6DF               	goto	l2314
  3270  000550  0A03               	xorlw	3	; case 2
  3271  000552  B4D8               	btfsc	status,2,c
  3272  000554  D71F               	goto	l2338
  3273  000556  0A01               	xorlw	1	; case 3
  3274  000558  B4D8               	btfsc	status,2,c
  3275  00055A  D764               	goto	l2364
  3276  00055C  0A07               	xorlw	7	; case 4
  3277  00055E  A4D8               	btfss	status,2,c
  3278  000560  0012               	return	
  3279  000562  D7A8               	goto	l2390
  3280  000564                     l513:
  3281  000564  0012               	return		;funcret
  3282  000566                     __end_of_State16MEF_act:
  3283                           	opt stack 0
  3284                           tblptru	equ	0xFF8
  3285                           tblptrh	equ	0xFF7
  3286                           tblptrl	equ	0xFF6
  3287                           tablat	equ	0xFF5
  3288                           intcon	equ	0xFF2
  3289                           intcon2	equ	0xFF1
  3290                           postinc0	equ	0xFEE
  3291                           wreg	equ	0xFE8
  3292                           postdec1	equ	0xFE5
  3293                           fsr1l	equ	0xFE1
  3294                           indf2	equ	0xFDF
  3295                           fsr2h	equ	0xFDA
  3296                           fsr2l	equ	0xFD9
  3297                           status	equ	0xFD8
  3298                           
  3299 ;; *************** function _EPWM2_LoadDutyValue *****************
  3300 ;; Defined at:
  3301 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  dutyValue       2   14[COMRAM] unsigned int 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;Total ram usage:        4 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    4
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_State8MEF_act
  3326 ;;		_State16MEF_act
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text21
  3331  000814                     __ptext21:
  3332                           	opt stack 0
  3333  000814                     _EPWM2_LoadDutyValue:
  3334                           	opt stack 24
  3335                           
  3336                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  3337                           
  3338                           ;incstack = 0
  3339  000814  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3340  000818  C030  F032         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  3341  00081C  90D8               	bcf	status,0,c
  3342  00081E  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  3343  000820  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  3344  000822  90D8               	bcf	status,0,c
  3345  000824  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  3346  000826  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  3347  000828  5031               	movf	??_EPWM2_LoadDutyValue,w,c
  3348  00082A  6E67               	movwf	3943,c	;volatile
  3349                           
  3350                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3351  00082C  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3352  000830  0E03               	movlw	3
  3353  000832  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  3354  000834  3A31               	swapf	??_EPWM2_LoadDutyValue,f,c
  3355  000836  0EF0               	movlw	240
  3356  000838  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  3357  00083A  5066               	movf	3942,w,c	;volatile
  3358  00083C  0BCF               	andlw	207
  3359  00083E  1031               	iorwf	??_EPWM2_LoadDutyValue,w,c
  3360  000840  6E66               	movwf	3942,c	;volatile
  3361  000842  0012               	return		;funcret
  3362  000844                     __end_of_EPWM2_LoadDutyValue:
  3363                           	opt stack 0
  3364                           tblptru	equ	0xFF8
  3365                           tblptrh	equ	0xFF7
  3366                           tblptrl	equ	0xFF6
  3367                           tablat	equ	0xFF5
  3368                           intcon	equ	0xFF2
  3369                           intcon2	equ	0xFF1
  3370                           postinc0	equ	0xFEE
  3371                           wreg	equ	0xFE8
  3372                           postdec1	equ	0xFE5
  3373                           fsr1l	equ	0xFE1
  3374                           indf2	equ	0xFDF
  3375                           fsr2h	equ	0xFDA
  3376                           fsr2l	equ	0xFD9
  3377                           status	equ	0xFD8
  3378                           
  3379 ;; *************** function _EPWM1_LoadDutyValue *****************
  3380 ;; Defined at:
  3381 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  dutyValue       2   14[COMRAM] unsigned int 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;Total ram usage:        4 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    4
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_State8MEF_act
  3406 ;;		_State16MEF_act
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text22
  3411  000844                     __ptext22:
  3412                           	opt stack 0
  3413  000844                     _EPWM1_LoadDutyValue:
  3414                           	opt stack 24
  3415                           
  3416                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  3417                           
  3418                           ;incstack = 0
  3419  000844  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3420  000848  C030  F032         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  3421  00084C  90D8               	bcf	status,0,c
  3422  00084E  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3423  000850  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3424  000852  90D8               	bcf	status,0,c
  3425  000854  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3426  000856  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3427  000858  5031               	movf	??_EPWM1_LoadDutyValue,w,c
  3428  00085A  6EBE               	movwf	4030,c	;volatile
  3429                           
  3430                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3431  00085C  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3432  000860  0E03               	movlw	3
  3433  000862  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  3434  000864  3A31               	swapf	??_EPWM1_LoadDutyValue,f,c
  3435  000866  0EF0               	movlw	240
  3436  000868  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  3437  00086A  50BD               	movf	4029,w,c	;volatile
  3438  00086C  0BCF               	andlw	207
  3439  00086E  1031               	iorwf	??_EPWM1_LoadDutyValue,w,c
  3440  000870  6EBD               	movwf	4029,c	;volatile
  3441  000872  0012               	return		;funcret
  3442  000874                     __end_of_EPWM1_LoadDutyValue:
  3443                           	opt stack 0
  3444                           tblptru	equ	0xFF8
  3445                           tblptrh	equ	0xFF7
  3446                           tblptrl	equ	0xFF6
  3447                           tablat	equ	0xFF5
  3448                           intcon	equ	0xFF2
  3449                           intcon2	equ	0xFF1
  3450                           postinc0	equ	0xFEE
  3451                           wreg	equ	0xFE8
  3452                           postdec1	equ	0xFE5
  3453                           fsr1l	equ	0xFE1
  3454                           indf2	equ	0xFDF
  3455                           fsr2h	equ	0xFDA
  3456                           fsr2l	equ	0xFD9
  3457                           status	equ	0xFD8
  3458                           
  3459 ;; *************** function _Motor_Stop *****************
  3460 ;; Defined at:
  3461 ;;		line 325 in file "MotorDriver.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    4
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_main
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text23
  3490  0009DC                     __ptext23:
  3491                           	opt stack 0
  3492  0009DC                     _Motor_Stop:
  3493                           	opt stack 26
  3494                           
  3495                           ;MotorDriver.c: 326: PSTR1CON = 0x00; PSTR2CON = 0x00;
  3496                           
  3497                           ;incstack = 0
  3498  0009DC  0E00               	movlw	0
  3499  0009DE  6EB9               	movwf	4025,c	;volatile
  3500  0009E0  0E00               	movlw	0
  3501  0009E2  6E63               	movwf	3939,c	;volatile
  3502                           
  3503                           ;MotorDriver.c: 327: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  3504  0009E4  948B               	bcf	3979,2,c	;volatile
  3505  0009E6  9A8C               	bcf	3980,5,c	;volatile
  3506  0009E8  928B               	bcf	3979,1,c	;volatile
  3507  0009EA  908B               	bcf	3979,0,c	;volatile
  3508  0009EC  0012               	return	
  3509  0009EE                     __end_of_Motor_Stop:
  3510                           	opt stack 0
  3511                           tblptru	equ	0xFF8
  3512                           tblptrh	equ	0xFF7
  3513                           tblptrl	equ	0xFF6
  3514                           tablat	equ	0xFF5
  3515                           intcon	equ	0xFF2
  3516                           intcon2	equ	0xFF1
  3517                           postinc0	equ	0xFEE
  3518                           wreg	equ	0xFE8
  3519                           postdec1	equ	0xFE5
  3520                           fsr1l	equ	0xFE1
  3521                           indf2	equ	0xFDF
  3522                           fsr2h	equ	0xFDA
  3523                           fsr2l	equ	0xFD9
  3524                           status	equ	0xFD8
  3525                           
  3526 ;; *************** function _INTERRUPT_InterruptManager *****************
  3527 ;; Defined at:
  3528 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3546 ;;Total ram usage:       14 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; Hardware stack levels required when called:    3
  3549 ;; This function calls:
  3550 ;;		_ADC_ISR
  3551 ;;		_TMR2_ISR
  3552 ;;		_TMR6_ISR
  3553 ;; This function is called by:
  3554 ;;		Interrupt level 2
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	intcode
  3559  000008                     __pintcode:
  3560                           	opt stack 0
  3561  000008                     _INTERRUPT_InterruptManager:
  3562                           	opt stack 23
  3563                           
  3564                           ;incstack = 0
  3565  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3566  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  3567  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3568  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3569  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3570  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3571  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3572  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3573  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3574  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3575  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3576  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3577  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3578  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3579  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3580                           
  3581                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  3582  000042  BCF2               	btfsc	intcon,6,c	;volatile
  3583  000044  AC9D               	btfss	3997,6,c	;volatile
  3584  000046  D005               	goto	i2l270
  3585  000048  AC9E               	btfss	3998,6,c	;volatile
  3586  00004A  D003               	goto	i2l270
  3587                           
  3588                           ;interrupt_manager.c: 61: {
  3589                           ;interrupt_manager.c: 62: ADC_ISR();
  3590  00004C  EC1A  F005         	call	_ADC_ISR	;wreg free
  3591                           
  3592                           ;interrupt_manager.c: 63: }
  3593  000050  D00E               	goto	i2l276
  3594  000052                     i2l270:
  3595                           
  3596                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  3597  000052  BCF2               	btfsc	intcon,6,c	;volatile
  3598  000054  A47D               	btfss	3965,2,c	;volatile
  3599  000056  D005               	goto	i2l272
  3600  000058  A47E               	btfss	3966,2,c	;volatile
  3601  00005A  D003               	goto	i2l272
  3602                           
  3603                           ;interrupt_manager.c: 65: {
  3604                           ;interrupt_manager.c: 66: TMR6_ISR();
  3605  00005C  ECAC  F004         	call	_TMR6_ISR	;wreg free
  3606                           
  3607                           ;interrupt_manager.c: 67: }
  3608  000060  D006               	goto	i2l276
  3609  000062                     i2l272:
  3610                           
  3611                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  3612  000062  BCF2               	btfsc	intcon,6,c	;volatile
  3613  000064  A29D               	btfss	3997,1,c	;volatile
  3614  000066  D003               	goto	i2l276
  3615  000068  B29E               	btfsc	3998,1,c	;volatile
  3616                           
  3617                           ;interrupt_manager.c: 69: {
  3618                           ;interrupt_manager.c: 70: TMR2_ISR();
  3619  00006A  EC0F  F005         	call	_TMR2_ISR	;wreg free
  3620  00006E                     i2l276:
  3621  00006E  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3622  000072  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3623  000076  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3624  00007A  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3625  00007E  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3626  000082  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3627  000086  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3628  00008A  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3629  00008E  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3630  000092  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3631  000096  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3632  00009A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3633  00009E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3634  0000A2  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3635  0000A6  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3636  0000A8  0011               	retfie		f
  3637  0000AA                     __end_of_INTERRUPT_InterruptManager:
  3638                           	opt stack 0
  3639                           pclatu	equ	0xFFB
  3640                           pclath	equ	0xFFA
  3641                           tblptru	equ	0xFF8
  3642                           tblptrh	equ	0xFF7
  3643                           tblptrl	equ	0xFF6
  3644                           tablat	equ	0xFF5
  3645                           prodh	equ	0xFF4
  3646                           prodl	equ	0xFF3
  3647                           intcon	equ	0xFF2
  3648                           intcon2	equ	0xFF1
  3649                           postinc0	equ	0xFEE
  3650                           fsr0h	equ	0xFEA
  3651                           fsr0l	equ	0xFE9
  3652                           wreg	equ	0xFE8
  3653                           postdec1	equ	0xFE5
  3654                           fsr1h	equ	0xFE2
  3655                           fsr1l	equ	0xFE1
  3656                           indf2	equ	0xFDF
  3657                           fsr2h	equ	0xFDA
  3658                           fsr2l	equ	0xFD9
  3659                           status	equ	0xFD8
  3660                           
  3661 ;; *************** function _TMR6_ISR *****************
  3662 ;; Defined at:
  3663 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;		None
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;Total ram usage:        0 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    1
  3684 ;; This function calls:
  3685 ;;		Absolute function
  3686 ;;		_TMR6_DefaultInterruptHandler
  3687 ;; This function is called by:
  3688 ;;		_INTERRUPT_InterruptManager
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text25
  3693  000958                     __ptext25:
  3694                           	opt stack 0
  3695  000958                     _TMR6_ISR:
  3696                           	opt stack 24
  3697                           
  3698                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  3699                           
  3700                           ;incstack = 0
  3701  000958  947E               	bcf	3966,2,c	;volatile
  3702                           
  3703                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  3704  00095A  504D               	movf	_TMR6_InterruptHandler,w,c
  3705  00095C  104E               	iorwf	_TMR6_InterruptHandler+1,w,c
  3706  00095E  B4D8               	btfsc	status,2,c
  3707  000960  0012               	return	
  3708                           
  3709                           ;tmr6.c: 128: {
  3710                           ;tmr6.c: 129: TMR6_InterruptHandler();
  3711  000962  D801               	call	i2u46_48
  3712  000964  0012               	return	
  3713  000966                     i2u46_48:
  3714  000966  0005               	push	
  3715  000968  6EFA               	movwf	pclath,c
  3716  00096A  504D               	movf	_TMR6_InterruptHandler,w,c
  3717  00096C  6EFD               	movwf	tosl,c
  3718  00096E  504E               	movf	_TMR6_InterruptHandler+1,w,c
  3719  000970  6EFE               	movwf	tosh,c
  3720  000972  50F8               	movf	tblptru,w,c
  3721  000974  6EFF               	movwf	tosu,c
  3722  000976  50FA               	movf	pclath,w,c
  3723  000978  0012               	return		;indir
  3724  00097A                     __end_of_TMR6_ISR:
  3725                           	opt stack 0
  3726                           tosu	equ	0xFFF
  3727                           tosh	equ	0xFFE
  3728                           tosl	equ	0xFFD
  3729                           pclatu	equ	0xFFB
  3730                           pclath	equ	0xFFA
  3731                           tblptru	equ	0xFF8
  3732                           tblptrh	equ	0xFF7
  3733                           tblptrl	equ	0xFF6
  3734                           tablat	equ	0xFF5
  3735                           prodh	equ	0xFF4
  3736                           prodl	equ	0xFF3
  3737                           intcon	equ	0xFF2
  3738                           intcon2	equ	0xFF1
  3739                           postinc0	equ	0xFEE
  3740                           fsr0h	equ	0xFEA
  3741                           fsr0l	equ	0xFE9
  3742                           wreg	equ	0xFE8
  3743                           postdec1	equ	0xFE5
  3744                           fsr1h	equ	0xFE2
  3745                           fsr1l	equ	0xFE1
  3746                           indf2	equ	0xFDF
  3747                           fsr2h	equ	0xFDA
  3748                           fsr2l	equ	0xFD9
  3749                           status	equ	0xFD8
  3750                           
  3751 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  3752 ;; Defined at:
  3753 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;		None
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		None
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;Total ram usage:        0 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_TMR6_Initialize
  3777 ;;		_TMR6_ISR
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text26
  3782  000A38                     __ptext26:
  3783                           	opt stack 0
  3784  000A38                     _TMR6_DefaultInterruptHandler:
  3785                           	opt stack 24
  3786                           
  3787                           ;incstack = 0
  3788  000A38  0012               	return		;funcret
  3789  000A3A                     __end_of_TMR6_DefaultInterruptHandler:
  3790                           	opt stack 0
  3791                           tosu	equ	0xFFF
  3792                           tosh	equ	0xFFE
  3793                           tosl	equ	0xFFD
  3794                           pclatu	equ	0xFFB
  3795                           pclath	equ	0xFFA
  3796                           tblptru	equ	0xFF8
  3797                           tblptrh	equ	0xFF7
  3798                           tblptrl	equ	0xFF6
  3799                           tablat	equ	0xFF5
  3800                           prodh	equ	0xFF4
  3801                           prodl	equ	0xFF3
  3802                           intcon	equ	0xFF2
  3803                           intcon2	equ	0xFF1
  3804                           postinc0	equ	0xFEE
  3805                           fsr0h	equ	0xFEA
  3806                           fsr0l	equ	0xFE9
  3807                           wreg	equ	0xFE8
  3808                           postdec1	equ	0xFE5
  3809                           fsr1h	equ	0xFE2
  3810                           fsr1l	equ	0xFE1
  3811                           indf2	equ	0xFDF
  3812                           fsr2h	equ	0xFDA
  3813                           fsr2l	equ	0xFD9
  3814                           status	equ	0xFD8
  3815                           
  3816 ;; *************** function _TMR2_ISR *****************
  3817 ;; Defined at:
  3818 ;;		line 126 in file "mcc_generated_files/tmr2.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;		None
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      void 
  3825 ;; Registers used:
  3826 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;Total ram usage:        0 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; Hardware stack levels required when called:    2
  3839 ;; This function calls:
  3840 ;;		_TMR2_CallBack
  3841 ;; This function is called by:
  3842 ;;		_INTERRUPT_InterruptManager
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text27
  3847  000A1E                     __ptext27:
  3848                           	opt stack 0
  3849  000A1E                     _TMR2_ISR:
  3850                           	opt stack 23
  3851                           
  3852                           ;tmr2.c: 130: PIR1bits.TMR2IF = 0;
  3853                           
  3854                           ;incstack = 0
  3855  000A1E  929E               	bcf	3998,1,c	;volatile
  3856                           
  3857                           ;tmr2.c: 134: TMR2_CallBack();
  3858  000A20  EC63  F004         	call	_TMR2_CallBack	;wreg free
  3859  000A24  0012               	return		;funcret
  3860  000A26                     __end_of_TMR2_ISR:
  3861                           	opt stack 0
  3862                           tosu	equ	0xFFF
  3863                           tosh	equ	0xFFE
  3864                           tosl	equ	0xFFD
  3865                           pclatu	equ	0xFFB
  3866                           pclath	equ	0xFFA
  3867                           tblptru	equ	0xFF8
  3868                           tblptrh	equ	0xFF7
  3869                           tblptrl	equ	0xFF6
  3870                           tablat	equ	0xFF5
  3871                           prodh	equ	0xFF4
  3872                           prodl	equ	0xFF3
  3873                           intcon	equ	0xFF2
  3874                           intcon2	equ	0xFF1
  3875                           postinc0	equ	0xFEE
  3876                           fsr0h	equ	0xFEA
  3877                           fsr0l	equ	0xFE9
  3878                           wreg	equ	0xFE8
  3879                           postdec1	equ	0xFE5
  3880                           fsr1h	equ	0xFE2
  3881                           fsr1l	equ	0xFE1
  3882                           indf2	equ	0xFDF
  3883                           fsr2h	equ	0xFDA
  3884                           fsr2l	equ	0xFD9
  3885                           status	equ	0xFD8
  3886                           
  3887 ;; *************** function _TMR2_CallBack *****************
  3888 ;; Defined at:
  3889 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3907 ;;Total ram usage:        0 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    1
  3910 ;; This function calls:
  3911 ;;		Absolute function
  3912 ;;		_TMR2_DefaultInterruptHandler
  3913 ;; This function is called by:
  3914 ;;		_TMR2_ISR
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text28
  3919  0008C6                     __ptext28:
  3920                           	opt stack 0
  3921  0008C6                     _TMR2_CallBack:
  3922                           	opt stack 23
  3923                           
  3924                           ;tmr2.c: 140: Timer2Ticked = 1;
  3925                           
  3926                           ;incstack = 0
  3927  0008C6  0E01               	movlw	1
  3928  0008C8  6E4A               	movwf	_Timer2Ticked,c	;volatile
  3929                           
  3930                           ;tmr2.c: 141: DelayTimerTicked = 1;
  3931  0008CA  0E01               	movlw	1
  3932  0008CC  6E49               	movwf	_DelayTimerTicked,c	;volatile
  3933                           
  3934                           ;tmr2.c: 144: if(TMR2_InterruptHandler)
  3935  0008CE  504B               	movf	_TMR2_InterruptHandler,w,c
  3936  0008D0  104C               	iorwf	_TMR2_InterruptHandler+1,w,c
  3937  0008D2  B4D8               	btfsc	status,2,c
  3938  0008D4  0012               	return	
  3939                           
  3940                           ;tmr2.c: 145: {
  3941                           ;tmr2.c: 146: TMR2_InterruptHandler();
  3942  0008D6  D801               	call	i2u40_48
  3943  0008D8  0012               	return	
  3944  0008DA                     i2u40_48:
  3945  0008DA  0005               	push	
  3946  0008DC  6EFA               	movwf	pclath,c
  3947  0008DE  504B               	movf	_TMR2_InterruptHandler,w,c
  3948  0008E0  6EFD               	movwf	tosl,c
  3949  0008E2  504C               	movf	_TMR2_InterruptHandler+1,w,c
  3950  0008E4  6EFE               	movwf	tosh,c
  3951  0008E6  50F8               	movf	tblptru,w,c
  3952  0008E8  6EFF               	movwf	tosu,c
  3953  0008EA  50FA               	movf	pclath,w,c
  3954  0008EC  0012               	return		;indir
  3955  0008EE                     __end_of_TMR2_CallBack:
  3956                           	opt stack 0
  3957                           tosu	equ	0xFFF
  3958                           tosh	equ	0xFFE
  3959                           tosl	equ	0xFFD
  3960                           pclatu	equ	0xFFB
  3961                           pclath	equ	0xFFA
  3962                           tblptru	equ	0xFF8
  3963                           tblptrh	equ	0xFF7
  3964                           tblptrl	equ	0xFF6
  3965                           tablat	equ	0xFF5
  3966                           prodh	equ	0xFF4
  3967                           prodl	equ	0xFF3
  3968                           intcon	equ	0xFF2
  3969                           intcon2	equ	0xFF1
  3970                           postinc0	equ	0xFEE
  3971                           fsr0h	equ	0xFEA
  3972                           fsr0l	equ	0xFE9
  3973                           wreg	equ	0xFE8
  3974                           postdec1	equ	0xFE5
  3975                           fsr1h	equ	0xFE2
  3976                           fsr1l	equ	0xFE1
  3977                           indf2	equ	0xFDF
  3978                           fsr2h	equ	0xFDA
  3979                           fsr2l	equ	0xFD9
  3980                           status	equ	0xFD8
  3981                           
  3982 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3983 ;; Defined at:
  3984 ;;		line 154 in file "mcc_generated_files/tmr2.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		None
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;Total ram usage:        0 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_TMR2_Initialize
  4008 ;;		_TMR2_CallBack
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           	psect	text29
  4013  000A3A                     __ptext29:
  4014                           	opt stack 0
  4015  000A3A                     _TMR2_DefaultInterruptHandler:
  4016                           	opt stack 23
  4017                           
  4018                           ;incstack = 0
  4019  000A3A  0012               	return		;funcret
  4020  000A3C                     __end_of_TMR2_DefaultInterruptHandler:
  4021                           	opt stack 0
  4022                           tosu	equ	0xFFF
  4023                           tosh	equ	0xFFE
  4024                           tosl	equ	0xFFD
  4025                           pclatu	equ	0xFFB
  4026                           pclath	equ	0xFFA
  4027                           tblptru	equ	0xFF8
  4028                           tblptrh	equ	0xFF7
  4029                           tblptrl	equ	0xFF6
  4030                           tablat	equ	0xFF5
  4031                           prodh	equ	0xFF4
  4032                           prodl	equ	0xFF3
  4033                           intcon	equ	0xFF2
  4034                           intcon2	equ	0xFF1
  4035                           postinc0	equ	0xFEE
  4036                           fsr0h	equ	0xFEA
  4037                           fsr0l	equ	0xFE9
  4038                           wreg	equ	0xFE8
  4039                           postdec1	equ	0xFE5
  4040                           fsr1h	equ	0xFE2
  4041                           fsr1l	equ	0xFE1
  4042                           indf2	equ	0xFDF
  4043                           fsr2h	equ	0xFDA
  4044                           fsr2l	equ	0xFD9
  4045                           status	equ	0xFD8
  4046                           
  4047 ;; *************** function _ADC_ISR *****************
  4048 ;; Defined at:
  4049 ;;		line 144 in file "mcc_generated_files/adc.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		None
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;Total ram usage:        0 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; This function calls:
  4070 ;;		Nothing
  4071 ;; This function is called by:
  4072 ;;		_INTERRUPT_InterruptManager
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text30
  4077  000A34                     __ptext30:
  4078                           	opt stack 0
  4079  000A34                     _ADC_ISR:
  4080                           	opt stack 25
  4081                           
  4082                           ;adc.c: 149: PIR1bits.ADIF = 0;
  4083                           
  4084                           ;incstack = 0
  4085  000A34  9C9E               	bcf	3998,6,c	;volatile
  4086  000A36  0012               	return		;funcret
  4087  000A38                     __end_of_ADC_ISR:
  4088                           	opt stack 0
  4089  0000                     tosu	equ	0xFFF
  4090                           tosh	equ	0xFFE
  4091                           tosl	equ	0xFFD
  4092                           pclatu	equ	0xFFB
  4093                           pclath	equ	0xFFA
  4094                           tblptru	equ	0xFF8
  4095                           tblptrh	equ	0xFF7
  4096                           tblptrl	equ	0xFF6
  4097                           tablat	equ	0xFF5
  4098                           prodh	equ	0xFF4
  4099                           prodl	equ	0xFF3
  4100                           intcon	equ	0xFF2
  4101                           intcon2	equ	0xFF1
  4102                           postinc0	equ	0xFEE
  4103                           fsr0h	equ	0xFEA
  4104                           fsr0l	equ	0xFE9
  4105                           wreg	equ	0xFE8
  4106                           postdec1	equ	0xFE5
  4107                           fsr1h	equ	0xFE2
  4108                           fsr1l	equ	0xFE1
  4109                           indf2	equ	0xFDF
  4110                           fsr2h	equ	0xFDA
  4111                           fsr2l	equ	0xFD9
  4112                           status	equ	0xFD8
  4113                           tosu	equ	0xFFF
  4114                           tosh	equ	0xFFE
  4115                           tosl	equ	0xFFD
  4116                           pclatu	equ	0xFFB
  4117                           pclath	equ	0xFFA
  4118                           tblptru	equ	0xFF8
  4119                           tblptrh	equ	0xFF7
  4120                           tblptrl	equ	0xFF6
  4121                           tablat	equ	0xFF5
  4122                           prodh	equ	0xFF4
  4123                           prodl	equ	0xFF3
  4124                           intcon	equ	0xFF2
  4125                           intcon2	equ	0xFF1
  4126                           postinc0	equ	0xFEE
  4127                           fsr0h	equ	0xFEA
  4128                           fsr0l	equ	0xFE9
  4129                           wreg	equ	0xFE8
  4130                           postdec1	equ	0xFE5
  4131                           fsr1h	equ	0xFE2
  4132                           fsr1l	equ	0xFE1
  4133                           indf2	equ	0xFDF
  4134                           fsr2h	equ	0xFDA
  4135                           fsr2l	equ	0xFD9
  4136                           status	equ	0xFD8
  4137                           
  4138                           	psect	text31
  4139  000000                     __ptext31:
  4140                           	opt stack 0
  4141                           tosu	equ	0xFFF
  4142                           tosh	equ	0xFFE
  4143                           tosl	equ	0xFFD
  4144                           pclatu	equ	0xFFB
  4145                           pclath	equ	0xFFA
  4146                           tblptru	equ	0xFF8
  4147                           tblptrh	equ	0xFF7
  4148                           tblptrl	equ	0xFF6
  4149                           tablat	equ	0xFF5
  4150                           prodh	equ	0xFF4
  4151                           prodl	equ	0xFF3
  4152                           intcon	equ	0xFF2
  4153                           intcon2	equ	0xFF1
  4154                           postinc0	equ	0xFEE
  4155                           fsr0h	equ	0xFEA
  4156                           fsr0l	equ	0xFE9
  4157                           wreg	equ	0xFE8
  4158                           postdec1	equ	0xFE5
  4159                           fsr1h	equ	0xFE2
  4160                           fsr1l	equ	0xFE1
  4161                           indf2	equ	0xFDF
  4162                           fsr2h	equ	0xFDA
  4163                           fsr2l	equ	0xFD9
  4164                           status	equ	0xFD8
  4165                           
  4166                           	psect	rparam
  4167  0000                     tosu	equ	0xFFF
  4168                           tosh	equ	0xFFE
  4169                           tosl	equ	0xFFD
  4170                           pclatu	equ	0xFFB
  4171                           pclath	equ	0xFFA
  4172                           tblptru	equ	0xFF8
  4173                           tblptrh	equ	0xFF7
  4174                           tblptrl	equ	0xFF6
  4175                           tablat	equ	0xFF5
  4176                           prodh	equ	0xFF4
  4177                           prodl	equ	0xFF3
  4178                           intcon	equ	0xFF2
  4179                           intcon2	equ	0xFF1
  4180                           postinc0	equ	0xFEE
  4181                           fsr0h	equ	0xFEA
  4182                           fsr0l	equ	0xFE9
  4183                           wreg	equ	0xFE8
  4184                           postdec1	equ	0xFE5
  4185                           fsr1h	equ	0xFE2
  4186                           fsr1l	equ	0xFE1
  4187                           indf2	equ	0xFDF
  4188                           fsr2h	equ	0xFDA
  4189                           fsr2l	equ	0xFD9
  4190                           status	equ	0xFD8
  4191                           
  4192                           	psect	temp
  4193  000050                     btemp:
  4194                           	opt stack 0
  4195  000050                     	ds	1
  4196  0000                     int$flags	set	btemp
  4197                           tosu	equ	0xFFF
  4198                           tosh	equ	0xFFE
  4199                           tosl	equ	0xFFD
  4200                           pclatu	equ	0xFFB
  4201                           pclath	equ	0xFFA
  4202                           tblptru	equ	0xFF8
  4203                           tblptrh	equ	0xFF7
  4204                           tblptrl	equ	0xFF6
  4205                           tablat	equ	0xFF5
  4206                           prodh	equ	0xFF4
  4207                           prodl	equ	0xFF3
  4208                           intcon	equ	0xFF2
  4209                           intcon2	equ	0xFF1
  4210                           postinc0	equ	0xFEE
  4211                           fsr0h	equ	0xFEA
  4212                           fsr0l	equ	0xFE9
  4213                           wreg	equ	0xFE8
  4214                           postdec1	equ	0xFE5
  4215                           fsr1h	equ	0xFE2
  4216                           fsr1l	equ	0xFE1
  4217                           indf2	equ	0xFDF
  4218                           fsr2h	equ	0xFDA
  4219                           fsr2l	equ	0xFD9
  4220                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        192
    BSS         20
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      79
    BANK0           160      0     160
    BANK1           256      9       9
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StepMove
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _RectaAceleracion->_StepMove
    _StepMove->_State16MEF_act
    _StepMove->_State8MEF_act
    _State8MEF_act->_EPWM1_LoadDutyValue
    _State8MEF_act->_EPWM2_LoadDutyValue
    _State16MEF_act->_EPWM1_LoadDutyValue
    _State16MEF_act->_EPWM2_LoadDutyValue

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_RectaAceleracion
    _RectaAceleracion->_StepMove

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12576
                         _Motor_Stop
                   _RectaAceleracion
                  _SYSTEM_Initialize
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RectaAceleracion                                     4     2      2    6517
                                              5 BANK1      4     2      2
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StepMove                                             7     2      5    5887
                                             20 COMRAM     2     2      0
                                              0 BANK1      5     0      5
                     _State16MEF_act
                      _State8MEF_act
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act                                        2     2      0    1480
                                             18 COMRAM     2     2      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act                                       2     2      0    1480
                                             18 COMRAM     2     2      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2     678
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     678
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Motor_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Motor_Stop
   _RectaAceleracion
     _StepMove
       _State16MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
       _State8MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_ini
   _StepMove
     _State16MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
     _State8MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      9       9       7        3.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      4F       1       84.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F8      12        0.0%
DATA                 0      0      F8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Jun 29 10:31:09 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 0A1E  
                       ??_TMR6_StartTimer 002F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l513 0564                                       l521 0704  
                                     l467 0308                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _PR6 000F4B                           __end_of_ADC_ISR 0A38  
                         _TMR2_Initialize 0936                                       tosl 000FFD  
                                     wreg 000FE8                  __end_of_EPWM2_Initialize 0912  
                         _CCP5_Initialize 09C8                                      l2300 02D0  
                                    l2220 0116                                      l2212 00CE  
                                    l2204 00B2                                      l2302 02D6  
                                    l2222 011C                                      l2310 02EC  
                                    l2410 052C                                      l2330 0372  
                                    l2322 032A                                      l2314 030E  
                                    l2306 02E4                                      l2226 0130  
                                    l2412 0532                                      l2332 0378  
                                    l2420 0548                                      l2252 01C0  
                                    l2236 0154                                      l2228 0138  
                                    l2262 01E4                                      l2254 01C8  
                                    l2246 01AC                                      l2416 0540  
                                    l2336 038C                                      l2280 0258  
                                    l2272 023C                                      l2248 01B2  
                                    l2440 06EE                                      l2362 041C  
                                    l2346 03B0                                      l2338 0394  
                                    l2274 0242                                      l2434 06DA  
                                    l2442 06F2                                      l2372 0440  
                                    l2364 0424                                      l2356 0408  
                                    l2436 06E2                                      l2444 06F8  
                                    l2452 061C                                      l2524 074A  
                                    l2390 04B4                                      l2382 0498  
                                    l2358 040E                                      l2278 0250  
                                    l2462 0662                                      l2518 0732  
                                    l2384 049E                                      l2288 0274  
                                    l2456 0642                                      l2466 0688  
                                    l2458 0650                                      l2388 04AC  
                                    l2398 04D0                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u1531 00CC                                      u1621 01E2  
                                    u1630 01F4                                      u1721 0328  
                                    u1811 043E                                      u1571 0152  
                                    u1820 0450                                      u1580 0164  
                                    u1680 0284                                      u1761 03AE  
                                    u1770 03C0                                      u1870 04E0  
                                    _TMR2 000FBC                                      _TMR6 000F4C  
                                    _WPUB 000F61                          _RectaAceleracion 0606  
                                    _main 0708                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0050                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00AA                             __CFG_IESO$OFF 000000  
                   ??_EPWM1_LoadDutyValue 0031                              ___param_bank 000000  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 0A0A  
                                   ?_main 0021                                     _T2CON 000FBA  
                                   _T6CON 000F4A                            __CFG_DEBUG$OFF 000000  
                                   i2l270 0052                                     i2l272 0062  
                                   i2l276 006E                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
       __size_of_TMR6_SetInterruptHandler 000A                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
               ?_TMR6_SetInterruptHandler 002F                          __end_of_TMR2_ISR 0A26  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                          __end_of_TMR6_ISR 097A  
                          __CFG_EBTRB$OFF 000000                                     _parar 0047  
                        _LookUP_TABLE_COS 0001                          _LookUP_TABLE_SEN 00E0  
                      __CFG_MCLRE$EXTMCLR 000000                        StepMove@StepNumber 0100  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 0A2C                            __CFG_PBADEN$ON 000000  
          ??_TMR6_DefaultInterruptHandler 0021                           __initialization 076E  
              __end_of_EUSART1_Initialize 09C8                              __end_of_main 076E  
                 __end_of_TMR2_Initialize 0958                                 ??_ADC_ISR 0021  
             ?_INTERRUPT_InterruptManager 0021                  _TMR2_SetInterruptHandler 0A14  
                                  ??_main 0037                   __end_of_CCP5_Initialize 09DC  
                           __activetblptr 000002                           _TMR6_Initialize 089E  
                        __end_of_StepMove 0708                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR1H 000FBF                                    _CCPR2H 000F68  
                                  _CCPR1L 000FBE                                    _CCPR2L 000F67  
                                  _CCPR5H 000F56                                    _CCPR5L 000F55  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                          __CFG_XINST$OFF 000000                              _CCPTMRS0bits 000F49  
                              _Motor_Stop 09DC                            __CFG_STVREN$ON 000000  
                 __size_of_State16MEF_act 025C                                    clear_0 07B4  
                            __pdataCOMRAM 0001                  StepMove@microstep_number 0103  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       _EPWM2_LoadDutyValue 0814  
                 __end_of_TMR2_StartTimer 0A30  TMR2_SetInterruptHandler@InterruptHandler 002F  
TMR6_SetInterruptHandler@InterruptHandler 002F             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 0874                                __accesstop 0060  
                 __end_of__initialization 07BA                     __end_of_TMR2_CallBack 08EE  
                      ?_SYSTEM_Initialize 0021                           _TMR6_StartTimer 0A26  
                           ___rparam_used 000001                         ?_EPWM1_Initialize 0021  
                          __pcstackCOMRAM 0021                      ?_EPWM2_LoadDutyValue 002F  
                            __pidataBANK0 0566                       ??_SYSTEM_Initialize 0031  
                   __end_of_State8MEF_act 030A                                 ?_TMR2_ISR 0021  
                               ?_TMR6_ISR 0021                        ??_EPWM1_Initialize 002F  
                        ?_TMR2_Initialize 0021                   __end_of_TMR6_Initialize 08C6  
                __end_of_RectaAceleracion 0696                          ?_CCP5_Initialize 0021  
                       ?_EPWM2_Initialize 0021                 __end_of_SYSTEM_Initialize 089E  
                      ??_EPWM2_Initialize 002F                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 004B                        __CFG_CCP2MX$PORTC1 000000  
                   ??_EPWM2_LoadDutyValue 0031                               ?_Motor_Stop 0021  
        __end_of_TMR6_SetInterruptHandler 0A14                                ??_TMR2_ISR 0021  
                      __CFG_CCP3MX$PORTB5 000000                                 ?_StepMove 0100  
                              ??_TMR6_ISR 0021                                   _CCP1CON 000FBD  
                                 _CCP2CON 000F66                                   _CCP5CON 000F54  
                                 _ECCP1AS 000FB6                                   _ECCP2AS 000F64  
                                 _ADC_ISR 0A34                   __size_of_ADC_Initialize 0018  
                                 _OSCCON2 000FD2                                   i2u40_48 08DA  
                                 _OSCTUNE 000F9B                                   i2u46_48 0966  
                                 _PWM1CON 000FB7                                   _PWM2CON 000F65  
                                 _SPBRGH1 000FB0                          ?_TMR2_StartTimer 0021  
                 __end_of_TMR6_StartTimer 0A2C               __end_of_EPWM1_LoadDutyValue 0874  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0031  
                              ??_StepMove 0035                            _State16MEF_act 030A  
                                 __pcinit 076E                          ?_TMR6_Initialize 0021  
                                 __ramtop 1000                                   __ptext0 0708  
                                 __ptext1 09EE                                   __ptext2 0874  
                                 __ptext3 089E                                   __ptext4 0A26  
                                 __ptext5 0A0A                                   __ptext6 0936  
                                 __ptext7 0A2C                                   __ptext8 0A14  
                                 __ptext9 07C8                     _OSCILLATOR_Initialize 09FC  
                               _T2CONbits 000FBA                             ?_StateMEF_ini 0021  
                      _EUSART1_Initialize 09B2                  ??_PIN_MANAGER_Initialize 002F  
                               _T6CONbits 000F4A                __size_of_SYSTEM_Initialize 002A  
                     __size_of_Motor_Stop 0012                      end_of_initialization 07BA  
                     ?_EUSART1_Initialize 0021                             __Lmediumconst 0000  
                  __end_of_State16MEF_act 0566                                   postdec1 000FE5  
                                 postinc0 000FEE                      ??_EUSART1_Initialize 002F  
                _TMR6_SetInterruptHandler 0A0A                            ??_StateMEF_ini 002F  
                        ?_TMR6_StartTimer 0021                              _EstadoActual 004F  
                       RectaAceleracion@i 0108                           ?_State16MEF_act 0021  
            __end_of_INTERRUPT_Initialize 0A34      __end_of_TMR2_DefaultInterruptHandler 0A3C  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 0A3A  
               RectaAceleracion@direccion 0106                         StepMove@Velocidad 0102  
                           __pidataCOMRAM 097A                         __size_of_TMR2_ISR 0008  
                          _ADC_Initialize 099A                         __size_of_TMR6_ISR 0022  
                  ?_OSCILLATOR_Initialize 0021                         ?_RectaAceleracion 0105  
                     start_initialization 076E                        ??_RectaAceleracion 0037  
               __size_of_EPWM1_Initialize 0024           __size_of_PIN_MANAGER_Initialize 004C  
                               _Microstep 0040              EPWM1_LoadDutyValue@dutyValue 002F  
               __size_of_EPWM2_Initialize 0024                              ??_Motor_Stop 002F  
                        _DelayTimerTicked 0049                    __end_of_ADC_Initialize 09B2  
                             __pdataBANK0 0060                 RectaAceleracion@velocidad 0107  
                                ?_ADC_ISR 0021                                 _StepCount 003E  
                       StepMove@direccion 0104             ?_TMR2_DefaultInterruptHandler 0021  
                       __size_of_StepMove 0072                    __size_of_TMR2_CallBack 0028  
                             __pbssCOMRAM 0037                             __pcstackBANK1 0100  
                __size_of_TMR2_Initialize 0022                  __size_of_CCP5_Initialize 0014  
                      __end_of_Motor_Stop 09EE                    __size_of_State8MEF_act 025C  
             __end_of_EPWM2_LoadDutyValue 0844                     _TMR6_InterruptHandler 004D  
                    __end_of_StateMEF_ini 09FC                    _PIN_MANAGER_Initialize 07C8  
                               __pintcode 0008                           ?_ADC_Initialize 0021  
                 State16MEF_act@direccion 0034              ??_INTERRUPT_InterruptManager 0021  
                        __CFG_PRICLKEN$ON 000000                                  _BAUDCON1 000FB8  
                                _ANALOG_0 0044                                  _ANALOG_1 0042  
                    _INTERRUPT_Initialize 0A30                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                           _TMR2_CallBack 08C6                                  _PIE1bits 000F9D  
                                _PIE5bits 000F7D                  __size_of_TMR2_StartTimer 0004  
     __size_of_INTERRUPT_InterruptManager 00A2                                  _PIR1bits 000F9E  
                                _PIR5bits 000F7E              __size_of_EPWM1_LoadDutyValue 0030  
              ??_TMR6_SetInterruptHandler 0031                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR2_ISR 0A1E  
                                _PSTR1CON 000FB9                                  _PSTR2CON 000F63  
                                _TMR6_ISR 0958                             _State8MEF_act 00AE  
                        _Timer2Tick_count 003C                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2            ??_TMR2_DefaultInterruptHandler 0021  
                        _EPWM1_Initialize 0912         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 002F                  __size_of_TMR6_Initialize 0028  
                             _INTCON2bits 000FF1                                 copy_data0 0782  
                               copy_data1 07A2                     ?_INTERRUPT_Initialize 0021  
                       ??_TMR2_Initialize 0031                            ?_TMR2_CallBack 0021  
                        ??_State16MEF_act 0033                         ??_CCP5_Initialize 002F  
                                _MoveDone 0046                                  __Hrparam 0000  
                            _Timer2Ticked 004A                          _EPWM2_Initialize 08EE  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTC0 000000                            ?_State8MEF_act 0021  
                                _StepMove 0696                   ??_OSCILLATOR_Initialize 002F  
             __size_of_EUSART1_Initialize 0016                                  __ptext10 09FC  
                                __ptext11 0A30                                  __ptext20 030A  
                                __ptext12 09B2                                  __ptext21 0814  
                                __ptext13 08EE                                  __ptext30 0A34  
                                __ptext22 0844                                  __ptext14 0912  
                                __ptext31 0000                                  __ptext23 09DC  
                                __ptext15 09C8                                  __ptext16 099A  
                                __ptext25 0958                                  __ptext17 0606  
                                __ptext26 0A38                                  __ptext18 0696  
                                __ptext27 0A1E                                  __ptext19 00AE  
                                __ptext28 08C6                                  __ptext29 0A3A  
                   __size_of_StateMEF_ini 000E                 __size_of_RectaAceleracion 0090  
                           __size_of_main 0066          RectaAceleracion@microstep_number 0105  
                     _LookUP_TABLE_COS_16 00A0                       _LookUP_TABLE_SEN_16 0060  
                __size_of_TMR6_StartTimer 0006                                  int$flags 0050  
                       ??_TMR2_StartTimer 002F        __end_of_INTERRUPT_InterruptManager 00AA  
              _INTERRUPT_InterruptManager 0008                                _INTCONbits 000FF2  
                            _StateMEF_ini 09EE                    ??_INTERRUPT_Initialize 002F  
    __end_of_TMR6_DefaultInterruptHandler 0A3A     __size_of_TMR6_DefaultInterruptHandler 0002  
            _TMR6_DefaultInterruptHandler 0A38                                  intlevel2 0000  
                         ??_TMR2_CallBack 0021              EPWM2_LoadDutyValue@dutyValue 002F  
                 ?_PIN_MANAGER_Initialize 0021                         ??_TMR6_Initialize 0031  
                              _RCSTA1bits 000FAB                          ??_ADC_Initialize 002F  
                           _StepsComplete 0048                           ??_State8MEF_act 0033  
                  State8MEF_act@direccion 0034                         __CFG_T3CMX$PORTC0 000000  
                     _EPWM1_LoadDutyValue 0844            __end_of_PIN_MANAGER_Initialize 0814  
           ?_TMR6_DefaultInterruptHandler 0021                         __CFG_FOSC$INTIO67 000000  
                            _StepperMotor 0037                     _TMR2_InterruptHandler 004B  
                __end_of_EPWM1_Initialize 0936                      ?_EPWM1_LoadDutyValue 002F  
