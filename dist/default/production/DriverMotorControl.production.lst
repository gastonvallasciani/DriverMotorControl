

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Jun 14 11:58:00 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           ; Version 1.41
    52                           ; Generated 25/01/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F46K22 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMRAM
    87  000C5A                     __pidataCOMRAM:
    88                           	opt stack 0
    89                           
    90                           ;initializer for _LookUP_TABLE_COS
    91  000C5A  7D                 	db	125
    92  000C5B  76                 	db	118
    93  000C5C  6C                 	db	108
    94  000C5D  5E                 	db	94
    95  000C5E  4D                 	db	77
    96  000C5F  39                 	db	57
    97  000C60  22                 	db	34
    98  000C61  0C                 	db	12
    99  000C62  0C                 	db	12
   100  000C63  22                 	db	34
   101  000C64  39                 	db	57
   102  000C65  4D                 	db	77
   103  000C66  5E                 	db	94
   104  000C67  6C                 	db	108
   105  000C68  76                 	db	118
   106  000C69  7D                 	db	125
   107  000C6A  7D                 	db	125
   108  000C6B  76                 	db	118
   109  000C6C  6C                 	db	108
   110  000C6D  5E                 	db	94
   111  000C6E  4D                 	db	77
   112  000C6F  39                 	db	57
   113  000C70  22                 	db	34
   114  000C71  0C                 	db	12
   115  000C72  0C                 	db	12
   116  000C73  22                 	db	34
   117  000C74  39                 	db	57
   118  000C75  4D                 	db	77
   119  000C76  5E                 	db	94
   120  000C77  6C                 	db	108
   121  000C78  76                 	db	118
   122  000C79  7D                 	db	125
   123                           
   124                           	psect	idataBANK0
   125  00088A                     __pidataBANK0:
   126                           	opt stack 0
   127                           
   128                           ;initializer for _LookUP_TABLE_SEN_16
   129  00088A  06                 	db	6
   130  00088B  12                 	db	18
   131  00088C  1D                 	db	29
   132  00088D  2A                 	db	42
   133  00088E  35                 	db	53
   134  00088F  3F                 	db	63
   135  000890  49                 	db	73
   136  000891  53                 	db	83
   137  000892  5B                 	db	91
   138  000893  63                 	db	99
   139  000894  6A                 	db	106
   140  000895  70                 	db	112
   141  000896  75                 	db	117
   142  000897  79                 	db	121
   143  000898  7C                 	db	124
   144  000899  7E                 	db	126
   145  00089A  7E                 	db	126
   146  00089B  7C                 	db	124
   147  00089C  79                 	db	121
   148  00089D  75                 	db	117
   149  00089E  70                 	db	112
   150  00089F  6A                 	db	106
   151  0008A0  63                 	db	99
   152  0008A1  5B                 	db	91
   153  0008A2  53                 	db	83
   154  0008A3  49                 	db	73
   155  0008A4  3F                 	db	63
   156  0008A5  35                 	db	53
   157  0008A6  2A                 	db	42
   158  0008A7  1D                 	db	29
   159  0008A8  12                 	db	18
   160  0008A9  06                 	db	6
   161  0008AA  06                 	db	6
   162  0008AB  12                 	db	18
   163  0008AC  1D                 	db	29
   164  0008AD  2A                 	db	42
   165  0008AE  35                 	db	53
   166  0008AF  3F                 	db	63
   167  0008B0  49                 	db	73
   168  0008B1  53                 	db	83
   169  0008B2  5B                 	db	91
   170  0008B3  63                 	db	99
   171  0008B4  6A                 	db	106
   172  0008B5  70                 	db	112
   173  0008B6  75                 	db	117
   174  0008B7  79                 	db	121
   175  0008B8  7C                 	db	124
   176  0008B9  7E                 	db	126
   177  0008BA  7E                 	db	126
   178  0008BB  7C                 	db	124
   179  0008BC  79                 	db	121
   180  0008BD  75                 	db	117
   181  0008BE  70                 	db	112
   182  0008BF  6A                 	db	106
   183  0008C0  63                 	db	99
   184  0008C1  5B                 	db	91
   185  0008C2  53                 	db	83
   186  0008C3  49                 	db	73
   187  0008C4  3F                 	db	63
   188  0008C5  35                 	db	53
   189  0008C6  2A                 	db	42
   190  0008C7  1D                 	db	29
   191  0008C8  12                 	db	18
   192  0008C9  06                 	db	6
   193                           
   194                           ;initializer for _LookUP_TABLE_COS_16
   195  0008CA  7E                 	db	126
   196  0008CB  7C                 	db	124
   197  0008CC  79                 	db	121
   198  0008CD  75                 	db	117
   199  0008CE  70                 	db	112
   200  0008CF  6A                 	db	106
   201  0008D0  63                 	db	99
   202  0008D1  5B                 	db	91
   203  0008D2  53                 	db	83
   204  0008D3  49                 	db	73
   205  0008D4  3F                 	db	63
   206  0008D5  35                 	db	53
   207  0008D6  2A                 	db	42
   208  0008D7  1D                 	db	29
   209  0008D8  12                 	db	18
   210  0008D9  06                 	db	6
   211  0008DA  06                 	db	6
   212  0008DB  12                 	db	18
   213  0008DC  1D                 	db	29
   214  0008DD  2A                 	db	42
   215  0008DE  35                 	db	53
   216  0008DF  3F                 	db	63
   217  0008E0  49                 	db	73
   218  0008E1  53                 	db	83
   219  0008E2  5B                 	db	91
   220  0008E3  63                 	db	99
   221  0008E4  6A                 	db	106
   222  0008E5  70                 	db	112
   223  0008E6  75                 	db	117
   224  0008E7  79                 	db	121
   225  0008E8  7C                 	db	124
   226  0008E9  7E                 	db	126
   227  0008EA  7E                 	db	126
   228  0008EB  7C                 	db	124
   229  0008EC  79                 	db	121
   230  0008ED  75                 	db	117
   231  0008EE  70                 	db	112
   232  0008EF  6A                 	db	106
   233  0008F0  63                 	db	99
   234  0008F1  5B                 	db	91
   235  0008F2  53                 	db	83
   236  0008F3  49                 	db	73
   237  0008F4  3F                 	db	63
   238  0008F5  35                 	db	53
   239  0008F6  2A                 	db	42
   240  0008F7  1D                 	db	29
   241  0008F8  12                 	db	18
   242  0008F9  06                 	db	6
   243  0008FA  06                 	db	6
   244  0008FB  12                 	db	18
   245  0008FC  1D                 	db	29
   246  0008FD  2A                 	db	42
   247  0008FE  35                 	db	53
   248  0008FF  3F                 	db	63
   249  000900  49                 	db	73
   250  000901  53                 	db	83
   251  000902  5B                 	db	91
   252  000903  63                 	db	99
   253  000904  6A                 	db	106
   254  000905  70                 	db	112
   255  000906  75                 	db	117
   256  000907  79                 	db	121
   257  000908  7C                 	db	124
   258  000909  7E                 	db	126
   259                           
   260                           ;initializer for _LookUP_TABLE_SEN
   261  00090A  0C                 	db	12
   262  00090B  22                 	db	34
   263  00090C  39                 	db	57
   264  00090D  4D                 	db	77
   265  00090E  5E                 	db	94
   266  00090F  6C                 	db	108
   267  000910  76                 	db	118
   268  000911  7D                 	db	125
   269  000912  7D                 	db	125
   270  000913  76                 	db	118
   271  000914  6C                 	db	108
   272  000915  5E                 	db	94
   273  000916  4D                 	db	77
   274  000917  39                 	db	57
   275  000918  22                 	db	34
   276  000919  0C                 	db	12
   277  00091A  0C                 	db	12
   278  00091B  22                 	db	34
   279  00091C  39                 	db	57
   280  00091D  4D                 	db	77
   281  00091E  5E                 	db	94
   282  00091F  6C                 	db	108
   283  000920  76                 	db	118
   284  000921  7D                 	db	125
   285  000922  7D                 	db	125
   286  000923  76                 	db	118
   287  000924  6C                 	db	108
   288  000925  5E                 	db	94
   289  000926  4D                 	db	77
   290  000927  39                 	db	57
   291  000928  22                 	db	34
   292  000929  0C                 	db	12
   293                           
   294                           	psect	nvCOMRAM
   295  000047                     __pnvCOMRAM:
   296                           	opt stack 0
   297  000047                     _TMR2_InterruptHandler:
   298                           	opt stack 0
   299  000047                     	ds	2
   300  000049                     _TMR6_InterruptHandler:
   301                           	opt stack 0
   302  000049                     	ds	2
   303  00004B                     _EstadoActual:
   304                           	opt stack 0
   305  00004B                     	ds	1
   306  0000                     _CCPTMRS0bits	set	3913
   307  0000                     _ANSELA	set	3896
   308  0000                     _ANSELE	set	3900
   309  0000                     _ANSELD	set	3899
   310  0000                     _ANSELB	set	3897
   311  0000                     _ANSELC	set	3898
   312  0000                     _CCPR5H	set	3926
   313  0000                     _CCPR5L	set	3925
   314  0000                     _CCP5CON	set	3924
   315  0000                     _T6CONbits	set	3914
   316  0000                     _TMR6	set	3916
   317  0000                     _PR6	set	3915
   318  0000                     _T6CON	set	3914
   319  0000                     _LATDbits	set	3980
   320  0000                     _LATCbits	set	3979
   321  0000                     _LATBbits	set	3978
   322  0000                     _TXREG1	set	4013
   323  0000                     _RCREG1	set	4014
   324  0000                     _RCSTA1bits	set	4011
   325  0000                     _SPBRGH1	set	4016
   326  0000                     _SPBRG1	set	4015
   327  0000                     _TXSTA1	set	4012
   328  0000                     _RCSTA1	set	4011
   329  0000                     _BAUDCON1	set	4024
   330  0000                     _OSCTUNE	set	3995
   331  0000                     _OSCCON2	set	4050
   332  0000                     _OSCCON	set	4051
   333  0000                     _INTCONbits	set	4082
   334  0000                     _RCONbits	set	4048
   335  0000                     _ADCON0bits	set	4034
   336  0000                     _ADRESH	set	4036
   337  0000                     _ADRESL	set	4035
   338  0000                     _ADCON2	set	4032
   339  0000                     _ADCON1	set	4033
   340  0000                     _ADCON0	set	4034
   341  0000                     _CCPR1H	set	4031
   342  0000                     _CCPR1L	set	4030
   343  0000                     _PSTR1CON	set	4025
   344  0000                     _PWM1CON	set	4023
   345  0000                     _ECCP1AS	set	4022
   346  0000                     _CCP1CON	set	4029
   347  0000                     _CCPR2H	set	3944
   348  0000                     _CCPR2L	set	3943
   349  0000                     _PSTR2CON	set	3939
   350  0000                     _PWM2CON	set	3941
   351  0000                     _ECCP2AS	set	3940
   352  0000                     _CCP2CON	set	3942
   353  0000                     _INTCON2bits	set	4081
   354  0000                     _WPUB	set	3937
   355  0000                     _TRISD	set	3989
   356  0000                     _TRISC	set	3988
   357  0000                     _TRISB	set	3987
   358  0000                     _TRISA	set	3986
   359  0000                     _TRISE	set	3990
   360  0000                     _LATC	set	3979
   361  0000                     _LATB	set	3978
   362  0000                     _LATA	set	3977
   363  0000                     _LATD	set	3980
   364  0000                     _LATE	set	3981
   365  0000                     _T2CONbits	set	4026
   366  0000                     _PIE1bits	set	3997
   367  0000                     _PIR1bits	set	3998
   368  0000                     _TMR2	set	4028
   369  0000                     _PR2	set	4027
   370  0000                     _T2CON	set	4026
   371  0000                     _PIE5bits	set	3965
   372  0000                     _PIR5bits	set	3966
   373                           
   374                           ; #config settings
   375  0000                     
   376                           	psect	cinit
   377  0009AC                     __pcinit:
   378                           	opt stack 0
   379  0009AC                     start_initialization:
   380                           	opt stack 0
   381  0009AC                     __initialization:
   382                           	opt stack 0
   383                           
   384                           ; Initialize objects allocated to BANK0 (160 bytes)
   385                           ; load TBLPTR registers with __pidataBANK0
   386  0009AC  0E8A               	movlw	low __pidataBANK0
   387  0009AE  6EF6               	movwf	tblptrl,c
   388  0009B0  0E08               	movlw	high __pidataBANK0
   389  0009B2  6EF7               	movwf	tblptrh,c
   390  0009B4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   391  0009B6  6EF8               	movwf	tblptru,c
   392  0009B8  EE00  F060         	lfsr	0,__pdataBANK0
   393  0009BC  EE10 F0A0          	lfsr	1,160
   394  0009C0                     copy_data0:
   395  0009C0  0009               	tblrd		*+
   396  0009C2  CFF5 FFEE          	movff	tablat,postinc0
   397  0009C6  50E5               	movf	postdec1,w,c
   398  0009C8  50E1               	movf	fsr1l,w,c
   399  0009CA  E1FA               	bnz	copy_data0
   400                           
   401                           ; Initialize objects allocated to COMRAM (32 bytes)
   402                           ; load TBLPTR registers with __pidataCOMRAM
   403  0009CC  0E5A               	movlw	low __pidataCOMRAM
   404  0009CE  6EF6               	movwf	tblptrl,c
   405  0009D0  0E0C               	movlw	high __pidataCOMRAM
   406  0009D2  6EF7               	movwf	tblptrh,c
   407  0009D4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   408  0009D6  6EF8               	movwf	tblptru,c
   409  0009D8  EE00  F001         	lfsr	0,__pdataCOMRAM
   410  0009DC  EE10 F020          	lfsr	1,32
   411  0009E0                     copy_data1:
   412  0009E0  0009               	tblrd		*+
   413  0009E2  CFF5 FFEE          	movff	tablat,postinc0
   414  0009E6  50E5               	movf	postdec1,w,c
   415  0009E8  50E1               	movf	fsr1l,w,c
   416  0009EA  E1FA               	bnz	copy_data1
   417                           
   418                           ; Clear objects allocated to COMRAM (12 bytes)
   419  0009EC  EE00  F03B         	lfsr	0,__pbssCOMRAM
   420  0009F0  0E0C               	movlw	12
   421  0009F2                     clear_0:
   422  0009F2  6AEE               	clrf	postinc0,c
   423  0009F4  06E8               	decf	wreg,f,c
   424  0009F6  E1FD               	bnz	clear_0
   425  0009F8                     end_of_initialization:
   426                           	opt stack 0
   427  0009F8                     __end_of__initialization:
   428                           	opt stack 0
   429  0009F8  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   430  0009FA  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   431  0009FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   432  0009FE  6EF8               	movwf	tblptru,c
   433  000A00  0100               	movlb	0
   434  000A02  EF2E  F005         	goto	_main	;jump to C main() function
   435                           tblptru	equ	0xFF8
   436                           tblptrh	equ	0xFF7
   437                           tblptrl	equ	0xFF6
   438                           tablat	equ	0xFF5
   439                           postinc0	equ	0xFEE
   440                           wreg	equ	0xFE8
   441                           postdec1	equ	0xFE5
   442                           fsr1l	equ	0xFE1
   443                           
   444                           	psect	bssCOMRAM
   445  00003B                     __pbssCOMRAM:
   446                           	opt stack 0
   447  00003B                     _Timer2Tick_count:
   448                           	opt stack 0
   449  00003B                     	ds	2
   450  00003D                     _StepCount:
   451                           	opt stack 0
   452  00003D                     	ds	2
   453  00003F                     _ANALOG_1:
   454                           	opt stack 0
   455  00003F                     	ds	2
   456  000041                     _ANALOG_0:
   457                           	opt stack 0
   458  000041                     	ds	2
   459  000043                     	ds	1
   460  000044                     _Microstep:
   461                           	opt stack 0
   462  000044                     	ds	1
   463  000045                     _StepsComplete:
   464                           	opt stack 0
   465  000045                     	ds	1
   466  000046                     _Timer2Ticked:
   467                           	opt stack 0
   468  000046                     	ds	1
   469                           tblptru	equ	0xFF8
   470                           tblptrh	equ	0xFF7
   471                           tblptrl	equ	0xFF6
   472                           tablat	equ	0xFF5
   473                           postinc0	equ	0xFEE
   474                           wreg	equ	0xFE8
   475                           postdec1	equ	0xFE5
   476                           fsr1l	equ	0xFE1
   477                           
   478                           	psect	dataCOMRAM
   479  000001                     __pdataCOMRAM:
   480                           	opt stack 0
   481  000001                     _LookUP_TABLE_COS:
   482                           	opt stack 0
   483  000001                     	ds	32
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           postdec1	equ	0xFE5
   491                           fsr1l	equ	0xFE1
   492                           
   493                           	psect	dataBANK0
   494  000060                     __pdataBANK0:
   495                           	opt stack 0
   496  000060                     _LookUP_TABLE_SEN_16:
   497                           	opt stack 0
   498  000060                     	ds	64
   499  0000A0                     _LookUP_TABLE_COS_16:
   500                           	opt stack 0
   501  0000A0                     	ds	64
   502  0000E0                     _LookUP_TABLE_SEN:
   503                           	opt stack 0
   504  0000E0                     	ds	32
   505                           tblptru	equ	0xFF8
   506                           tblptrh	equ	0xFF7
   507                           tblptrl	equ	0xFF6
   508                           tablat	equ	0xFF5
   509                           postinc0	equ	0xFEE
   510                           wreg	equ	0xFE8
   511                           postdec1	equ	0xFE5
   512                           fsr1l	equ	0xFE1
   513                           
   514                           	psect	cstackCOMRAM
   515  000021                     __pcstackCOMRAM:
   516                           	opt stack 0
   517  000021                     ??_INTERRUPT_InterruptManager:
   518  000021                     
   519                           ; 1 bytes @ 0x0
   520  000021                     	ds	14
   521  00002F                     EUSART1_Write@txData:
   522                           	opt stack 0
   523  00002F                     TMR6_SetInterruptHandler@InterruptHandler:
   524                           	opt stack 0
   525  00002F                     TMR2_SetInterruptHandler@InterruptHandler:
   526                           	opt stack 0
   527  00002F                     EPWM2_LoadDutyValue@dutyValue:
   528                           	opt stack 0
   529  00002F                     EPWM1_LoadDutyValue@dutyValue:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0xE
   533  00002F                     	ds	2
   534  000031                     ??_EPWM2_LoadDutyValue:
   535  000031                     ??_EPWM1_LoadDutyValue:
   536  000031                     
   537                           ; 1 bytes @ 0x10
   538  000031                     	ds	2
   539  000033                     ??_State8MEF_act:
   540  000033                     ??_State16MEF_act:
   541  000033                     ??_State16MEF_act_Backward:
   542  000033                     ??_State8MEF_act_Backward:
   543                           
   544                           ; 1 bytes @ 0x12
   545  000033                     	ds	1
   546  000034                     StepMove@StepNumber:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x13
   550  000034                     	ds	2
   551  000036                     StepMove@Velocidad:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x15
   555  000036                     	ds	1
   556  000037                     StepMove@microstep_number:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x16
   560  000037                     	ds	1
   561  000038                     StepMove@direccion:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x17
   565  000038                     	ds	1
   566  000039                     ??_StepMove:
   567                           
   568                           ; 1 bytes @ 0x18
   569  000039                     	ds	2
   570  00003B                     tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           postinc0	equ	0xFEE
   575                           wreg	equ	0xFE8
   576                           postdec1	equ	0xFE5
   577                           fsr1l	equ	0xFE1
   578                           
   579                           ; 1 bytes @ 0x1A
   580 ;;
   581 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   582 ;;
   583 ;; *************** function _main *****************
   584 ;; Defined at:
   585 ;;		line 21 in file "main.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;Total ram usage:        0 bytes
   604 ;; Hardware stack levels required when called:    7
   605 ;; This function calls:
   606 ;;		_SYSTEM_Initialize
   607 ;;		_StateMEF_ini
   608 ;;		_StepMove
   609 ;; This function is called by:
   610 ;;		Startup code after reset
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text0
   615  000A5C                     __ptext0:
   616                           	opt stack 0
   617  000A5C                     _main:
   618                           	opt stack 24
   619                           
   620                           ;main.c: 24: SYSTEM_Initialize();
   621                           
   622                           ;incstack = 0
   623  000A5C  ECAC  F005         	call	_SYSTEM_Initialize	;wreg free
   624                           
   625                           ;main.c: 25: StateMEF_ini();
   626  000A60  EC6B  F006         	call	_StateMEF_ini	;wreg free
   627                           
   628                           ;main.c: 26: Timer2Ticked=0;
   629  000A64  0E00               	movlw	0
   630  000A66  6E46               	movwf	_Timer2Ticked,c	;volatile
   631                           
   632                           ;main.c: 27: do { LATBbits.LATB6 = 1; } while(0);
   633  000A68  8C8A               	bsf	3978,6,c	;volatile
   634                           
   635                           ;main.c: 30: (INTCONbits.GIE = 1);
   636  000A6A  8EF2               	bsf	intcon,7,c	;volatile
   637                           
   638                           ;main.c: 33: (INTCONbits.PEIE = 1);
   639  000A6C  8CF2               	bsf	intcon,6,c	;volatile
   640  000A6E                     l2324:
   641  000A6E  0E13               	movlw	19
   642  000A70  6E35               	movwf	StepMove@StepNumber+1,c
   643  000A72  0E88               	movlw	136
   644  000A74  6E34               	movwf	StepMove@StepNumber,c
   645  000A76  0E05               	movlw	5
   646  000A78  6E36               	movwf	StepMove@Velocidad,c
   647  000A7A  0E10               	movlw	16
   648  000A7C  6E37               	movwf	StepMove@microstep_number,c
   649  000A7E  0E01               	movlw	1
   650  000A80  6E38               	movwf	StepMove@direccion,c
   651  000A82  EC95  F004         	call	_StepMove	;wreg free
   652  000A86  0900               	iorlw	0
   653  000A88  B4D8               	btfsc	status,2,c
   654  000A8A  D7F1               	goto	l2324
   655  000A8C                     l2326:
   656  000A8C  0E13               	movlw	19
   657  000A8E  6E35               	movwf	StepMove@StepNumber+1,c
   658  000A90  0E88               	movlw	136
   659  000A92  6E34               	movwf	StepMove@StepNumber,c
   660  000A94  0E05               	movlw	5
   661  000A96  6E36               	movwf	StepMove@Velocidad,c
   662  000A98  0E10               	movlw	16
   663  000A9A  6E37               	movwf	StepMove@microstep_number,c
   664  000A9C  0E00               	movlw	0
   665  000A9E  6E38               	movwf	StepMove@direccion,c
   666  000AA0  EC95  F004         	call	_StepMove	;wreg free
   667  000AA4  0900               	iorlw	0
   668  000AA6  A4D8               	btfss	status,2,c
   669  000AA8  D7E2               	goto	l2324
   670  000AAA  D7F0               	goto	l2326
   671  000AAC                     __end_of_main:
   672                           	opt stack 0
   673                           tblptru	equ	0xFF8
   674                           tblptrh	equ	0xFF7
   675                           tblptrl	equ	0xFF6
   676                           tablat	equ	0xFF5
   677                           intcon	equ	0xFF2
   678                           postinc0	equ	0xFEE
   679                           wreg	equ	0xFE8
   680                           postdec1	equ	0xFE5
   681                           fsr1l	equ	0xFE1
   682                           status	equ	0xFD8
   683                           
   684 ;; *************** function _StepMove *****************
   685 ;; Defined at:
   686 ;;		line 329 in file "MotorDriver.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;  StepNumber      2   19[COMRAM] unsigned int 
   689 ;;  Velocidad       1   21[COMRAM] unsigned char 
   690 ;;  microstep_nu    1   22[COMRAM] unsigned char 
   691 ;;  direccion       1   23[COMRAM] unsigned char 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      unsigned char 
   696 ;; Registers used:
   697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   703 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;Total ram usage:        7 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:    6
   710 ;; This function calls:
   711 ;;		_State16MEF_act
   712 ;;		_State16MEF_act_Backward
   713 ;;		_State8MEF_act
   714 ;;		_State8MEF_act_Backward
   715 ;; This function is called by:
   716 ;;		_main
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text1
   721  00092A                     __ptext1:
   722                           	opt stack 0
   723  00092A                     _StepMove:
   724                           	opt stack 24
   725                           
   726                           ;MotorDriver.c: 331: if ((StepCount<StepNumber)){
   727                           
   728                           ;incstack = 0
   729  00092A  5034               	movf	StepMove@StepNumber,w,c
   730  00092C  5C3D               	subwf	_StepCount,w,c
   731  00092E  5035               	movf	StepMove@StepNumber+1,w,c
   732  000930  583E               	subwfb	_StepCount+1,w,c
   733  000932  B0D8               	btfsc	status,0,c
   734  000934  D033               	goto	l2296
   735                           
   736                           ;MotorDriver.c: 332: if (Timer2Ticked){
   737  000936  5046               	movf	_Timer2Ticked,w,c	;volatile
   738  000938  B4D8               	btfsc	status,2,c
   739  00093A  D02D               	goto	l2294
   740                           
   741                           ;MotorDriver.c: 333: Timer2Tick_count++;
   742  00093C  4A3B               	infsnz	_Timer2Tick_count,f,c
   743  00093E  2A3C               	incf	_Timer2Tick_count+1,f,c
   744                           
   745                           ;MotorDriver.c: 334: if (Timer2Tick_count == Velocidad){
   746  000940  5036               	movf	StepMove@Velocidad,w,c
   747  000942  6E39               	movwf	??_StepMove& (0+255),c
   748  000944  6A3A               	clrf	(??_StepMove+1)& (0+255),c
   749  000946  503B               	movf	_Timer2Tick_count,w,c
   750  000948  1839               	xorwf	??_StepMove,w,c
   751  00094A  E123               	bnz	l2292
   752  00094C  503C               	movf	_Timer2Tick_count+1,w,c
   753  00094E  183A               	xorwf	??_StepMove+1,w,c
   754  000950  A4D8               	btfss	status,2,c
   755  000952  D01F               	goto	l2292
   756                           
   757                           ;MotorDriver.c: 335: if (direccion == 1){
   758  000954  0438               	decf	StepMove@direccion,w,c
   759  000956  A4D8               	btfss	status,2,c
   760  000958  D00A               	goto	l2280
   761                           
   762                           ;MotorDriver.c: 336: if (microstep_number==16){
   763  00095A  0E10               	movlw	16
   764  00095C  1837               	xorwf	StepMove@microstep_number,w,c
   765  00095E  A4D8               	btfss	status,2,c
   766  000960  D003               	goto	l2278
   767                           
   768                           ;MotorDriver.c: 337: State16MEF_act();
   769  000962  EC4E  F003         	call	_State16MEF_act	;wreg free
   770                           
   771                           ;MotorDriver.c: 338: }
   772  000966  D00F               	goto	l2288
   773  000968                     l2278:
   774                           
   775                           ;MotorDriver.c: 339: else{
   776                           ;MotorDriver.c: 340: State8MEF_act();
   777  000968  EC55  F002         	call	_State8MEF_act	;wreg free
   778                           
   779                           ;MotorDriver.c: 341: }
   780                           ;MotorDriver.c: 342: }
   781  00096C  D00C               	goto	l2288
   782  00096E                     l2280:
   783                           
   784                           ;MotorDriver.c: 343: else if (direccion == 0){
   785  00096E  5038               	movf	StepMove@direccion,w,c
   786  000970  A4D8               	btfss	status,2,c
   787  000972  D009               	goto	l2288
   788                           
   789                           ;MotorDriver.c: 344: if (microstep_number==16){
   790  000974  0E10               	movlw	16
   791  000976  1837               	xorwf	StepMove@microstep_number,w,c
   792  000978  A4D8               	btfss	status,2,c
   793  00097A  D003               	goto	l2286
   794                           
   795                           ;MotorDriver.c: 345: State16MEF_act_Backward();
   796  00097C  EC57  F000         	call	_State16MEF_act_Backward	;wreg free
   797                           
   798                           ;MotorDriver.c: 346: }
   799  000980  D002               	goto	l2288
   800  000982                     l2286:
   801                           
   802                           ;MotorDriver.c: 347: else{
   803                           ;MotorDriver.c: 348: State8MEF_act_Backward();
   804  000982  EC5C  F001         	call	_State8MEF_act_Backward	;wreg free
   805  000986                     l2288:
   806                           
   807                           ;MotorDriver.c: 349: }
   808                           ;MotorDriver.c: 350: }
   809                           ;MotorDriver.c: 352: StepCount++;
   810  000986  4A3D               	infsnz	_StepCount,f,c
   811  000988  2A3E               	incf	_StepCount+1,f,c
   812                           
   813                           ;MotorDriver.c: 353: Timer2Tick_count=0;
   814  00098A  0E00               	movlw	0
   815  00098C  6E3C               	movwf	_Timer2Tick_count+1,c
   816  00098E  0E00               	movlw	0
   817  000990  6E3B               	movwf	_Timer2Tick_count,c
   818  000992                     l2292:
   819                           
   820                           ;MotorDriver.c: 354: }
   821                           ;MotorDriver.c: 355: Timer2Ticked = 0;
   822  000992  0E00               	movlw	0
   823  000994  6E46               	movwf	_Timer2Ticked,c	;volatile
   824  000996                     l2294:
   825                           
   826                           ;MotorDriver.c: 356: }
   827                           ;MotorDriver.c: 357: StepsComplete=0;
   828  000996  0E00               	movlw	0
   829  000998  6E45               	movwf	_StepsComplete,c
   830                           
   831                           ;MotorDriver.c: 359: }
   832  00099A  D006               	goto	l594
   833  00099C                     l2296:
   834                           
   835                           ;MotorDriver.c: 360: else{
   836                           ;MotorDriver.c: 361: StepsComplete=1;
   837  00099C  0E01               	movlw	1
   838  00099E  6E45               	movwf	_StepsComplete,c
   839                           
   840                           ;MotorDriver.c: 362: StepCount=0;
   841  0009A0  0E00               	movlw	0
   842  0009A2  6E3E               	movwf	_StepCount+1,c
   843  0009A4  0E00               	movlw	0
   844  0009A6  6E3D               	movwf	_StepCount,c
   845  0009A8                     l594:
   846                           
   847                           ;MotorDriver.c: 364: }
   848                           ;MotorDriver.c: 365: return(StepsComplete);
   849  0009A8  5045               	movf	_StepsComplete,w,c
   850  0009AA  0012               	return	
   851  0009AC                     __end_of_StepMove:
   852                           	opt stack 0
   853                           tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           intcon	equ	0xFF2
   858                           postinc0	equ	0xFEE
   859                           wreg	equ	0xFE8
   860                           postdec1	equ	0xFE5
   861                           fsr1l	equ	0xFE1
   862                           status	equ	0xFD8
   863                           
   864 ;; *************** function _State8MEF_act_Backward *****************
   865 ;; Defined at:
   866 ;;		line 259 in file "MotorDriver.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;Total ram usage:        1 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    5
   887 ;; This function calls:
   888 ;;		_EPWM1_LoadDutyValue
   889 ;;		_EPWM2_LoadDutyValue
   890 ;;		_limitar_corriente
   891 ;; This function is called by:
   892 ;;		_StepMove
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text2
   897  0002B8                     __ptext2:
   898                           	opt stack 0
   899  0002B8                     _State8MEF_act_Backward:
   900                           	opt stack 24
   901                           
   902                           ;MotorDriver.c: 260: switch(EstadoActual){
   903                           
   904                           ;incstack = 0
   905  0002B8  D0E7               	goto	l2242
   906  0002BA                     l2156:
   907                           
   908                           ;MotorDriver.c: 262: PSTR1CON = 0x00; PSTR2CON = 0x00;
   909  0002BA  0E00               	movlw	0
   910  0002BC  6EB9               	movwf	4025,c	;volatile
   911  0002BE  0E00               	movlw	0
   912  0002C0  6E63               	movwf	3939,c	;volatile
   913                           
   914                           ;MotorDriver.c: 263: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
   915  0002C2  948B               	bcf	3979,2,c	;volatile
   916  0002C4  9A8C               	bcf	3980,5,c	;volatile
   917  0002C6  928B               	bcf	3979,1,c	;volatile
   918  0002C8  908B               	bcf	3979,0,c	;volatile
   919                           
   920                           ;MotorDriver.c: 264: EstadoActual = STATE1;
   921  0002CA  0E01               	movlw	1
   922  0002CC  6E4B               	movwf	_EstadoActual,c
   923                           
   924                           ;MotorDriver.c: 265: break;
   925  0002CE  0012               	return	
   926  0002D0                     l2166:
   927                           
   928                           ;MotorDriver.c: 267: PSTR1CON = 0x01; PSTR2CON = 0x01;
   929  0002D0  0E01               	movlw	1
   930  0002D2  6EB9               	movwf	4025,c	;volatile
   931  0002D4  0E01               	movlw	1
   932  0002D6  6E63               	movwf	3939,c	;volatile
   933                           
   934                           ;MotorDriver.c: 268: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
   935  0002D8  9A8C               	bcf	3980,5,c	;volatile
   936  0002DA  908B               	bcf	3979,0,c	;volatile
   937                           
   938                           ;MotorDriver.c: 269: if (Microstep<8){
   939  0002DC  5044               	movf	_Microstep,w,c
   940  0002DE  0A80               	xorlw	128
   941  0002E0  0F78               	addlw	-136
   942  0002E2  B0D8               	btfsc	status,0,c
   943  0002E4  0012               	return	
   944                           
   945                           ;MotorDriver.c: 271: limitar_corriente();
   946  0002E6  EC03  F005         	call	_limitar_corriente	;wreg free
   947                           
   948                           ;MotorDriver.c: 272: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   949  0002EA  5044               	movf	_Microstep,w,c
   950  0002EC  0D01               	mullw	1
   951  0002EE  0E01               	movlw	low _LookUP_TABLE_COS
   952  0002F0  24F3               	addwf	prodl,w,c
   953  0002F2  6ED9               	movwf	fsr2l,c
   954  0002F4  0E00               	movlw	high _LookUP_TABLE_COS
   955  0002F6  20F4               	addwfc	prodh,w,c
   956  0002F8  6EDA               	movwf	fsr2h,c
   957  0002FA  50DF               	movf	indf2,w,c
   958  0002FC  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
   959  0002FE  5033               	movf	??_State8MEF_act_Backward,w,c
   960  000300  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   961  000302  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   962  000304  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
   963                           
   964                           ;MotorDriver.c: 273: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   965  000308  5044               	movf	_Microstep,w,c
   966  00030A  0D01               	mullw	1
   967  00030C  0EE0               	movlw	low _LookUP_TABLE_SEN
   968  00030E  24F3               	addwf	prodl,w,c
   969  000310  6ED9               	movwf	fsr2l,c
   970  000312  0E00               	movlw	high _LookUP_TABLE_SEN
   971  000314  20F4               	addwfc	prodh,w,c
   972  000316  6EDA               	movwf	fsr2h,c
   973  000318  50DF               	movf	indf2,w,c
   974  00031A  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
   975  00031C  5033               	movf	??_State8MEF_act_Backward,w,c
   976  00031E  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   977  000320  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   978  000322  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
   979                           
   980                           ;MotorDriver.c: 274: if (Microstep==0){
   981  000326  5044               	movf	_Microstep,w,c
   982  000328  A4D8               	btfss	status,2,c
   983  00032A  D004               	goto	l2180
   984                           
   985                           ;MotorDriver.c: 275: EstadoActual = STATE4;
   986  00032C  0E04               	movlw	4
   987  00032E  6E4B               	movwf	_EstadoActual,c
   988                           
   989                           ;MotorDriver.c: 276: Microstep=31;
   990  000330  0E1F               	movlw	31
   991  000332  6E44               	movwf	_Microstep,c
   992  000334                     l2180:
   993                           
   994                           ;MotorDriver.c: 277: }
   995                           ;MotorDriver.c: 278: Microstep--;
   996  000334  0644               	decf	_Microstep,f,c
   997                           
   998                           ;MotorDriver.c: 279: }
   999                           ;MotorDriver.c: 280: break;
  1000  000336  0012               	return	
  1001  000338                     l2182:
  1002                           
  1003                           ;MotorDriver.c: 282: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1004  000338  0E02               	movlw	2
  1005  00033A  6EB9               	movwf	4025,c	;volatile
  1006  00033C  0E01               	movlw	1
  1007  00033E  6E63               	movwf	3939,c	;volatile
  1008                           
  1009                           ;MotorDriver.c: 283: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1010  000340  948B               	bcf	3979,2,c	;volatile
  1011  000342  908B               	bcf	3979,0,c	;volatile
  1012                           
  1013                           ;MotorDriver.c: 284: limitar_corriente();
  1014  000344  EC03  F005         	call	_limitar_corriente	;wreg free
  1015                           
  1016                           ;MotorDriver.c: 285: if ((Microstep<16)&&(Microstep>7)){
  1017  000348  5044               	movf	_Microstep,w,c
  1018  00034A  0A80               	xorlw	128
  1019  00034C  0F70               	addlw	-144
  1020  00034E  B0D8               	btfsc	status,0,c
  1021  000350  0012               	return	
  1022  000352  5044               	movf	_Microstep,w,c
  1023  000354  0A80               	xorlw	128
  1024  000356  0F78               	addlw	-136
  1025  000358  A0D8               	btfss	status,0,c
  1026  00035A  0012               	return	
  1027                           
  1028                           ;MotorDriver.c: 287: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1029  00035C  5044               	movf	_Microstep,w,c
  1030  00035E  0D01               	mullw	1
  1031  000360  0E01               	movlw	low _LookUP_TABLE_COS
  1032  000362  24F3               	addwf	prodl,w,c
  1033  000364  6ED9               	movwf	fsr2l,c
  1034  000366  0E00               	movlw	high _LookUP_TABLE_COS
  1035  000368  20F4               	addwfc	prodh,w,c
  1036  00036A  6EDA               	movwf	fsr2h,c
  1037  00036C  50DF               	movf	indf2,w,c
  1038  00036E  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1039  000370  5033               	movf	??_State8MEF_act_Backward,w,c
  1040  000372  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1041  000374  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1042  000376  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1043                           
  1044                           ;MotorDriver.c: 288: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1045  00037A  5044               	movf	_Microstep,w,c
  1046  00037C  0D01               	mullw	1
  1047  00037E  0EE0               	movlw	low _LookUP_TABLE_SEN
  1048  000380  24F3               	addwf	prodl,w,c
  1049  000382  6ED9               	movwf	fsr2l,c
  1050  000384  0E00               	movlw	high _LookUP_TABLE_SEN
  1051  000386  20F4               	addwfc	prodh,w,c
  1052  000388  6EDA               	movwf	fsr2h,c
  1053  00038A  50DF               	movf	indf2,w,c
  1054  00038C  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1055  00038E  5033               	movf	??_State8MEF_act_Backward,w,c
  1056  000390  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1057  000392  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1058  000394  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1059                           
  1060                           ;MotorDriver.c: 289: if (Microstep==8){
  1061  000398  0E08               	movlw	8
  1062  00039A  1844               	xorwf	_Microstep,w,c
  1063  00039C  A4D8               	btfss	status,2,c
  1064  00039E  D002               	goto	l2200
  1065                           
  1066                           ;MotorDriver.c: 290: EstadoActual = STATE1;
  1067  0003A0  0E01               	movlw	1
  1068  0003A2  6E4B               	movwf	_EstadoActual,c
  1069  0003A4                     l2200:
  1070                           
  1071                           ;MotorDriver.c: 291: }
  1072                           ;MotorDriver.c: 292: Microstep--;
  1073  0003A4  0644               	decf	_Microstep,f,c
  1074                           
  1075                           ;MotorDriver.c: 293: }
  1076                           ;MotorDriver.c: 294: break;
  1077  0003A6  0012               	return	
  1078  0003A8                     l2202:
  1079                           
  1080                           ;MotorDriver.c: 296: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1081  0003A8  0E02               	movlw	2
  1082  0003AA  6EB9               	movwf	4025,c	;volatile
  1083  0003AC  0E02               	movlw	2
  1084  0003AE  6E63               	movwf	3939,c	;volatile
  1085                           
  1086                           ;MotorDriver.c: 297: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1087  0003B0  948B               	bcf	3979,2,c	;volatile
  1088  0003B2  928B               	bcf	3979,1,c	;volatile
  1089                           
  1090                           ;MotorDriver.c: 298: limitar_corriente();
  1091  0003B4  EC03  F005         	call	_limitar_corriente	;wreg free
  1092                           
  1093                           ;MotorDriver.c: 299: if ((Microstep<24)&&(Microstep>15)){
  1094  0003B8  5044               	movf	_Microstep,w,c
  1095  0003BA  0A80               	xorlw	128
  1096  0003BC  0F68               	addlw	-152
  1097  0003BE  B0D8               	btfsc	status,0,c
  1098  0003C0  0012               	return	
  1099  0003C2  5044               	movf	_Microstep,w,c
  1100  0003C4  0A80               	xorlw	128
  1101  0003C6  0F70               	addlw	-144
  1102  0003C8  A0D8               	btfss	status,0,c
  1103  0003CA  0012               	return	
  1104                           
  1105                           ;MotorDriver.c: 301: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1106  0003CC  5044               	movf	_Microstep,w,c
  1107  0003CE  0D01               	mullw	1
  1108  0003D0  0E01               	movlw	low _LookUP_TABLE_COS
  1109  0003D2  24F3               	addwf	prodl,w,c
  1110  0003D4  6ED9               	movwf	fsr2l,c
  1111  0003D6  0E00               	movlw	high _LookUP_TABLE_COS
  1112  0003D8  20F4               	addwfc	prodh,w,c
  1113  0003DA  6EDA               	movwf	fsr2h,c
  1114  0003DC  50DF               	movf	indf2,w,c
  1115  0003DE  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1116  0003E0  5033               	movf	??_State8MEF_act_Backward,w,c
  1117  0003E2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1118  0003E4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1119  0003E6  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1120                           
  1121                           ;MotorDriver.c: 302: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1122  0003EA  5044               	movf	_Microstep,w,c
  1123  0003EC  0D01               	mullw	1
  1124  0003EE  0EE0               	movlw	low _LookUP_TABLE_SEN
  1125  0003F0  24F3               	addwf	prodl,w,c
  1126  0003F2  6ED9               	movwf	fsr2l,c
  1127  0003F4  0E00               	movlw	high _LookUP_TABLE_SEN
  1128  0003F6  20F4               	addwfc	prodh,w,c
  1129  0003F8  6EDA               	movwf	fsr2h,c
  1130  0003FA  50DF               	movf	indf2,w,c
  1131  0003FC  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1132  0003FE  5033               	movf	??_State8MEF_act_Backward,w,c
  1133  000400  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1134  000402  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1135  000404  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1136                           
  1137                           ;MotorDriver.c: 303: if (Microstep==16){
  1138  000408  0E10               	movlw	16
  1139  00040A  1844               	xorwf	_Microstep,w,c
  1140  00040C  A4D8               	btfss	status,2,c
  1141  00040E  D002               	goto	l2220
  1142                           
  1143                           ;MotorDriver.c: 304: EstadoActual = STATE2;
  1144  000410  0E02               	movlw	2
  1145  000412  6E4B               	movwf	_EstadoActual,c
  1146  000414                     l2220:
  1147                           
  1148                           ;MotorDriver.c: 305: }
  1149                           ;MotorDriver.c: 306: Microstep--;
  1150  000414  0644               	decf	_Microstep,f,c
  1151                           
  1152                           ;MotorDriver.c: 307: }
  1153                           ;MotorDriver.c: 308: break;
  1154  000416  0012               	return	
  1155  000418                     l2222:
  1156                           
  1157                           ;MotorDriver.c: 310: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1158  000418  0E01               	movlw	1
  1159  00041A  6EB9               	movwf	4025,c	;volatile
  1160  00041C  0E02               	movlw	2
  1161  00041E  6E63               	movwf	3939,c	;volatile
  1162                           
  1163                           ;MotorDriver.c: 311: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1164  000420  9A8C               	bcf	3980,5,c	;volatile
  1165  000422  928B               	bcf	3979,1,c	;volatile
  1166                           
  1167                           ;MotorDriver.c: 312: if ((Microstep<32)&&(Microstep>23)){
  1168  000424  5044               	movf	_Microstep,w,c
  1169  000426  0A80               	xorlw	128
  1170  000428  0F60               	addlw	-160
  1171  00042A  B0D8               	btfsc	status,0,c
  1172  00042C  0012               	return	
  1173  00042E  5044               	movf	_Microstep,w,c
  1174  000430  0A80               	xorlw	128
  1175  000432  0F68               	addlw	-152
  1176  000434  A0D8               	btfss	status,0,c
  1177  000436  0012               	return	
  1178                           
  1179                           ;MotorDriver.c: 314: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1180  000438  5044               	movf	_Microstep,w,c
  1181  00043A  0D01               	mullw	1
  1182  00043C  0E01               	movlw	low _LookUP_TABLE_COS
  1183  00043E  24F3               	addwf	prodl,w,c
  1184  000440  6ED9               	movwf	fsr2l,c
  1185  000442  0E00               	movlw	high _LookUP_TABLE_COS
  1186  000444  20F4               	addwfc	prodh,w,c
  1187  000446  6EDA               	movwf	fsr2h,c
  1188  000448  50DF               	movf	indf2,w,c
  1189  00044A  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1190  00044C  5033               	movf	??_State8MEF_act_Backward,w,c
  1191  00044E  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1192  000450  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1193  000452  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1194                           
  1195                           ;MotorDriver.c: 315: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1196  000456  5044               	movf	_Microstep,w,c
  1197  000458  0D01               	mullw	1
  1198  00045A  0EE0               	movlw	low _LookUP_TABLE_SEN
  1199  00045C  24F3               	addwf	prodl,w,c
  1200  00045E  6ED9               	movwf	fsr2l,c
  1201  000460  0E00               	movlw	high _LookUP_TABLE_SEN
  1202  000462  20F4               	addwfc	prodh,w,c
  1203  000464  6EDA               	movwf	fsr2h,c
  1204  000466  50DF               	movf	indf2,w,c
  1205  000468  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1206  00046A  5033               	movf	??_State8MEF_act_Backward,w,c
  1207  00046C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1208  00046E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1209  000470  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1210                           
  1211                           ;MotorDriver.c: 316: if (Microstep==24){
  1212  000474  0E18               	movlw	24
  1213  000476  1844               	xorwf	_Microstep,w,c
  1214  000478  A4D8               	btfss	status,2,c
  1215  00047A  D004               	goto	l2238
  1216                           
  1217                           ;MotorDriver.c: 317: EstadoActual = STATE0;
  1218  00047C  0E00               	movlw	0
  1219  00047E  6E4B               	movwf	_EstadoActual,c
  1220                           
  1221                           ;MotorDriver.c: 318: EstadoActual = STATE3;
  1222  000480  0E03               	movlw	3
  1223  000482  6E4B               	movwf	_EstadoActual,c
  1224  000484                     l2238:
  1225                           
  1226                           ;MotorDriver.c: 319: }
  1227                           ;MotorDriver.c: 320: Microstep--;
  1228  000484  0644               	decf	_Microstep,f,c
  1229                           
  1230                           ;MotorDriver.c: 326: }
  1231                           
  1232                           ;MotorDriver.c: 325: break;
  1233                           
  1234                           ;MotorDriver.c: 323: default:
  1235                           
  1236                           ;MotorDriver.c: 321: }
  1237                           ;MotorDriver.c: 322: break;
  1238  000486  0012               	return	
  1239  000488                     l2242:
  1240  000488  504B               	movf	_EstadoActual,w,c
  1241                           
  1242                           ; Switch size 1, requested type "space"
  1243                           ; Number of cases is 5, Range of values is 0 to 4
  1244                           ; switch strategies available:
  1245                           ; Name         Instructions Cycles
  1246                           ; simple_byte           16     9 (average)
  1247                           ;	Chosen strategy is simple_byte
  1248  00048A  0A00               	xorlw	0	; case 0
  1249  00048C  B4D8               	btfsc	status,2,c
  1250  00048E  D715               	goto	l2156
  1251  000490  0A01               	xorlw	1	; case 1
  1252  000492  B4D8               	btfsc	status,2,c
  1253  000494  D71D               	goto	l2166
  1254  000496  0A03               	xorlw	3	; case 2
  1255  000498  B4D8               	btfsc	status,2,c
  1256  00049A  D74E               	goto	l2182
  1257  00049C  0A01               	xorlw	1	; case 3
  1258  00049E  B4D8               	btfsc	status,2,c
  1259  0004A0  D783               	goto	l2202
  1260  0004A2  0A07               	xorlw	7	; case 4
  1261  0004A4  A4D8               	btfss	status,2,c
  1262  0004A6  0012               	return	
  1263  0004A8  D7B7               	goto	l2222
  1264  0004AA                     __end_of_State8MEF_act_Backward:
  1265                           	opt stack 0
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           prodh	equ	0xFF4
  1271                           prodl	equ	0xFF3
  1272                           intcon	equ	0xFF2
  1273                           postinc0	equ	0xFEE
  1274                           wreg	equ	0xFE8
  1275                           postdec1	equ	0xFE5
  1276                           fsr1l	equ	0xFE1
  1277                           indf2	equ	0xFDF
  1278                           fsr2h	equ	0xFDA
  1279                           fsr2l	equ	0xFD9
  1280                           status	equ	0xFD8
  1281                           
  1282 ;; *************** function _State8MEF_act *****************
  1283 ;; Defined at:
  1284 ;;		line 41 in file "MotorDriver.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;Total ram usage:        1 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    5
  1305 ;; This function calls:
  1306 ;;		_EPWM1_LoadDutyValue
  1307 ;;		_EPWM2_LoadDutyValue
  1308 ;;		_limitar_corriente
  1309 ;; This function is called by:
  1310 ;;		_StepMove
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text3
  1315  0004AA                     __ptext3:
  1316                           	opt stack 0
  1317  0004AA                     _State8MEF_act:
  1318                           	opt stack 24
  1319                           
  1320                           ;MotorDriver.c: 43: switch(EstadoActual) {
  1321                           
  1322                           ;incstack = 0
  1323  0004AA  D0E7               	goto	l1952
  1324  0004AC                     l1868:
  1325                           
  1326                           ;MotorDriver.c: 45: PSTR1CON = 0x00; PSTR2CON = 0x00;
  1327  0004AC  0E00               	movlw	0
  1328  0004AE  6EB9               	movwf	4025,c	;volatile
  1329  0004B0  0E00               	movlw	0
  1330  0004B2  6E63               	movwf	3939,c	;volatile
  1331                           
  1332                           ;MotorDriver.c: 46: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whil
      +                          e(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  1333  0004B4  948B               	bcf	3979,2,c	;volatile
  1334  0004B6  9A8C               	bcf	3980,5,c	;volatile
  1335  0004B8  928B               	bcf	3979,1,c	;volatile
  1336  0004BA  908B               	bcf	3979,0,c	;volatile
  1337                           
  1338                           ;MotorDriver.c: 47: EstadoActual = STATE1;
  1339  0004BC  0E01               	movlw	1
  1340  0004BE  6E4B               	movwf	_EstadoActual,c
  1341                           
  1342                           ;MotorDriver.c: 48: break;
  1343  0004C0  0012               	return	
  1344  0004C2                     l1878:
  1345                           
  1346                           ;MotorDriver.c: 50: PSTR1CON = 0x01; PSTR2CON = 0x01;
  1347  0004C2  0E01               	movlw	1
  1348  0004C4  6EB9               	movwf	4025,c	;volatile
  1349  0004C6  0E01               	movlw	1
  1350  0004C8  6E63               	movwf	3939,c	;volatile
  1351                           
  1352                           ;MotorDriver.c: 51: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  1353  0004CA  9A8C               	bcf	3980,5,c	;volatile
  1354  0004CC  908B               	bcf	3979,0,c	;volatile
  1355                           
  1356                           ;MotorDriver.c: 52: if (Microstep<8){
  1357  0004CE  5044               	movf	_Microstep,w,c
  1358  0004D0  0A80               	xorlw	128
  1359  0004D2  0F78               	addlw	-136
  1360  0004D4  B0D8               	btfsc	status,0,c
  1361  0004D6  0012               	return	
  1362                           
  1363                           ;MotorDriver.c: 55: limitar_corriente();
  1364  0004D8  EC03  F005         	call	_limitar_corriente	;wreg free
  1365                           
  1366                           ;MotorDriver.c: 56: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1367  0004DC  5044               	movf	_Microstep,w,c
  1368  0004DE  0D01               	mullw	1
  1369  0004E0  0E01               	movlw	low _LookUP_TABLE_COS
  1370  0004E2  24F3               	addwf	prodl,w,c
  1371  0004E4  6ED9               	movwf	fsr2l,c
  1372  0004E6  0E00               	movlw	high _LookUP_TABLE_COS
  1373  0004E8  20F4               	addwfc	prodh,w,c
  1374  0004EA  6EDA               	movwf	fsr2h,c
  1375  0004EC  50DF               	movf	indf2,w,c
  1376  0004EE  6E33               	movwf	??_State8MEF_act& (0+255),c
  1377  0004F0  5033               	movf	??_State8MEF_act,w,c
  1378  0004F2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1379  0004F4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1380  0004F6  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1381                           
  1382                           ;MotorDriver.c: 57: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1383  0004FA  5044               	movf	_Microstep,w,c
  1384  0004FC  0D01               	mullw	1
  1385  0004FE  0EE0               	movlw	low _LookUP_TABLE_SEN
  1386  000500  24F3               	addwf	prodl,w,c
  1387  000502  6ED9               	movwf	fsr2l,c
  1388  000504  0E00               	movlw	high _LookUP_TABLE_SEN
  1389  000506  20F4               	addwfc	prodh,w,c
  1390  000508  6EDA               	movwf	fsr2h,c
  1391  00050A  50DF               	movf	indf2,w,c
  1392  00050C  6E33               	movwf	??_State8MEF_act& (0+255),c
  1393  00050E  5033               	movf	??_State8MEF_act,w,c
  1394  000510  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1395  000512  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1396  000514  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1397                           
  1398                           ;MotorDriver.c: 58: if (Microstep==7){
  1399  000518  0E07               	movlw	7
  1400  00051A  1844               	xorwf	_Microstep,w,c
  1401  00051C  A4D8               	btfss	status,2,c
  1402  00051E  D002               	goto	l1892
  1403                           
  1404                           ;MotorDriver.c: 59: EstadoActual = STATE2;
  1405  000520  0E02               	movlw	2
  1406  000522  6E4B               	movwf	_EstadoActual,c
  1407  000524                     l1892:
  1408                           
  1409                           ;MotorDriver.c: 60: }
  1410                           ;MotorDriver.c: 61: Microstep++;
  1411  000524  2A44               	incf	_Microstep,f,c
  1412                           
  1413                           ;MotorDriver.c: 62: }
  1414                           ;MotorDriver.c: 63: break;
  1415  000526  0012               	return	
  1416  000528                     l1894:
  1417                           
  1418                           ;MotorDriver.c: 65: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1419  000528  0E02               	movlw	2
  1420  00052A  6EB9               	movwf	4025,c	;volatile
  1421  00052C  0E01               	movlw	1
  1422  00052E  6E63               	movwf	3939,c	;volatile
  1423                           
  1424                           ;MotorDriver.c: 66: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  1425  000530  948B               	bcf	3979,2,c	;volatile
  1426  000532  908B               	bcf	3979,0,c	;volatile
  1427                           
  1428                           ;MotorDriver.c: 67: if ((Microstep<16)&&(Microstep>7)){
  1429  000534  5044               	movf	_Microstep,w,c
  1430  000536  0A80               	xorlw	128
  1431  000538  0F70               	addlw	-144
  1432  00053A  B0D8               	btfsc	status,0,c
  1433  00053C  0012               	return	
  1434  00053E  5044               	movf	_Microstep,w,c
  1435  000540  0A80               	xorlw	128
  1436  000542  0F78               	addlw	-136
  1437  000544  A0D8               	btfss	status,0,c
  1438  000546  0012               	return	
  1439                           
  1440                           ;MotorDriver.c: 69: limitar_corriente();
  1441  000548  EC03  F005         	call	_limitar_corriente	;wreg free
  1442                           
  1443                           ;MotorDriver.c: 70: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1444  00054C  5044               	movf	_Microstep,w,c
  1445  00054E  0D01               	mullw	1
  1446  000550  0E01               	movlw	low _LookUP_TABLE_COS
  1447  000552  24F3               	addwf	prodl,w,c
  1448  000554  6ED9               	movwf	fsr2l,c
  1449  000556  0E00               	movlw	high _LookUP_TABLE_COS
  1450  000558  20F4               	addwfc	prodh,w,c
  1451  00055A  6EDA               	movwf	fsr2h,c
  1452  00055C  50DF               	movf	indf2,w,c
  1453  00055E  6E33               	movwf	??_State8MEF_act& (0+255),c
  1454  000560  5033               	movf	??_State8MEF_act,w,c
  1455  000562  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1456  000564  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1457  000566  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1458                           
  1459                           ;MotorDriver.c: 71: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1460  00056A  5044               	movf	_Microstep,w,c
  1461  00056C  0D01               	mullw	1
  1462  00056E  0EE0               	movlw	low _LookUP_TABLE_SEN
  1463  000570  24F3               	addwf	prodl,w,c
  1464  000572  6ED9               	movwf	fsr2l,c
  1465  000574  0E00               	movlw	high _LookUP_TABLE_SEN
  1466  000576  20F4               	addwfc	prodh,w,c
  1467  000578  6EDA               	movwf	fsr2h,c
  1468  00057A  50DF               	movf	indf2,w,c
  1469  00057C  6E33               	movwf	??_State8MEF_act& (0+255),c
  1470  00057E  5033               	movf	??_State8MEF_act,w,c
  1471  000580  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1472  000582  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1473  000584  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1474                           
  1475                           ;MotorDriver.c: 73: if (Microstep==15){
  1476  000588  0E0F               	movlw	15
  1477  00058A  1844               	xorwf	_Microstep,w,c
  1478  00058C  A4D8               	btfss	status,2,c
  1479  00058E  D002               	goto	l1910
  1480                           
  1481                           ;MotorDriver.c: 74: EstadoActual = STATE3;
  1482  000590  0E03               	movlw	3
  1483  000592  6E4B               	movwf	_EstadoActual,c
  1484  000594                     l1910:
  1485                           
  1486                           ;MotorDriver.c: 75: }
  1487                           ;MotorDriver.c: 76: Microstep++;
  1488  000594  2A44               	incf	_Microstep,f,c
  1489                           
  1490                           ;MotorDriver.c: 77: }
  1491                           ;MotorDriver.c: 78: break;
  1492  000596  0012               	return	
  1493  000598                     l1912:
  1494                           
  1495                           ;MotorDriver.c: 80: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1496  000598  0E02               	movlw	2
  1497  00059A  6EB9               	movwf	4025,c	;volatile
  1498  00059C  0E02               	movlw	2
  1499  00059E  6E63               	movwf	3939,c	;volatile
  1500                           
  1501                           ;MotorDriver.c: 81: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
  1502  0005A0  948B               	bcf	3979,2,c	;volatile
  1503  0005A2  928B               	bcf	3979,1,c	;volatile
  1504                           
  1505                           ;MotorDriver.c: 82: if ((Microstep<24)&&(Microstep>15)){
  1506  0005A4  5044               	movf	_Microstep,w,c
  1507  0005A6  0A80               	xorlw	128
  1508  0005A8  0F68               	addlw	-152
  1509  0005AA  B0D8               	btfsc	status,0,c
  1510  0005AC  0012               	return	
  1511  0005AE  5044               	movf	_Microstep,w,c
  1512  0005B0  0A80               	xorlw	128
  1513  0005B2  0F70               	addlw	-144
  1514  0005B4  A0D8               	btfss	status,0,c
  1515  0005B6  0012               	return	
  1516                           
  1517                           ;MotorDriver.c: 85: limitar_corriente();
  1518  0005B8  EC03  F005         	call	_limitar_corriente	;wreg free
  1519                           
  1520                           ;MotorDriver.c: 86: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1521  0005BC  5044               	movf	_Microstep,w,c
  1522  0005BE  0D01               	mullw	1
  1523  0005C0  0E01               	movlw	low _LookUP_TABLE_COS
  1524  0005C2  24F3               	addwf	prodl,w,c
  1525  0005C4  6ED9               	movwf	fsr2l,c
  1526  0005C6  0E00               	movlw	high _LookUP_TABLE_COS
  1527  0005C8  20F4               	addwfc	prodh,w,c
  1528  0005CA  6EDA               	movwf	fsr2h,c
  1529  0005CC  50DF               	movf	indf2,w,c
  1530  0005CE  6E33               	movwf	??_State8MEF_act& (0+255),c
  1531  0005D0  5033               	movf	??_State8MEF_act,w,c
  1532  0005D2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1533  0005D4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1534  0005D6  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1535                           
  1536                           ;MotorDriver.c: 87: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1537  0005DA  5044               	movf	_Microstep,w,c
  1538  0005DC  0D01               	mullw	1
  1539  0005DE  0EE0               	movlw	low _LookUP_TABLE_SEN
  1540  0005E0  24F3               	addwf	prodl,w,c
  1541  0005E2  6ED9               	movwf	fsr2l,c
  1542  0005E4  0E00               	movlw	high _LookUP_TABLE_SEN
  1543  0005E6  20F4               	addwfc	prodh,w,c
  1544  0005E8  6EDA               	movwf	fsr2h,c
  1545  0005EA  50DF               	movf	indf2,w,c
  1546  0005EC  6E33               	movwf	??_State8MEF_act& (0+255),c
  1547  0005EE  5033               	movf	??_State8MEF_act,w,c
  1548  0005F0  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1549  0005F2  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1550  0005F4  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1551                           
  1552                           ;MotorDriver.c: 89: if (Microstep==23){
  1553  0005F8  0E17               	movlw	23
  1554  0005FA  1844               	xorwf	_Microstep,w,c
  1555  0005FC  A4D8               	btfss	status,2,c
  1556  0005FE  D002               	goto	l1928
  1557                           
  1558                           ;MotorDriver.c: 90: EstadoActual = STATE4;
  1559  000600  0E04               	movlw	4
  1560  000602  6E4B               	movwf	_EstadoActual,c
  1561  000604                     l1928:
  1562                           
  1563                           ;MotorDriver.c: 91: }
  1564                           ;MotorDriver.c: 92: Microstep++;
  1565  000604  2A44               	incf	_Microstep,f,c
  1566                           
  1567                           ;MotorDriver.c: 93: }
  1568                           ;MotorDriver.c: 94: break;
  1569  000606  0012               	return	
  1570  000608                     l1930:
  1571                           
  1572                           ;MotorDriver.c: 96: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1573  000608  0E01               	movlw	1
  1574  00060A  6EB9               	movwf	4025,c	;volatile
  1575  00060C  0E02               	movlw	2
  1576  00060E  6E63               	movwf	3939,c	;volatile
  1577                           
  1578                           ;MotorDriver.c: 97: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
  1579  000610  9A8C               	bcf	3980,5,c	;volatile
  1580  000612  928B               	bcf	3979,1,c	;volatile
  1581                           
  1582                           ;MotorDriver.c: 98: if ((Microstep<32)&&(Microstep>23)){
  1583  000614  5044               	movf	_Microstep,w,c
  1584  000616  0A80               	xorlw	128
  1585  000618  0F60               	addlw	-160
  1586  00061A  B0D8               	btfsc	status,0,c
  1587  00061C  0012               	return	
  1588  00061E  5044               	movf	_Microstep,w,c
  1589  000620  0A80               	xorlw	128
  1590  000622  0F68               	addlw	-152
  1591  000624  A0D8               	btfss	status,0,c
  1592  000626  0012               	return	
  1593                           
  1594                           ;MotorDriver.c: 101: limitar_corriente();
  1595  000628  EC03  F005         	call	_limitar_corriente	;wreg free
  1596                           
  1597                           ;MotorDriver.c: 102: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1598  00062C  5044               	movf	_Microstep,w,c
  1599  00062E  0D01               	mullw	1
  1600  000630  0E01               	movlw	low _LookUP_TABLE_COS
  1601  000632  24F3               	addwf	prodl,w,c
  1602  000634  6ED9               	movwf	fsr2l,c
  1603  000636  0E00               	movlw	high _LookUP_TABLE_COS
  1604  000638  20F4               	addwfc	prodh,w,c
  1605  00063A  6EDA               	movwf	fsr2h,c
  1606  00063C  50DF               	movf	indf2,w,c
  1607  00063E  6E33               	movwf	??_State8MEF_act& (0+255),c
  1608  000640  5033               	movf	??_State8MEF_act,w,c
  1609  000642  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1610  000644  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1611  000646  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1612                           
  1613                           ;MotorDriver.c: 103: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1614  00064A  5044               	movf	_Microstep,w,c
  1615  00064C  0D01               	mullw	1
  1616  00064E  0EE0               	movlw	low _LookUP_TABLE_SEN
  1617  000650  24F3               	addwf	prodl,w,c
  1618  000652  6ED9               	movwf	fsr2l,c
  1619  000654  0E00               	movlw	high _LookUP_TABLE_SEN
  1620  000656  20F4               	addwfc	prodh,w,c
  1621  000658  6EDA               	movwf	fsr2h,c
  1622  00065A  50DF               	movf	indf2,w,c
  1623  00065C  6E33               	movwf	??_State8MEF_act& (0+255),c
  1624  00065E  5033               	movf	??_State8MEF_act,w,c
  1625  000660  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1626  000662  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1627  000664  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1628                           
  1629                           ;MotorDriver.c: 105: if (Microstep==31){
  1630  000668  0E1F               	movlw	31
  1631  00066A  1844               	xorwf	_Microstep,w,c
  1632  00066C  A4D8               	btfss	status,2,c
  1633  00066E  D003               	goto	l1948
  1634                           
  1635                           ;MotorDriver.c: 107: EstadoActual = STATE1;
  1636  000670  0E01               	movlw	1
  1637  000672  6E4B               	movwf	_EstadoActual,c
  1638                           
  1639                           ;MotorDriver.c: 108: Microstep=-1;
  1640  000674  6844               	setf	_Microstep,c
  1641  000676                     l1948:
  1642                           
  1643                           ;MotorDriver.c: 109: }
  1644                           ;MotorDriver.c: 110: Microstep++;
  1645  000676  2A44               	incf	_Microstep,f,c
  1646                           
  1647                           ;MotorDriver.c: 116: }
  1648                           
  1649                           ;MotorDriver.c: 115: break;
  1650                           
  1651                           ;MotorDriver.c: 113: default:
  1652                           
  1653                           ;MotorDriver.c: 111: }
  1654                           ;MotorDriver.c: 112: break;
  1655  000678  0012               	return	
  1656  00067A                     l1952:
  1657  00067A  504B               	movf	_EstadoActual,w,c
  1658                           
  1659                           ; Switch size 1, requested type "space"
  1660                           ; Number of cases is 5, Range of values is 0 to 4
  1661                           ; switch strategies available:
  1662                           ; Name         Instructions Cycles
  1663                           ; simple_byte           16     9 (average)
  1664                           ;	Chosen strategy is simple_byte
  1665  00067C  0A00               	xorlw	0	; case 0
  1666  00067E  B4D8               	btfsc	status,2,c
  1667  000680  D715               	goto	l1868
  1668  000682  0A01               	xorlw	1	; case 1
  1669  000684  B4D8               	btfsc	status,2,c
  1670  000686  D71D               	goto	l1878
  1671  000688  0A03               	xorlw	3	; case 2
  1672  00068A  B4D8               	btfsc	status,2,c
  1673  00068C  D74D               	goto	l1894
  1674  00068E  0A01               	xorlw	1	; case 3
  1675  000690  B4D8               	btfsc	status,2,c
  1676  000692  D782               	goto	l1912
  1677  000694  0A07               	xorlw	7	; case 4
  1678  000696  A4D8               	btfss	status,2,c
  1679  000698  0012               	return	
  1680  00069A  D7B6               	goto	l1930
  1681  00069C                     __end_of_State8MEF_act:
  1682                           	opt stack 0
  1683                           tblptru	equ	0xFF8
  1684                           tblptrh	equ	0xFF7
  1685                           tblptrl	equ	0xFF6
  1686                           tablat	equ	0xFF5
  1687                           prodh	equ	0xFF4
  1688                           prodl	equ	0xFF3
  1689                           intcon	equ	0xFF2
  1690                           postinc0	equ	0xFEE
  1691                           wreg	equ	0xFE8
  1692                           postdec1	equ	0xFE5
  1693                           fsr1l	equ	0xFE1
  1694                           indf2	equ	0xFDF
  1695                           fsr2h	equ	0xFDA
  1696                           fsr2l	equ	0xFD9
  1697                           status	equ	0xFD8
  1698                           
  1699 ;; *************** function _State16MEF_act_Backward *****************
  1700 ;; Defined at:
  1701 ;;		line 189 in file "MotorDriver.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;Total ram usage:        1 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    5
  1722 ;; This function calls:
  1723 ;;		_EPWM1_LoadDutyValue
  1724 ;;		_EPWM2_LoadDutyValue
  1725 ;;		_EUSART1_Write
  1726 ;;		_limitar_corriente
  1727 ;; This function is called by:
  1728 ;;		_StepMove
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text4
  1733  0000AE                     __ptext4:
  1734                           	opt stack 0
  1735  0000AE                     _State16MEF_act_Backward:
  1736                           	opt stack 24
  1737                           
  1738                           ;MotorDriver.c: 190: switch(EstadoActual){
  1739                           
  1740                           ;incstack = 0
  1741  0000AE  D0F3               	goto	l2152
  1742  0000B0                     l2048:
  1743                           
  1744                           ;MotorDriver.c: 192: PSTR1CON = 0x00; PSTR2CON = 0x00;
  1745  0000B0  0E00               	movlw	0
  1746  0000B2  6EB9               	movwf	4025,c	;volatile
  1747  0000B4  0E00               	movlw	0
  1748  0000B6  6E63               	movwf	3939,c	;volatile
  1749                           
  1750                           ;MotorDriver.c: 193: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  1751  0000B8  948B               	bcf	3979,2,c	;volatile
  1752  0000BA  9A8C               	bcf	3980,5,c	;volatile
  1753  0000BC  928B               	bcf	3979,1,c	;volatile
  1754  0000BE  908B               	bcf	3979,0,c	;volatile
  1755                           
  1756                           ;MotorDriver.c: 194: EstadoActual = STATE1;
  1757  0000C0  0E01               	movlw	1
  1758  0000C2  6E4B               	movwf	_EstadoActual,c
  1759                           
  1760                           ;MotorDriver.c: 195: break;
  1761  0000C4  0012               	return	
  1762  0000C6                     l2058:
  1763                           
  1764                           ;MotorDriver.c: 197: PSTR1CON = 0x01; PSTR2CON = 0x01;
  1765  0000C6  0E01               	movlw	1
  1766  0000C8  6EB9               	movwf	4025,c	;volatile
  1767  0000CA  0E01               	movlw	1
  1768  0000CC  6E63               	movwf	3939,c	;volatile
  1769                           
  1770                           ;MotorDriver.c: 198: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1771  0000CE  9A8C               	bcf	3980,5,c	;volatile
  1772  0000D0  908B               	bcf	3979,0,c	;volatile
  1773                           
  1774                           ;MotorDriver.c: 199: if (Microstep<16){
  1775  0000D2  5044               	movf	_Microstep,w,c
  1776  0000D4  0A80               	xorlw	128
  1777  0000D6  0F70               	addlw	-144
  1778  0000D8  B0D8               	btfsc	status,0,c
  1779  0000DA  0012               	return	
  1780                           
  1781                           ;MotorDriver.c: 200: EUSART1_Write(Microstep);
  1782  0000DC  5044               	movf	_Microstep,w,c
  1783  0000DE  EC65  F006         	call	_EUSART1_Write
  1784                           
  1785                           ;MotorDriver.c: 201: limitar_corriente();
  1786  0000E2  EC03  F005         	call	_limitar_corriente	;wreg free
  1787                           
  1788                           ;MotorDriver.c: 202: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1789  0000E6  5044               	movf	_Microstep,w,c
  1790  0000E8  0D01               	mullw	1
  1791  0000EA  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1792  0000EC  24F3               	addwf	prodl,w,c
  1793  0000EE  6ED9               	movwf	fsr2l,c
  1794  0000F0  0E00               	movlw	high _LookUP_TABLE_COS_16
  1795  0000F2  20F4               	addwfc	prodh,w,c
  1796  0000F4  6EDA               	movwf	fsr2h,c
  1797  0000F6  50DF               	movf	indf2,w,c
  1798  0000F8  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1799  0000FA  5033               	movf	??_State16MEF_act_Backward,w,c
  1800  0000FC  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1801  0000FE  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1802  000100  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1803                           
  1804                           ;MotorDriver.c: 203: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1805  000104  5044               	movf	_Microstep,w,c
  1806  000106  0D01               	mullw	1
  1807  000108  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1808  00010A  24F3               	addwf	prodl,w,c
  1809  00010C  6ED9               	movwf	fsr2l,c
  1810  00010E  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1811  000110  20F4               	addwfc	prodh,w,c
  1812  000112  6EDA               	movwf	fsr2h,c
  1813  000114  50DF               	movf	indf2,w,c
  1814  000116  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1815  000118  5033               	movf	??_State16MEF_act_Backward,w,c
  1816  00011A  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1817  00011C  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1818  00011E  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1819                           
  1820                           ;MotorDriver.c: 204: if (Microstep==0){
  1821  000122  5044               	movf	_Microstep,w,c
  1822  000124  A4D8               	btfss	status,2,c
  1823  000126  D004               	goto	l2078
  1824                           
  1825                           ;MotorDriver.c: 205: EstadoActual = STATE4;
  1826  000128  0E04               	movlw	4
  1827  00012A  6E4B               	movwf	_EstadoActual,c
  1828                           
  1829                           ;MotorDriver.c: 206: Microstep=63;
  1830  00012C  0E3F               	movlw	63
  1831  00012E  6E44               	movwf	_Microstep,c
  1832  000130                     l2078:
  1833                           
  1834                           ;MotorDriver.c: 207: }
  1835                           ;MotorDriver.c: 208: Microstep--;
  1836  000130  0644               	decf	_Microstep,f,c
  1837                           
  1838                           ;MotorDriver.c: 209: }
  1839                           ;MotorDriver.c: 210: break;
  1840  000132  0012               	return	
  1841  000134                     l2080:
  1842                           
  1843                           ;MotorDriver.c: 212: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1844  000134  0E02               	movlw	2
  1845  000136  6EB9               	movwf	4025,c	;volatile
  1846  000138  0E01               	movlw	1
  1847  00013A  6E63               	movwf	3939,c	;volatile
  1848                           
  1849                           ;MotorDriver.c: 213: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1850  00013C  948B               	bcf	3979,2,c	;volatile
  1851  00013E  908B               	bcf	3979,0,c	;volatile
  1852                           
  1853                           ;MotorDriver.c: 214: limitar_corriente();
  1854  000140  EC03  F005         	call	_limitar_corriente	;wreg free
  1855                           
  1856                           ;MotorDriver.c: 215: if ((Microstep<32)&&(Microstep>15)){
  1857  000144  5044               	movf	_Microstep,w,c
  1858  000146  0A80               	xorlw	128
  1859  000148  0F60               	addlw	-160
  1860  00014A  B0D8               	btfsc	status,0,c
  1861  00014C  0012               	return	
  1862  00014E  5044               	movf	_Microstep,w,c
  1863  000150  0A80               	xorlw	128
  1864  000152  0F70               	addlw	-144
  1865  000154  A0D8               	btfss	status,0,c
  1866  000156  0012               	return	
  1867                           
  1868                           ;MotorDriver.c: 216: EUSART1_Write(Microstep);
  1869  000158  5044               	movf	_Microstep,w,c
  1870  00015A  EC65  F006         	call	_EUSART1_Write
  1871                           
  1872                           ;MotorDriver.c: 217: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1873  00015E  5044               	movf	_Microstep,w,c
  1874  000160  0D01               	mullw	1
  1875  000162  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1876  000164  24F3               	addwf	prodl,w,c
  1877  000166  6ED9               	movwf	fsr2l,c
  1878  000168  0E00               	movlw	high _LookUP_TABLE_COS_16
  1879  00016A  20F4               	addwfc	prodh,w,c
  1880  00016C  6EDA               	movwf	fsr2h,c
  1881  00016E  50DF               	movf	indf2,w,c
  1882  000170  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1883  000172  5033               	movf	??_State16MEF_act_Backward,w,c
  1884  000174  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1885  000176  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1886  000178  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1887                           
  1888                           ;MotorDriver.c: 218: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1889  00017C  5044               	movf	_Microstep,w,c
  1890  00017E  0D01               	mullw	1
  1891  000180  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1892  000182  24F3               	addwf	prodl,w,c
  1893  000184  6ED9               	movwf	fsr2l,c
  1894  000186  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1895  000188  20F4               	addwfc	prodh,w,c
  1896  00018A  6EDA               	movwf	fsr2h,c
  1897  00018C  50DF               	movf	indf2,w,c
  1898  00018E  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1899  000190  5033               	movf	??_State16MEF_act_Backward,w,c
  1900  000192  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1901  000194  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1902  000196  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1903                           
  1904                           ;MotorDriver.c: 219: if (Microstep==16){
  1905  00019A  0E10               	movlw	16
  1906  00019C  1844               	xorwf	_Microstep,w,c
  1907  00019E  A4D8               	btfss	status,2,c
  1908  0001A0  D002               	goto	l2102
  1909                           
  1910                           ;MotorDriver.c: 220: EstadoActual = STATE1;
  1911  0001A2  0E01               	movlw	1
  1912  0001A4  6E4B               	movwf	_EstadoActual,c
  1913  0001A6                     l2102:
  1914                           
  1915                           ;MotorDriver.c: 221: }
  1916                           ;MotorDriver.c: 222: Microstep--;
  1917  0001A6  0644               	decf	_Microstep,f,c
  1918                           
  1919                           ;MotorDriver.c: 223: }
  1920                           ;MotorDriver.c: 224: break;
  1921  0001A8  0012               	return	
  1922  0001AA                     l2104:
  1923                           
  1924                           ;MotorDriver.c: 226: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1925  0001AA  0E02               	movlw	2
  1926  0001AC  6EB9               	movwf	4025,c	;volatile
  1927  0001AE  0E02               	movlw	2
  1928  0001B0  6E63               	movwf	3939,c	;volatile
  1929                           
  1930                           ;MotorDriver.c: 227: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1931  0001B2  948B               	bcf	3979,2,c	;volatile
  1932  0001B4  928B               	bcf	3979,1,c	;volatile
  1933                           
  1934                           ;MotorDriver.c: 228: limitar_corriente();
  1935  0001B6  EC03  F005         	call	_limitar_corriente	;wreg free
  1936                           
  1937                           ;MotorDriver.c: 229: if ((Microstep<48)&&(Microstep>31)){
  1938  0001BA  5044               	movf	_Microstep,w,c
  1939  0001BC  0A80               	xorlw	128
  1940  0001BE  0F50               	addlw	-176
  1941  0001C0  B0D8               	btfsc	status,0,c
  1942  0001C2  0012               	return	
  1943  0001C4  5044               	movf	_Microstep,w,c
  1944  0001C6  0A80               	xorlw	128
  1945  0001C8  0F60               	addlw	-160
  1946  0001CA  A0D8               	btfss	status,0,c
  1947  0001CC  0012               	return	
  1948                           
  1949                           ;MotorDriver.c: 230: EUSART1_Write(Microstep);
  1950  0001CE  5044               	movf	_Microstep,w,c
  1951  0001D0  EC65  F006         	call	_EUSART1_Write
  1952                           
  1953                           ;MotorDriver.c: 231: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1954  0001D4  5044               	movf	_Microstep,w,c
  1955  0001D6  0D01               	mullw	1
  1956  0001D8  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1957  0001DA  24F3               	addwf	prodl,w,c
  1958  0001DC  6ED9               	movwf	fsr2l,c
  1959  0001DE  0E00               	movlw	high _LookUP_TABLE_COS_16
  1960  0001E0  20F4               	addwfc	prodh,w,c
  1961  0001E2  6EDA               	movwf	fsr2h,c
  1962  0001E4  50DF               	movf	indf2,w,c
  1963  0001E6  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1964  0001E8  5033               	movf	??_State16MEF_act_Backward,w,c
  1965  0001EA  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1966  0001EC  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1967  0001EE  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1968                           
  1969                           ;MotorDriver.c: 232: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1970  0001F2  5044               	movf	_Microstep,w,c
  1971  0001F4  0D01               	mullw	1
  1972  0001F6  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1973  0001F8  24F3               	addwf	prodl,w,c
  1974  0001FA  6ED9               	movwf	fsr2l,c
  1975  0001FC  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1976  0001FE  20F4               	addwfc	prodh,w,c
  1977  000200  6EDA               	movwf	fsr2h,c
  1978  000202  50DF               	movf	indf2,w,c
  1979  000204  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1980  000206  5033               	movf	??_State16MEF_act_Backward,w,c
  1981  000208  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1982  00020A  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1983  00020C  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1984                           
  1985                           ;MotorDriver.c: 233: if (Microstep==32){
  1986  000210  0E20               	movlw	32
  1987  000212  1844               	xorwf	_Microstep,w,c
  1988  000214  A4D8               	btfss	status,2,c
  1989  000216  D002               	goto	l2126
  1990                           
  1991                           ;MotorDriver.c: 234: EstadoActual = STATE2;
  1992  000218  0E02               	movlw	2
  1993  00021A  6E4B               	movwf	_EstadoActual,c
  1994  00021C                     l2126:
  1995                           
  1996                           ;MotorDriver.c: 235: }
  1997                           ;MotorDriver.c: 236: Microstep--;
  1998  00021C  0644               	decf	_Microstep,f,c
  1999                           
  2000                           ;MotorDriver.c: 237: }
  2001                           ;MotorDriver.c: 238: break;
  2002  00021E  0012               	return	
  2003  000220                     l2128:
  2004                           
  2005                           ;MotorDriver.c: 240: PSTR1CON = 0x01; PSTR2CON = 0x02;
  2006  000220  0E01               	movlw	1
  2007  000222  6EB9               	movwf	4025,c	;volatile
  2008  000224  0E02               	movlw	2
  2009  000226  6E63               	movwf	3939,c	;volatile
  2010                           
  2011                           ;MotorDriver.c: 241: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2012  000228  9A8C               	bcf	3980,5,c	;volatile
  2013  00022A  928B               	bcf	3979,1,c	;volatile
  2014                           
  2015                           ;MotorDriver.c: 242: if ((Microstep<64)&&(Microstep>47)){
  2016  00022C  5044               	movf	_Microstep,w,c
  2017  00022E  0A80               	xorlw	128
  2018  000230  0F40               	addlw	-192
  2019  000232  B0D8               	btfsc	status,0,c
  2020  000234  0012               	return	
  2021  000236  5044               	movf	_Microstep,w,c
  2022  000238  0A80               	xorlw	128
  2023  00023A  0F50               	addlw	-176
  2024  00023C  A0D8               	btfss	status,0,c
  2025  00023E  0012               	return	
  2026                           
  2027                           ;MotorDriver.c: 243: EUSART1_Write(Microstep);
  2028  000240  5044               	movf	_Microstep,w,c
  2029  000242  EC65  F006         	call	_EUSART1_Write
  2030                           
  2031                           ;MotorDriver.c: 244: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2032  000246  5044               	movf	_Microstep,w,c
  2033  000248  0D01               	mullw	1
  2034  00024A  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2035  00024C  24F3               	addwf	prodl,w,c
  2036  00024E  6ED9               	movwf	fsr2l,c
  2037  000250  0E00               	movlw	high _LookUP_TABLE_COS_16
  2038  000252  20F4               	addwfc	prodh,w,c
  2039  000254  6EDA               	movwf	fsr2h,c
  2040  000256  50DF               	movf	indf2,w,c
  2041  000258  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  2042  00025A  5033               	movf	??_State16MEF_act_Backward,w,c
  2043  00025C  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2044  00025E  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2045  000260  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2046                           
  2047                           ;MotorDriver.c: 245: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2048  000264  5044               	movf	_Microstep,w,c
  2049  000266  0D01               	mullw	1
  2050  000268  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2051  00026A  24F3               	addwf	prodl,w,c
  2052  00026C  6ED9               	movwf	fsr2l,c
  2053  00026E  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2054  000270  20F4               	addwfc	prodh,w,c
  2055  000272  6EDA               	movwf	fsr2h,c
  2056  000274  50DF               	movf	indf2,w,c
  2057  000276  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  2058  000278  5033               	movf	??_State16MEF_act_Backward,w,c
  2059  00027A  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2060  00027C  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2061  00027E  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2062                           
  2063                           ;MotorDriver.c: 246: if (Microstep==48){
  2064  000282  0E30               	movlw	48
  2065  000284  1844               	xorwf	_Microstep,w,c
  2066  000286  A4D8               	btfss	status,2,c
  2067  000288  D004               	goto	l2148
  2068                           
  2069                           ;MotorDriver.c: 247: EstadoActual = STATE0;
  2070  00028A  0E00               	movlw	0
  2071  00028C  6E4B               	movwf	_EstadoActual,c
  2072                           
  2073                           ;MotorDriver.c: 248: EstadoActual = STATE3;
  2074  00028E  0E03               	movlw	3
  2075  000290  6E4B               	movwf	_EstadoActual,c
  2076  000292                     l2148:
  2077                           
  2078                           ;MotorDriver.c: 249: }
  2079                           ;MotorDriver.c: 250: Microstep--;
  2080  000292  0644               	decf	_Microstep,f,c
  2081                           
  2082                           ;MotorDriver.c: 256: }
  2083                           
  2084                           ;MotorDriver.c: 255: break;
  2085                           
  2086                           ;MotorDriver.c: 253: default:
  2087                           
  2088                           ;MotorDriver.c: 251: }
  2089                           ;MotorDriver.c: 252: break;
  2090  000294  0012               	return	
  2091  000296                     l2152:
  2092  000296  504B               	movf	_EstadoActual,w,c
  2093                           
  2094                           ; Switch size 1, requested type "space"
  2095                           ; Number of cases is 5, Range of values is 0 to 4
  2096                           ; switch strategies available:
  2097                           ; Name         Instructions Cycles
  2098                           ; simple_byte           16     9 (average)
  2099                           ;	Chosen strategy is simple_byte
  2100  000298  0A00               	xorlw	0	; case 0
  2101  00029A  B4D8               	btfsc	status,2,c
  2102  00029C  D709               	goto	l2048
  2103  00029E  0A01               	xorlw	1	; case 1
  2104  0002A0  B4D8               	btfsc	status,2,c
  2105  0002A2  D711               	goto	l2058
  2106  0002A4  0A03               	xorlw	3	; case 2
  2107  0002A6  B4D8               	btfsc	status,2,c
  2108  0002A8  D745               	goto	l2080
  2109  0002AA  0A01               	xorlw	1	; case 3
  2110  0002AC  B4D8               	btfsc	status,2,c
  2111  0002AE  D77D               	goto	l2104
  2112  0002B0  0A07               	xorlw	7	; case 4
  2113  0002B2  A4D8               	btfss	status,2,c
  2114  0002B4  0012               	return	
  2115  0002B6  D7B4               	goto	l2128
  2116  0002B8                     __end_of_State16MEF_act_Backward:
  2117                           	opt stack 0
  2118                           tblptru	equ	0xFF8
  2119                           tblptrh	equ	0xFF7
  2120                           tblptrl	equ	0xFF6
  2121                           tablat	equ	0xFF5
  2122                           prodh	equ	0xFF4
  2123                           prodl	equ	0xFF3
  2124                           intcon	equ	0xFF2
  2125                           postinc0	equ	0xFEE
  2126                           wreg	equ	0xFE8
  2127                           postdec1	equ	0xFE5
  2128                           fsr1l	equ	0xFE1
  2129                           indf2	equ	0xFDF
  2130                           fsr2h	equ	0xFDA
  2131                           fsr2l	equ	0xFD9
  2132                           status	equ	0xFD8
  2133                           
  2134 ;; *************** function _EUSART1_Write *****************
  2135 ;; Defined at:
  2136 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  txData          1    wreg     unsigned char 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  txData          1   14[COMRAM] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;Total ram usage:        1 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    4
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_State16MEF_act_Backward
  2161 ;;		_ADC_Conversion
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text5
  2166  000CCA                     __ptext5:
  2167                           	opt stack 0
  2168  000CCA                     _EUSART1_Write:
  2169                           	opt stack 24
  2170                           
  2171                           ;incstack = 0
  2172                           ;EUSART1_Write@txData stored from wreg
  2173  000CCA  6E2F               	movwf	EUSART1_Write@txData,c
  2174  000CCC                     l337:
  2175  000CCC  A89E               	btfss	3998,4,c	;volatile
  2176  000CCE  D7FE               	goto	l337
  2177                           
  2178                           ;eusart1.c: 100: }
  2179                           ;eusart1.c: 102: TXREG1 = txData;
  2180  000CD0  C02F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2181  000CD4  0012               	return		;funcret
  2182  000CD6                     __end_of_EUSART1_Write:
  2183                           	opt stack 0
  2184                           tblptru	equ	0xFF8
  2185                           tblptrh	equ	0xFF7
  2186                           tblptrl	equ	0xFF6
  2187                           tablat	equ	0xFF5
  2188                           prodh	equ	0xFF4
  2189                           prodl	equ	0xFF3
  2190                           intcon	equ	0xFF2
  2191                           postinc0	equ	0xFEE
  2192                           wreg	equ	0xFE8
  2193                           postdec1	equ	0xFE5
  2194                           fsr1l	equ	0xFE1
  2195                           indf2	equ	0xFDF
  2196                           fsr2h	equ	0xFDA
  2197                           fsr2l	equ	0xFD9
  2198                           status	equ	0xFD8
  2199                           
  2200 ;; *************** function _State16MEF_act *****************
  2201 ;; Defined at:
  2202 ;;		line 119 in file "MotorDriver.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;Total ram usage:        1 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    5
  2223 ;; This function calls:
  2224 ;;		_EPWM1_LoadDutyValue
  2225 ;;		_EPWM2_LoadDutyValue
  2226 ;;		_limitar_corriente
  2227 ;; This function is called by:
  2228 ;;		_StepMove
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text6
  2233  00069C                     __ptext6:
  2234                           	opt stack 0
  2235  00069C                     _State16MEF_act:
  2236                           	opt stack 24
  2237                           
  2238                           ;MotorDriver.c: 120: switch(EstadoActual) {
  2239                           
  2240                           ;incstack = 0
  2241  00069C  D0E5               	goto	l2044
  2242  00069E                     l1956:
  2243                           
  2244                           ;MotorDriver.c: 122: PSTR1CON = 0x00; PSTR2CON = 0x00;
  2245  00069E  0E00               	movlw	0
  2246  0006A0  6EB9               	movwf	4025,c	;volatile
  2247  0006A2  0E00               	movlw	0
  2248  0006A4  6E63               	movwf	3939,c	;volatile
  2249                           
  2250                           ;MotorDriver.c: 123: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  2251  0006A6  948B               	bcf	3979,2,c	;volatile
  2252  0006A8  9A8C               	bcf	3980,5,c	;volatile
  2253  0006AA  928B               	bcf	3979,1,c	;volatile
  2254  0006AC  908B               	bcf	3979,0,c	;volatile
  2255                           
  2256                           ;MotorDriver.c: 124: EstadoActual = STATE1;
  2257  0006AE  0E01               	movlw	1
  2258  0006B0  6E4B               	movwf	_EstadoActual,c
  2259                           
  2260                           ;MotorDriver.c: 125: break;
  2261  0006B2  0012               	return	
  2262  0006B4                     l1966:
  2263                           
  2264                           ;MotorDriver.c: 127: PSTR1CON = 0x01; PSTR2CON = 0x01;
  2265  0006B4  0E01               	movlw	1
  2266  0006B6  6EB9               	movwf	4025,c	;volatile
  2267  0006B8  0E01               	movlw	1
  2268  0006BA  6E63               	movwf	3939,c	;volatile
  2269                           
  2270                           ;MotorDriver.c: 128: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2271  0006BC  9A8C               	bcf	3980,5,c	;volatile
  2272  0006BE  908B               	bcf	3979,0,c	;volatile
  2273                           
  2274                           ;MotorDriver.c: 129: if (Microstep<16){
  2275  0006C0  5044               	movf	_Microstep,w,c
  2276  0006C2  0A80               	xorlw	128
  2277  0006C4  0F70               	addlw	-144
  2278  0006C6  B0D8               	btfsc	status,0,c
  2279  0006C8  0012               	return	
  2280                           
  2281                           ;MotorDriver.c: 131: limitar_corriente();
  2282  0006CA  EC03  F005         	call	_limitar_corriente	;wreg free
  2283                           
  2284                           ;MotorDriver.c: 132: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2285  0006CE  5044               	movf	_Microstep,w,c
  2286  0006D0  0D01               	mullw	1
  2287  0006D2  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2288  0006D4  24F3               	addwf	prodl,w,c
  2289  0006D6  6ED9               	movwf	fsr2l,c
  2290  0006D8  0E00               	movlw	high _LookUP_TABLE_COS_16
  2291  0006DA  20F4               	addwfc	prodh,w,c
  2292  0006DC  6EDA               	movwf	fsr2h,c
  2293  0006DE  50DF               	movf	indf2,w,c
  2294  0006E0  6E33               	movwf	??_State16MEF_act& (0+255),c
  2295  0006E2  5033               	movf	??_State16MEF_act,w,c
  2296  0006E4  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2297  0006E6  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2298  0006E8  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2299                           
  2300                           ;MotorDriver.c: 133: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2301  0006EC  5044               	movf	_Microstep,w,c
  2302  0006EE  0D01               	mullw	1
  2303  0006F0  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2304  0006F2  24F3               	addwf	prodl,w,c
  2305  0006F4  6ED9               	movwf	fsr2l,c
  2306  0006F6  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2307  0006F8  20F4               	addwfc	prodh,w,c
  2308  0006FA  6EDA               	movwf	fsr2h,c
  2309  0006FC  50DF               	movf	indf2,w,c
  2310  0006FE  6E33               	movwf	??_State16MEF_act& (0+255),c
  2311  000700  5033               	movf	??_State16MEF_act,w,c
  2312  000702  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2313  000704  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2314  000706  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2315                           
  2316                           ;MotorDriver.c: 134: if (Microstep==15){
  2317  00070A  0E0F               	movlw	15
  2318  00070C  1844               	xorwf	_Microstep,w,c
  2319  00070E  A4D8               	btfss	status,2,c
  2320  000710  D002               	goto	l1980
  2321                           
  2322                           ;MotorDriver.c: 135: EstadoActual = STATE2;
  2323  000712  0E02               	movlw	2
  2324  000714  6E4B               	movwf	_EstadoActual,c
  2325  000716                     l1980:
  2326                           
  2327                           ;MotorDriver.c: 136: }
  2328                           ;MotorDriver.c: 137: Microstep++;
  2329  000716  2A44               	incf	_Microstep,f,c
  2330                           
  2331                           ;MotorDriver.c: 138: }
  2332                           ;MotorDriver.c: 139: break;
  2333  000718  0012               	return	
  2334  00071A                     l1982:
  2335                           
  2336                           ;MotorDriver.c: 141: PSTR1CON = 0x02; PSTR2CON = 0x01;
  2337  00071A  0E02               	movlw	2
  2338  00071C  6EB9               	movwf	4025,c	;volatile
  2339  00071E  0E01               	movlw	1
  2340  000720  6E63               	movwf	3939,c	;volatile
  2341                           
  2342                           ;MotorDriver.c: 142: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2343  000722  948B               	bcf	3979,2,c	;volatile
  2344  000724  908B               	bcf	3979,0,c	;volatile
  2345                           
  2346                           ;MotorDriver.c: 143: limitar_corriente();
  2347  000726  EC03  F005         	call	_limitar_corriente	;wreg free
  2348                           
  2349                           ;MotorDriver.c: 144: if ((Microstep<32)&&(Microstep>15)){
  2350  00072A  5044               	movf	_Microstep,w,c
  2351  00072C  0A80               	xorlw	128
  2352  00072E  0F60               	addlw	-160
  2353  000730  B0D8               	btfsc	status,0,c
  2354  000732  0012               	return	
  2355  000734  5044               	movf	_Microstep,w,c
  2356  000736  0A80               	xorlw	128
  2357  000738  0F70               	addlw	-144
  2358  00073A  A0D8               	btfss	status,0,c
  2359  00073C  0012               	return	
  2360                           
  2361                           ;MotorDriver.c: 146: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2362  00073E  5044               	movf	_Microstep,w,c
  2363  000740  0D01               	mullw	1
  2364  000742  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2365  000744  24F3               	addwf	prodl,w,c
  2366  000746  6ED9               	movwf	fsr2l,c
  2367  000748  0E00               	movlw	high _LookUP_TABLE_COS_16
  2368  00074A  20F4               	addwfc	prodh,w,c
  2369  00074C  6EDA               	movwf	fsr2h,c
  2370  00074E  50DF               	movf	indf2,w,c
  2371  000750  6E33               	movwf	??_State16MEF_act& (0+255),c
  2372  000752  5033               	movf	??_State16MEF_act,w,c
  2373  000754  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2374  000756  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2375  000758  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2376                           
  2377                           ;MotorDriver.c: 147: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2378  00075C  5044               	movf	_Microstep,w,c
  2379  00075E  0D01               	mullw	1
  2380  000760  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2381  000762  24F3               	addwf	prodl,w,c
  2382  000764  6ED9               	movwf	fsr2l,c
  2383  000766  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2384  000768  20F4               	addwfc	prodh,w,c
  2385  00076A  6EDA               	movwf	fsr2h,c
  2386  00076C  50DF               	movf	indf2,w,c
  2387  00076E  6E33               	movwf	??_State16MEF_act& (0+255),c
  2388  000770  5033               	movf	??_State16MEF_act,w,c
  2389  000772  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2390  000774  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2391  000776  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2392                           
  2393                           ;MotorDriver.c: 148: if (Microstep==31){
  2394  00077A  0E1F               	movlw	31
  2395  00077C  1844               	xorwf	_Microstep,w,c
  2396  00077E  A4D8               	btfss	status,2,c
  2397  000780  D002               	goto	l2000
  2398                           
  2399                           ;MotorDriver.c: 149: EstadoActual = STATE3;
  2400  000782  0E03               	movlw	3
  2401  000784  6E4B               	movwf	_EstadoActual,c
  2402  000786                     l2000:
  2403                           
  2404                           ;MotorDriver.c: 150: }
  2405                           ;MotorDriver.c: 151: Microstep++;
  2406  000786  2A44               	incf	_Microstep,f,c
  2407                           
  2408                           ;MotorDriver.c: 152: }
  2409                           ;MotorDriver.c: 153: break;
  2410  000788  0012               	return	
  2411  00078A                     l2002:
  2412                           
  2413                           ;MotorDriver.c: 155: PSTR1CON = 0x02; PSTR2CON = 0x02;
  2414  00078A  0E02               	movlw	2
  2415  00078C  6EB9               	movwf	4025,c	;volatile
  2416  00078E  0E02               	movlw	2
  2417  000790  6E63               	movwf	3939,c	;volatile
  2418                           
  2419                           ;MotorDriver.c: 156: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2420  000792  948B               	bcf	3979,2,c	;volatile
  2421  000794  928B               	bcf	3979,1,c	;volatile
  2422                           
  2423                           ;MotorDriver.c: 157: limitar_corriente();
  2424  000796  EC03  F005         	call	_limitar_corriente	;wreg free
  2425                           
  2426                           ;MotorDriver.c: 158: if ((Microstep<48)&&(Microstep>31)){
  2427  00079A  5044               	movf	_Microstep,w,c
  2428  00079C  0A80               	xorlw	128
  2429  00079E  0F50               	addlw	-176
  2430  0007A0  B0D8               	btfsc	status,0,c
  2431  0007A2  0012               	return	
  2432  0007A4  5044               	movf	_Microstep,w,c
  2433  0007A6  0A80               	xorlw	128
  2434  0007A8  0F60               	addlw	-160
  2435  0007AA  A0D8               	btfss	status,0,c
  2436  0007AC  0012               	return	
  2437                           
  2438                           ;MotorDriver.c: 160: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2439  0007AE  5044               	movf	_Microstep,w,c
  2440  0007B0  0D01               	mullw	1
  2441  0007B2  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2442  0007B4  24F3               	addwf	prodl,w,c
  2443  0007B6  6ED9               	movwf	fsr2l,c
  2444  0007B8  0E00               	movlw	high _LookUP_TABLE_COS_16
  2445  0007BA  20F4               	addwfc	prodh,w,c
  2446  0007BC  6EDA               	movwf	fsr2h,c
  2447  0007BE  50DF               	movf	indf2,w,c
  2448  0007C0  6E33               	movwf	??_State16MEF_act& (0+255),c
  2449  0007C2  5033               	movf	??_State16MEF_act,w,c
  2450  0007C4  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2451  0007C6  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2452  0007C8  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2453                           
  2454                           ;MotorDriver.c: 161: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2455  0007CC  5044               	movf	_Microstep,w,c
  2456  0007CE  0D01               	mullw	1
  2457  0007D0  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2458  0007D2  24F3               	addwf	prodl,w,c
  2459  0007D4  6ED9               	movwf	fsr2l,c
  2460  0007D6  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2461  0007D8  20F4               	addwfc	prodh,w,c
  2462  0007DA  6EDA               	movwf	fsr2h,c
  2463  0007DC  50DF               	movf	indf2,w,c
  2464  0007DE  6E33               	movwf	??_State16MEF_act& (0+255),c
  2465  0007E0  5033               	movf	??_State16MEF_act,w,c
  2466  0007E2  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2467  0007E4  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2468  0007E6  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2469                           
  2470                           ;MotorDriver.c: 162: if (Microstep==47){
  2471  0007EA  0E2F               	movlw	47
  2472  0007EC  1844               	xorwf	_Microstep,w,c
  2473  0007EE  A4D8               	btfss	status,2,c
  2474  0007F0  D002               	goto	l2020
  2475                           
  2476                           ;MotorDriver.c: 163: EstadoActual = STATE4;
  2477  0007F2  0E04               	movlw	4
  2478  0007F4  6E4B               	movwf	_EstadoActual,c
  2479  0007F6                     l2020:
  2480                           
  2481                           ;MotorDriver.c: 164: }
  2482                           ;MotorDriver.c: 165: Microstep++;
  2483  0007F6  2A44               	incf	_Microstep,f,c
  2484                           
  2485                           ;MotorDriver.c: 166: }
  2486                           ;MotorDriver.c: 167: break;
  2487  0007F8  0012               	return	
  2488  0007FA                     l2022:
  2489                           
  2490                           ;MotorDriver.c: 169: PSTR1CON = 0x01; PSTR2CON = 0x02;
  2491  0007FA  0E01               	movlw	1
  2492  0007FC  6EB9               	movwf	4025,c	;volatile
  2493  0007FE  0E02               	movlw	2
  2494  000800  6E63               	movwf	3939,c	;volatile
  2495                           
  2496                           ;MotorDriver.c: 170: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2497  000802  9A8C               	bcf	3980,5,c	;volatile
  2498  000804  928B               	bcf	3979,1,c	;volatile
  2499                           
  2500                           ;MotorDriver.c: 171: if ((Microstep<64)&&(Microstep>47)){
  2501  000806  5044               	movf	_Microstep,w,c
  2502  000808  0A80               	xorlw	128
  2503  00080A  0F40               	addlw	-192
  2504  00080C  B0D8               	btfsc	status,0,c
  2505  00080E  0012               	return	
  2506  000810  5044               	movf	_Microstep,w,c
  2507  000812  0A80               	xorlw	128
  2508  000814  0F50               	addlw	-176
  2509  000816  A0D8               	btfss	status,0,c
  2510  000818  0012               	return	
  2511                           
  2512                           ;MotorDriver.c: 173: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2513  00081A  5044               	movf	_Microstep,w,c
  2514  00081C  0D01               	mullw	1
  2515  00081E  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2516  000820  24F3               	addwf	prodl,w,c
  2517  000822  6ED9               	movwf	fsr2l,c
  2518  000824  0E00               	movlw	high _LookUP_TABLE_COS_16
  2519  000826  20F4               	addwfc	prodh,w,c
  2520  000828  6EDA               	movwf	fsr2h,c
  2521  00082A  50DF               	movf	indf2,w,c
  2522  00082C  6E33               	movwf	??_State16MEF_act& (0+255),c
  2523  00082E  5033               	movf	??_State16MEF_act,w,c
  2524  000830  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2525  000832  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2526  000834  EC94  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2527                           
  2528                           ;MotorDriver.c: 174: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2529  000838  5044               	movf	_Microstep,w,c
  2530  00083A  0D01               	mullw	1
  2531  00083C  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2532  00083E  24F3               	addwf	prodl,w,c
  2533  000840  6ED9               	movwf	fsr2l,c
  2534  000842  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2535  000844  20F4               	addwfc	prodh,w,c
  2536  000846  6EDA               	movwf	fsr2h,c
  2537  000848  50DF               	movf	indf2,w,c
  2538  00084A  6E33               	movwf	??_State16MEF_act& (0+255),c
  2539  00084C  5033               	movf	??_State16MEF_act,w,c
  2540  00084E  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2541  000850  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2542  000852  EC7C  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2543                           
  2544                           ;MotorDriver.c: 175: if (Microstep==63){
  2545  000856  0E3F               	movlw	63
  2546  000858  1844               	xorwf	_Microstep,w,c
  2547  00085A  A4D8               	btfss	status,2,c
  2548  00085C  D003               	goto	l2040
  2549                           
  2550                           ;MotorDriver.c: 177: EstadoActual = STATE1;
  2551  00085E  0E01               	movlw	1
  2552  000860  6E4B               	movwf	_EstadoActual,c
  2553                           
  2554                           ;MotorDriver.c: 178: Microstep=-1;
  2555  000862  6844               	setf	_Microstep,c
  2556  000864                     l2040:
  2557                           
  2558                           ;MotorDriver.c: 179: }
  2559                           ;MotorDriver.c: 180: Microstep++;
  2560  000864  2A44               	incf	_Microstep,f,c
  2561                           
  2562                           ;MotorDriver.c: 186: }
  2563                           
  2564                           ;MotorDriver.c: 185: break;
  2565                           
  2566                           ;MotorDriver.c: 183: default:
  2567                           
  2568                           ;MotorDriver.c: 181: }
  2569                           ;MotorDriver.c: 182: break;
  2570  000866  0012               	return	
  2571  000868                     l2044:
  2572  000868  504B               	movf	_EstadoActual,w,c
  2573                           
  2574                           ; Switch size 1, requested type "space"
  2575                           ; Number of cases is 5, Range of values is 0 to 4
  2576                           ; switch strategies available:
  2577                           ; Name         Instructions Cycles
  2578                           ; simple_byte           16     9 (average)
  2579                           ;	Chosen strategy is simple_byte
  2580  00086A  0A00               	xorlw	0	; case 0
  2581  00086C  B4D8               	btfsc	status,2,c
  2582  00086E  D717               	goto	l1956
  2583  000870  0A01               	xorlw	1	; case 1
  2584  000872  B4D8               	btfsc	status,2,c
  2585  000874  D71F               	goto	l1966
  2586  000876  0A03               	xorlw	3	; case 2
  2587  000878  B4D8               	btfsc	status,2,c
  2588  00087A  D74F               	goto	l1982
  2589  00087C  0A01               	xorlw	1	; case 3
  2590  00087E  B4D8               	btfsc	status,2,c
  2591  000880  D784               	goto	l2002
  2592  000882  0A07               	xorlw	7	; case 4
  2593  000884  A4D8               	btfss	status,2,c
  2594  000886  0012               	return	
  2595  000888  D7B8               	goto	l2022
  2596  00088A                     __end_of_State16MEF_act:
  2597                           	opt stack 0
  2598                           tblptru	equ	0xFF8
  2599                           tblptrh	equ	0xFF7
  2600                           tblptrl	equ	0xFF6
  2601                           tablat	equ	0xFF5
  2602                           prodh	equ	0xFF4
  2603                           prodl	equ	0xFF3
  2604                           intcon	equ	0xFF2
  2605                           postinc0	equ	0xFEE
  2606                           wreg	equ	0xFE8
  2607                           postdec1	equ	0xFE5
  2608                           fsr1l	equ	0xFE1
  2609                           indf2	equ	0xFDF
  2610                           fsr2h	equ	0xFDA
  2611                           fsr2l	equ	0xFD9
  2612                           status	equ	0xFD8
  2613                           
  2614 ;; *************** function _limitar_corriente *****************
  2615 ;; Defined at:
  2616 ;;		line 368 in file "MotorDriver.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;Total ram usage:        1 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    4
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_State8MEF_act
  2641 ;;		_State16MEF_act
  2642 ;;		_State16MEF_act_Backward
  2643 ;;		_State8MEF_act_Backward
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text7
  2648  000A06                     __ptext7:
  2649                           	opt stack 0
  2650  000A06                     _limitar_corriente:
  2651                           	opt stack 24
  2652                           
  2653                           ;MotorDriver.c: 369: if ((LookUP_TABLE_COS[Microstep])>115){
  2654                           
  2655                           ;incstack = 0
  2656  000A06  5044               	movf	_Microstep,w,c
  2657  000A08  0D01               	mullw	1
  2658  000A0A  0E01               	movlw	low _LookUP_TABLE_COS
  2659  000A0C  24F3               	addwf	prodl,w,c
  2660  000A0E  6ED9               	movwf	fsr2l,c
  2661  000A10  0E00               	movlw	high _LookUP_TABLE_COS
  2662  000A12  20F4               	addwfc	prodh,w,c
  2663  000A14  6EDA               	movwf	fsr2h,c
  2664  000A16  0E73               	movlw	115
  2665  000A18  64DF               	cpfsgt	indf2,c
  2666  000A1A  D00A               	goto	l598
  2667                           
  2668                           ;MotorDriver.c: 370: LookUP_TABLE_COS[Microstep]=115;
  2669  000A1C  5044               	movf	_Microstep,w,c
  2670  000A1E  0D01               	mullw	1
  2671  000A20  0E01               	movlw	low _LookUP_TABLE_COS
  2672  000A22  24F3               	addwf	prodl,w,c
  2673  000A24  6ED9               	movwf	fsr2l,c
  2674  000A26  0E00               	movlw	high _LookUP_TABLE_COS
  2675  000A28  20F4               	addwfc	prodh,w,c
  2676  000A2A  6EDA               	movwf	fsr2h,c
  2677  000A2C  0E73               	movlw	115
  2678  000A2E  6EDF               	movwf	indf2,c
  2679  000A30                     l598:
  2680                           
  2681                           ;MotorDriver.c: 371: }
  2682                           ;MotorDriver.c: 372: if ((LookUP_TABLE_SEN[Microstep])>115){
  2683  000A30  5044               	movf	_Microstep,w,c
  2684  000A32  0D01               	mullw	1
  2685  000A34  0EE0               	movlw	low _LookUP_TABLE_SEN
  2686  000A36  24F3               	addwf	prodl,w,c
  2687  000A38  6ED9               	movwf	fsr2l,c
  2688  000A3A  0E00               	movlw	high _LookUP_TABLE_SEN
  2689  000A3C  20F4               	addwfc	prodh,w,c
  2690  000A3E  6EDA               	movwf	fsr2h,c
  2691  000A40  0E73               	movlw	115
  2692  000A42  64DF               	cpfsgt	indf2,c
  2693  000A44  0012               	return	
  2694                           
  2695                           ;MotorDriver.c: 373: LookUP_TABLE_SEN[Microstep]=115;
  2696  000A46  5044               	movf	_Microstep,w,c
  2697  000A48  0D01               	mullw	1
  2698  000A4A  0EE0               	movlw	low _LookUP_TABLE_SEN
  2699  000A4C  24F3               	addwf	prodl,w,c
  2700  000A4E  6ED9               	movwf	fsr2l,c
  2701  000A50  0E00               	movlw	high _LookUP_TABLE_SEN
  2702  000A52  20F4               	addwfc	prodh,w,c
  2703  000A54  6EDA               	movwf	fsr2h,c
  2704  000A56  0E73               	movlw	115
  2705  000A58  6EDF               	movwf	indf2,c
  2706  000A5A  0012               	return	
  2707  000A5C                     __end_of_limitar_corriente:
  2708                           	opt stack 0
  2709                           tblptru	equ	0xFF8
  2710                           tblptrh	equ	0xFF7
  2711                           tblptrl	equ	0xFF6
  2712                           tablat	equ	0xFF5
  2713                           prodh	equ	0xFF4
  2714                           prodl	equ	0xFF3
  2715                           intcon	equ	0xFF2
  2716                           postinc0	equ	0xFEE
  2717                           wreg	equ	0xFE8
  2718                           postdec1	equ	0xFE5
  2719                           fsr1l	equ	0xFE1
  2720                           indf2	equ	0xFDF
  2721                           fsr2h	equ	0xFDA
  2722                           fsr2l	equ	0xFD9
  2723                           status	equ	0xFD8
  2724                           
  2725 ;; *************** function _EPWM2_LoadDutyValue *****************
  2726 ;; Defined at:
  2727 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  dutyValue       2   14[COMRAM] unsigned int 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;Total ram usage:        4 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    4
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_State8MEF_act
  2752 ;;		_State16MEF_act
  2753 ;;		_State16MEF_act_Backward
  2754 ;;		_State8MEF_act_Backward
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text8
  2759  000AF8                     __ptext8:
  2760                           	opt stack 0
  2761  000AF8                     _EPWM2_LoadDutyValue:
  2762                           	opt stack 24
  2763                           
  2764                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  2765                           
  2766                           ;incstack = 0
  2767  000AF8  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  2768  000AFC  C030  F032         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  2769  000B00  90D8               	bcf	status,0,c
  2770  000B02  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  2771  000B04  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  2772  000B06  90D8               	bcf	status,0,c
  2773  000B08  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  2774  000B0A  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  2775  000B0C  5031               	movf	??_EPWM2_LoadDutyValue,w,c
  2776  000B0E  6E67               	movwf	3943,c	;volatile
  2777                           
  2778                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2779  000B10  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  2780  000B14  0E03               	movlw	3
  2781  000B16  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  2782  000B18  3A31               	swapf	??_EPWM2_LoadDutyValue,f,c
  2783  000B1A  0EF0               	movlw	240
  2784  000B1C  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  2785  000B1E  5066               	movf	3942,w,c	;volatile
  2786  000B20  0BCF               	andlw	207
  2787  000B22  1031               	iorwf	??_EPWM2_LoadDutyValue,w,c
  2788  000B24  6E66               	movwf	3942,c	;volatile
  2789  000B26  0012               	return		;funcret
  2790  000B28                     __end_of_EPWM2_LoadDutyValue:
  2791                           	opt stack 0
  2792                           tblptru	equ	0xFF8
  2793                           tblptrh	equ	0xFF7
  2794                           tblptrl	equ	0xFF6
  2795                           tablat	equ	0xFF5
  2796                           prodh	equ	0xFF4
  2797                           prodl	equ	0xFF3
  2798                           intcon	equ	0xFF2
  2799                           postinc0	equ	0xFEE
  2800                           wreg	equ	0xFE8
  2801                           postdec1	equ	0xFE5
  2802                           fsr1l	equ	0xFE1
  2803                           indf2	equ	0xFDF
  2804                           fsr2h	equ	0xFDA
  2805                           fsr2l	equ	0xFD9
  2806                           status	equ	0xFD8
  2807                           
  2808 ;; *************** function _EPWM1_LoadDutyValue *****************
  2809 ;; Defined at:
  2810 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  dutyValue       2   14[COMRAM] unsigned int 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;Total ram usage:        4 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    4
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_State8MEF_act
  2835 ;;		_State16MEF_act
  2836 ;;		_State16MEF_act_Backward
  2837 ;;		_State8MEF_act_Backward
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text9
  2842  000B28                     __ptext9:
  2843                           	opt stack 0
  2844  000B28                     _EPWM1_LoadDutyValue:
  2845                           	opt stack 24
  2846                           
  2847                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  2848                           
  2849                           ;incstack = 0
  2850  000B28  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  2851  000B2C  C030  F032         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  2852  000B30  90D8               	bcf	status,0,c
  2853  000B32  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  2854  000B34  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  2855  000B36  90D8               	bcf	status,0,c
  2856  000B38  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  2857  000B3A  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  2858  000B3C  5031               	movf	??_EPWM1_LoadDutyValue,w,c
  2859  000B3E  6EBE               	movwf	4030,c	;volatile
  2860                           
  2861                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2862  000B40  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  2863  000B44  0E03               	movlw	3
  2864  000B46  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  2865  000B48  3A31               	swapf	??_EPWM1_LoadDutyValue,f,c
  2866  000B4A  0EF0               	movlw	240
  2867  000B4C  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  2868  000B4E  50BD               	movf	4029,w,c	;volatile
  2869  000B50  0BCF               	andlw	207
  2870  000B52  1031               	iorwf	??_EPWM1_LoadDutyValue,w,c
  2871  000B54  6EBD               	movwf	4029,c	;volatile
  2872  000B56  0012               	return		;funcret
  2873  000B58                     __end_of_EPWM1_LoadDutyValue:
  2874                           	opt stack 0
  2875                           tblptru	equ	0xFF8
  2876                           tblptrh	equ	0xFF7
  2877                           tblptrl	equ	0xFF6
  2878                           tablat	equ	0xFF5
  2879                           prodh	equ	0xFF4
  2880                           prodl	equ	0xFF3
  2881                           intcon	equ	0xFF2
  2882                           postinc0	equ	0xFEE
  2883                           wreg	equ	0xFE8
  2884                           postdec1	equ	0xFE5
  2885                           fsr1l	equ	0xFE1
  2886                           indf2	equ	0xFDF
  2887                           fsr2h	equ	0xFDA
  2888                           fsr2l	equ	0xFD9
  2889                           status	equ	0xFD8
  2890                           
  2891 ;; *************** function _StateMEF_ini *****************
  2892 ;; Defined at:
  2893 ;;		line 35 in file "MotorDriver.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;		None
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;Total ram usage:        0 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    4
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_main
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text10
  2922  000CD6                     __ptext10:
  2923                           	opt stack 0
  2924  000CD6                     _StateMEF_ini:
  2925                           	opt stack 26
  2926                           
  2927                           ;MotorDriver.c: 37: EstadoActual = STATE1;
  2928                           
  2929                           ;incstack = 0
  2930  000CD6  0E01               	movlw	1
  2931  000CD8  6E4B               	movwf	_EstadoActual,c
  2932                           
  2933                           ;MotorDriver.c: 38: Microstep=0;
  2934  000CDA  0E00               	movlw	0
  2935  000CDC  6E44               	movwf	_Microstep,c
  2936  000CDE  0012               	return		;funcret
  2937  000CE0                     __end_of_StateMEF_ini:
  2938                           	opt stack 0
  2939                           tblptru	equ	0xFF8
  2940                           tblptrh	equ	0xFF7
  2941                           tblptrl	equ	0xFF6
  2942                           tablat	equ	0xFF5
  2943                           prodh	equ	0xFF4
  2944                           prodl	equ	0xFF3
  2945                           intcon	equ	0xFF2
  2946                           postinc0	equ	0xFEE
  2947                           wreg	equ	0xFE8
  2948                           postdec1	equ	0xFE5
  2949                           fsr1l	equ	0xFE1
  2950                           indf2	equ	0xFDF
  2951                           fsr2h	equ	0xFDA
  2952                           fsr2l	equ	0xFD9
  2953                           status	equ	0xFD8
  2954                           
  2955 ;; *************** function _SYSTEM_Initialize *****************
  2956 ;; Defined at:
  2957 ;;		line 111 in file "mcc_generated_files/mcc.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2, status,0, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;Total ram usage:        0 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    6
  2978 ;; This function calls:
  2979 ;;		_ADC_Initialize
  2980 ;;		_CCP5_Initialize
  2981 ;;		_EPWM1_Initialize
  2982 ;;		_EPWM2_Initialize
  2983 ;;		_EUSART1_Initialize
  2984 ;;		_INTERRUPT_Initialize
  2985 ;;		_OSCILLATOR_Initialize
  2986 ;;		_PIN_MANAGER_Initialize
  2987 ;;		_TMR2_Initialize
  2988 ;;		_TMR6_Initialize
  2989 ;; This function is called by:
  2990 ;;		_main
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text11
  2995  000B58                     __ptext11:
  2996                           	opt stack 0
  2997  000B58                     _SYSTEM_Initialize:
  2998                           	opt stack 24
  2999                           
  3000                           ;mcc.c: 114: INTERRUPT_Initialize();
  3001                           
  3002                           ;incstack = 0
  3003  000B58  EC83  F006         	call	_INTERRUPT_Initialize	;wreg free
  3004                           
  3005                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  3006  000B5C  EC56  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  3007                           
  3008                           ;mcc.c: 116: OSCILLATOR_Initialize();
  3009  000B60  EC5E  F006         	call	_OSCILLATOR_Initialize	;wreg free
  3010                           
  3011                           ;mcc.c: 117: TMR6_Initialize();
  3012  000B64  ECC1  F005         	call	_TMR6_Initialize	;wreg free
  3013                           
  3014                           ;mcc.c: 118: EPWM2_Initialize();
  3015  000B68  ECD5  F005         	call	_EPWM2_Initialize	;wreg free
  3016                           
  3017                           ;mcc.c: 119: CCP5_Initialize();
  3018  000B6C  EC54  F006         	call	_CCP5_Initialize	;wreg free
  3019                           
  3020                           ;mcc.c: 120: ADC_Initialize();
  3021  000B70  EC3D  F006         	call	_ADC_Initialize	;wreg free
  3022                           
  3023                           ;mcc.c: 121: EPWM1_Initialize();
  3024  000B74  ECE7  F005         	call	_EPWM1_Initialize	;wreg free
  3025                           
  3026                           ;mcc.c: 122: TMR2_Initialize();
  3027  000B78  EC0B  F006         	call	_TMR2_Initialize	;wreg free
  3028                           
  3029                           ;mcc.c: 123: EUSART1_Initialize();
  3030  000B7C  EC49  F006         	call	_EUSART1_Initialize	;wreg free
  3031  000B80  0012               	return		;funcret
  3032  000B82                     __end_of_SYSTEM_Initialize:
  3033                           	opt stack 0
  3034                           tblptru	equ	0xFF8
  3035                           tblptrh	equ	0xFF7
  3036                           tblptrl	equ	0xFF6
  3037                           tablat	equ	0xFF5
  3038                           prodh	equ	0xFF4
  3039                           prodl	equ	0xFF3
  3040                           intcon	equ	0xFF2
  3041                           postinc0	equ	0xFEE
  3042                           wreg	equ	0xFE8
  3043                           postdec1	equ	0xFE5
  3044                           fsr1l	equ	0xFE1
  3045                           indf2	equ	0xFDF
  3046                           fsr2h	equ	0xFDA
  3047                           fsr2l	equ	0xFD9
  3048                           status	equ	0xFD8
  3049                           
  3050 ;; *************** function _TMR6_Initialize *****************
  3051 ;; Defined at:
  3052 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    5
  3073 ;; This function calls:
  3074 ;;		_TMR6_SetInterruptHandler
  3075 ;;		_TMR6_StartTimer
  3076 ;; This function is called by:
  3077 ;;		_SYSTEM_Initialize
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text12
  3082  000B82                     __ptext12:
  3083                           	opt stack 0
  3084  000B82                     _TMR6_Initialize:
  3085                           	opt stack 24
  3086                           
  3087                           ;tmr6.c: 68: T6CON = 0x01;
  3088                           
  3089                           ;incstack = 0
  3090  000B82  0E01               	movlw	1
  3091  000B84  010F               	movlb	15	; () banked
  3092  000B86  6F4A               	movwf	74,b	;volatile
  3093                           
  3094                           ;tmr6.c: 71: PR6 = 0x45;
  3095  000B88  0E45               	movlw	69
  3096  000B8A  010F               	movlb	15	; () banked
  3097  000B8C  6F4B               	movwf	75,b	;volatile
  3098                           
  3099                           ;tmr6.c: 74: TMR6 = 0x00;
  3100  000B8E  0E00               	movlw	0
  3101  000B90  010F               	movlb	15	; () banked
  3102  000B92  6F4C               	movwf	76,b	;volatile
  3103                           
  3104                           ; BSR set to: 15
  3105                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
  3106  000B94  947E               	bcf	3966,2,c	;volatile
  3107                           
  3108                           ; BSR set to: 15
  3109                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
  3110  000B96  847D               	bsf	3965,2,c	;volatile
  3111                           
  3112                           ; BSR set to: 15
  3113                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  3114  000B98  0E0E               	movlw	low _TMR6_DefaultInterruptHandler
  3115  000B9A  6E2F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  3116  000B9C  0E0D               	movlw	high _TMR6_DefaultInterruptHandler
  3117  000B9E  6E30               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  3118  000BA0  EC70  F006         	call	_TMR6_SetInterruptHandler	;wreg free
  3119                           
  3120                           ;tmr6.c: 86: TMR6_StartTimer();
  3121  000BA4  EC7E  F006         	call	_TMR6_StartTimer	;wreg free
  3122  000BA8  0012               	return		;funcret
  3123  000BAA                     __end_of_TMR6_Initialize:
  3124                           	opt stack 0
  3125                           tblptru	equ	0xFF8
  3126                           tblptrh	equ	0xFF7
  3127                           tblptrl	equ	0xFF6
  3128                           tablat	equ	0xFF5
  3129                           prodh	equ	0xFF4
  3130                           prodl	equ	0xFF3
  3131                           intcon	equ	0xFF2
  3132                           postinc0	equ	0xFEE
  3133                           wreg	equ	0xFE8
  3134                           postdec1	equ	0xFE5
  3135                           fsr1l	equ	0xFE1
  3136                           indf2	equ	0xFDF
  3137                           fsr2h	equ	0xFDA
  3138                           fsr2l	equ	0xFD9
  3139                           status	equ	0xFD8
  3140                           
  3141 ;; *************** function _TMR6_StartTimer *****************
  3142 ;; Defined at:
  3143 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;		None
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;		None
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1    wreg      void 
  3150 ;; Registers used:
  3151 ;;		None
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;Total ram usage:        0 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    4
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_TMR6_Initialize
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text13
  3172  000CFC                     __ptext13:
  3173                           	opt stack 0
  3174  000CFC                     _TMR6_StartTimer:
  3175                           	opt stack 24
  3176                           
  3177                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  3178                           
  3179                           ;incstack = 0
  3180  000CFC  010F               	movlb	15	; () banked
  3181  000CFE  854A               	bsf	74,2,b	;volatile
  3182                           
  3183                           ; BSR set to: 15
  3184  000D00  0012               	return		;funcret
  3185  000D02                     __end_of_TMR6_StartTimer:
  3186                           	opt stack 0
  3187                           tblptru	equ	0xFF8
  3188                           tblptrh	equ	0xFF7
  3189                           tblptrl	equ	0xFF6
  3190                           tablat	equ	0xFF5
  3191                           prodh	equ	0xFF4
  3192                           prodl	equ	0xFF3
  3193                           intcon	equ	0xFF2
  3194                           postinc0	equ	0xFEE
  3195                           wreg	equ	0xFE8
  3196                           postdec1	equ	0xFE5
  3197                           fsr1l	equ	0xFE1
  3198                           indf2	equ	0xFDF
  3199                           fsr2h	equ	0xFDA
  3200                           fsr2l	equ	0xFD9
  3201                           status	equ	0xFD8
  3202                           
  3203 ;; *************** function _TMR6_SetInterruptHandler *****************
  3204 ;; Defined at:
  3205 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  InterruptHan    2   14[COMRAM] PTR void 
  3208 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;Total ram usage:        2 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    4
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_TMR6_Initialize
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text14
  3235  000CE0                     __ptext14:
  3236                           	opt stack 0
  3237  000CE0                     _TMR6_SetInterruptHandler:
  3238                           	opt stack 24
  3239                           
  3240                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  3241                           
  3242                           ; BSR set to: 15
  3243                           ;incstack = 0
  3244  000CE0  C02F  F049         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  3245  000CE4  C030  F04A         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  3246  000CE8  0012               	return		;funcret
  3247  000CEA                     __end_of_TMR6_SetInterruptHandler:
  3248                           	opt stack 0
  3249                           tblptru	equ	0xFF8
  3250                           tblptrh	equ	0xFF7
  3251                           tblptrl	equ	0xFF6
  3252                           tablat	equ	0xFF5
  3253                           prodh	equ	0xFF4
  3254                           prodl	equ	0xFF3
  3255                           intcon	equ	0xFF2
  3256                           postinc0	equ	0xFEE
  3257                           wreg	equ	0xFE8
  3258                           postdec1	equ	0xFE5
  3259                           fsr1l	equ	0xFE1
  3260                           indf2	equ	0xFDF
  3261                           fsr2h	equ	0xFDA
  3262                           fsr2l	equ	0xFD9
  3263                           status	equ	0xFD8
  3264                           
  3265 ;; *************** function _TMR2_Initialize *****************
  3266 ;; Defined at:
  3267 ;;		line 65 in file "mcc_generated_files/tmr2.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;		None
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  1    wreg      void 
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;Total ram usage:        0 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    5
  3288 ;; This function calls:
  3289 ;;		_TMR2_SetInterruptHandler
  3290 ;;		_TMR2_StartTimer
  3291 ;; This function is called by:
  3292 ;;		_SYSTEM_Initialize
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text15
  3297  000C16                     __ptext15:
  3298                           	opt stack 0
  3299  000C16                     _TMR2_Initialize:
  3300                           	opt stack 24
  3301                           
  3302                           ;tmr2.c: 70: T2CON = 0x02;
  3303                           
  3304                           ;incstack = 0
  3305  000C16  0E02               	movlw	2
  3306  000C18  6EBA               	movwf	4026,c	;volatile
  3307                           
  3308                           ;tmr2.c: 73: PR2 = 0x0C;
  3309  000C1A  0E0C               	movlw	12
  3310  000C1C  6EBB               	movwf	4027,c	;volatile
  3311                           
  3312                           ;tmr2.c: 76: TMR2 = 0x00;
  3313  000C1E  0E00               	movlw	0
  3314  000C20  6EBC               	movwf	4028,c	;volatile
  3315                           
  3316                           ;tmr2.c: 79: PIR1bits.TMR2IF = 0;
  3317  000C22  929E               	bcf	3998,1,c	;volatile
  3318                           
  3319                           ;tmr2.c: 82: PIE1bits.TMR2IE = 1;
  3320  000C24  829D               	bsf	3997,1,c	;volatile
  3321                           
  3322                           ;tmr2.c: 85: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  3323  000C26  0E10               	movlw	low _TMR2_DefaultInterruptHandler
  3324  000C28  6E2F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  3325  000C2A  0E0D               	movlw	high _TMR2_DefaultInterruptHandler
  3326  000C2C  6E30               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  3327  000C2E  EC75  F006         	call	_TMR2_SetInterruptHandler	;wreg free
  3328                           
  3329                           ;tmr2.c: 88: TMR2_StartTimer();
  3330  000C32  EC81  F006         	call	_TMR2_StartTimer	;wreg free
  3331  000C36  0012               	return		;funcret
  3332  000C38                     __end_of_TMR2_Initialize:
  3333                           	opt stack 0
  3334                           tblptru	equ	0xFF8
  3335                           tblptrh	equ	0xFF7
  3336                           tblptrl	equ	0xFF6
  3337                           tablat	equ	0xFF5
  3338                           prodh	equ	0xFF4
  3339                           prodl	equ	0xFF3
  3340                           intcon	equ	0xFF2
  3341                           postinc0	equ	0xFEE
  3342                           wreg	equ	0xFE8
  3343                           postdec1	equ	0xFE5
  3344                           fsr1l	equ	0xFE1
  3345                           indf2	equ	0xFDF
  3346                           fsr2h	equ	0xFDA
  3347                           fsr2l	equ	0xFD9
  3348                           status	equ	0xFD8
  3349                           
  3350 ;; *************** function _TMR2_StartTimer *****************
  3351 ;; Defined at:
  3352 ;;		line 91 in file "mcc_generated_files/tmr2.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		None
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;Total ram usage:        0 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:    4
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_TMR2_Initialize
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text16
  3381  000D02                     __ptext16:
  3382                           	opt stack 0
  3383  000D02                     _TMR2_StartTimer:
  3384                           	opt stack 24
  3385                           
  3386                           ;tmr2.c: 94: T2CONbits.TMR2ON = 1;
  3387                           
  3388                           ;incstack = 0
  3389  000D02  84BA               	bsf	4026,2,c	;volatile
  3390  000D04  0012               	return		;funcret
  3391  000D06                     __end_of_TMR2_StartTimer:
  3392                           	opt stack 0
  3393                           tblptru	equ	0xFF8
  3394                           tblptrh	equ	0xFF7
  3395                           tblptrl	equ	0xFF6
  3396                           tablat	equ	0xFF5
  3397                           prodh	equ	0xFF4
  3398                           prodl	equ	0xFF3
  3399                           intcon	equ	0xFF2
  3400                           postinc0	equ	0xFEE
  3401                           wreg	equ	0xFE8
  3402                           postdec1	equ	0xFE5
  3403                           fsr1l	equ	0xFE1
  3404                           indf2	equ	0xFDF
  3405                           fsr2h	equ	0xFDA
  3406                           fsr2l	equ	0xFD9
  3407                           status	equ	0xFD8
  3408                           
  3409 ;; *************** function _TMR2_SetInterruptHandler *****************
  3410 ;; Defined at:
  3411 ;;		line 145 in file "mcc_generated_files/tmr2.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  InterruptHan    2   14[COMRAM] PTR void 
  3414 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;Total ram usage:        2 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    4
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_TMR2_Initialize
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text17
  3441  000CEA                     __ptext17:
  3442                           	opt stack 0
  3443  000CEA                     _TMR2_SetInterruptHandler:
  3444                           	opt stack 24
  3445                           
  3446                           ;tmr2.c: 146: TMR2_InterruptHandler = InterruptHandler;
  3447                           
  3448                           ;incstack = 0
  3449  000CEA  C02F  F047         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  3450  000CEE  C030  F048         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  3451  000CF2  0012               	return		;funcret
  3452  000CF4                     __end_of_TMR2_SetInterruptHandler:
  3453                           	opt stack 0
  3454                           tblptru	equ	0xFF8
  3455                           tblptrh	equ	0xFF7
  3456                           tblptrl	equ	0xFF6
  3457                           tablat	equ	0xFF5
  3458                           prodh	equ	0xFF4
  3459                           prodl	equ	0xFF3
  3460                           intcon	equ	0xFF2
  3461                           postinc0	equ	0xFEE
  3462                           wreg	equ	0xFE8
  3463                           postdec1	equ	0xFE5
  3464                           fsr1l	equ	0xFE1
  3465                           indf2	equ	0xFDF
  3466                           fsr2h	equ	0xFDA
  3467                           fsr2l	equ	0xFD9
  3468                           status	equ	0xFD8
  3469                           
  3470 ;; *************** function _PIN_MANAGER_Initialize *****************
  3471 ;; Defined at:
  3472 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;		None
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;		None
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      void 
  3479 ;; Registers used:
  3480 ;;		wreg, status,2
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;Total ram usage:        0 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:    4
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_SYSTEM_Initialize
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text18
  3501  000AAC                     __ptext18:
  3502                           	opt stack 0
  3503  000AAC                     _PIN_MANAGER_Initialize:
  3504                           	opt stack 25
  3505                           
  3506                           ;pin_manager.c: 56: LATE = 0x00;
  3507                           
  3508                           ;incstack = 0
  3509  000AAC  0E00               	movlw	0
  3510  000AAE  6E8D               	movwf	3981,c	;volatile
  3511                           
  3512                           ;pin_manager.c: 57: LATD = 0x00;
  3513  000AB0  0E00               	movlw	0
  3514  000AB2  6E8C               	movwf	3980,c	;volatile
  3515                           
  3516                           ;pin_manager.c: 58: LATA = 0x00;
  3517  000AB4  0E00               	movlw	0
  3518  000AB6  6E89               	movwf	3977,c	;volatile
  3519                           
  3520                           ;pin_manager.c: 59: LATB = 0x00;
  3521  000AB8  0E00               	movlw	0
  3522  000ABA  6E8A               	movwf	3978,c	;volatile
  3523                           
  3524                           ;pin_manager.c: 60: LATC = 0x00;
  3525  000ABC  0E00               	movlw	0
  3526  000ABE  6E8B               	movwf	3979,c	;volatile
  3527                           
  3528                           ;pin_manager.c: 65: TRISE = 0x07;
  3529  000AC0  0E07               	movlw	7
  3530  000AC2  6E96               	movwf	3990,c	;volatile
  3531                           
  3532                           ;pin_manager.c: 66: TRISA = 0xEB;
  3533  000AC4  0EEB               	movlw	235
  3534  000AC6  6E92               	movwf	3986,c	;volatile
  3535                           
  3536                           ;pin_manager.c: 67: TRISB = 0xBF;
  3537  000AC8  0EBF               	movlw	191
  3538  000ACA  6E93               	movwf	3987,c	;volatile
  3539                           
  3540                           ;pin_manager.c: 68: TRISC = 0xB8;
  3541  000ACC  0EB8               	movlw	184
  3542  000ACE  6E94               	movwf	3988,c	;volatile
  3543                           
  3544                           ;pin_manager.c: 69: TRISD = 0xDF;
  3545  000AD0  0EDF               	movlw	223
  3546  000AD2  6E95               	movwf	3989,c	;volatile
  3547                           
  3548                           ;pin_manager.c: 74: ANSELC = 0x38;
  3549  000AD4  0E38               	movlw	56
  3550  000AD6  010F               	movlb	15	; () banked
  3551  000AD8  6F3A               	movwf	58,b	;volatile
  3552                           
  3553                           ;pin_manager.c: 75: ANSELB = 0x3E;
  3554  000ADA  0E3E               	movlw	62
  3555  000ADC  010F               	movlb	15	; () banked
  3556  000ADE  6F39               	movwf	57,b	;volatile
  3557                           
  3558                           ;pin_manager.c: 76: ANSELD = 0xDF;
  3559  000AE0  0EDF               	movlw	223
  3560  000AE2  010F               	movlb	15	; () banked
  3561  000AE4  6F3B               	movwf	59,b	;volatile
  3562                           
  3563                           ;pin_manager.c: 77: ANSELE = 0x03;
  3564  000AE6  0E03               	movlw	3
  3565  000AE8  010F               	movlb	15	; () banked
  3566  000AEA  6F3C               	movwf	60,b	;volatile
  3567                           
  3568                           ;pin_manager.c: 78: ANSELA = 0x2B;
  3569  000AEC  0E2B               	movlw	43
  3570  000AEE  010F               	movlb	15	; () banked
  3571  000AF0  6F38               	movwf	56,b	;volatile
  3572                           
  3573                           ; BSR set to: 15
  3574                           ;pin_manager.c: 83: WPUB = 0xFF;
  3575  000AF2  6861               	setf	3937,c	;volatile
  3576                           
  3577                           ; BSR set to: 15
  3578                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  3579  000AF4  9EF1               	bcf	intcon2,7,c	;volatile
  3580                           
  3581                           ; BSR set to: 15
  3582  000AF6  0012               	return		;funcret
  3583  000AF8                     __end_of_PIN_MANAGER_Initialize:
  3584                           	opt stack 0
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           prodh	equ	0xFF4
  3590                           prodl	equ	0xFF3
  3591                           intcon	equ	0xFF2
  3592                           intcon2	equ	0xFF1
  3593                           postinc0	equ	0xFEE
  3594                           wreg	equ	0xFE8
  3595                           postdec1	equ	0xFE5
  3596                           fsr1l	equ	0xFE1
  3597                           indf2	equ	0xFDF
  3598                           fsr2h	equ	0xFDA
  3599                           fsr2l	equ	0xFD9
  3600                           status	equ	0xFD8
  3601                           
  3602 ;; *************** function _OSCILLATOR_Initialize *****************
  3603 ;; Defined at:
  3604 ;;		line 126 in file "mcc_generated_files/mcc.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;		None
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;		None
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;Total ram usage:        0 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:    4
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_SYSTEM_Initialize
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text19
  3633  000CBC                     __ptext19:
  3634                           	opt stack 0
  3635  000CBC                     _OSCILLATOR_Initialize:
  3636                           	opt stack 25
  3637                           
  3638                           ;mcc.c: 129: OSCCON = 0x70;
  3639                           
  3640                           ; BSR set to: 15
  3641                           ;incstack = 0
  3642  000CBC  0E70               	movlw	112
  3643  000CBE  6ED3               	movwf	4051,c	;volatile
  3644                           
  3645                           ;mcc.c: 131: OSCCON2 = 0x04;
  3646  000CC0  0E04               	movlw	4
  3647  000CC2  6ED2               	movwf	4050,c	;volatile
  3648                           
  3649                           ;mcc.c: 133: OSCTUNE = 0x00;
  3650  000CC4  0E00               	movlw	0
  3651  000CC6  6E9B               	movwf	3995,c	;volatile
  3652  000CC8  0012               	return		;funcret
  3653  000CCA                     __end_of_OSCILLATOR_Initialize:
  3654                           	opt stack 0
  3655                           tblptru	equ	0xFF8
  3656                           tblptrh	equ	0xFF7
  3657                           tblptrl	equ	0xFF6
  3658                           tablat	equ	0xFF5
  3659                           prodh	equ	0xFF4
  3660                           prodl	equ	0xFF3
  3661                           intcon	equ	0xFF2
  3662                           intcon2	equ	0xFF1
  3663                           postinc0	equ	0xFEE
  3664                           wreg	equ	0xFE8
  3665                           postdec1	equ	0xFE5
  3666                           fsr1l	equ	0xFE1
  3667                           indf2	equ	0xFDF
  3668                           fsr2h	equ	0xFDA
  3669                           fsr2l	equ	0xFD9
  3670                           status	equ	0xFD8
  3671                           
  3672 ;; *************** function _INTERRUPT_Initialize *****************
  3673 ;; Defined at:
  3674 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		None
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;Total ram usage:        0 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    4
  3695 ;; This function calls:
  3696 ;;		Nothing
  3697 ;; This function is called by:
  3698 ;;		_SYSTEM_Initialize
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text20
  3703  000D06                     __ptext20:
  3704                           	opt stack 0
  3705  000D06                     _INTERRUPT_Initialize:
  3706                           	opt stack 25
  3707                           
  3708                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  3709                           
  3710                           ;incstack = 0
  3711  000D06  9ED0               	bcf	4048,7,c	;volatile
  3712  000D08  0012               	return		;funcret
  3713  000D0A                     __end_of_INTERRUPT_Initialize:
  3714                           	opt stack 0
  3715                           tblptru	equ	0xFF8
  3716                           tblptrh	equ	0xFF7
  3717                           tblptrl	equ	0xFF6
  3718                           tablat	equ	0xFF5
  3719                           prodh	equ	0xFF4
  3720                           prodl	equ	0xFF3
  3721                           intcon	equ	0xFF2
  3722                           intcon2	equ	0xFF1
  3723                           postinc0	equ	0xFEE
  3724                           wreg	equ	0xFE8
  3725                           postdec1	equ	0xFE5
  3726                           fsr1l	equ	0xFE1
  3727                           indf2	equ	0xFDF
  3728                           fsr2h	equ	0xFDA
  3729                           fsr2l	equ	0xFD9
  3730                           status	equ	0xFD8
  3731                           
  3732 ;; *************** function _EUSART1_Initialize *****************
  3733 ;; Defined at:
  3734 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;		None
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;		None
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;Total ram usage:        0 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    4
  3755 ;; This function calls:
  3756 ;;		Nothing
  3757 ;; This function is called by:
  3758 ;;		_SYSTEM_Initialize
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text21
  3763  000C92                     __ptext21:
  3764                           	opt stack 0
  3765  000C92                     _EUSART1_Initialize:
  3766                           	opt stack 25
  3767                           
  3768                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  3769                           
  3770                           ;incstack = 0
  3771  000C92  0E08               	movlw	8
  3772  000C94  6EB8               	movwf	4024,c	;volatile
  3773                           
  3774                           ;eusart1.c: 63: RCSTA1 = 0x90;
  3775  000C96  0E90               	movlw	144
  3776  000C98  6EAB               	movwf	4011,c	;volatile
  3777                           
  3778                           ;eusart1.c: 66: TXSTA1 = 0x24;
  3779  000C9A  0E24               	movlw	36
  3780  000C9C  6EAC               	movwf	4012,c	;volatile
  3781                           
  3782                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  3783  000C9E  0EA0               	movlw	160
  3784  000CA0  6EAF               	movwf	4015,c	;volatile
  3785                           
  3786                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  3787  000CA2  0E01               	movlw	1
  3788  000CA4  6EB0               	movwf	4016,c	;volatile
  3789  000CA6  0012               	return		;funcret
  3790  000CA8                     __end_of_EUSART1_Initialize:
  3791                           	opt stack 0
  3792                           tblptru	equ	0xFF8
  3793                           tblptrh	equ	0xFF7
  3794                           tblptrl	equ	0xFF6
  3795                           tablat	equ	0xFF5
  3796                           prodh	equ	0xFF4
  3797                           prodl	equ	0xFF3
  3798                           intcon	equ	0xFF2
  3799                           intcon2	equ	0xFF1
  3800                           postinc0	equ	0xFEE
  3801                           wreg	equ	0xFE8
  3802                           postdec1	equ	0xFE5
  3803                           fsr1l	equ	0xFE1
  3804                           indf2	equ	0xFDF
  3805                           fsr2h	equ	0xFDA
  3806                           fsr2l	equ	0xFD9
  3807                           status	equ	0xFD8
  3808                           
  3809 ;; *************** function _EPWM2_Initialize *****************
  3810 ;; Defined at:
  3811 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;Total ram usage:        0 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:    4
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		_SYSTEM_Initialize
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text22
  3840  000BAA                     __ptext22:
  3841                           	opt stack 0
  3842  000BAA                     _EPWM2_Initialize:
  3843                           	opt stack 25
  3844                           
  3845                           ;epwm2.c: 68: CCP2CON = 0x3C;
  3846                           
  3847                           ;incstack = 0
  3848  000BAA  0E3C               	movlw	60
  3849  000BAC  6E66               	movwf	3942,c	;volatile
  3850                           
  3851                           ;epwm2.c: 71: ECCP2AS = 0x00;
  3852  000BAE  0E00               	movlw	0
  3853  000BB0  6E64               	movwf	3940,c	;volatile
  3854                           
  3855                           ;epwm2.c: 74: PWM2CON = 0x80;
  3856  000BB2  0E80               	movlw	128
  3857  000BB4  6E65               	movwf	3941,c	;volatile
  3858                           
  3859                           ;epwm2.c: 77: PSTR2CON = 0x03;
  3860  000BB6  0E03               	movlw	3
  3861  000BB8  6E63               	movwf	3939,c	;volatile
  3862                           
  3863                           ;epwm2.c: 80: CCPR2L = 0x14;
  3864  000BBA  0E14               	movlw	20
  3865  000BBC  6E67               	movwf	3943,c	;volatile
  3866                           
  3867                           ;epwm2.c: 83: CCPR2H = 0x00;
  3868  000BBE  0E00               	movlw	0
  3869  000BC0  6E68               	movwf	3944,c	;volatile
  3870                           
  3871                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  3872  000BC2  010F               	movlb	15	; () banked
  3873  000BC4  5149               	movf	73,w,b	;volatile
  3874  000BC6  0BE7               	andlw	-25
  3875  000BC8  0910               	iorlw	16
  3876  000BCA  6F49               	movwf	73,b	;volatile
  3877                           
  3878                           ; BSR set to: 15
  3879  000BCC  0012               	return		;funcret
  3880  000BCE                     __end_of_EPWM2_Initialize:
  3881                           	opt stack 0
  3882                           tblptru	equ	0xFF8
  3883                           tblptrh	equ	0xFF7
  3884                           tblptrl	equ	0xFF6
  3885                           tablat	equ	0xFF5
  3886                           prodh	equ	0xFF4
  3887                           prodl	equ	0xFF3
  3888                           intcon	equ	0xFF2
  3889                           intcon2	equ	0xFF1
  3890                           postinc0	equ	0xFEE
  3891                           wreg	equ	0xFE8
  3892                           postdec1	equ	0xFE5
  3893                           fsr1l	equ	0xFE1
  3894                           indf2	equ	0xFDF
  3895                           fsr2h	equ	0xFDA
  3896                           fsr2l	equ	0xFD9
  3897                           status	equ	0xFD8
  3898                           
  3899 ;; *************** function _EPWM1_Initialize *****************
  3900 ;; Defined at:
  3901 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;		None
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;		None
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;Total ram usage:        0 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    4
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_SYSTEM_Initialize
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           	psect	text23
  3930  000BCE                     __ptext23:
  3931                           	opt stack 0
  3932  000BCE                     _EPWM1_Initialize:
  3933                           	opt stack 25
  3934                           
  3935                           ;epwm1.c: 68: CCP1CON = 0x3C;
  3936                           
  3937                           ; BSR set to: 15
  3938                           ;incstack = 0
  3939  000BCE  0E3C               	movlw	60
  3940  000BD0  6EBD               	movwf	4029,c	;volatile
  3941                           
  3942                           ;epwm1.c: 71: ECCP1AS = 0x00;
  3943  000BD2  0E00               	movlw	0
  3944  000BD4  6EB6               	movwf	4022,c	;volatile
  3945                           
  3946                           ;epwm1.c: 74: PWM1CON = 0x80;
  3947  000BD6  0E80               	movlw	128
  3948  000BD8  6EB7               	movwf	4023,c	;volatile
  3949                           
  3950                           ;epwm1.c: 77: PSTR1CON = 0x03;
  3951  000BDA  0E03               	movlw	3
  3952  000BDC  6EB9               	movwf	4025,c	;volatile
  3953                           
  3954                           ;epwm1.c: 80: CCPR1L = 0x14;
  3955  000BDE  0E14               	movlw	20
  3956  000BE0  6EBE               	movwf	4030,c	;volatile
  3957                           
  3958                           ;epwm1.c: 83: CCPR1H = 0x00;
  3959  000BE2  0E00               	movlw	0
  3960  000BE4  6EBF               	movwf	4031,c	;volatile
  3961                           
  3962                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  3963  000BE6  010F               	movlb	15	; () banked
  3964  000BE8  5149               	movf	73,w,b	;volatile
  3965  000BEA  0BFC               	andlw	-4
  3966  000BEC  0902               	iorlw	2
  3967  000BEE  6F49               	movwf	73,b	;volatile
  3968                           
  3969                           ; BSR set to: 15
  3970  000BF0  0012               	return		;funcret
  3971  000BF2                     __end_of_EPWM1_Initialize:
  3972                           	opt stack 0
  3973                           tblptru	equ	0xFF8
  3974                           tblptrh	equ	0xFF7
  3975                           tblptrl	equ	0xFF6
  3976                           tablat	equ	0xFF5
  3977                           prodh	equ	0xFF4
  3978                           prodl	equ	0xFF3
  3979                           intcon	equ	0xFF2
  3980                           intcon2	equ	0xFF1
  3981                           postinc0	equ	0xFEE
  3982                           wreg	equ	0xFE8
  3983                           postdec1	equ	0xFE5
  3984                           fsr1l	equ	0xFE1
  3985                           indf2	equ	0xFDF
  3986                           fsr2h	equ	0xFDA
  3987                           fsr2l	equ	0xFD9
  3988                           status	equ	0xFD8
  3989                           
  3990 ;; *************** function _CCP5_Initialize *****************
  3991 ;; Defined at:
  3992 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg, status,2
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;Total ram usage:        0 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    4
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_SYSTEM_Initialize
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text24
  4021  000CA8                     __ptext24:
  4022                           	opt stack 0
  4023  000CA8                     _CCP5_Initialize:
  4024                           	opt stack 25
  4025                           
  4026                           ;ccp5.c: 60: CCP5CON = 0x00;
  4027                           
  4028                           ; BSR set to: 15
  4029                           ;incstack = 0
  4030  000CA8  0E00               	movlw	0
  4031  000CAA  010F               	movlb	15	; () banked
  4032  000CAC  6F54               	movwf	84,b	;volatile
  4033                           
  4034                           ;ccp5.c: 62: CCPR5L = 0x00;
  4035  000CAE  0E00               	movlw	0
  4036  000CB0  010F               	movlb	15	; () banked
  4037  000CB2  6F55               	movwf	85,b	;volatile
  4038                           
  4039                           ;ccp5.c: 64: CCPR5H = 0x00;
  4040  000CB4  0E00               	movlw	0
  4041  000CB6  010F               	movlb	15	; () banked
  4042  000CB8  6F56               	movwf	86,b	;volatile
  4043                           
  4044                           ; BSR set to: 15
  4045  000CBA  0012               	return		;funcret
  4046  000CBC                     __end_of_CCP5_Initialize:
  4047                           	opt stack 0
  4048                           tblptru	equ	0xFF8
  4049                           tblptrh	equ	0xFF7
  4050                           tblptrl	equ	0xFF6
  4051                           tablat	equ	0xFF5
  4052                           prodh	equ	0xFF4
  4053                           prodl	equ	0xFF3
  4054                           intcon	equ	0xFF2
  4055                           intcon2	equ	0xFF1
  4056                           postinc0	equ	0xFEE
  4057                           wreg	equ	0xFE8
  4058                           postdec1	equ	0xFE5
  4059                           fsr1l	equ	0xFE1
  4060                           indf2	equ	0xFDF
  4061                           fsr2h	equ	0xFDA
  4062                           fsr2l	equ	0xFD9
  4063                           status	equ	0xFD8
  4064                           
  4065 ;; *************** function _ADC_Initialize *****************
  4066 ;; Defined at:
  4067 ;;		line 61 in file "mcc_generated_files/adc.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    4
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		_SYSTEM_Initialize
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text25
  4096  000C7A                     __ptext25:
  4097                           	opt stack 0
  4098  000C7A                     _ADC_Initialize:
  4099                           	opt stack 25
  4100                           
  4101                           ;adc.c: 66: ADCON0 = 0x01;
  4102                           
  4103                           ; BSR set to: 15
  4104                           ;incstack = 0
  4105  000C7A  0E01               	movlw	1
  4106  000C7C  6EC2               	movwf	4034,c	;volatile
  4107                           
  4108                           ;adc.c: 69: ADCON1 = 0x00;
  4109  000C7E  0E00               	movlw	0
  4110  000C80  6EC1               	movwf	4033,c	;volatile
  4111                           
  4112                           ;adc.c: 72: ADCON2 = 0x05;
  4113  000C82  0E05               	movlw	5
  4114  000C84  6EC0               	movwf	4032,c	;volatile
  4115                           
  4116                           ;adc.c: 75: ADRESL = 0x00;
  4117  000C86  0E00               	movlw	0
  4118  000C88  6EC3               	movwf	4035,c	;volatile
  4119                           
  4120                           ;adc.c: 78: ADRESH = 0x00;
  4121  000C8A  0E00               	movlw	0
  4122  000C8C  6EC4               	movwf	4036,c	;volatile
  4123                           
  4124                           ;adc.c: 81: PIE1bits.ADIE = 1;
  4125  000C8E  8C9D               	bsf	3997,6,c	;volatile
  4126  000C90  0012               	return		;funcret
  4127  000C92                     __end_of_ADC_Initialize:
  4128                           	opt stack 0
  4129                           tblptru	equ	0xFF8
  4130                           tblptrh	equ	0xFF7
  4131                           tblptrl	equ	0xFF6
  4132                           tablat	equ	0xFF5
  4133                           prodh	equ	0xFF4
  4134                           prodl	equ	0xFF3
  4135                           intcon	equ	0xFF2
  4136                           intcon2	equ	0xFF1
  4137                           postinc0	equ	0xFEE
  4138                           wreg	equ	0xFE8
  4139                           postdec1	equ	0xFE5
  4140                           fsr1l	equ	0xFE1
  4141                           indf2	equ	0xFDF
  4142                           fsr2h	equ	0xFDA
  4143                           fsr2l	equ	0xFD9
  4144                           status	equ	0xFD8
  4145                           
  4146 ;; *************** function _INTERRUPT_InterruptManager *****************
  4147 ;; Defined at:
  4148 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;		None
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;Total ram usage:       14 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    3
  4169 ;; This function calls:
  4170 ;;		_ADC_ISR
  4171 ;;		_TMR2_ISR
  4172 ;;		_TMR6_ISR
  4173 ;; This function is called by:
  4174 ;;		Interrupt level 2
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	intcode
  4179  000008                     __pintcode:
  4180                           	opt stack 0
  4181  000008                     _INTERRUPT_InterruptManager:
  4182                           	opt stack 24
  4183                           
  4184                           ;incstack = 0
  4185  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4186  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  4187  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4188  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4189  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4190  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4191  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4192  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4193  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4194  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4195  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4196  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4197  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4198  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4199  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4200                           
  4201                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  4202  000042  BCF2               	btfsc	intcon,6,c	;volatile
  4203  000044  AC9D               	btfss	3997,6,c	;volatile
  4204  000046  D005               	goto	i2l268
  4205  000048  AC9E               	btfss	3998,6,c	;volatile
  4206  00004A  D003               	goto	i2l268
  4207                           
  4208                           ;interrupt_manager.c: 61: {
  4209                           ;interrupt_manager.c: 62: ADC_ISR();
  4210  00004C  EC85  F006         	call	_ADC_ISR	;wreg free
  4211                           
  4212                           ;interrupt_manager.c: 63: }
  4213  000050  D00E               	goto	i2l274
  4214  000052                     i2l268:
  4215                           
  4216                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  4217  000052  BCF2               	btfsc	intcon,6,c	;volatile
  4218  000054  A47D               	btfss	3965,2,c	;volatile
  4219  000056  D005               	goto	i2l270
  4220  000058  A47E               	btfss	3966,2,c	;volatile
  4221  00005A  D003               	goto	i2l270
  4222                           
  4223                           ;interrupt_manager.c: 65: {
  4224                           ;interrupt_manager.c: 66: TMR6_ISR();
  4225  00005C  EC1C  F006         	call	_TMR6_ISR	;wreg free
  4226                           
  4227                           ;interrupt_manager.c: 67: }
  4228  000060  D006               	goto	i2l274
  4229  000062                     i2l270:
  4230                           
  4231                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  4232  000062  BCF2               	btfsc	intcon,6,c	;volatile
  4233  000064  A29D               	btfss	3997,1,c	;volatile
  4234  000066  D003               	goto	i2l274
  4235  000068  B29E               	btfsc	3998,1,c	;volatile
  4236                           
  4237                           ;interrupt_manager.c: 69: {
  4238                           ;interrupt_manager.c: 70: TMR2_ISR();
  4239  00006A  EC7A  F006         	call	_TMR2_ISR	;wreg free
  4240  00006E                     i2l274:
  4241  00006E  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4242  000072  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4243  000076  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4244  00007A  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4245  00007E  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4246  000082  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4247  000086  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4248  00008A  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4249  00008E  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4250  000092  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4251  000096  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4252  00009A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4253  00009E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4254  0000A2  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4255  0000A6  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4256  0000A8  0011               	retfie		f
  4257  0000AA                     __end_of_INTERRUPT_InterruptManager:
  4258                           	opt stack 0
  4259                           pclatu	equ	0xFFB
  4260                           pclath	equ	0xFFA
  4261                           tblptru	equ	0xFF8
  4262                           tblptrh	equ	0xFF7
  4263                           tblptrl	equ	0xFF6
  4264                           tablat	equ	0xFF5
  4265                           prodh	equ	0xFF4
  4266                           prodl	equ	0xFF3
  4267                           intcon	equ	0xFF2
  4268                           intcon2	equ	0xFF1
  4269                           postinc0	equ	0xFEE
  4270                           fsr0h	equ	0xFEA
  4271                           fsr0l	equ	0xFE9
  4272                           wreg	equ	0xFE8
  4273                           postdec1	equ	0xFE5
  4274                           fsr1h	equ	0xFE2
  4275                           fsr1l	equ	0xFE1
  4276                           indf2	equ	0xFDF
  4277                           fsr2h	equ	0xFDA
  4278                           fsr2l	equ	0xFD9
  4279                           status	equ	0xFD8
  4280                           
  4281 ;; *************** function _TMR6_ISR *****************
  4282 ;; Defined at:
  4283 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;		None
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;Total ram usage:        0 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    1
  4304 ;; This function calls:
  4305 ;;		Absolute function
  4306 ;;		_TMR6_DefaultInterruptHandler
  4307 ;; This function is called by:
  4308 ;;		_INTERRUPT_InterruptManager
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text27
  4313  000C38                     __ptext27:
  4314                           	opt stack 0
  4315  000C38                     _TMR6_ISR:
  4316                           	opt stack 25
  4317                           
  4318                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  4319                           
  4320                           ;incstack = 0
  4321  000C38  947E               	bcf	3966,2,c	;volatile
  4322                           
  4323                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  4324  000C3A  5049               	movf	_TMR6_InterruptHandler,w,c
  4325  000C3C  104A               	iorwf	_TMR6_InterruptHandler+1,w,c
  4326  000C3E  B4D8               	btfsc	status,2,c
  4327  000C40  0012               	return	
  4328                           
  4329                           ;tmr6.c: 128: {
  4330                           ;tmr6.c: 129: TMR6_InterruptHandler();
  4331  000C42  D801               	call	i2u51_48
  4332  000C44  0012               	return	
  4333  000C46                     i2u51_48:
  4334  000C46  0005               	push	
  4335  000C48  6EFA               	movwf	pclath,c
  4336  000C4A  5049               	movf	_TMR6_InterruptHandler,w,c
  4337  000C4C  6EFD               	movwf	tosl,c
  4338  000C4E  504A               	movf	_TMR6_InterruptHandler+1,w,c
  4339  000C50  6EFE               	movwf	tosh,c
  4340  000C52  50F8               	movf	tblptru,w,c
  4341  000C54  6EFF               	movwf	tosu,c
  4342  000C56  50FA               	movf	pclath,w,c
  4343  000C58  0012               	return		;indir
  4344  000C5A                     __end_of_TMR6_ISR:
  4345                           	opt stack 0
  4346                           tosu	equ	0xFFF
  4347                           tosh	equ	0xFFE
  4348                           tosl	equ	0xFFD
  4349                           pclatu	equ	0xFFB
  4350                           pclath	equ	0xFFA
  4351                           tblptru	equ	0xFF8
  4352                           tblptrh	equ	0xFF7
  4353                           tblptrl	equ	0xFF6
  4354                           tablat	equ	0xFF5
  4355                           prodh	equ	0xFF4
  4356                           prodl	equ	0xFF3
  4357                           intcon	equ	0xFF2
  4358                           intcon2	equ	0xFF1
  4359                           postinc0	equ	0xFEE
  4360                           fsr0h	equ	0xFEA
  4361                           fsr0l	equ	0xFE9
  4362                           wreg	equ	0xFE8
  4363                           postdec1	equ	0xFE5
  4364                           fsr1h	equ	0xFE2
  4365                           fsr1l	equ	0xFE1
  4366                           indf2	equ	0xFDF
  4367                           fsr2h	equ	0xFDA
  4368                           fsr2l	equ	0xFD9
  4369                           status	equ	0xFD8
  4370                           
  4371 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  4372 ;; Defined at:
  4373 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;		None
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  1    wreg      void 
  4380 ;; Registers used:
  4381 ;;		None
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;Total ram usage:        0 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; This function calls:
  4394 ;;		Nothing
  4395 ;; This function is called by:
  4396 ;;		_TMR6_Initialize
  4397 ;;		_TMR6_ISR
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text28
  4402  000D0E                     __ptext28:
  4403                           	opt stack 0
  4404  000D0E                     _TMR6_DefaultInterruptHandler:
  4405                           	opt stack 25
  4406                           
  4407                           ;incstack = 0
  4408  000D0E  0012               	return		;funcret
  4409  000D10                     __end_of_TMR6_DefaultInterruptHandler:
  4410                           	opt stack 0
  4411                           tosu	equ	0xFFF
  4412                           tosh	equ	0xFFE
  4413                           tosl	equ	0xFFD
  4414                           pclatu	equ	0xFFB
  4415                           pclath	equ	0xFFA
  4416                           tblptru	equ	0xFF8
  4417                           tblptrh	equ	0xFF7
  4418                           tblptrl	equ	0xFF6
  4419                           tablat	equ	0xFF5
  4420                           prodh	equ	0xFF4
  4421                           prodl	equ	0xFF3
  4422                           intcon	equ	0xFF2
  4423                           intcon2	equ	0xFF1
  4424                           postinc0	equ	0xFEE
  4425                           fsr0h	equ	0xFEA
  4426                           fsr0l	equ	0xFE9
  4427                           wreg	equ	0xFE8
  4428                           postdec1	equ	0xFE5
  4429                           fsr1h	equ	0xFE2
  4430                           fsr1l	equ	0xFE1
  4431                           indf2	equ	0xFDF
  4432                           fsr2h	equ	0xFDA
  4433                           fsr2l	equ	0xFD9
  4434                           status	equ	0xFD8
  4435                           
  4436 ;; *************** function _TMR2_ISR *****************
  4437 ;; Defined at:
  4438 ;;		line 123 in file "mcc_generated_files/tmr2.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;		None
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      void 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;Total ram usage:        0 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    2
  4459 ;; This function calls:
  4460 ;;		_TMR2_CallBack
  4461 ;; This function is called by:
  4462 ;;		_INTERRUPT_InterruptManager
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text29
  4467  000CF4                     __ptext29:
  4468                           	opt stack 0
  4469  000CF4                     _TMR2_ISR:
  4470                           	opt stack 24
  4471                           
  4472                           ;tmr2.c: 127: PIR1bits.TMR2IF = 0;
  4473                           
  4474                           ;incstack = 0
  4475  000CF4  929E               	bcf	3998,1,c	;volatile
  4476                           
  4477                           ;tmr2.c: 131: TMR2_CallBack();
  4478  000CF6  ECF9  F005         	call	_TMR2_CallBack	;wreg free
  4479  000CFA  0012               	return		;funcret
  4480  000CFC                     __end_of_TMR2_ISR:
  4481                           	opt stack 0
  4482                           tosu	equ	0xFFF
  4483                           tosh	equ	0xFFE
  4484                           tosl	equ	0xFFD
  4485                           pclatu	equ	0xFFB
  4486                           pclath	equ	0xFFA
  4487                           tblptru	equ	0xFF8
  4488                           tblptrh	equ	0xFF7
  4489                           tblptrl	equ	0xFF6
  4490                           tablat	equ	0xFF5
  4491                           prodh	equ	0xFF4
  4492                           prodl	equ	0xFF3
  4493                           intcon	equ	0xFF2
  4494                           intcon2	equ	0xFF1
  4495                           postinc0	equ	0xFEE
  4496                           fsr0h	equ	0xFEA
  4497                           fsr0l	equ	0xFE9
  4498                           wreg	equ	0xFE8
  4499                           postdec1	equ	0xFE5
  4500                           fsr1h	equ	0xFE2
  4501                           fsr1l	equ	0xFE1
  4502                           indf2	equ	0xFDF
  4503                           fsr2h	equ	0xFDA
  4504                           fsr2l	equ	0xFD9
  4505                           status	equ	0xFD8
  4506                           
  4507 ;; *************** function _TMR2_CallBack *****************
  4508 ;; Defined at:
  4509 ;;		line 134 in file "mcc_generated_files/tmr2.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;		None
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;		None
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;Total ram usage:        0 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:    1
  4530 ;; This function calls:
  4531 ;;		Absolute function
  4532 ;;		_TMR2_DefaultInterruptHandler
  4533 ;; This function is called by:
  4534 ;;		_TMR2_ISR
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           	psect	text30
  4539  000BF2                     __ptext30:
  4540                           	opt stack 0
  4541  000BF2                     _TMR2_CallBack:
  4542                           	opt stack 24
  4543                           
  4544                           ;tmr2.c: 137: Timer2Ticked=1;
  4545                           
  4546                           ;incstack = 0
  4547  000BF2  0E01               	movlw	1
  4548  000BF4  6E46               	movwf	_Timer2Ticked,c	;volatile
  4549                           
  4550                           ;tmr2.c: 139: if(TMR2_InterruptHandler)
  4551  000BF6  5047               	movf	_TMR2_InterruptHandler,w,c
  4552  000BF8  1048               	iorwf	_TMR2_InterruptHandler+1,w,c
  4553  000BFA  B4D8               	btfsc	status,2,c
  4554  000BFC  0012               	return	
  4555                           
  4556                           ;tmr2.c: 140: {
  4557                           ;tmr2.c: 141: TMR2_InterruptHandler();
  4558  000BFE  D801               	call	i2u5_48
  4559  000C00  0012               	return	
  4560  000C02                     i2u5_48:
  4561  000C02  0005               	push	
  4562  000C04  6EFA               	movwf	pclath,c
  4563  000C06  5047               	movf	_TMR2_InterruptHandler,w,c
  4564  000C08  6EFD               	movwf	tosl,c
  4565  000C0A  5048               	movf	_TMR2_InterruptHandler+1,w,c
  4566  000C0C  6EFE               	movwf	tosh,c
  4567  000C0E  50F8               	movf	tblptru,w,c
  4568  000C10  6EFF               	movwf	tosu,c
  4569  000C12  50FA               	movf	pclath,w,c
  4570  000C14  0012               	return		;indir
  4571  000C16                     __end_of_TMR2_CallBack:
  4572                           	opt stack 0
  4573                           tosu	equ	0xFFF
  4574                           tosh	equ	0xFFE
  4575                           tosl	equ	0xFFD
  4576                           pclatu	equ	0xFFB
  4577                           pclath	equ	0xFFA
  4578                           tblptru	equ	0xFF8
  4579                           tblptrh	equ	0xFF7
  4580                           tblptrl	equ	0xFF6
  4581                           tablat	equ	0xFF5
  4582                           prodh	equ	0xFF4
  4583                           prodl	equ	0xFF3
  4584                           intcon	equ	0xFF2
  4585                           intcon2	equ	0xFF1
  4586                           postinc0	equ	0xFEE
  4587                           fsr0h	equ	0xFEA
  4588                           fsr0l	equ	0xFE9
  4589                           wreg	equ	0xFE8
  4590                           postdec1	equ	0xFE5
  4591                           fsr1h	equ	0xFE2
  4592                           fsr1l	equ	0xFE1
  4593                           indf2	equ	0xFDF
  4594                           fsr2h	equ	0xFDA
  4595                           fsr2l	equ	0xFD9
  4596                           status	equ	0xFD8
  4597                           
  4598 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4599 ;; Defined at:
  4600 ;;		line 149 in file "mcc_generated_files/tmr2.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      void 
  4607 ;; Registers used:
  4608 ;;		None
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;Total ram usage:        0 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_TMR2_Initialize
  4624 ;;		_TMR2_CallBack
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text31
  4629  000D10                     __ptext31:
  4630                           	opt stack 0
  4631  000D10                     _TMR2_DefaultInterruptHandler:
  4632                           	opt stack 24
  4633                           
  4634                           ;incstack = 0
  4635  000D10  0012               	return		;funcret
  4636  000D12                     __end_of_TMR2_DefaultInterruptHandler:
  4637                           	opt stack 0
  4638                           tosu	equ	0xFFF
  4639                           tosh	equ	0xFFE
  4640                           tosl	equ	0xFFD
  4641                           pclatu	equ	0xFFB
  4642                           pclath	equ	0xFFA
  4643                           tblptru	equ	0xFF8
  4644                           tblptrh	equ	0xFF7
  4645                           tblptrl	equ	0xFF6
  4646                           tablat	equ	0xFF5
  4647                           prodh	equ	0xFF4
  4648                           prodl	equ	0xFF3
  4649                           intcon	equ	0xFF2
  4650                           intcon2	equ	0xFF1
  4651                           postinc0	equ	0xFEE
  4652                           fsr0h	equ	0xFEA
  4653                           fsr0l	equ	0xFE9
  4654                           wreg	equ	0xFE8
  4655                           postdec1	equ	0xFE5
  4656                           fsr1h	equ	0xFE2
  4657                           fsr1l	equ	0xFE1
  4658                           indf2	equ	0xFDF
  4659                           fsr2h	equ	0xFDA
  4660                           fsr2l	equ	0xFD9
  4661                           status	equ	0xFD8
  4662                           
  4663 ;; *************** function _ADC_ISR *****************
  4664 ;; Defined at:
  4665 ;;		line 144 in file "mcc_generated_files/adc.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;		None
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      void 
  4672 ;; Registers used:
  4673 ;;		None
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;Total ram usage:        0 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_INTERRUPT_InterruptManager
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text32
  4693  000D0A                     __ptext32:
  4694                           	opt stack 0
  4695  000D0A                     _ADC_ISR:
  4696                           	opt stack 26
  4697                           
  4698                           ;adc.c: 149: PIR1bits.ADIF = 0;
  4699                           
  4700                           ;incstack = 0
  4701  000D0A  9C9E               	bcf	3998,6,c	;volatile
  4702  000D0C  0012               	return		;funcret
  4703  000D0E                     __end_of_ADC_ISR:
  4704                           	opt stack 0
  4705  0000                     tosu	equ	0xFFF
  4706                           tosh	equ	0xFFE
  4707                           tosl	equ	0xFFD
  4708                           pclatu	equ	0xFFB
  4709                           pclath	equ	0xFFA
  4710                           tblptru	equ	0xFF8
  4711                           tblptrh	equ	0xFF7
  4712                           tblptrl	equ	0xFF6
  4713                           tablat	equ	0xFF5
  4714                           prodh	equ	0xFF4
  4715                           prodl	equ	0xFF3
  4716                           intcon	equ	0xFF2
  4717                           intcon2	equ	0xFF1
  4718                           postinc0	equ	0xFEE
  4719                           fsr0h	equ	0xFEA
  4720                           fsr0l	equ	0xFE9
  4721                           wreg	equ	0xFE8
  4722                           postdec1	equ	0xFE5
  4723                           fsr1h	equ	0xFE2
  4724                           fsr1l	equ	0xFE1
  4725                           indf2	equ	0xFDF
  4726                           fsr2h	equ	0xFDA
  4727                           fsr2l	equ	0xFD9
  4728                           status	equ	0xFD8
  4729                           tosu	equ	0xFFF
  4730                           tosh	equ	0xFFE
  4731                           tosl	equ	0xFFD
  4732                           pclatu	equ	0xFFB
  4733                           pclath	equ	0xFFA
  4734                           tblptru	equ	0xFF8
  4735                           tblptrh	equ	0xFF7
  4736                           tblptrl	equ	0xFF6
  4737                           tablat	equ	0xFF5
  4738                           prodh	equ	0xFF4
  4739                           prodl	equ	0xFF3
  4740                           intcon	equ	0xFF2
  4741                           intcon2	equ	0xFF1
  4742                           postinc0	equ	0xFEE
  4743                           fsr0h	equ	0xFEA
  4744                           fsr0l	equ	0xFE9
  4745                           wreg	equ	0xFE8
  4746                           postdec1	equ	0xFE5
  4747                           fsr1h	equ	0xFE2
  4748                           fsr1l	equ	0xFE1
  4749                           indf2	equ	0xFDF
  4750                           fsr2h	equ	0xFDA
  4751                           fsr2l	equ	0xFD9
  4752                           status	equ	0xFD8
  4753                           
  4754                           	psect	text33
  4755  000000                     __ptext33:
  4756                           	opt stack 0
  4757                           tosu	equ	0xFFF
  4758                           tosh	equ	0xFFE
  4759                           tosl	equ	0xFFD
  4760                           pclatu	equ	0xFFB
  4761                           pclath	equ	0xFFA
  4762                           tblptru	equ	0xFF8
  4763                           tblptrh	equ	0xFF7
  4764                           tblptrl	equ	0xFF6
  4765                           tablat	equ	0xFF5
  4766                           prodh	equ	0xFF4
  4767                           prodl	equ	0xFF3
  4768                           intcon	equ	0xFF2
  4769                           intcon2	equ	0xFF1
  4770                           postinc0	equ	0xFEE
  4771                           fsr0h	equ	0xFEA
  4772                           fsr0l	equ	0xFE9
  4773                           wreg	equ	0xFE8
  4774                           postdec1	equ	0xFE5
  4775                           fsr1h	equ	0xFE2
  4776                           fsr1l	equ	0xFE1
  4777                           indf2	equ	0xFDF
  4778                           fsr2h	equ	0xFDA
  4779                           fsr2l	equ	0xFD9
  4780                           status	equ	0xFD8
  4781                           
  4782                           	psect	rparam
  4783  0000                     tosu	equ	0xFFF
  4784                           tosh	equ	0xFFE
  4785                           tosl	equ	0xFFD
  4786                           pclatu	equ	0xFFB
  4787                           pclath	equ	0xFFA
  4788                           tblptru	equ	0xFF8
  4789                           tblptrh	equ	0xFF7
  4790                           tblptrl	equ	0xFF6
  4791                           tablat	equ	0xFF5
  4792                           prodh	equ	0xFF4
  4793                           prodl	equ	0xFF3
  4794                           intcon	equ	0xFF2
  4795                           intcon2	equ	0xFF1
  4796                           postinc0	equ	0xFEE
  4797                           fsr0h	equ	0xFEA
  4798                           fsr0l	equ	0xFE9
  4799                           wreg	equ	0xFE8
  4800                           postdec1	equ	0xFE5
  4801                           fsr1h	equ	0xFE2
  4802                           fsr1l	equ	0xFE1
  4803                           indf2	equ	0xFDF
  4804                           fsr2h	equ	0xFDA
  4805                           fsr2l	equ	0xFD9
  4806                           status	equ	0xFD8
  4807                           
  4808                           	psect	temp
  4809  00004C                     btemp:
  4810                           	opt stack 0
  4811  00004C                     	ds	1
  4812  0000                     int$flags	set	btemp
  4813                           tosu	equ	0xFFF
  4814                           tosh	equ	0xFFE
  4815                           tosl	equ	0xFFD
  4816                           pclatu	equ	0xFFB
  4817                           pclath	equ	0xFFA
  4818                           tblptru	equ	0xFF8
  4819                           tblptrh	equ	0xFF7
  4820                           tblptrl	equ	0xFF6
  4821                           tablat	equ	0xFF5
  4822                           prodh	equ	0xFF4
  4823                           prodl	equ	0xFF3
  4824                           intcon	equ	0xFF2
  4825                           intcon2	equ	0xFF1
  4826                           postinc0	equ	0xFEE
  4827                           fsr0h	equ	0xFEA
  4828                           fsr0l	equ	0xFE9
  4829                           wreg	equ	0xFE8
  4830                           postdec1	equ	0xFE5
  4831                           fsr1h	equ	0xFE2
  4832                           fsr1l	equ	0xFE1
  4833                           indf2	equ	0xFDF
  4834                           fsr2h	equ	0xFDA
  4835                           fsr2l	equ	0xFD9
  4836                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        192
    BSS         12
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      75
    BANK0           160      0     160
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StepMove
    _StepMove->_State16MEF_act
    _StepMove->_State16MEF_act_Backward
    _StepMove->_State8MEF_act
    _StepMove->_State8MEF_act_Backward
    _State8MEF_act_Backward->_EPWM1_LoadDutyValue
    _State8MEF_act_Backward->_EPWM2_LoadDutyValue
    _State8MEF_act->_EPWM1_LoadDutyValue
    _State8MEF_act->_EPWM2_LoadDutyValue
    _State16MEF_act_Backward->_EPWM1_LoadDutyValue
    _State16MEF_act_Backward->_EPWM2_LoadDutyValue
    _State16MEF_act->_EPWM1_LoadDutyValue
    _State16MEF_act->_EPWM2_LoadDutyValue
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9382
                  _SYSTEM_Initialize
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StepMove                                             7     2      5    9210
                                             19 COMRAM     7     2      5
                     _State16MEF_act
            _State16MEF_act_Backward
                      _State8MEF_act
             _State8MEF_act_Backward
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act_Backward                               1     1      0    2136
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                  _limitar_corriente
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act                                        1     1      0    2136
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                  _limitar_corriente
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act_Backward                              1     1      0    2158
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                      _EUSART1_Write
                  _limitar_corriente
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act                                       1     1      0    2136
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                  _limitar_corriente
 ---------------------------------------------------------------------------------
 (3) _limitar_corriente                                    1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2    1068
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2    1068
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_ini
   _StepMove
     _State16MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _limitar_corriente
     _State16MEF_act_Backward
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _EUSART1_Write
       _limitar_corriente
     _State8MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _limitar_corriente
     _State8MEF_act_Backward
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _limitar_corriente

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      4B       1       79.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EB      12        0.0%
DATA                 0      0      EB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Jun 14 11:58:00 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 0CF4  
                       ??_TMR6_StartTimer 002F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l337 0CCC                                       l594 09A8  
                                     l598 0A30                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _PR6 000F4B                           __end_of_ADC_ISR 0D0E  
                         _TMR2_Initialize 0C16                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                __end_of_EPWM2_Initialize 0BCE                           _CCP5_Initialize 0CA8  
                                    l2000 0786                                      l2002 078A  
                                    l2020 07F6                                      l2022 07FA  
                                    l2102 01A6                                      l2040 0864  
                                    l2104 01AA                                      l2200 03A4  
                                    l2202 03A8                                      l2044 0868  
                                    l2220 0414                                      l2126 021C  
                                    l2222 0418                                      l2128 0220  
                                    l2080 0134                                      l2048 00B0  
                                    l2152 0296                                      l2058 00C6  
                                    l2242 0488                                      l2148 0292  
                                    l2180 0334                                      l2156 02BA  
                                    l2324 0A6E                                      l2078 0130  
                                    l2238 0484                                      l2182 0338  
                                    l2166 02D0                                      l2326 0A8C  
                                    l2280 096E                                      l2292 0992  
                                    l1910 0594                                      l2286 0982  
                                    l2278 0968                                      l2294 0996  
                                    l1912 0598                                      l2288 0986  
                                    l2296 099C                                      l1930 0608  
                                    l1928 0604                                      l1952 067A  
                                    l1980 0716                                      l1956 069E  
                                    l1948 0676                                      l1892 0524  
                                    l1868 04AC                                      l1982 071A  
                                    l1966 06B4                                      l1894 0528  
                                    l1878 04C2                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    _TMR2 000FBC                                      _TMR6 000F4C  
                                    _WPUB 000F61                             _EUSART1_Write 0CCA  
                                    _main 0A5C                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 004C                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00AA                             __CFG_IESO$OFF 000000  
                   ??_EPWM1_LoadDutyValue 0031                              ___param_bank 000000  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 0CCA  
                                   ?_main 0021                                     _T2CON 000FBA  
                                   _T6CON 000F4A                            __CFG_DEBUG$OFF 000000  
                                   i2l270 0062                                     i2l274 006E  
                                   i2l268 0052                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
       __size_of_TMR6_SetInterruptHandler 000A                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
               ?_TMR6_SetInterruptHandler 002F                          __end_of_TMR2_ISR 0CFC  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                          __end_of_TMR6_ISR 0C5A  
                          __CFG_EBTRB$OFF 000000                   _State16MEF_act_Backward 00AE  
                        _LookUP_TABLE_COS 0001                          _LookUP_TABLE_SEN 00E0  
                      __CFG_MCLRE$EXTMCLR 000000                        StepMove@StepNumber 0034  
                          ?_EUSART1_Write 0021                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 0D02  
                          __CFG_PBADEN$ON 000000            ??_TMR6_DefaultInterruptHandler 0021  
                         __initialization 09AC                __end_of_EUSART1_Initialize 0CA8  
                            __end_of_main 0AAC                   ?_State8MEF_act_Backward 0021  
                 __end_of_TMR2_Initialize 0C38                                 ??_ADC_ISR 0021  
             ?_INTERRUPT_InterruptManager 0021                  _TMR2_SetInterruptHandler 0CEA  
                                  ??_main 003B                   __end_of_CCP5_Initialize 0CBC  
                           __activetblptr 000002                           _TMR6_Initialize 0B82  
                        __end_of_StepMove 09AC                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR1H 000FBF                                    _CCPR2H 000F68  
                                  _CCPR1L 000FBE                                    _CCPR2L 000F67  
                                  _CCPR5H 000F56                                    _CCPR5L 000F55  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  i2u5_48 0C02                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                            __CFG_XINST$OFF 000000  
                            _CCPTMRS0bits 000F49            __end_of_State8MEF_act_Backward 04AA  
                          __CFG_STVREN$ON 000000                   __size_of_State16MEF_act 01EE  
                                  clear_0 09F2                         _limitar_corriente 0A06  
                            __pdataCOMRAM 0001                  StepMove@microstep_number 0037  
               ??_State16MEF_act_Backward 0033                        ?_limitar_corriente 0021  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                           ??_EUSART1_Write 002F  
                     _EPWM2_LoadDutyValue 0AF8                   __end_of_TMR2_StartTimer 0D06  
TMR2_SetInterruptHandler@InterruptHandler 002F  TMR6_SetInterruptHandler@InterruptHandler 002F  
           __size_of_INTERRUPT_Initialize 0004                       ??_limitar_corriente 002F  
                       _SYSTEM_Initialize 0B58                                __accesstop 0060  
                 __end_of__initialization 09F8                     __end_of_TMR2_CallBack 0C16  
                      ?_SYSTEM_Initialize 0021                           _TMR6_StartTimer 0CFC  
                           ___rparam_used 000001                         ?_EPWM1_Initialize 0021  
                          __pcstackCOMRAM 0021                      ?_EPWM2_LoadDutyValue 002F  
                            __pidataBANK0 088A                       ??_SYSTEM_Initialize 0031  
                   __end_of_State8MEF_act 069C                                 ?_TMR2_ISR 0021  
                               ?_TMR6_ISR 0021                        ??_EPWM1_Initialize 002F  
                        ?_TMR2_Initialize 0021                 __end_of_limitar_corriente 0A5C  
                 __end_of_TMR6_Initialize 0BAA                          ?_CCP5_Initialize 0021  
                       ?_EPWM2_Initialize 0021                 __end_of_SYSTEM_Initialize 0B82  
                      ??_EPWM2_Initialize 002F                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 0047                        __CFG_CCP2MX$PORTC1 000000  
                   ??_EPWM2_LoadDutyValue 0031          __end_of_TMR6_SetInterruptHandler 0CEA  
                              ??_TMR2_ISR 0021                        __CFG_CCP3MX$PORTB5 000000  
                               ?_StepMove 0034                                ??_TMR6_ISR 0021  
                                 _CCP1CON 000FBD                                   _CCP2CON 000F66  
                                 _CCP5CON 000F54                                   _ECCP1AS 000FB6  
                                 _ECCP2AS 000F64                                   _ADC_ISR 0D0A  
                 __size_of_ADC_Initialize 0018                                   _OSCCON2 000FD2  
                                 i2u51_48 0C46                                   _OSCTUNE 000F9B  
                                 _PWM1CON 000FB7                                   _PWM2CON 000F65  
                                 _SPBRGH1 000FB0                          ?_TMR2_StartTimer 0021  
                 __end_of_TMR6_StartTimer 0D02               __end_of_EPWM1_LoadDutyValue 0B58  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0031  
                              ??_StepMove 0039                            _State16MEF_act 069C  
              __size_of_limitar_corriente 0056                                   __pcinit 09AC  
                        ?_TMR6_Initialize 0021                                   __ramtop 1000  
                                 __ptext0 0A5C                                   __ptext1 092A  
                                 __ptext2 02B8                                   __ptext3 04AA  
                                 __ptext4 00AE                                   __ptext5 0CCA  
                                 __ptext6 069C                                   __ptext7 0A06  
                                 __ptext8 0AF8                                   __ptext9 0B28  
                   _OSCILLATOR_Initialize 0CBC                                 _T2CONbits 000FBA  
                           ?_StateMEF_ini 0021                        _EUSART1_Initialize 0C92  
                ??_PIN_MANAGER_Initialize 002F                                 _T6CONbits 000F4A  
              __size_of_SYSTEM_Initialize 002A                      end_of_initialization 09F8  
                     ?_EUSART1_Initialize 0021                             __Lmediumconst 0000  
                  __end_of_State16MEF_act 088A                                   postdec1 000FE5  
                                 postinc0 000FEE                      ??_EUSART1_Initialize 002F  
                _TMR6_SetInterruptHandler 0CE0                            ??_StateMEF_ini 002F  
                     EUSART1_Write@txData 002F                          ?_TMR6_StartTimer 0021  
                            _EstadoActual 004B                           ?_State16MEF_act 0021  
            __end_of_INTERRUPT_Initialize 0D0A      __end_of_TMR2_DefaultInterruptHandler 0D12  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 0D10  
                       StepMove@Velocidad 0036                             __pidataCOMRAM 0C5A  
                       __size_of_TMR2_ISR 0008                            _ADC_Initialize 0C7A  
                       __size_of_TMR6_ISR 0022                    ?_OSCILLATOR_Initialize 0021  
                     start_initialization 09AC                 __size_of_EPWM1_Initialize 0024  
         __size_of_PIN_MANAGER_Initialize 004C                                 _Microstep 0044  
            EPWM1_LoadDutyValue@dutyValue 002F                     __end_of_EUSART1_Write 0CD6  
               __size_of_EPWM2_Initialize 0024                    __end_of_ADC_Initialize 0C92  
                             __pdataBANK0 0060                                  ?_ADC_ISR 0021  
                               _StepCount 003D                         StepMove@direccion 0038  
           ?_TMR2_DefaultInterruptHandler 0021                  ?_State16MEF_act_Backward 0021  
                       __size_of_StepMove 0082                    __size_of_TMR2_CallBack 0024  
                             __pbssCOMRAM 003B                  __size_of_TMR2_Initialize 0022  
                __size_of_CCP5_Initialize 0014                    __size_of_State8MEF_act 01F2  
             __end_of_EPWM2_LoadDutyValue 0B28                  ??_State8MEF_act_Backward 0033  
                   _TMR6_InterruptHandler 0049                      __end_of_StateMEF_ini 0CE0  
                  _PIN_MANAGER_Initialize 0AAC                                 __pintcode 0008  
                         ?_ADC_Initialize 0021              ??_INTERRUPT_InterruptManager 0021  
                        __CFG_PRICLKEN$ON 000000                                  _BAUDCON1 000FB8  
                                _ANALOG_0 0041                                  _ANALOG_1 003F  
                    _INTERRUPT_Initialize 0D06                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                           _TMR2_CallBack 0BF2                                  _PIE1bits 000F9D  
                                _PIE5bits 000F7D                  __size_of_TMR2_StartTimer 0004  
     __size_of_INTERRUPT_InterruptManager 00A2                                  _PIR1bits 000F9E  
                                _PIR5bits 000F7E              __size_of_EPWM1_LoadDutyValue 0030  
              ??_TMR6_SetInterruptHandler 0031                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000           __end_of_State16MEF_act_Backward 02B8  
                                _TMR2_ISR 0CF4                                  _PSTR1CON 000FB9  
                                _PSTR2CON 000F63                                  _TMR6_ISR 0C38  
                           _State8MEF_act 04AA                          _Timer2Tick_count 003B  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
          ??_TMR2_DefaultInterruptHandler 0021                          _EPWM1_Initialize 0BCE  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 002F  
                __size_of_TMR6_Initialize 0028                               _INTCON2bits 000FF1  
                               copy_data0 09C0                                 copy_data1 09E0  
                   ?_INTERRUPT_Initialize 0021                         ??_TMR2_Initialize 0031  
                          ?_TMR2_CallBack 0021                          ??_State16MEF_act 0033  
         __size_of_State8MEF_act_Backward 01F2                         ??_CCP5_Initialize 002F  
                                _MoveDone 0043                                  __Hrparam 0000  
                            _Timer2Ticked 0046                          _EPWM2_Initialize 0BAA  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTC0 000000                            ?_State8MEF_act 0021  
                                _StepMove 092A                   ??_OSCILLATOR_Initialize 002F  
             __size_of_EUSART1_Initialize 0016                                  __ptext10 0CD6  
                                __ptext11 0B58                                  __ptext20 0D06  
                                __ptext12 0B82                                  __ptext21 0C92  
                                __ptext13 0CFC                                  __ptext30 0BF2  
                                __ptext22 0BAA                                  __ptext14 0CE0  
                                __ptext31 0D10                                  __ptext23 0BCE  
                                __ptext15 0C16                                  __ptext32 0D0A  
                                __ptext24 0CA8                                  __ptext16 0D02  
                                __ptext33 0000                                  __ptext25 0C7A  
                                __ptext17 0CEA                                  __ptext18 0AAC  
                                __ptext27 0C38                                  __ptext19 0CBC  
                                __ptext28 0D0E                                  __ptext29 0CF4  
                   __size_of_StateMEF_ini 000A                             __size_of_main 0050  
                     _LookUP_TABLE_COS_16 00A0                       _LookUP_TABLE_SEN_16 0060  
                __size_of_TMR6_StartTimer 0006                                  int$flags 004C  
                       ??_TMR2_StartTimer 002F        __end_of_INTERRUPT_InterruptManager 00AA  
              _INTERRUPT_InterruptManager 0008                    _State8MEF_act_Backward 02B8  
                              _INTCONbits 000FF2                              _StateMEF_ini 0CD6  
                  ??_INTERRUPT_Initialize 002F      __end_of_TMR6_DefaultInterruptHandler 0D10  
   __size_of_TMR6_DefaultInterruptHandler 0002              _TMR6_DefaultInterruptHandler 0D0E  
        __size_of_State16MEF_act_Backward 020A                                  intlevel2 0000  
                         ??_TMR2_CallBack 0021              EPWM2_LoadDutyValue@dutyValue 002F  
                 ?_PIN_MANAGER_Initialize 0021                         ??_TMR6_Initialize 0031  
                              _RCSTA1bits 000FAB                          ??_ADC_Initialize 002F  
                           _StepsComplete 0045                           ??_State8MEF_act 0033  
                  __size_of_EUSART1_Write 000C                         __CFG_T3CMX$PORTC0 000000  
                     _EPWM1_LoadDutyValue 0B28            __end_of_PIN_MANAGER_Initialize 0AF8  
           ?_TMR6_DefaultInterruptHandler 0021                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 0047                  __end_of_EPWM1_Initialize 0BF2  
                    ?_EPWM1_LoadDutyValue 002F  
