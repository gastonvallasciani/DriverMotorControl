

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Jun 23 11:46:50 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           ; Version 1.41
    52                           ; Generated 25/01/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F46K22 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMRAM
    87  0009A4                     __pidataCOMRAM:
    88                           	opt stack 0
    89                           
    90                           ;initializer for _LookUP_TABLE_COS
    91  0009A4  7D                 	db	125
    92  0009A5  76                 	db	118
    93  0009A6  6C                 	db	108
    94  0009A7  5E                 	db	94
    95  0009A8  4D                 	db	77
    96  0009A9  39                 	db	57
    97  0009AA  22                 	db	34
    98  0009AB  0C                 	db	12
    99  0009AC  0C                 	db	12
   100  0009AD  22                 	db	34
   101  0009AE  39                 	db	57
   102  0009AF  4D                 	db	77
   103  0009B0  5E                 	db	94
   104  0009B1  6C                 	db	108
   105  0009B2  76                 	db	118
   106  0009B3  7D                 	db	125
   107  0009B4  7D                 	db	125
   108  0009B5  76                 	db	118
   109  0009B6  6C                 	db	108
   110  0009B7  5E                 	db	94
   111  0009B8  4D                 	db	77
   112  0009B9  39                 	db	57
   113  0009BA  22                 	db	34
   114  0009BB  0C                 	db	12
   115  0009BC  0C                 	db	12
   116  0009BD  22                 	db	34
   117  0009BE  39                 	db	57
   118  0009BF  4D                 	db	77
   119  0009C0  5E                 	db	94
   120  0009C1  6C                 	db	108
   121  0009C2  76                 	db	118
   122  0009C3  7D                 	db	125
   123                           
   124                           	psect	idataBANK0
   125  00060A                     __pidataBANK0:
   126                           	opt stack 0
   127                           
   128                           ;initializer for _LookUP_TABLE_SEN_16
   129  00060A  06                 	db	6
   130  00060B  12                 	db	18
   131  00060C  1D                 	db	29
   132  00060D  2A                 	db	42
   133  00060E  35                 	db	53
   134  00060F  3F                 	db	63
   135  000610  49                 	db	73
   136  000611  53                 	db	83
   137  000612  5B                 	db	91
   138  000613  63                 	db	99
   139  000614  6A                 	db	106
   140  000615  70                 	db	112
   141  000616  75                 	db	117
   142  000617  79                 	db	121
   143  000618  7C                 	db	124
   144  000619  7E                 	db	126
   145  00061A  7E                 	db	126
   146  00061B  7C                 	db	124
   147  00061C  79                 	db	121
   148  00061D  75                 	db	117
   149  00061E  70                 	db	112
   150  00061F  6A                 	db	106
   151  000620  63                 	db	99
   152  000621  5B                 	db	91
   153  000622  53                 	db	83
   154  000623  49                 	db	73
   155  000624  3F                 	db	63
   156  000625  35                 	db	53
   157  000626  2A                 	db	42
   158  000627  1D                 	db	29
   159  000628  12                 	db	18
   160  000629  06                 	db	6
   161  00062A  06                 	db	6
   162  00062B  12                 	db	18
   163  00062C  1D                 	db	29
   164  00062D  2A                 	db	42
   165  00062E  35                 	db	53
   166  00062F  3F                 	db	63
   167  000630  49                 	db	73
   168  000631  53                 	db	83
   169  000632  5B                 	db	91
   170  000633  63                 	db	99
   171  000634  6A                 	db	106
   172  000635  70                 	db	112
   173  000636  75                 	db	117
   174  000637  79                 	db	121
   175  000638  7C                 	db	124
   176  000639  7E                 	db	126
   177  00063A  7E                 	db	126
   178  00063B  7C                 	db	124
   179  00063C  79                 	db	121
   180  00063D  75                 	db	117
   181  00063E  70                 	db	112
   182  00063F  6A                 	db	106
   183  000640  63                 	db	99
   184  000641  5B                 	db	91
   185  000642  53                 	db	83
   186  000643  49                 	db	73
   187  000644  3F                 	db	63
   188  000645  35                 	db	53
   189  000646  2A                 	db	42
   190  000647  1D                 	db	29
   191  000648  12                 	db	18
   192  000649  06                 	db	6
   193                           
   194                           ;initializer for _LookUP_TABLE_COS_16
   195  00064A  7E                 	db	126
   196  00064B  7C                 	db	124
   197  00064C  79                 	db	121
   198  00064D  75                 	db	117
   199  00064E  70                 	db	112
   200  00064F  6A                 	db	106
   201  000650  63                 	db	99
   202  000651  5B                 	db	91
   203  000652  53                 	db	83
   204  000653  49                 	db	73
   205  000654  3F                 	db	63
   206  000655  35                 	db	53
   207  000656  2A                 	db	42
   208  000657  1D                 	db	29
   209  000658  12                 	db	18
   210  000659  06                 	db	6
   211  00065A  06                 	db	6
   212  00065B  12                 	db	18
   213  00065C  1D                 	db	29
   214  00065D  2A                 	db	42
   215  00065E  35                 	db	53
   216  00065F  3F                 	db	63
   217  000660  49                 	db	73
   218  000661  53                 	db	83
   219  000662  5B                 	db	91
   220  000663  63                 	db	99
   221  000664  6A                 	db	106
   222  000665  70                 	db	112
   223  000666  75                 	db	117
   224  000667  79                 	db	121
   225  000668  7C                 	db	124
   226  000669  7E                 	db	126
   227  00066A  7E                 	db	126
   228  00066B  7C                 	db	124
   229  00066C  79                 	db	121
   230  00066D  75                 	db	117
   231  00066E  70                 	db	112
   232  00066F  6A                 	db	106
   233  000670  63                 	db	99
   234  000671  5B                 	db	91
   235  000672  53                 	db	83
   236  000673  49                 	db	73
   237  000674  3F                 	db	63
   238  000675  35                 	db	53
   239  000676  2A                 	db	42
   240  000677  1D                 	db	29
   241  000678  12                 	db	18
   242  000679  06                 	db	6
   243  00067A  06                 	db	6
   244  00067B  12                 	db	18
   245  00067C  1D                 	db	29
   246  00067D  2A                 	db	42
   247  00067E  35                 	db	53
   248  00067F  3F                 	db	63
   249  000680  49                 	db	73
   250  000681  53                 	db	83
   251  000682  5B                 	db	91
   252  000683  63                 	db	99
   253  000684  6A                 	db	106
   254  000685  70                 	db	112
   255  000686  75                 	db	117
   256  000687  79                 	db	121
   257  000688  7C                 	db	124
   258  000689  7E                 	db	126
   259                           
   260                           ;initializer for _LookUP_TABLE_SEN
   261  00068A  0C                 	db	12
   262  00068B  22                 	db	34
   263  00068C  39                 	db	57
   264  00068D  4D                 	db	77
   265  00068E  5E                 	db	94
   266  00068F  6C                 	db	108
   267  000690  76                 	db	118
   268  000691  7D                 	db	125
   269  000692  7D                 	db	125
   270  000693  76                 	db	118
   271  000694  6C                 	db	108
   272  000695  5E                 	db	94
   273  000696  4D                 	db	77
   274  000697  39                 	db	57
   275  000698  22                 	db	34
   276  000699  0C                 	db	12
   277  00069A  0C                 	db	12
   278  00069B  22                 	db	34
   279  00069C  39                 	db	57
   280  00069D  4D                 	db	77
   281  00069E  5E                 	db	94
   282  00069F  6C                 	db	108
   283  0006A0  76                 	db	118
   284  0006A1  7D                 	db	125
   285  0006A2  7D                 	db	125
   286  0006A3  76                 	db	118
   287  0006A4  6C                 	db	108
   288  0006A5  5E                 	db	94
   289  0006A6  4D                 	db	77
   290  0006A7  39                 	db	57
   291  0006A8  22                 	db	34
   292  0006A9  0C                 	db	12
   293                           
   294                           	psect	nvCOMRAM
   295  00004A                     __pnvCOMRAM:
   296                           	opt stack 0
   297  00004A                     _TMR2_InterruptHandler:
   298                           	opt stack 0
   299  00004A                     	ds	2
   300  00004C                     _TMR6_InterruptHandler:
   301                           	opt stack 0
   302  00004C                     	ds	2
   303  00004E                     _EstadoActual:
   304                           	opt stack 0
   305  00004E                     	ds	1
   306  00004F                     _Velocidad:
   307                           	opt stack 0
   308  00004F                     	ds	1
   309  0000                     _CCPTMRS0bits	set	3913
   310  0000                     _ANSELA	set	3896
   311  0000                     _ANSELE	set	3900
   312  0000                     _ANSELD	set	3899
   313  0000                     _ANSELB	set	3897
   314  0000                     _ANSELC	set	3898
   315  0000                     _CCPR5H	set	3926
   316  0000                     _CCPR5L	set	3925
   317  0000                     _CCP5CON	set	3924
   318  0000                     _T6CONbits	set	3914
   319  0000                     _TMR6	set	3916
   320  0000                     _PR6	set	3915
   321  0000                     _T6CON	set	3914
   322  0000                     _LATDbits	set	3980
   323  0000                     _LATCbits	set	3979
   324  0000                     _LATBbits	set	3978
   325  0000                     _TXREG1	set	4013
   326  0000                     _RCREG1	set	4014
   327  0000                     _RCSTA1bits	set	4011
   328  0000                     _SPBRGH1	set	4016
   329  0000                     _SPBRG1	set	4015
   330  0000                     _TXSTA1	set	4012
   331  0000                     _RCSTA1	set	4011
   332  0000                     _BAUDCON1	set	4024
   333  0000                     _OSCTUNE	set	3995
   334  0000                     _OSCCON2	set	4050
   335  0000                     _OSCCON	set	4051
   336  0000                     _INTCONbits	set	4082
   337  0000                     _RCONbits	set	4048
   338  0000                     _ADCON0bits	set	4034
   339  0000                     _ADRESH	set	4036
   340  0000                     _ADRESL	set	4035
   341  0000                     _ADCON2	set	4032
   342  0000                     _ADCON1	set	4033
   343  0000                     _ADCON0	set	4034
   344  0000                     _CCPR1H	set	4031
   345  0000                     _CCPR1L	set	4030
   346  0000                     _PSTR1CON	set	4025
   347  0000                     _PWM1CON	set	4023
   348  0000                     _ECCP1AS	set	4022
   349  0000                     _CCP1CON	set	4029
   350  0000                     _CCPR2H	set	3944
   351  0000                     _CCPR2L	set	3943
   352  0000                     _PSTR2CON	set	3939
   353  0000                     _PWM2CON	set	3941
   354  0000                     _ECCP2AS	set	3940
   355  0000                     _CCP2CON	set	3942
   356  0000                     _INTCON2bits	set	4081
   357  0000                     _WPUB	set	3937
   358  0000                     _TRISD	set	3989
   359  0000                     _TRISC	set	3988
   360  0000                     _TRISB	set	3987
   361  0000                     _TRISA	set	3986
   362  0000                     _TRISE	set	3990
   363  0000                     _LATC	set	3979
   364  0000                     _LATB	set	3978
   365  0000                     _LATA	set	3977
   366  0000                     _LATD	set	3980
   367  0000                     _LATE	set	3981
   368  0000                     _T2CONbits	set	4026
   369  0000                     _PIE1bits	set	3997
   370  0000                     _PIR1bits	set	3998
   371  0000                     _TMR2	set	4028
   372  0000                     _PR2	set	4027
   373  0000                     _T2CON	set	4026
   374  0000                     _PIE5bits	set	3965
   375  0000                     _PIR5bits	set	3966
   376                           
   377                           ; #config settings
   378  0000                     
   379                           	psect	cinit
   380  000798                     __pcinit:
   381                           	opt stack 0
   382  000798                     start_initialization:
   383                           	opt stack 0
   384  000798                     __initialization:
   385                           	opt stack 0
   386                           
   387                           ; Initialize objects allocated to BANK0 (160 bytes)
   388                           ; load TBLPTR registers with __pidataBANK0
   389  000798  0E0A               	movlw	low __pidataBANK0
   390  00079A  6EF6               	movwf	tblptrl,c
   391  00079C  0E06               	movlw	high __pidataBANK0
   392  00079E  6EF7               	movwf	tblptrh,c
   393  0007A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   394  0007A2  6EF8               	movwf	tblptru,c
   395  0007A4  EE00  F060         	lfsr	0,__pdataBANK0
   396  0007A8  EE10 F0A0          	lfsr	1,160
   397  0007AC                     copy_data0:
   398  0007AC  0009               	tblrd		*+
   399  0007AE  CFF5 FFEE          	movff	tablat,postinc0
   400  0007B2  50E5               	movf	postdec1,w,c
   401  0007B4  50E1               	movf	fsr1l,w,c
   402  0007B6  E1FA               	bnz	copy_data0
   403                           
   404                           ; Initialize objects allocated to COMRAM (32 bytes)
   405                           ; load TBLPTR registers with __pidataCOMRAM
   406  0007B8  0EA4               	movlw	low __pidataCOMRAM
   407  0007BA  6EF6               	movwf	tblptrl,c
   408  0007BC  0E09               	movlw	high __pidataCOMRAM
   409  0007BE  6EF7               	movwf	tblptrh,c
   410  0007C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   411  0007C2  6EF8               	movwf	tblptru,c
   412  0007C4  EE00  F001         	lfsr	0,__pdataCOMRAM
   413  0007C8  EE10 F020          	lfsr	1,32
   414  0007CC                     copy_data1:
   415  0007CC  0009               	tblrd		*+
   416  0007CE  CFF5 FFEE          	movff	tablat,postinc0
   417  0007D2  50E5               	movf	postdec1,w,c
   418  0007D4  50E1               	movf	fsr1l,w,c
   419  0007D6  E1FA               	bnz	copy_data1
   420                           
   421                           ; Clear objects allocated to COMRAM (14 bytes)
   422  0007D8  EE00  F03C         	lfsr	0,__pbssCOMRAM
   423  0007DC  0E0E               	movlw	14
   424  0007DE                     clear_0:
   425  0007DE  6AEE               	clrf	postinc0,c
   426  0007E0  06E8               	decf	wreg,f,c
   427  0007E2  E1FD               	bnz	clear_0
   428  0007E4                     end_of_initialization:
   429                           	opt stack 0
   430  0007E4                     __end_of__initialization:
   431                           	opt stack 0
   432  0007E4  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   433  0007E6  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   434  0007E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   435  0007EA  6EF8               	movwf	tblptru,c
   436  0007EC  0100               	movlb	0
   437  0007EE  EFB3  F002         	goto	_main	;jump to C main() function
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           postdec1	equ	0xFE5
   445                           fsr1l	equ	0xFE1
   446                           
   447                           	psect	bssCOMRAM
   448  00003C                     __pbssCOMRAM:
   449                           	opt stack 0
   450  00003C                     _Timer2Tick_count:
   451                           	opt stack 0
   452  00003C                     	ds	2
   453  00003E                     _StepCount:
   454                           	opt stack 0
   455  00003E                     	ds	2
   456  000040                     _Microstep:
   457                           	opt stack 0
   458  000040                     	ds	2
   459  000042                     _ANALOG_1:
   460                           	opt stack 0
   461  000042                     	ds	2
   462  000044                     _ANALOG_0:
   463                           	opt stack 0
   464  000044                     	ds	2
   465  000046                     	ds	1
   466  000047                     _StepsComplete:
   467                           	opt stack 0
   468  000047                     	ds	1
   469  000048                     _DelayTimerTicked:
   470                           	opt stack 0
   471  000048                     	ds	1
   472  000049                     _Timer2Ticked:
   473                           	opt stack 0
   474  000049                     	ds	1
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           postinc0	equ	0xFEE
   480                           wreg	equ	0xFE8
   481                           postdec1	equ	0xFE5
   482                           fsr1l	equ	0xFE1
   483                           
   484                           	psect	dataCOMRAM
   485  000001                     __pdataCOMRAM:
   486                           	opt stack 0
   487  000001                     _LookUP_TABLE_COS:
   488                           	opt stack 0
   489  000001                     	ds	32
   490                           tblptru	equ	0xFF8
   491                           tblptrh	equ	0xFF7
   492                           tblptrl	equ	0xFF6
   493                           tablat	equ	0xFF5
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           postdec1	equ	0xFE5
   497                           fsr1l	equ	0xFE1
   498                           
   499                           	psect	dataBANK0
   500  000060                     __pdataBANK0:
   501                           	opt stack 0
   502  000060                     _LookUP_TABLE_SEN_16:
   503                           	opt stack 0
   504  000060                     	ds	64
   505  0000A0                     _LookUP_TABLE_COS_16:
   506                           	opt stack 0
   507  0000A0                     	ds	64
   508  0000E0                     _LookUP_TABLE_SEN:
   509                           	opt stack 0
   510  0000E0                     	ds	32
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           postdec1	equ	0xFE5
   518                           fsr1l	equ	0xFE1
   519                           
   520                           	psect	cstackBANK1
   521  000100                     __pcstackBANK1:
   522                           	opt stack 0
   523  000100                     RectaAceleracion@microstep_number:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x0
   527  000100                     	ds	1
   528  000101                     RectaAceleracion@direccion:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x1
   532  000101                     	ds	1
   533  000102                     RectaAceleracion@velocidad:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x2
   537  000102                     	ds	1
   538  000103                     RectaAceleracion@i:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x3
   542  000103                     	ds	1
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           postinc0	equ	0xFEE
   548                           wreg	equ	0xFE8
   549                           postdec1	equ	0xFE5
   550                           fsr1l	equ	0xFE1
   551                           
   552                           	psect	cstackCOMRAM
   553  000021                     __pcstackCOMRAM:
   554                           	opt stack 0
   555  000021                     ??_INTERRUPT_InterruptManager:
   556  000021                     
   557                           ; 1 bytes @ 0x0
   558  000021                     	ds	14
   559  00002F                     TMR6_SetInterruptHandler@InterruptHandler:
   560                           	opt stack 0
   561  00002F                     TMR2_SetInterruptHandler@InterruptHandler:
   562                           	opt stack 0
   563  00002F                     EPWM2_LoadDutyValue@dutyValue:
   564                           	opt stack 0
   565  00002F                     EPWM1_LoadDutyValue@dutyValue:
   566                           	opt stack 0
   567  00002F                     DelayTmr2@Timeout:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0xE
   571  00002F                     	ds	2
   572  000031                     ??_EPWM2_LoadDutyValue:
   573  000031                     ??_EPWM1_LoadDutyValue:
   574  000031                     
   575                           ; 1 bytes @ 0x10
   576  000031                     	ds	2
   577  000033                     ??_State16MEF_act:
   578  000033                     ??_State8MEF_act:
   579                           
   580                           ; 1 bytes @ 0x12
   581  000033                     	ds	1
   582  000034                     State8MEF_act@direccion:
   583                           	opt stack 0
   584  000034                     State16MEF_act@direccion:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x13
   588  000034                     	ds	1
   589  000035                     StepMove@StepNumber:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x14
   593  000035                     	ds	2
   594  000037                     StepMove@Velocidad:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x16
   598  000037                     	ds	1
   599  000038                     StepMove@microstep_number:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x17
   603  000038                     	ds	1
   604  000039                     StepMove@direccion:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x18
   608  000039                     	ds	1
   609  00003A                     ??_StepMove:
   610                           
   611                           ; 1 bytes @ 0x19
   612  00003A                     	ds	2
   613  00003C                     tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           postinc0	equ	0xFEE
   618                           wreg	equ	0xFE8
   619                           postdec1	equ	0xFE5
   620                           fsr1l	equ	0xFE1
   621                           
   622                           ; 1 bytes @ 0x1B
   623 ;;
   624 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   625 ;;
   626 ;; *************** function _main *****************
   627 ;; Defined at:
   628 ;;		line 23 in file "main.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels required when called:    8
   648 ;; This function calls:
   649 ;;		_DelayTmr2
   650 ;;		_Motor_Stop
   651 ;;		_RectaAceleracion
   652 ;;		_SYSTEM_Initialize
   653 ;;		_StateMEF_ini
   654 ;;		_StepMove
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text0
   661  000566                     __ptext0:
   662                           	opt stack 0
   663  000566                     _main:
   664                           	opt stack 23
   665                           
   666                           ;main.c: 26: SYSTEM_Initialize();
   667                           
   668                           ;incstack = 0
   669  000566  EC4F  F004         	call	_SYSTEM_Initialize	;wreg free
   670                           
   671                           ;main.c: 27: StateMEF_ini();
   672  00056A  EC1A  F005         	call	_StateMEF_ini	;wreg free
   673                           
   674                           ;main.c: 28: Timer2Ticked=0;
   675  00056E  0E00               	movlw	0
   676  000570  6E49               	movwf	_Timer2Ticked,c	;volatile
   677                           
   678                           ;main.c: 29: DelayTimerTicked=0;
   679  000572  0E00               	movlw	0
   680  000574  6E48               	movwf	_DelayTimerTicked,c	;volatile
   681                           
   682                           ;main.c: 30: do { LATBbits.LATB6 = 1; } while(0);
   683  000576  8C8A               	bsf	3978,6,c	;volatile
   684                           
   685                           ;main.c: 32: Velocidad = 3;
   686  000578  0E03               	movlw	3
   687  00057A  6E4F               	movwf	_Velocidad,c
   688                           
   689                           ;main.c: 35: (INTCONbits.GIE = 1);
   690  00057C  8EF2               	bsf	intcon,7,c	;volatile
   691                           
   692                           ;main.c: 38: (INTCONbits.PEIE = 1);
   693  00057E  8CF2               	bsf	intcon,6,c	;volatile
   694  000580                     l2333:
   695                           
   696                           ;main.c: 40: {
   697                           ;main.c: 45: RectaAceleracion( Velocidad , 8 , 1);
   698  000580  0E08               	movlw	8
   699  000582  0101               	movlb	1	; () banked
   700  000584  6F00               	movwf	RectaAceleracion@microstep_number& (0+255),b
   701  000586  0E01               	movlw	1
   702  000588  0101               	movlb	1	; () banked
   703  00058A  6F01               	movwf	RectaAceleracion@direccion& (0+255),b
   704  00058C  504F               	movf	_Velocidad,w,c
   705  00058E  EC55  F003         	call	_RectaAceleracion
   706  000592                     l2335:
   707  000592  0E07               	movlw	7
   708  000594  6E36               	movwf	StepMove@StepNumber+1,c
   709  000596  0ED0               	movlw	208
   710  000598  6E35               	movwf	StepMove@StepNumber,c
   711  00059A  C04F  F037         	movff	_Velocidad,StepMove@Velocidad
   712  00059E  0E08               	movlw	8
   713  0005A0  6E38               	movwf	StepMove@microstep_number,c
   714  0005A2  0E01               	movlw	1
   715  0005A4  6E39               	movwf	StepMove@direccion,c
   716  0005A6  EC99  F003         	call	_StepMove	;wreg free
   717  0005AA  0900               	iorlw	0
   718  0005AC  B4D8               	btfsc	status,2,c
   719  0005AE  D7F1               	goto	l2335
   720                           
   721                           ;main.c: 48: Motor_Stop();
   722  0005B0  EC11  F005         	call	_Motor_Stop	;wreg free
   723                           
   724                           ;main.c: 50: StateMEF_ini();
   725  0005B4  EC1A  F005         	call	_StateMEF_ini	;wreg free
   726                           
   727                           ;main.c: 52: DelayTmr2(19230);
   728  0005B8  0E4B               	movlw	75
   729  0005BA  6E30               	movwf	DelayTmr2@Timeout+1,c
   730  0005BC  0E1E               	movlw	30
   731  0005BE  6E2F               	movwf	DelayTmr2@Timeout,c
   732  0005C0  ECE2  F004         	call	_DelayTmr2	;wreg free
   733                           
   734                           ;main.c: 54: RectaAceleracion( Velocidad , 8 , 0);
   735  0005C4  0E08               	movlw	8
   736  0005C6  0101               	movlb	1	; () banked
   737  0005C8  6F00               	movwf	RectaAceleracion@microstep_number& (0+255),b
   738  0005CA  0E00               	movlw	0
   739  0005CC  0101               	movlb	1	; () banked
   740  0005CE  6F01               	movwf	RectaAceleracion@direccion& (0+255),b
   741  0005D0  504F               	movf	_Velocidad,w,c
   742  0005D2  EC55  F003         	call	_RectaAceleracion
   743  0005D6                     l2343:
   744  0005D6  0E07               	movlw	7
   745  0005D8  6E36               	movwf	StepMove@StepNumber+1,c
   746  0005DA  0ED0               	movlw	208
   747  0005DC  6E35               	movwf	StepMove@StepNumber,c
   748  0005DE  C04F  F037         	movff	_Velocidad,StepMove@Velocidad
   749  0005E2  0E08               	movlw	8
   750  0005E4  6E38               	movwf	StepMove@microstep_number,c
   751  0005E6  0E00               	movlw	0
   752  0005E8  6E39               	movwf	StepMove@direccion,c
   753  0005EA  EC99  F003         	call	_StepMove	;wreg free
   754  0005EE  0900               	iorlw	0
   755  0005F0  B4D8               	btfsc	status,2,c
   756  0005F2  D7F1               	goto	l2343
   757                           
   758                           ;main.c: 57: Motor_Stop();
   759  0005F4  EC11  F005         	call	_Motor_Stop	;wreg free
   760                           
   761                           ;main.c: 59: DelayTmr2(19230);
   762  0005F8  0E4B               	movlw	75
   763  0005FA  6E30               	movwf	DelayTmr2@Timeout+1,c
   764  0005FC  0E1E               	movlw	30
   765  0005FE  6E2F               	movwf	DelayTmr2@Timeout,c
   766  000600  ECE2  F004         	call	_DelayTmr2	;wreg free
   767                           
   768                           ;main.c: 61: StateMEF_ini();
   769  000604  EC1A  F005         	call	_StateMEF_ini	;wreg free
   770  000608  D7BB               	goto	l2333
   771  00060A                     __end_of_main:
   772                           	opt stack 0
   773                           tblptru	equ	0xFF8
   774                           tblptrh	equ	0xFF7
   775                           tblptrl	equ	0xFF6
   776                           tablat	equ	0xFF5
   777                           intcon	equ	0xFF2
   778                           postinc0	equ	0xFEE
   779                           wreg	equ	0xFE8
   780                           postdec1	equ	0xFE5
   781                           fsr1l	equ	0xFE1
   782                           status	equ	0xFD8
   783                           
   784 ;; *************** function _StateMEF_ini *****************
   785 ;; Defined at:
   786 ;;		line 36 in file "MotorDriver.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, status,2
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;Total ram usage:        0 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:    4
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_main
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text1
   815  000A34                     __ptext1:
   816                           	opt stack 0
   817  000A34                     _StateMEF_ini:
   818                           	opt stack 26
   819                           
   820                           ;MotorDriver.c: 38: EstadoActual = STATE1;
   821                           
   822                           ;incstack = 0
   823  000A34  0E01               	movlw	1
   824  000A36  6E4E               	movwf	_EstadoActual,c
   825                           
   826                           ;MotorDriver.c: 39: Microstep=0;
   827  000A38  0E00               	movlw	0
   828  000A3A  6E41               	movwf	_Microstep+1,c
   829  000A3C  0E00               	movlw	0
   830  000A3E  6E40               	movwf	_Microstep,c
   831  000A40  0012               	return		;funcret
   832  000A42                     __end_of_StateMEF_ini:
   833                           	opt stack 0
   834                           tblptru	equ	0xFF8
   835                           tblptrh	equ	0xFF7
   836                           tblptrl	equ	0xFF6
   837                           tablat	equ	0xFF5
   838                           intcon	equ	0xFF2
   839                           postinc0	equ	0xFEE
   840                           wreg	equ	0xFE8
   841                           postdec1	equ	0xFE5
   842                           fsr1l	equ	0xFE1
   843                           status	equ	0xFD8
   844                           
   845 ;; *************** function _SYSTEM_Initialize *****************
   846 ;; Defined at:
   847 ;;		line 111 in file "mcc_generated_files/mcc.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;Total ram usage:        0 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    6
   868 ;; This function calls:
   869 ;;		_ADC_Initialize
   870 ;;		_CCP5_Initialize
   871 ;;		_EPWM1_Initialize
   872 ;;		_EPWM2_Initialize
   873 ;;		_EUSART1_Initialize
   874 ;;		_INTERRUPT_Initialize
   875 ;;		_OSCILLATOR_Initialize
   876 ;;		_PIN_MANAGER_Initialize
   877 ;;		_TMR2_Initialize
   878 ;;		_TMR6_Initialize
   879 ;; This function is called by:
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text2
   885  00089E                     __ptext2:
   886                           	opt stack 0
   887  00089E                     _SYSTEM_Initialize:
   888                           	opt stack 24
   889                           
   890                           ;mcc.c: 114: INTERRUPT_Initialize();
   891                           
   892                           ;incstack = 0
   893  00089E  EC3B  F005         	call	_INTERRUPT_Initialize	;wreg free
   894                           
   895                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   896  0008A2  ECF9  F003         	call	_PIN_MANAGER_Initialize	;wreg free
   897                           
   898                           ;mcc.c: 116: OSCILLATOR_Initialize();
   899  0008A6  EC21  F005         	call	_OSCILLATOR_Initialize	;wreg free
   900                           
   901                           ;mcc.c: 117: TMR6_Initialize();
   902  0008AA  EC64  F004         	call	_TMR6_Initialize	;wreg free
   903                           
   904                           ;mcc.c: 118: EPWM2_Initialize();
   905  0008AE  EC8C  F004         	call	_EPWM2_Initialize	;wreg free
   906                           
   907                           ;mcc.c: 119: CCP5_Initialize();
   908  0008B2  EC07  F005         	call	_CCP5_Initialize	;wreg free
   909                           
   910                           ;mcc.c: 120: ADC_Initialize();
   911  0008B6  ECF0  F004         	call	_ADC_Initialize	;wreg free
   912                           
   913                           ;mcc.c: 121: EPWM1_Initialize();
   914  0008BA  EC9E  F004         	call	_EPWM1_Initialize	;wreg free
   915                           
   916                           ;mcc.c: 122: TMR2_Initialize();
   917  0008BE  ECB0  F004         	call	_TMR2_Initialize	;wreg free
   918                           
   919                           ;mcc.c: 123: EUSART1_Initialize();
   920  0008C2  ECFC  F004         	call	_EUSART1_Initialize	;wreg free
   921  0008C6  0012               	return		;funcret
   922  0008C8                     __end_of_SYSTEM_Initialize:
   923                           	opt stack 0
   924                           tblptru	equ	0xFF8
   925                           tblptrh	equ	0xFF7
   926                           tblptrl	equ	0xFF6
   927                           tablat	equ	0xFF5
   928                           intcon	equ	0xFF2
   929                           postinc0	equ	0xFEE
   930                           wreg	equ	0xFE8
   931                           postdec1	equ	0xFE5
   932                           fsr1l	equ	0xFE1
   933                           status	equ	0xFD8
   934                           
   935 ;; *************** function _TMR6_Initialize *****************
   936 ;; Defined at:
   937 ;;		line 63 in file "mcc_generated_files/tmr6.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;Total ram usage:        0 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    5
   958 ;; This function calls:
   959 ;;		_TMR6_SetInterruptHandler
   960 ;;		_TMR6_StartTimer
   961 ;; This function is called by:
   962 ;;		_SYSTEM_Initialize
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text3
   967  0008C8                     __ptext3:
   968                           	opt stack 0
   969  0008C8                     _TMR6_Initialize:
   970                           	opt stack 24
   971                           
   972                           ;tmr6.c: 68: T6CON = 0x01;
   973                           
   974                           ;incstack = 0
   975  0008C8  0E01               	movlw	1
   976  0008CA  010F               	movlb	15	; () banked
   977  0008CC  6F4A               	movwf	74,b	;volatile
   978                           
   979                           ;tmr6.c: 71: PR6 = 0x45;
   980  0008CE  0E45               	movlw	69
   981  0008D0  010F               	movlb	15	; () banked
   982  0008D2  6F4B               	movwf	75,b	;volatile
   983                           
   984                           ;tmr6.c: 74: TMR6 = 0x00;
   985  0008D4  0E00               	movlw	0
   986  0008D6  010F               	movlb	15	; () banked
   987  0008D8  6F4C               	movwf	76,b	;volatile
   988                           
   989                           ; BSR set to: 15
   990                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
   991  0008DA  947E               	bcf	3966,2,c	;volatile
   992                           
   993                           ; BSR set to: 15
   994                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
   995  0008DC  847D               	bsf	3965,2,c	;volatile
   996                           
   997                           ; BSR set to: 15
   998                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
   999  0008DE  0E7E               	movlw	low _TMR6_DefaultInterruptHandler
  1000  0008E0  6E2F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  1001  0008E2  0E0A               	movlw	high _TMR6_DefaultInterruptHandler
  1002  0008E4  6E30               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  1003  0008E6  EC28  F005         	call	_TMR6_SetInterruptHandler	;wreg free
  1004                           
  1005                           ;tmr6.c: 86: TMR6_StartTimer();
  1006  0008EA  EC36  F005         	call	_TMR6_StartTimer	;wreg free
  1007  0008EE  0012               	return		;funcret
  1008  0008F0                     __end_of_TMR6_Initialize:
  1009                           	opt stack 0
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           tblptrl	equ	0xFF6
  1013                           tablat	equ	0xFF5
  1014                           intcon	equ	0xFF2
  1015                           postinc0	equ	0xFEE
  1016                           wreg	equ	0xFE8
  1017                           postdec1	equ	0xFE5
  1018                           fsr1l	equ	0xFE1
  1019                           status	equ	0xFD8
  1020                           
  1021 ;; *************** function _TMR6_StartTimer *****************
  1022 ;; Defined at:
  1023 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		None
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;Total ram usage:        0 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; Hardware stack levels required when called:    4
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_TMR6_Initialize
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text4
  1052  000A6C                     __ptext4:
  1053                           	opt stack 0
  1054  000A6C                     _TMR6_StartTimer:
  1055                           	opt stack 24
  1056                           
  1057                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  1058                           
  1059                           ;incstack = 0
  1060  000A6C  010F               	movlb	15	; () banked
  1061  000A6E  854A               	bsf	74,2,b	;volatile
  1062                           
  1063                           ; BSR set to: 15
  1064  000A70  0012               	return		;funcret
  1065  000A72                     __end_of_TMR6_StartTimer:
  1066                           	opt stack 0
  1067                           tblptru	equ	0xFF8
  1068                           tblptrh	equ	0xFF7
  1069                           tblptrl	equ	0xFF6
  1070                           tablat	equ	0xFF5
  1071                           intcon	equ	0xFF2
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           postdec1	equ	0xFE5
  1075                           fsr1l	equ	0xFE1
  1076                           status	equ	0xFD8
  1077                           
  1078 ;; *************** function _TMR6_SetInterruptHandler *****************
  1079 ;; Defined at:
  1080 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1083 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;Total ram usage:        2 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    4
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_TMR6_Initialize
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text5
  1110  000A50                     __ptext5:
  1111                           	opt stack 0
  1112  000A50                     _TMR6_SetInterruptHandler:
  1113                           	opt stack 24
  1114                           
  1115                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  1116                           
  1117                           ; BSR set to: 15
  1118                           ;incstack = 0
  1119  000A50  C02F  F04C         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  1120  000A54  C030  F04D         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  1121  000A58  0012               	return		;funcret
  1122  000A5A                     __end_of_TMR6_SetInterruptHandler:
  1123                           	opt stack 0
  1124                           tblptru	equ	0xFF8
  1125                           tblptrh	equ	0xFF7
  1126                           tblptrl	equ	0xFF6
  1127                           tablat	equ	0xFF5
  1128                           intcon	equ	0xFF2
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           postdec1	equ	0xFE5
  1132                           fsr1l	equ	0xFE1
  1133                           status	equ	0xFD8
  1134                           
  1135 ;; *************** function _TMR2_Initialize *****************
  1136 ;; Defined at:
  1137 ;;		line 68 in file "mcc_generated_files/tmr2.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;Total ram usage:        0 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    5
  1158 ;; This function calls:
  1159 ;;		_TMR2_SetInterruptHandler
  1160 ;;		_TMR2_StartTimer
  1161 ;; This function is called by:
  1162 ;;		_SYSTEM_Initialize
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text6
  1167  000960                     __ptext6:
  1168                           	opt stack 0
  1169  000960                     _TMR2_Initialize:
  1170                           	opt stack 24
  1171                           
  1172                           ;tmr2.c: 73: T2CON = 0x02;
  1173                           
  1174                           ;incstack = 0
  1175  000960  0E02               	movlw	2
  1176  000962  6EBA               	movwf	4026,c	;volatile
  1177                           
  1178                           ;tmr2.c: 76: PR2 = 0x0C;
  1179  000964  0E0C               	movlw	12
  1180  000966  6EBB               	movwf	4027,c	;volatile
  1181                           
  1182                           ;tmr2.c: 79: TMR2 = 0x00;
  1183  000968  0E00               	movlw	0
  1184  00096A  6EBC               	movwf	4028,c	;volatile
  1185                           
  1186                           ;tmr2.c: 82: PIR1bits.TMR2IF = 0;
  1187  00096C  929E               	bcf	3998,1,c	;volatile
  1188                           
  1189                           ;tmr2.c: 85: PIE1bits.TMR2IE = 1;
  1190  00096E  829D               	bsf	3997,1,c	;volatile
  1191                           
  1192                           ;tmr2.c: 88: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  1193  000970  0E80               	movlw	low _TMR2_DefaultInterruptHandler
  1194  000972  6E2F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  1195  000974  0E0A               	movlw	high _TMR2_DefaultInterruptHandler
  1196  000976  6E30               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  1197  000978  EC2D  F005         	call	_TMR2_SetInterruptHandler	;wreg free
  1198                           
  1199                           ;tmr2.c: 91: TMR2_StartTimer();
  1200  00097C  EC39  F005         	call	_TMR2_StartTimer	;wreg free
  1201  000980  0012               	return		;funcret
  1202  000982                     __end_of_TMR2_Initialize:
  1203                           	opt stack 0
  1204                           tblptru	equ	0xFF8
  1205                           tblptrh	equ	0xFF7
  1206                           tblptrl	equ	0xFF6
  1207                           tablat	equ	0xFF5
  1208                           intcon	equ	0xFF2
  1209                           postinc0	equ	0xFEE
  1210                           wreg	equ	0xFE8
  1211                           postdec1	equ	0xFE5
  1212                           fsr1l	equ	0xFE1
  1213                           status	equ	0xFD8
  1214                           
  1215 ;; *************** function _TMR2_StartTimer *****************
  1216 ;; Defined at:
  1217 ;;		line 94 in file "mcc_generated_files/tmr2.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		None
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;Total ram usage:        0 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    4
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		_TMR2_Initialize
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text7
  1246  000A72                     __ptext7:
  1247                           	opt stack 0
  1248  000A72                     _TMR2_StartTimer:
  1249                           	opt stack 24
  1250                           
  1251                           ;tmr2.c: 97: T2CONbits.TMR2ON = 1;
  1252                           
  1253                           ;incstack = 0
  1254  000A72  84BA               	bsf	4026,2,c	;volatile
  1255  000A74  0012               	return		;funcret
  1256  000A76                     __end_of_TMR2_StartTimer:
  1257                           	opt stack 0
  1258                           tblptru	equ	0xFF8
  1259                           tblptrh	equ	0xFF7
  1260                           tblptrl	equ	0xFF6
  1261                           tablat	equ	0xFF5
  1262                           intcon	equ	0xFF2
  1263                           postinc0	equ	0xFEE
  1264                           wreg	equ	0xFE8
  1265                           postdec1	equ	0xFE5
  1266                           fsr1l	equ	0xFE1
  1267                           status	equ	0xFD8
  1268                           
  1269 ;; *************** function _TMR2_SetInterruptHandler *****************
  1270 ;; Defined at:
  1271 ;;		line 150 in file "mcc_generated_files/tmr2.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1274 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1289 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;Total ram usage:        2 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    4
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_TMR2_Initialize
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text8
  1301  000A5A                     __ptext8:
  1302                           	opt stack 0
  1303  000A5A                     _TMR2_SetInterruptHandler:
  1304                           	opt stack 24
  1305                           
  1306                           ;tmr2.c: 151: TMR2_InterruptHandler = InterruptHandler;
  1307                           
  1308                           ;incstack = 0
  1309  000A5A  C02F  F04A         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1310  000A5E  C030  F04B         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1311  000A62  0012               	return		;funcret
  1312  000A64                     __end_of_TMR2_SetInterruptHandler:
  1313                           	opt stack 0
  1314                           tblptru	equ	0xFF8
  1315                           tblptrh	equ	0xFF7
  1316                           tblptrl	equ	0xFF6
  1317                           tablat	equ	0xFF5
  1318                           intcon	equ	0xFF2
  1319                           postinc0	equ	0xFEE
  1320                           wreg	equ	0xFE8
  1321                           postdec1	equ	0xFE5
  1322                           fsr1l	equ	0xFE1
  1323                           status	equ	0xFD8
  1324                           
  1325 ;; *************** function _PIN_MANAGER_Initialize *****************
  1326 ;; Defined at:
  1327 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    4
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_SYSTEM_Initialize
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text9
  1356  0007F2                     __ptext9:
  1357                           	opt stack 0
  1358  0007F2                     _PIN_MANAGER_Initialize:
  1359                           	opt stack 25
  1360                           
  1361                           ;pin_manager.c: 56: LATE = 0x00;
  1362                           
  1363                           ;incstack = 0
  1364  0007F2  0E00               	movlw	0
  1365  0007F4  6E8D               	movwf	3981,c	;volatile
  1366                           
  1367                           ;pin_manager.c: 57: LATD = 0x00;
  1368  0007F6  0E00               	movlw	0
  1369  0007F8  6E8C               	movwf	3980,c	;volatile
  1370                           
  1371                           ;pin_manager.c: 58: LATA = 0x00;
  1372  0007FA  0E00               	movlw	0
  1373  0007FC  6E89               	movwf	3977,c	;volatile
  1374                           
  1375                           ;pin_manager.c: 59: LATB = 0x00;
  1376  0007FE  0E00               	movlw	0
  1377  000800  6E8A               	movwf	3978,c	;volatile
  1378                           
  1379                           ;pin_manager.c: 60: LATC = 0x00;
  1380  000802  0E00               	movlw	0
  1381  000804  6E8B               	movwf	3979,c	;volatile
  1382                           
  1383                           ;pin_manager.c: 65: TRISE = 0x07;
  1384  000806  0E07               	movlw	7
  1385  000808  6E96               	movwf	3990,c	;volatile
  1386                           
  1387                           ;pin_manager.c: 66: TRISA = 0xEB;
  1388  00080A  0EEB               	movlw	235
  1389  00080C  6E92               	movwf	3986,c	;volatile
  1390                           
  1391                           ;pin_manager.c: 67: TRISB = 0xBF;
  1392  00080E  0EBF               	movlw	191
  1393  000810  6E93               	movwf	3987,c	;volatile
  1394                           
  1395                           ;pin_manager.c: 68: TRISC = 0xB8;
  1396  000812  0EB8               	movlw	184
  1397  000814  6E94               	movwf	3988,c	;volatile
  1398                           
  1399                           ;pin_manager.c: 69: TRISD = 0xDF;
  1400  000816  0EDF               	movlw	223
  1401  000818  6E95               	movwf	3989,c	;volatile
  1402                           
  1403                           ;pin_manager.c: 74: ANSELC = 0x38;
  1404  00081A  0E38               	movlw	56
  1405  00081C  010F               	movlb	15	; () banked
  1406  00081E  6F3A               	movwf	58,b	;volatile
  1407                           
  1408                           ;pin_manager.c: 75: ANSELB = 0x3E;
  1409  000820  0E3E               	movlw	62
  1410  000822  010F               	movlb	15	; () banked
  1411  000824  6F39               	movwf	57,b	;volatile
  1412                           
  1413                           ;pin_manager.c: 76: ANSELD = 0xDF;
  1414  000826  0EDF               	movlw	223
  1415  000828  010F               	movlb	15	; () banked
  1416  00082A  6F3B               	movwf	59,b	;volatile
  1417                           
  1418                           ;pin_manager.c: 77: ANSELE = 0x03;
  1419  00082C  0E03               	movlw	3
  1420  00082E  010F               	movlb	15	; () banked
  1421  000830  6F3C               	movwf	60,b	;volatile
  1422                           
  1423                           ;pin_manager.c: 78: ANSELA = 0x2B;
  1424  000832  0E2B               	movlw	43
  1425  000834  010F               	movlb	15	; () banked
  1426  000836  6F38               	movwf	56,b	;volatile
  1427                           
  1428                           ; BSR set to: 15
  1429                           ;pin_manager.c: 83: WPUB = 0xFF;
  1430  000838  6861               	setf	3937,c	;volatile
  1431                           
  1432                           ; BSR set to: 15
  1433                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1434  00083A  9EF1               	bcf	intcon2,7,c	;volatile
  1435                           
  1436                           ; BSR set to: 15
  1437  00083C  0012               	return		;funcret
  1438  00083E                     __end_of_PIN_MANAGER_Initialize:
  1439                           	opt stack 0
  1440                           tblptru	equ	0xFF8
  1441                           tblptrh	equ	0xFF7
  1442                           tblptrl	equ	0xFF6
  1443                           tablat	equ	0xFF5
  1444                           intcon	equ	0xFF2
  1445                           intcon2	equ	0xFF1
  1446                           postinc0	equ	0xFEE
  1447                           wreg	equ	0xFE8
  1448                           postdec1	equ	0xFE5
  1449                           fsr1l	equ	0xFE1
  1450                           status	equ	0xFD8
  1451                           
  1452 ;; *************** function _OSCILLATOR_Initialize *****************
  1453 ;; Defined at:
  1454 ;;		line 126 in file "mcc_generated_files/mcc.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;Total ram usage:        0 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    4
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_SYSTEM_Initialize
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text10
  1483  000A42                     __ptext10:
  1484                           	opt stack 0
  1485  000A42                     _OSCILLATOR_Initialize:
  1486                           	opt stack 25
  1487                           
  1488                           ;mcc.c: 129: OSCCON = 0x70;
  1489                           
  1490                           ; BSR set to: 15
  1491                           ;incstack = 0
  1492  000A42  0E70               	movlw	112
  1493  000A44  6ED3               	movwf	4051,c	;volatile
  1494                           
  1495                           ;mcc.c: 131: OSCCON2 = 0x04;
  1496  000A46  0E04               	movlw	4
  1497  000A48  6ED2               	movwf	4050,c	;volatile
  1498                           
  1499                           ;mcc.c: 133: OSCTUNE = 0x00;
  1500  000A4A  0E00               	movlw	0
  1501  000A4C  6E9B               	movwf	3995,c	;volatile
  1502  000A4E  0012               	return		;funcret
  1503  000A50                     __end_of_OSCILLATOR_Initialize:
  1504                           	opt stack 0
  1505                           tblptru	equ	0xFF8
  1506                           tblptrh	equ	0xFF7
  1507                           tblptrl	equ	0xFF6
  1508                           tablat	equ	0xFF5
  1509                           intcon	equ	0xFF2
  1510                           intcon2	equ	0xFF1
  1511                           postinc0	equ	0xFEE
  1512                           wreg	equ	0xFE8
  1513                           postdec1	equ	0xFE5
  1514                           fsr1l	equ	0xFE1
  1515                           status	equ	0xFD8
  1516                           
  1517 ;; *************** function _INTERRUPT_Initialize *****************
  1518 ;; Defined at:
  1519 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		None
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;Total ram usage:        0 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    4
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_SYSTEM_Initialize
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text11
  1548  000A76                     __ptext11:
  1549                           	opt stack 0
  1550  000A76                     _INTERRUPT_Initialize:
  1551                           	opt stack 25
  1552                           
  1553                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1554                           
  1555                           ;incstack = 0
  1556  000A76  9ED0               	bcf	4048,7,c	;volatile
  1557  000A78  0012               	return		;funcret
  1558  000A7A                     __end_of_INTERRUPT_Initialize:
  1559                           	opt stack 0
  1560                           tblptru	equ	0xFF8
  1561                           tblptrh	equ	0xFF7
  1562                           tblptrl	equ	0xFF6
  1563                           tablat	equ	0xFF5
  1564                           intcon	equ	0xFF2
  1565                           intcon2	equ	0xFF1
  1566                           postinc0	equ	0xFEE
  1567                           wreg	equ	0xFE8
  1568                           postdec1	equ	0xFE5
  1569                           fsr1l	equ	0xFE1
  1570                           status	equ	0xFD8
  1571                           
  1572 ;; *************** function _EUSART1_Initialize *****************
  1573 ;; Defined at:
  1574 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:    4
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_SYSTEM_Initialize
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text12
  1603  0009F8                     __ptext12:
  1604                           	opt stack 0
  1605  0009F8                     _EUSART1_Initialize:
  1606                           	opt stack 25
  1607                           
  1608                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1609                           
  1610                           ;incstack = 0
  1611  0009F8  0E08               	movlw	8
  1612  0009FA  6EB8               	movwf	4024,c	;volatile
  1613                           
  1614                           ;eusart1.c: 63: RCSTA1 = 0x90;
  1615  0009FC  0E90               	movlw	144
  1616  0009FE  6EAB               	movwf	4011,c	;volatile
  1617                           
  1618                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1619  000A00  0E24               	movlw	36
  1620  000A02  6EAC               	movwf	4012,c	;volatile
  1621                           
  1622                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  1623  000A04  0EA0               	movlw	160
  1624  000A06  6EAF               	movwf	4015,c	;volatile
  1625                           
  1626                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  1627  000A08  0E01               	movlw	1
  1628  000A0A  6EB0               	movwf	4016,c	;volatile
  1629  000A0C  0012               	return		;funcret
  1630  000A0E                     __end_of_EUSART1_Initialize:
  1631                           	opt stack 0
  1632                           tblptru	equ	0xFF8
  1633                           tblptrh	equ	0xFF7
  1634                           tblptrl	equ	0xFF6
  1635                           tablat	equ	0xFF5
  1636                           intcon	equ	0xFF2
  1637                           intcon2	equ	0xFF1
  1638                           postinc0	equ	0xFEE
  1639                           wreg	equ	0xFE8
  1640                           postdec1	equ	0xFE5
  1641                           fsr1l	equ	0xFE1
  1642                           status	equ	0xFD8
  1643                           
  1644 ;; *************** function _EPWM2_Initialize *****************
  1645 ;; Defined at:
  1646 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;		None
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;		None
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, status,2
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;Total ram usage:        0 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:    4
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_SYSTEM_Initialize
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text13
  1675  000918                     __ptext13:
  1676                           	opt stack 0
  1677  000918                     _EPWM2_Initialize:
  1678                           	opt stack 25
  1679                           
  1680                           ;epwm2.c: 68: CCP2CON = 0x3C;
  1681                           
  1682                           ;incstack = 0
  1683  000918  0E3C               	movlw	60
  1684  00091A  6E66               	movwf	3942,c	;volatile
  1685                           
  1686                           ;epwm2.c: 71: ECCP2AS = 0x00;
  1687  00091C  0E00               	movlw	0
  1688  00091E  6E64               	movwf	3940,c	;volatile
  1689                           
  1690                           ;epwm2.c: 74: PWM2CON = 0x80;
  1691  000920  0E80               	movlw	128
  1692  000922  6E65               	movwf	3941,c	;volatile
  1693                           
  1694                           ;epwm2.c: 77: PSTR2CON = 0x03;
  1695  000924  0E03               	movlw	3
  1696  000926  6E63               	movwf	3939,c	;volatile
  1697                           
  1698                           ;epwm2.c: 80: CCPR2L = 0x14;
  1699  000928  0E14               	movlw	20
  1700  00092A  6E67               	movwf	3943,c	;volatile
  1701                           
  1702                           ;epwm2.c: 83: CCPR2H = 0x00;
  1703  00092C  0E00               	movlw	0
  1704  00092E  6E68               	movwf	3944,c	;volatile
  1705                           
  1706                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  1707  000930  010F               	movlb	15	; () banked
  1708  000932  5149               	movf	73,w,b	;volatile
  1709  000934  0BE7               	andlw	-25
  1710  000936  0910               	iorlw	16
  1711  000938  6F49               	movwf	73,b	;volatile
  1712                           
  1713                           ; BSR set to: 15
  1714  00093A  0012               	return		;funcret
  1715  00093C                     __end_of_EPWM2_Initialize:
  1716                           	opt stack 0
  1717                           tblptru	equ	0xFF8
  1718                           tblptrh	equ	0xFF7
  1719                           tblptrl	equ	0xFF6
  1720                           tablat	equ	0xFF5
  1721                           intcon	equ	0xFF2
  1722                           intcon2	equ	0xFF1
  1723                           postinc0	equ	0xFEE
  1724                           wreg	equ	0xFE8
  1725                           postdec1	equ	0xFE5
  1726                           fsr1l	equ	0xFE1
  1727                           status	equ	0xFD8
  1728                           
  1729 ;; *************** function _EPWM1_Initialize *****************
  1730 ;; Defined at:
  1731 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1749 ;;Total ram usage:        0 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    4
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_SYSTEM_Initialize
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text14
  1760  00093C                     __ptext14:
  1761                           	opt stack 0
  1762  00093C                     _EPWM1_Initialize:
  1763                           	opt stack 25
  1764                           
  1765                           ;epwm1.c: 68: CCP1CON = 0x3C;
  1766                           
  1767                           ; BSR set to: 15
  1768                           ;incstack = 0
  1769  00093C  0E3C               	movlw	60
  1770  00093E  6EBD               	movwf	4029,c	;volatile
  1771                           
  1772                           ;epwm1.c: 71: ECCP1AS = 0x00;
  1773  000940  0E00               	movlw	0
  1774  000942  6EB6               	movwf	4022,c	;volatile
  1775                           
  1776                           ;epwm1.c: 74: PWM1CON = 0x80;
  1777  000944  0E80               	movlw	128
  1778  000946  6EB7               	movwf	4023,c	;volatile
  1779                           
  1780                           ;epwm1.c: 77: PSTR1CON = 0x03;
  1781  000948  0E03               	movlw	3
  1782  00094A  6EB9               	movwf	4025,c	;volatile
  1783                           
  1784                           ;epwm1.c: 80: CCPR1L = 0x14;
  1785  00094C  0E14               	movlw	20
  1786  00094E  6EBE               	movwf	4030,c	;volatile
  1787                           
  1788                           ;epwm1.c: 83: CCPR1H = 0x00;
  1789  000950  0E00               	movlw	0
  1790  000952  6EBF               	movwf	4031,c	;volatile
  1791                           
  1792                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  1793  000954  010F               	movlb	15	; () banked
  1794  000956  5149               	movf	73,w,b	;volatile
  1795  000958  0BFC               	andlw	-4
  1796  00095A  0902               	iorlw	2
  1797  00095C  6F49               	movwf	73,b	;volatile
  1798                           
  1799                           ; BSR set to: 15
  1800  00095E  0012               	return		;funcret
  1801  000960                     __end_of_EPWM1_Initialize:
  1802                           	opt stack 0
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           intcon	equ	0xFF2
  1808                           intcon2	equ	0xFF1
  1809                           postinc0	equ	0xFEE
  1810                           wreg	equ	0xFE8
  1811                           postdec1	equ	0xFE5
  1812                           fsr1l	equ	0xFE1
  1813                           status	equ	0xFD8
  1814                           
  1815 ;; *************** function _CCP5_Initialize *****************
  1816 ;; Defined at:
  1817 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    4
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_SYSTEM_Initialize
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text15
  1846  000A0E                     __ptext15:
  1847                           	opt stack 0
  1848  000A0E                     _CCP5_Initialize:
  1849                           	opt stack 25
  1850                           
  1851                           ;ccp5.c: 60: CCP5CON = 0x00;
  1852                           
  1853                           ; BSR set to: 15
  1854                           ;incstack = 0
  1855  000A0E  0E00               	movlw	0
  1856  000A10  010F               	movlb	15	; () banked
  1857  000A12  6F54               	movwf	84,b	;volatile
  1858                           
  1859                           ;ccp5.c: 62: CCPR5L = 0x00;
  1860  000A14  0E00               	movlw	0
  1861  000A16  010F               	movlb	15	; () banked
  1862  000A18  6F55               	movwf	85,b	;volatile
  1863                           
  1864                           ;ccp5.c: 64: CCPR5H = 0x00;
  1865  000A1A  0E00               	movlw	0
  1866  000A1C  010F               	movlb	15	; () banked
  1867  000A1E  6F56               	movwf	86,b	;volatile
  1868                           
  1869                           ; BSR set to: 15
  1870  000A20  0012               	return		;funcret
  1871  000A22                     __end_of_CCP5_Initialize:
  1872                           	opt stack 0
  1873                           tblptru	equ	0xFF8
  1874                           tblptrh	equ	0xFF7
  1875                           tblptrl	equ	0xFF6
  1876                           tablat	equ	0xFF5
  1877                           intcon	equ	0xFF2
  1878                           intcon2	equ	0xFF1
  1879                           postinc0	equ	0xFEE
  1880                           wreg	equ	0xFE8
  1881                           postdec1	equ	0xFE5
  1882                           fsr1l	equ	0xFE1
  1883                           status	equ	0xFD8
  1884                           
  1885 ;; *************** function _ADC_Initialize *****************
  1886 ;; Defined at:
  1887 ;;		line 61 in file "mcc_generated_files/adc.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;Total ram usage:        0 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    4
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_SYSTEM_Initialize
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text16
  1916  0009E0                     __ptext16:
  1917                           	opt stack 0
  1918  0009E0                     _ADC_Initialize:
  1919                           	opt stack 25
  1920                           
  1921                           ;adc.c: 66: ADCON0 = 0x01;
  1922                           
  1923                           ; BSR set to: 15
  1924                           ;incstack = 0
  1925  0009E0  0E01               	movlw	1
  1926  0009E2  6EC2               	movwf	4034,c	;volatile
  1927                           
  1928                           ;adc.c: 69: ADCON1 = 0x00;
  1929  0009E4  0E00               	movlw	0
  1930  0009E6  6EC1               	movwf	4033,c	;volatile
  1931                           
  1932                           ;adc.c: 72: ADCON2 = 0x05;
  1933  0009E8  0E05               	movlw	5
  1934  0009EA  6EC0               	movwf	4032,c	;volatile
  1935                           
  1936                           ;adc.c: 75: ADRESL = 0x00;
  1937  0009EC  0E00               	movlw	0
  1938  0009EE  6EC3               	movwf	4035,c	;volatile
  1939                           
  1940                           ;adc.c: 78: ADRESH = 0x00;
  1941  0009F0  0E00               	movlw	0
  1942  0009F2  6EC4               	movwf	4036,c	;volatile
  1943                           
  1944                           ;adc.c: 81: PIE1bits.ADIE = 1;
  1945  0009F4  8C9D               	bsf	3997,6,c	;volatile
  1946  0009F6  0012               	return		;funcret
  1947  0009F8                     __end_of_ADC_Initialize:
  1948                           	opt stack 0
  1949                           tblptru	equ	0xFF8
  1950                           tblptrh	equ	0xFF7
  1951                           tblptrl	equ	0xFF6
  1952                           tablat	equ	0xFF5
  1953                           intcon	equ	0xFF2
  1954                           intcon2	equ	0xFF1
  1955                           postinc0	equ	0xFEE
  1956                           wreg	equ	0xFE8
  1957                           postdec1	equ	0xFE5
  1958                           fsr1l	equ	0xFE1
  1959                           status	equ	0xFD8
  1960                           
  1961 ;; *************** function _RectaAceleracion *****************
  1962 ;; Defined at:
  1963 ;;		line 321 in file "MotorDriver.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  velocidad       1    wreg     unsigned char 
  1966 ;;  microstep_nu    1    0[BANK1 ] unsigned char 
  1967 ;;  direccion       1    1[BANK1 ] unsigned char 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  velocidad       1    2[BANK1 ] unsigned char 
  1970 ;;  i               1    3[BANK1 ] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1980 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;Total ram usage:        4 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    7
  1987 ;; This function calls:
  1988 ;;		_StepMove
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text17
  1995  0006AA                     __ptext17:
  1996                           	opt stack 0
  1997  0006AA                     _RectaAceleracion:
  1998                           	opt stack 23
  1999                           
  2000                           ;incstack = 0
  2001                           ;RectaAceleracion@velocidad stored from wreg
  2002  0006AA  0101               	movlb	1	; () banked
  2003  0006AC  6F02               	movwf	RectaAceleracion@velocidad& (0+255),b
  2004                           
  2005                           ;MotorDriver.c: 322: uint8_t i;
  2006                           ;MotorDriver.c: 323: if (microstep_number == 8){
  2007  0006AE  0E08               	movlw	8
  2008  0006B0  0101               	movlb	1	; () banked
  2009  0006B2  1900               	xorwf	RectaAceleracion@microstep_number& (0+255),w,b
  2010  0006B4  A4D8               	btfss	status,2,c
  2011  0006B6  D01C               	goto	l2307
  2012                           
  2013                           ; BSR set to: 1
  2014                           ;MotorDriver.c: 324: for (i=30;i>velocidad;i--){
  2015  0006B8  0E1E               	movlw	30
  2016  0006BA  0101               	movlb	1	; () banked
  2017  0006BC  6F03               	movwf	RectaAceleracion@i& (0+255),b
  2018  0006BE  D011               	goto	l2305
  2019  0006C0                     l2301:
  2020  0006C0  0E00               	movlw	0
  2021  0006C2  6E36               	movwf	StepMove@StepNumber+1,c
  2022  0006C4  0E0A               	movlw	10
  2023  0006C6  6E35               	movwf	StepMove@StepNumber,c
  2024  0006C8  C103  F037         	movff	RectaAceleracion@i,StepMove@Velocidad
  2025  0006CC  0E08               	movlw	8
  2026  0006CE  6E38               	movwf	StepMove@microstep_number,c
  2027  0006D0  C101  F039         	movff	RectaAceleracion@direccion,StepMove@direccion
  2028  0006D4  EC99  F003         	call	_StepMove	;wreg free
  2029  0006D8  0900               	iorlw	0
  2030  0006DA  B4D8               	btfsc	status,2,c
  2031  0006DC  D7F1               	goto	l2301
  2032  0006DE  0101               	movlb	1	; () banked
  2033  0006E0  0703               	decf	RectaAceleracion@i& (0+255),f,b
  2034  0006E2                     l2305:
  2035                           
  2036                           ; BSR set to: 1
  2037  0006E2  0101               	movlb	1	; () banked
  2038  0006E4  5103               	movf	RectaAceleracion@i& (0+255),w,b
  2039  0006E6  0101               	movlb	1	; () banked
  2040  0006E8  5D02               	subwf	RectaAceleracion@velocidad& (0+255),w,b
  2041  0006EA  B0D8               	btfsc	status,0,c
  2042  0006EC  0012               	return	
  2043  0006EE  D7E8               	goto	l2301
  2044  0006F0                     l2307:
  2045                           
  2046                           ; BSR set to: 1
  2047                           ;MotorDriver.c: 328: else if (microstep_number == 16){
  2048  0006F0  0E10               	movlw	16
  2049  0006F2  0101               	movlb	1	; () banked
  2050  0006F4  1900               	xorwf	RectaAceleracion@microstep_number& (0+255),w,b
  2051  0006F6  A4D8               	btfss	status,2,c
  2052  0006F8  0012               	return	
  2053                           
  2054                           ; BSR set to: 1
  2055                           ;MotorDriver.c: 329: for (i=30;i>velocidad;i--){
  2056  0006FA  0E1E               	movlw	30
  2057  0006FC  0101               	movlb	1	; () banked
  2058  0006FE  6F03               	movwf	RectaAceleracion@i& (0+255),b
  2059  000700  D011               	goto	l2315
  2060  000702                     l2311:
  2061  000702  0E00               	movlw	0
  2062  000704  6E36               	movwf	StepMove@StepNumber+1,c
  2063  000706  0E0A               	movlw	10
  2064  000708  6E35               	movwf	StepMove@StepNumber,c
  2065  00070A  C103  F037         	movff	RectaAceleracion@i,StepMove@Velocidad
  2066  00070E  0E10               	movlw	16
  2067  000710  6E38               	movwf	StepMove@microstep_number,c
  2068  000712  C101  F039         	movff	RectaAceleracion@direccion,StepMove@direccion
  2069  000716  EC99  F003         	call	_StepMove	;wreg free
  2070  00071A  0900               	iorlw	0
  2071  00071C  B4D8               	btfsc	status,2,c
  2072  00071E  D7F1               	goto	l2311
  2073  000720  0101               	movlb	1	; () banked
  2074  000722  0703               	decf	RectaAceleracion@i& (0+255),f,b
  2075  000724                     l2315:
  2076                           
  2077                           ; BSR set to: 1
  2078  000724  0101               	movlb	1	; () banked
  2079  000726  5103               	movf	RectaAceleracion@i& (0+255),w,b
  2080  000728  0101               	movlb	1	; () banked
  2081  00072A  5D02               	subwf	RectaAceleracion@velocidad& (0+255),w,b
  2082  00072C  B0D8               	btfsc	status,0,c
  2083  00072E  0012               	return	
  2084  000730  D7E8               	goto	l2311
  2085  000732                     __end_of_RectaAceleracion:
  2086                           	opt stack 0
  2087                           tblptru	equ	0xFF8
  2088                           tblptrh	equ	0xFF7
  2089                           tblptrl	equ	0xFF6
  2090                           tablat	equ	0xFF5
  2091                           intcon	equ	0xFF2
  2092                           intcon2	equ	0xFF1
  2093                           postinc0	equ	0xFEE
  2094                           wreg	equ	0xFE8
  2095                           postdec1	equ	0xFE5
  2096                           fsr1l	equ	0xFE1
  2097                           status	equ	0xFD8
  2098                           
  2099 ;; *************** function _StepMove *****************
  2100 ;; Defined at:
  2101 ;;		line 42 in file "MotorDriver.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  StepNumber      2   20[COMRAM] unsigned int 
  2104 ;;  Velocidad       1   22[COMRAM] unsigned char 
  2105 ;;  microstep_nu    1   23[COMRAM] unsigned char 
  2106 ;;  direccion       1   24[COMRAM] unsigned char 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      unsigned char 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2118 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;Total ram usage:        7 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    6
  2125 ;; This function calls:
  2126 ;;		_State16MEF_act
  2127 ;;		_State8MEF_act
  2128 ;; This function is called by:
  2129 ;;		_main
  2130 ;;		_RectaAceleracion
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text18
  2135  000732                     __ptext18:
  2136                           	opt stack 0
  2137  000732                     _StepMove:
  2138                           	opt stack 24
  2139                           
  2140                           ;MotorDriver.c: 44: if ((StepCount<StepNumber)){
  2141                           
  2142                           ; BSR set to: 1
  2143                           ;incstack = 0
  2144  000732  5035               	movf	StepMove@StepNumber,w,c
  2145  000734  5C3E               	subwf	_StepCount,w,c
  2146  000736  5036               	movf	StepMove@StepNumber+1,w,c
  2147  000738  583F               	subwfb	_StepCount+1,w,c
  2148  00073A  B0D8               	btfsc	status,0,c
  2149  00073C  D025               	goto	l2293
  2150                           
  2151                           ;MotorDriver.c: 45: if (Timer2Ticked){
  2152  00073E  5049               	movf	_Timer2Ticked,w,c	;volatile
  2153  000740  B4D8               	btfsc	status,2,c
  2154  000742  D01F               	goto	l2291
  2155                           
  2156                           ;MotorDriver.c: 46: Timer2Tick_count++;
  2157  000744  4A3C               	infsnz	_Timer2Tick_count,f,c
  2158  000746  2A3D               	incf	_Timer2Tick_count+1,f,c
  2159                           
  2160                           ;MotorDriver.c: 47: if (Timer2Tick_count == Velocidad){
  2161  000748  5037               	movf	StepMove@Velocidad,w,c
  2162  00074A  6E3A               	movwf	??_StepMove& (0+255),c
  2163  00074C  6A3B               	clrf	(??_StepMove+1)& (0+255),c
  2164  00074E  503C               	movf	_Timer2Tick_count,w,c
  2165  000750  183A               	xorwf	??_StepMove,w,c
  2166  000752  E115               	bnz	l2289
  2167  000754  503D               	movf	_Timer2Tick_count+1,w,c
  2168  000756  183B               	xorwf	??_StepMove+1,w,c
  2169  000758  A4D8               	btfss	status,2,c
  2170  00075A  D011               	goto	l2289
  2171                           
  2172                           ;MotorDriver.c: 48: if (microstep_number==16){
  2173  00075C  0E10               	movlw	16
  2174  00075E  1838               	xorwf	StepMove@microstep_number,w,c
  2175  000760  A4D8               	btfss	status,2,c
  2176  000762  D004               	goto	l2283
  2177                           
  2178                           ;MotorDriver.c: 49: State16MEF_act( direccion );
  2179  000764  5039               	movf	StepMove@direccion,w,c
  2180  000766  EC85  F001         	call	_State16MEF_act
  2181                           
  2182                           ;MotorDriver.c: 50: }
  2183  00076A  D003               	goto	l2285
  2184  00076C                     l2283:
  2185                           
  2186                           ;MotorDriver.c: 51: else{
  2187                           ;MotorDriver.c: 52: State8MEF_act( direccion );
  2188  00076C  5039               	movf	StepMove@direccion,w,c
  2189  00076E  EC57  F000         	call	_State8MEF_act
  2190  000772                     l2285:
  2191                           
  2192                           ;MotorDriver.c: 53: }
  2193                           ;MotorDriver.c: 54: StepCount++;
  2194  000772  4A3E               	infsnz	_StepCount,f,c
  2195  000774  2A3F               	incf	_StepCount+1,f,c
  2196                           
  2197                           ;MotorDriver.c: 55: Timer2Tick_count=0;
  2198  000776  0E00               	movlw	0
  2199  000778  6E3D               	movwf	_Timer2Tick_count+1,c
  2200  00077A  0E00               	movlw	0
  2201  00077C  6E3C               	movwf	_Timer2Tick_count,c
  2202  00077E                     l2289:
  2203                           
  2204                           ;MotorDriver.c: 56: }
  2205                           ;MotorDriver.c: 57: Timer2Ticked = 0;
  2206  00077E  0E00               	movlw	0
  2207  000780  6E49               	movwf	_Timer2Ticked,c	;volatile
  2208  000782                     l2291:
  2209                           
  2210                           ;MotorDriver.c: 58: }
  2211                           ;MotorDriver.c: 59: StepsComplete=0;
  2212  000782  0E00               	movlw	0
  2213  000784  6E47               	movwf	_StepsComplete,c
  2214                           
  2215                           ;MotorDriver.c: 60: }
  2216  000786  D006               	goto	l431
  2217  000788                     l2293:
  2218                           
  2219                           ;MotorDriver.c: 61: else{
  2220                           ;MotorDriver.c: 62: StepsComplete=1;
  2221  000788  0E01               	movlw	1
  2222  00078A  6E47               	movwf	_StepsComplete,c
  2223                           
  2224                           ;MotorDriver.c: 63: StepCount=0;
  2225  00078C  0E00               	movlw	0
  2226  00078E  6E3F               	movwf	_StepCount+1,c
  2227  000790  0E00               	movlw	0
  2228  000792  6E3E               	movwf	_StepCount,c
  2229  000794                     l431:
  2230                           
  2231                           ;MotorDriver.c: 65: }
  2232                           ;MotorDriver.c: 66: return(StepsComplete);
  2233  000794  5047               	movf	_StepsComplete,w,c
  2234  000796  0012               	return	
  2235  000798                     __end_of_StepMove:
  2236                           	opt stack 0
  2237                           tblptru	equ	0xFF8
  2238                           tblptrh	equ	0xFF7
  2239                           tblptrl	equ	0xFF6
  2240                           tablat	equ	0xFF5
  2241                           intcon	equ	0xFF2
  2242                           intcon2	equ	0xFF1
  2243                           postinc0	equ	0xFEE
  2244                           wreg	equ	0xFE8
  2245                           postdec1	equ	0xFE5
  2246                           fsr1l	equ	0xFE1
  2247                           status	equ	0xFD8
  2248                           
  2249 ;; *************** function _State8MEF_act *****************
  2250 ;; Defined at:
  2251 ;;		line 101 in file "MotorDriver.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  direccion       1    wreg     unsigned char 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  direccion       1   19[COMRAM] unsigned char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;Total ram usage:        2 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    5
  2272 ;; This function calls:
  2273 ;;		_EPWM1_LoadDutyValue
  2274 ;;		_EPWM2_LoadDutyValue
  2275 ;; This function is called by:
  2276 ;;		_StepMove
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text19
  2281  0000AE                     __ptext19:
  2282                           	opt stack 0
  2283  0000AE                     _State8MEF_act:
  2284                           	opt stack 24
  2285                           
  2286                           ;incstack = 0
  2287                           ;State8MEF_act@direccion stored from wreg
  2288  0000AE  6E34               	movwf	State8MEF_act@direccion,c
  2289                           
  2290                           ;MotorDriver.c: 103: switch(EstadoActual) {
  2291  0000B0  D11D               	goto	l2269
  2292  0000B2                     l2163:
  2293                           
  2294                           ;MotorDriver.c: 105: PSTR1CON = 0x01; PSTR2CON = 0x01;
  2295  0000B2  0E01               	movlw	1
  2296  0000B4  6EB9               	movwf	4025,c	;volatile
  2297  0000B6  0E01               	movlw	1
  2298  0000B8  6E63               	movwf	3939,c	;volatile
  2299                           
  2300                           ;MotorDriver.c: 106: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2301  0000BA  9A8C               	bcf	3980,5,c	;volatile
  2302  0000BC  908B               	bcf	3979,0,c	;volatile
  2303                           
  2304                           ;MotorDriver.c: 107: if (Microstep<8){
  2305  0000BE  BE41               	btfsc	_Microstep+1,7,c
  2306  0000C0  D006               	goto	l2171
  2307  0000C2  5041               	movf	_Microstep+1,w,c
  2308  0000C4  E103               	bnz	u1481
  2309  0000C6  0E08               	movlw	8
  2310  0000C8  5C40               	subwf	_Microstep,w,c
  2311  0000CA  B0D8               	btfsc	status,0,c
  2312  0000CC                     u1481:
  2313  0000CC  0012               	return	
  2314  0000CE                     l2171:
  2315                           
  2316                           ;MotorDriver.c: 111: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2317  0000CE  0E01               	movlw	low _LookUP_TABLE_COS
  2318  0000D0  2440               	addwf	_Microstep,w,c
  2319  0000D2  6ED9               	movwf	fsr2l,c
  2320  0000D4  0E00               	movlw	high _LookUP_TABLE_COS
  2321  0000D6  2041               	addwfc	_Microstep+1,w,c
  2322  0000D8  6EDA               	movwf	fsr2h,c
  2323  0000DA  50DF               	movf	indf2,w,c
  2324  0000DC  6E33               	movwf	??_State8MEF_act& (0+255),c
  2325  0000DE  5033               	movf	??_State8MEF_act,w,c
  2326  0000E0  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2327  0000E2  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2328  0000E4  EC37  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2329                           
  2330                           ;MotorDriver.c: 112: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2331  0000E8  0EE0               	movlw	low _LookUP_TABLE_SEN
  2332  0000EA  2440               	addwf	_Microstep,w,c
  2333  0000EC  6ED9               	movwf	fsr2l,c
  2334  0000EE  0E00               	movlw	high _LookUP_TABLE_SEN
  2335  0000F0  2041               	addwfc	_Microstep+1,w,c
  2336  0000F2  6EDA               	movwf	fsr2h,c
  2337  0000F4  50DF               	movf	indf2,w,c
  2338  0000F6  6E33               	movwf	??_State8MEF_act& (0+255),c
  2339  0000F8  5033               	movf	??_State8MEF_act,w,c
  2340  0000FA  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2341  0000FC  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2342  0000FE  EC1F  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2343                           
  2344                           ;MotorDriver.c: 114: if (direccion == 1){
  2345  000102  0434               	decf	State8MEF_act@direccion,w,c
  2346  000104  A4D8               	btfss	status,2,c
  2347  000106  D00A               	goto	l2181
  2348                           
  2349                           ;MotorDriver.c: 115: if (Microstep==7){
  2350  000108  0E07               	movlw	7
  2351  00010A  1840               	xorwf	_Microstep,w,c
  2352  00010C  1041               	iorwf	_Microstep+1,w,c
  2353  00010E  A4D8               	btfss	status,2,c
  2354  000110  D002               	goto	l2179
  2355                           
  2356                           ;MotorDriver.c: 116: EstadoActual = STATE2;
  2357  000112  0E02               	movlw	2
  2358  000114  6E4E               	movwf	_EstadoActual,c
  2359  000116                     l2179:
  2360                           
  2361                           ;MotorDriver.c: 117: }
  2362                           ;MotorDriver.c: 118: Microstep++;
  2363  000116  4A40               	infsnz	_Microstep,f,c
  2364  000118  2A41               	incf	_Microstep+1,f,c
  2365                           
  2366                           ;MotorDriver.c: 119: }
  2367  00011A  0012               	return	
  2368  00011C                     l2181:
  2369                           
  2370                           ;MotorDriver.c: 120: else{
  2371                           ;MotorDriver.c: 121: if (Microstep==0){
  2372  00011C  5040               	movf	_Microstep,w,c
  2373  00011E  1041               	iorwf	_Microstep+1,w,c
  2374  000120  A4D8               	btfss	status,2,c
  2375  000122  D006               	goto	l2185
  2376                           
  2377                           ;MotorDriver.c: 122: EstadoActual = STATE4;
  2378  000124  0E04               	movlw	4
  2379  000126  6E4E               	movwf	_EstadoActual,c
  2380                           
  2381                           ;MotorDriver.c: 123: Microstep=31;
  2382  000128  0E00               	movlw	0
  2383  00012A  6E41               	movwf	_Microstep+1,c
  2384  00012C  0E1F               	movlw	31
  2385  00012E  6E40               	movwf	_Microstep,c
  2386  000130                     l2185:
  2387                           
  2388                           ;MotorDriver.c: 124: }
  2389                           ;MotorDriver.c: 125: Microstep--;
  2390  000130  0640               	decf	_Microstep,f,c
  2391  000132  A0D8               	btfss	status,0,c
  2392  000134  0641               	decf	_Microstep+1,f,c
  2393                           
  2394                           ;MotorDriver.c: 126: }
  2395                           ;MotorDriver.c: 127: }
  2396                           ;MotorDriver.c: 128: break;
  2397  000136  0012               	return	
  2398  000138                     l2187:
  2399                           
  2400                           ;MotorDriver.c: 130: PSTR1CON = 0x02; PSTR2CON = 0x01;
  2401  000138  0E02               	movlw	2
  2402  00013A  6EB9               	movwf	4025,c	;volatile
  2403  00013C  0E01               	movlw	1
  2404  00013E  6E63               	movwf	3939,c	;volatile
  2405                           
  2406                           ;MotorDriver.c: 131: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2407  000140  948B               	bcf	3979,2,c	;volatile
  2408  000142  908B               	bcf	3979,0,c	;volatile
  2409                           
  2410                           ;MotorDriver.c: 132: if ((Microstep<16)&&(Microstep>7)){
  2411  000144  BE41               	btfsc	_Microstep+1,7,c
  2412  000146  D006               	goto	l2195
  2413  000148  5041               	movf	_Microstep+1,w,c
  2414  00014A  E103               	bnz	u1521
  2415  00014C  0E10               	movlw	16
  2416  00014E  5C40               	subwf	_Microstep,w,c
  2417  000150  B0D8               	btfsc	status,0,c
  2418  000152                     u1521:
  2419  000152  0012               	return	
  2420  000154                     l2195:
  2421  000154  BE41               	btfsc	_Microstep+1,7,c
  2422  000156  0012               	return	
  2423  000158  5041               	movf	_Microstep+1,w,c
  2424  00015A  E104               	bnz	u1530
  2425  00015C  0E08               	movlw	8
  2426  00015E  5C40               	subwf	_Microstep,w,c
  2427  000160  A0D8               	btfss	status,0,c
  2428  000162  0012               	return	
  2429  000164                     u1530:
  2430                           
  2431                           ;MotorDriver.c: 137: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2432  000164  0E01               	movlw	low _LookUP_TABLE_COS
  2433  000166  2440               	addwf	_Microstep,w,c
  2434  000168  6ED9               	movwf	fsr2l,c
  2435  00016A  0E00               	movlw	high _LookUP_TABLE_COS
  2436  00016C  2041               	addwfc	_Microstep+1,w,c
  2437  00016E  6EDA               	movwf	fsr2h,c
  2438  000170  50DF               	movf	indf2,w,c
  2439  000172  6E33               	movwf	??_State8MEF_act& (0+255),c
  2440  000174  5033               	movf	??_State8MEF_act,w,c
  2441  000176  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2442  000178  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2443  00017A  EC37  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2444                           
  2445                           ;MotorDriver.c: 138: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2446  00017E  0EE0               	movlw	low _LookUP_TABLE_SEN
  2447  000180  2440               	addwf	_Microstep,w,c
  2448  000182  6ED9               	movwf	fsr2l,c
  2449  000184  0E00               	movlw	high _LookUP_TABLE_SEN
  2450  000186  2041               	addwfc	_Microstep+1,w,c
  2451  000188  6EDA               	movwf	fsr2h,c
  2452  00018A  50DF               	movf	indf2,w,c
  2453  00018C  6E33               	movwf	??_State8MEF_act& (0+255),c
  2454  00018E  5033               	movf	??_State8MEF_act,w,c
  2455  000190  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2456  000192  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2457  000194  EC1F  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2458                           
  2459                           ;MotorDriver.c: 140: if (direccion == 1){
  2460  000198  0434               	decf	State8MEF_act@direccion,w,c
  2461  00019A  A4D8               	btfss	status,2,c
  2462  00019C  D00A               	goto	l2207
  2463                           
  2464                           ;MotorDriver.c: 141: if (Microstep==15){
  2465  00019E  0E0F               	movlw	15
  2466  0001A0  1840               	xorwf	_Microstep,w,c
  2467  0001A2  1041               	iorwf	_Microstep+1,w,c
  2468  0001A4  A4D8               	btfss	status,2,c
  2469  0001A6  D002               	goto	l2205
  2470                           
  2471                           ;MotorDriver.c: 142: EstadoActual = STATE3;
  2472  0001A8  0E03               	movlw	3
  2473  0001AA  6E4E               	movwf	_EstadoActual,c
  2474  0001AC                     l2205:
  2475                           
  2476                           ;MotorDriver.c: 143: }
  2477                           ;MotorDriver.c: 144: Microstep++;
  2478  0001AC  4A40               	infsnz	_Microstep,f,c
  2479  0001AE  2A41               	incf	_Microstep+1,f,c
  2480                           
  2481                           ;MotorDriver.c: 145: }
  2482  0001B0  0012               	return	
  2483  0001B2                     l2207:
  2484                           
  2485                           ;MotorDriver.c: 146: else{
  2486                           ;MotorDriver.c: 147: if (Microstep==8){
  2487  0001B2  0E08               	movlw	8
  2488  0001B4  1840               	xorwf	_Microstep,w,c
  2489  0001B6  1041               	iorwf	_Microstep+1,w,c
  2490  0001B8  A4D8               	btfss	status,2,c
  2491  0001BA  D002               	goto	l2211
  2492                           
  2493                           ;MotorDriver.c: 148: EstadoActual = STATE1;
  2494  0001BC  0E01               	movlw	1
  2495  0001BE  6E4E               	movwf	_EstadoActual,c
  2496  0001C0                     l2211:
  2497                           
  2498                           ;MotorDriver.c: 149: }
  2499                           ;MotorDriver.c: 150: Microstep--;
  2500  0001C0  0640               	decf	_Microstep,f,c
  2501  0001C2  A0D8               	btfss	status,0,c
  2502  0001C4  0641               	decf	_Microstep+1,f,c
  2503                           
  2504                           ;MotorDriver.c: 151: }
  2505                           ;MotorDriver.c: 152: }
  2506                           ;MotorDriver.c: 153: break;
  2507  0001C6  0012               	return	
  2508  0001C8                     l2213:
  2509                           
  2510                           ;MotorDriver.c: 155: PSTR1CON = 0x02; PSTR2CON = 0x02;
  2511  0001C8  0E02               	movlw	2
  2512  0001CA  6EB9               	movwf	4025,c	;volatile
  2513  0001CC  0E02               	movlw	2
  2514  0001CE  6E63               	movwf	3939,c	;volatile
  2515                           
  2516                           ;MotorDriver.c: 156: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2517  0001D0  948B               	bcf	3979,2,c	;volatile
  2518  0001D2  928B               	bcf	3979,1,c	;volatile
  2519                           
  2520                           ;MotorDriver.c: 157: if ((Microstep<24)&&(Microstep>15)){
  2521  0001D4  BE41               	btfsc	_Microstep+1,7,c
  2522  0001D6  D006               	goto	l2221
  2523  0001D8  5041               	movf	_Microstep+1,w,c
  2524  0001DA  E103               	bnz	u1571
  2525  0001DC  0E18               	movlw	24
  2526  0001DE  5C40               	subwf	_Microstep,w,c
  2527  0001E0  B0D8               	btfsc	status,0,c
  2528  0001E2                     u1571:
  2529  0001E2  0012               	return	
  2530  0001E4                     l2221:
  2531  0001E4  BE41               	btfsc	_Microstep+1,7,c
  2532  0001E6  0012               	return	
  2533  0001E8  5041               	movf	_Microstep+1,w,c
  2534  0001EA  E104               	bnz	u1580
  2535  0001EC  0E10               	movlw	16
  2536  0001EE  5C40               	subwf	_Microstep,w,c
  2537  0001F0  A0D8               	btfss	status,0,c
  2538  0001F2  0012               	return	
  2539  0001F4                     u1580:
  2540                           
  2541                           ;MotorDriver.c: 162: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2542  0001F4  0E01               	movlw	low _LookUP_TABLE_COS
  2543  0001F6  2440               	addwf	_Microstep,w,c
  2544  0001F8  6ED9               	movwf	fsr2l,c
  2545  0001FA  0E00               	movlw	high _LookUP_TABLE_COS
  2546  0001FC  2041               	addwfc	_Microstep+1,w,c
  2547  0001FE  6EDA               	movwf	fsr2h,c
  2548  000200  50DF               	movf	indf2,w,c
  2549  000202  6E33               	movwf	??_State8MEF_act& (0+255),c
  2550  000204  5033               	movf	??_State8MEF_act,w,c
  2551  000206  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2552  000208  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2553  00020A  EC37  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2554                           
  2555                           ;MotorDriver.c: 163: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2556  00020E  0EE0               	movlw	low _LookUP_TABLE_SEN
  2557  000210  2440               	addwf	_Microstep,w,c
  2558  000212  6ED9               	movwf	fsr2l,c
  2559  000214  0E00               	movlw	high _LookUP_TABLE_SEN
  2560  000216  2041               	addwfc	_Microstep+1,w,c
  2561  000218  6EDA               	movwf	fsr2h,c
  2562  00021A  50DF               	movf	indf2,w,c
  2563  00021C  6E33               	movwf	??_State8MEF_act& (0+255),c
  2564  00021E  5033               	movf	??_State8MEF_act,w,c
  2565  000220  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2566  000222  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2567  000224  EC1F  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2568                           
  2569                           ;MotorDriver.c: 165: if (direccion == 1){
  2570  000228  0434               	decf	State8MEF_act@direccion,w,c
  2571  00022A  A4D8               	btfss	status,2,c
  2572  00022C  D00A               	goto	l2233
  2573                           
  2574                           ;MotorDriver.c: 166: if (Microstep==23){
  2575  00022E  0E17               	movlw	23
  2576  000230  1840               	xorwf	_Microstep,w,c
  2577  000232  1041               	iorwf	_Microstep+1,w,c
  2578  000234  A4D8               	btfss	status,2,c
  2579  000236  D002               	goto	l2231
  2580                           
  2581                           ;MotorDriver.c: 167: EstadoActual = STATE4;
  2582  000238  0E04               	movlw	4
  2583  00023A  6E4E               	movwf	_EstadoActual,c
  2584  00023C                     l2231:
  2585                           
  2586                           ;MotorDriver.c: 168: }
  2587                           ;MotorDriver.c: 169: Microstep++;
  2588  00023C  4A40               	infsnz	_Microstep,f,c
  2589  00023E  2A41               	incf	_Microstep+1,f,c
  2590                           
  2591                           ;MotorDriver.c: 170: }
  2592  000240  0012               	return	
  2593  000242                     l2233:
  2594                           
  2595                           ;MotorDriver.c: 171: else{
  2596                           ;MotorDriver.c: 172: if (Microstep==16){
  2597  000242  0E10               	movlw	16
  2598  000244  1840               	xorwf	_Microstep,w,c
  2599  000246  1041               	iorwf	_Microstep+1,w,c
  2600  000248  A4D8               	btfss	status,2,c
  2601  00024A  D002               	goto	l2237
  2602                           
  2603                           ;MotorDriver.c: 173: EstadoActual = STATE2;
  2604  00024C  0E02               	movlw	2
  2605  00024E  6E4E               	movwf	_EstadoActual,c
  2606  000250                     l2237:
  2607                           
  2608                           ;MotorDriver.c: 174: }
  2609                           ;MotorDriver.c: 175: Microstep--;
  2610  000250  0640               	decf	_Microstep,f,c
  2611  000252  A0D8               	btfss	status,0,c
  2612  000254  0641               	decf	_Microstep+1,f,c
  2613                           
  2614                           ;MotorDriver.c: 176: }
  2615                           ;MotorDriver.c: 177: }
  2616                           ;MotorDriver.c: 178: break;
  2617  000256  0012               	return	
  2618  000258                     l2239:
  2619                           
  2620                           ;MotorDriver.c: 180: PSTR1CON = 0x01; PSTR2CON = 0x02;
  2621  000258  0E01               	movlw	1
  2622  00025A  6EB9               	movwf	4025,c	;volatile
  2623  00025C  0E02               	movlw	2
  2624  00025E  6E63               	movwf	3939,c	;volatile
  2625                           
  2626                           ;MotorDriver.c: 181: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2627  000260  9A8C               	bcf	3980,5,c	;volatile
  2628  000262  928B               	bcf	3979,1,c	;volatile
  2629                           
  2630                           ;MotorDriver.c: 182: if ((Microstep<32)&&(Microstep>23)){
  2631  000264  BE41               	btfsc	_Microstep+1,7,c
  2632  000266  D006               	goto	l2247
  2633  000268  5041               	movf	_Microstep+1,w,c
  2634  00026A  E14E               	bnz	l501
  2635  00026C  0E20               	movlw	32
  2636  00026E  5C40               	subwf	_Microstep,w,c
  2637  000270  B0D8               	btfsc	status,0,c
  2638  000272  0012               	return	
  2639  000274                     l2247:
  2640  000274  BE41               	btfsc	_Microstep+1,7,c
  2641  000276  0012               	return	
  2642  000278  5041               	movf	_Microstep+1,w,c
  2643  00027A  E104               	bnz	u1630
  2644  00027C  0E18               	movlw	24
  2645  00027E  5C40               	subwf	_Microstep,w,c
  2646  000280  A0D8               	btfss	status,0,c
  2647  000282  0012               	return	
  2648  000284                     u1630:
  2649                           
  2650                           ;MotorDriver.c: 187: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2651  000284  0E01               	movlw	low _LookUP_TABLE_COS
  2652  000286  2440               	addwf	_Microstep,w,c
  2653  000288  6ED9               	movwf	fsr2l,c
  2654  00028A  0E00               	movlw	high _LookUP_TABLE_COS
  2655  00028C  2041               	addwfc	_Microstep+1,w,c
  2656  00028E  6EDA               	movwf	fsr2h,c
  2657  000290  50DF               	movf	indf2,w,c
  2658  000292  6E33               	movwf	??_State8MEF_act& (0+255),c
  2659  000294  5033               	movf	??_State8MEF_act,w,c
  2660  000296  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2661  000298  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2662  00029A  EC37  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2663                           
  2664                           ;MotorDriver.c: 188: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2665  00029E  0EE0               	movlw	low _LookUP_TABLE_SEN
  2666  0002A0  2440               	addwf	_Microstep,w,c
  2667  0002A2  6ED9               	movwf	fsr2l,c
  2668  0002A4  0E00               	movlw	high _LookUP_TABLE_SEN
  2669  0002A6  2041               	addwfc	_Microstep+1,w,c
  2670  0002A8  6EDA               	movwf	fsr2h,c
  2671  0002AA  50DF               	movf	indf2,w,c
  2672  0002AC  6E33               	movwf	??_State8MEF_act& (0+255),c
  2673  0002AE  5033               	movf	??_State8MEF_act,w,c
  2674  0002B0  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2675  0002B2  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2676  0002B4  EC1F  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2677                           
  2678                           ;MotorDriver.c: 190: if (direccion == 1){
  2679  0002B8  0434               	decf	State8MEF_act@direccion,w,c
  2680  0002BA  A4D8               	btfss	status,2,c
  2681  0002BC  D00C               	goto	l2261
  2682                           
  2683                           ;MotorDriver.c: 191: if (Microstep==31){
  2684  0002BE  0E1F               	movlw	31
  2685  0002C0  1840               	xorwf	_Microstep,w,c
  2686  0002C2  1041               	iorwf	_Microstep+1,w,c
  2687  0002C4  A4D8               	btfss	status,2,c
  2688  0002C6  D004               	goto	l2259
  2689                           
  2690                           ;MotorDriver.c: 192: EstadoActual = STATE1;
  2691  0002C8  0E01               	movlw	1
  2692  0002CA  6E4E               	movwf	_EstadoActual,c
  2693                           
  2694                           ;MotorDriver.c: 193: Microstep=-1;
  2695  0002CC  6840               	setf	_Microstep,c
  2696  0002CE  6841               	setf	_Microstep+1,c
  2697  0002D0                     l2259:
  2698                           
  2699                           ;MotorDriver.c: 194: }
  2700                           ;MotorDriver.c: 195: Microstep++;
  2701  0002D0  4A40               	infsnz	_Microstep,f,c
  2702  0002D2  2A41               	incf	_Microstep+1,f,c
  2703                           
  2704                           ;MotorDriver.c: 196: }
  2705  0002D4  0012               	return	
  2706  0002D6                     l2261:
  2707                           
  2708                           ;MotorDriver.c: 197: else{
  2709                           ;MotorDriver.c: 198: if (Microstep==24){
  2710  0002D6  0E18               	movlw	24
  2711  0002D8  1840               	xorwf	_Microstep,w,c
  2712  0002DA  1041               	iorwf	_Microstep+1,w,c
  2713  0002DC  A4D8               	btfss	status,2,c
  2714  0002DE  D002               	goto	l2265
  2715                           
  2716                           ;MotorDriver.c: 199: EstadoActual = STATE3;
  2717  0002E0  0E03               	movlw	3
  2718  0002E2  6E4E               	movwf	_EstadoActual,c
  2719  0002E4                     l2265:
  2720                           
  2721                           ;MotorDriver.c: 200: }
  2722                           ;MotorDriver.c: 201: Microstep--;
  2723  0002E4  0640               	decf	_Microstep,f,c
  2724  0002E6  A0D8               	btfss	status,0,c
  2725  0002E8  0641               	decf	_Microstep+1,f,c
  2726                           
  2727                           ;MotorDriver.c: 208: }
  2728                           
  2729                           ;MotorDriver.c: 207: break;
  2730                           
  2731                           ;MotorDriver.c: 205: default:
  2732                           
  2733                           ;MotorDriver.c: 202: }
  2734                           ;MotorDriver.c: 203: }
  2735                           ;MotorDriver.c: 204: break;
  2736  0002EA  0012               	return	
  2737  0002EC                     l2269:
  2738  0002EC  504E               	movf	_EstadoActual,w,c
  2739                           
  2740                           ; Switch size 1, requested type "space"
  2741                           ; Number of cases is 4, Range of values is 1 to 4
  2742                           ; switch strategies available:
  2743                           ; Name         Instructions Cycles
  2744                           ; simple_byte           13     7 (average)
  2745                           ;	Chosen strategy is simple_byte
  2746  0002EE  0A01               	xorlw	1	; case 1
  2747  0002F0  B4D8               	btfsc	status,2,c
  2748  0002F2  D6DF               	goto	l2163
  2749  0002F4  0A03               	xorlw	3	; case 2
  2750  0002F6  B4D8               	btfsc	status,2,c
  2751  0002F8  D71F               	goto	l2187
  2752  0002FA  0A01               	xorlw	1	; case 3
  2753  0002FC  B4D8               	btfsc	status,2,c
  2754  0002FE  D764               	goto	l2213
  2755  000300  0A07               	xorlw	7	; case 4
  2756  000302  A4D8               	btfss	status,2,c
  2757  000304  0012               	return	
  2758  000306  D7A8               	goto	l2239
  2759  000308                     l501:
  2760  000308  0012               	return		;funcret
  2761  00030A                     __end_of_State8MEF_act:
  2762                           	opt stack 0
  2763                           tblptru	equ	0xFF8
  2764                           tblptrh	equ	0xFF7
  2765                           tblptrl	equ	0xFF6
  2766                           tablat	equ	0xFF5
  2767                           intcon	equ	0xFF2
  2768                           intcon2	equ	0xFF1
  2769                           postinc0	equ	0xFEE
  2770                           wreg	equ	0xFE8
  2771                           postdec1	equ	0xFE5
  2772                           fsr1l	equ	0xFE1
  2773                           indf2	equ	0xFDF
  2774                           fsr2h	equ	0xFDA
  2775                           fsr2l	equ	0xFD9
  2776                           status	equ	0xFD8
  2777                           
  2778 ;; *************** function _State16MEF_act *****************
  2779 ;; Defined at:
  2780 ;;		line 211 in file "MotorDriver.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  direccion       1    wreg     unsigned char 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  direccion       1   19[COMRAM] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;Total ram usage:        2 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:    5
  2801 ;; This function calls:
  2802 ;;		_EPWM1_LoadDutyValue
  2803 ;;		_EPWM2_LoadDutyValue
  2804 ;; This function is called by:
  2805 ;;		_StepMove
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text20
  2810  00030A                     __ptext20:
  2811                           	opt stack 0
  2812  00030A                     _State16MEF_act:
  2813                           	opt stack 24
  2814                           
  2815                           ;incstack = 0
  2816                           ;State16MEF_act@direccion stored from wreg
  2817  00030A  6E34               	movwf	State16MEF_act@direccion,c
  2818                           
  2819                           ;MotorDriver.c: 213: switch(EstadoActual) {
  2820  00030C  D11D               	goto	l2159
  2821  00030E                     l2053:
  2822                           
  2823                           ;MotorDriver.c: 215: PSTR1CON = 0x01; PSTR2CON = 0x01;
  2824  00030E  0E01               	movlw	1
  2825  000310  6EB9               	movwf	4025,c	;volatile
  2826  000312  0E01               	movlw	1
  2827  000314  6E63               	movwf	3939,c	;volatile
  2828                           
  2829                           ;MotorDriver.c: 216: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2830  000316  9A8C               	bcf	3980,5,c	;volatile
  2831  000318  908B               	bcf	3979,0,c	;volatile
  2832                           
  2833                           ;MotorDriver.c: 217: if (Microstep<16){
  2834  00031A  BE41               	btfsc	_Microstep+1,7,c
  2835  00031C  D006               	goto	l2061
  2836  00031E  5041               	movf	_Microstep+1,w,c
  2837  000320  E103               	bnz	u1291
  2838  000322  0E10               	movlw	16
  2839  000324  5C40               	subwf	_Microstep,w,c
  2840  000326  B0D8               	btfsc	status,0,c
  2841  000328                     u1291:
  2842  000328  0012               	return	
  2843  00032A                     l2061:
  2844                           
  2845                           ;MotorDriver.c: 221: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2846  00032A  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2847  00032C  2440               	addwf	_Microstep,w,c
  2848  00032E  6ED9               	movwf	fsr2l,c
  2849  000330  0E00               	movlw	high _LookUP_TABLE_COS_16
  2850  000332  2041               	addwfc	_Microstep+1,w,c
  2851  000334  6EDA               	movwf	fsr2h,c
  2852  000336  50DF               	movf	indf2,w,c
  2853  000338  6E33               	movwf	??_State16MEF_act& (0+255),c
  2854  00033A  5033               	movf	??_State16MEF_act,w,c
  2855  00033C  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2856  00033E  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2857  000340  EC37  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2858                           
  2859                           ;MotorDriver.c: 222: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2860  000344  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2861  000346  2440               	addwf	_Microstep,w,c
  2862  000348  6ED9               	movwf	fsr2l,c
  2863  00034A  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2864  00034C  2041               	addwfc	_Microstep+1,w,c
  2865  00034E  6EDA               	movwf	fsr2h,c
  2866  000350  50DF               	movf	indf2,w,c
  2867  000352  6E33               	movwf	??_State16MEF_act& (0+255),c
  2868  000354  5033               	movf	??_State16MEF_act,w,c
  2869  000356  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2870  000358  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2871  00035A  EC1F  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2872                           
  2873                           ;MotorDriver.c: 224: if (direccion == 1){
  2874  00035E  0434               	decf	State16MEF_act@direccion,w,c
  2875  000360  A4D8               	btfss	status,2,c
  2876  000362  D00A               	goto	l2071
  2877                           
  2878                           ;MotorDriver.c: 225: if (Microstep==15){
  2879  000364  0E0F               	movlw	15
  2880  000366  1840               	xorwf	_Microstep,w,c
  2881  000368  1041               	iorwf	_Microstep+1,w,c
  2882  00036A  A4D8               	btfss	status,2,c
  2883  00036C  D002               	goto	l2069
  2884                           
  2885                           ;MotorDriver.c: 226: EstadoActual = STATE2;
  2886  00036E  0E02               	movlw	2
  2887  000370  6E4E               	movwf	_EstadoActual,c
  2888  000372                     l2069:
  2889                           
  2890                           ;MotorDriver.c: 227: }
  2891                           ;MotorDriver.c: 228: Microstep++;
  2892  000372  4A40               	infsnz	_Microstep,f,c
  2893  000374  2A41               	incf	_Microstep+1,f,c
  2894                           
  2895                           ;MotorDriver.c: 229: }
  2896  000376  0012               	return	
  2897  000378                     l2071:
  2898                           
  2899                           ;MotorDriver.c: 230: else{
  2900                           ;MotorDriver.c: 231: if (Microstep==0){
  2901  000378  5040               	movf	_Microstep,w,c
  2902  00037A  1041               	iorwf	_Microstep+1,w,c
  2903  00037C  A4D8               	btfss	status,2,c
  2904  00037E  D006               	goto	l2075
  2905                           
  2906                           ;MotorDriver.c: 232: EstadoActual = STATE4;
  2907  000380  0E04               	movlw	4
  2908  000382  6E4E               	movwf	_EstadoActual,c
  2909                           
  2910                           ;MotorDriver.c: 233: Microstep=63;
  2911  000384  0E00               	movlw	0
  2912  000386  6E41               	movwf	_Microstep+1,c
  2913  000388  0E3F               	movlw	63
  2914  00038A  6E40               	movwf	_Microstep,c
  2915  00038C                     l2075:
  2916                           
  2917                           ;MotorDriver.c: 234: }
  2918                           ;MotorDriver.c: 235: Microstep--;
  2919  00038C  0640               	decf	_Microstep,f,c
  2920  00038E  A0D8               	btfss	status,0,c
  2921  000390  0641               	decf	_Microstep+1,f,c
  2922                           
  2923                           ;MotorDriver.c: 236: }
  2924                           ;MotorDriver.c: 237: }
  2925                           ;MotorDriver.c: 238: break;
  2926  000392  0012               	return	
  2927  000394                     l2077:
  2928                           
  2929                           ;MotorDriver.c: 240: PSTR1CON = 0x02; PSTR2CON = 0x01;
  2930  000394  0E02               	movlw	2
  2931  000396  6EB9               	movwf	4025,c	;volatile
  2932  000398  0E01               	movlw	1
  2933  00039A  6E63               	movwf	3939,c	;volatile
  2934                           
  2935                           ;MotorDriver.c: 241: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2936  00039C  948B               	bcf	3979,2,c	;volatile
  2937  00039E  908B               	bcf	3979,0,c	;volatile
  2938                           
  2939                           ;MotorDriver.c: 242: if ((Microstep<32)&&(Microstep>15)){
  2940  0003A0  BE41               	btfsc	_Microstep+1,7,c
  2941  0003A2  D006               	goto	l2085
  2942  0003A4  5041               	movf	_Microstep+1,w,c
  2943  0003A6  E103               	bnz	u1331
  2944  0003A8  0E20               	movlw	32
  2945  0003AA  5C40               	subwf	_Microstep,w,c
  2946  0003AC  B0D8               	btfsc	status,0,c
  2947  0003AE                     u1331:
  2948  0003AE  0012               	return	
  2949  0003B0                     l2085:
  2950  0003B0  BE41               	btfsc	_Microstep+1,7,c
  2951  0003B2  0012               	return	
  2952  0003B4  5041               	movf	_Microstep+1,w,c
  2953  0003B6  E104               	bnz	u1340
  2954  0003B8  0E10               	movlw	16
  2955  0003BA  5C40               	subwf	_Microstep,w,c
  2956  0003BC  A0D8               	btfss	status,0,c
  2957  0003BE  0012               	return	
  2958  0003C0                     u1340:
  2959                           
  2960                           ;MotorDriver.c: 247: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2961  0003C0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2962  0003C2  2440               	addwf	_Microstep,w,c
  2963  0003C4  6ED9               	movwf	fsr2l,c
  2964  0003C6  0E00               	movlw	high _LookUP_TABLE_COS_16
  2965  0003C8  2041               	addwfc	_Microstep+1,w,c
  2966  0003CA  6EDA               	movwf	fsr2h,c
  2967  0003CC  50DF               	movf	indf2,w,c
  2968  0003CE  6E33               	movwf	??_State16MEF_act& (0+255),c
  2969  0003D0  5033               	movf	??_State16MEF_act,w,c
  2970  0003D2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2971  0003D4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2972  0003D6  EC37  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2973                           
  2974                           ;MotorDriver.c: 248: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2975  0003DA  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2976  0003DC  2440               	addwf	_Microstep,w,c
  2977  0003DE  6ED9               	movwf	fsr2l,c
  2978  0003E0  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2979  0003E2  2041               	addwfc	_Microstep+1,w,c
  2980  0003E4  6EDA               	movwf	fsr2h,c
  2981  0003E6  50DF               	movf	indf2,w,c
  2982  0003E8  6E33               	movwf	??_State16MEF_act& (0+255),c
  2983  0003EA  5033               	movf	??_State16MEF_act,w,c
  2984  0003EC  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2985  0003EE  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2986  0003F0  EC1F  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2987                           
  2988                           ;MotorDriver.c: 250: if (direccion == 1){
  2989  0003F4  0434               	decf	State16MEF_act@direccion,w,c
  2990  0003F6  A4D8               	btfss	status,2,c
  2991  0003F8  D00A               	goto	l2097
  2992                           
  2993                           ;MotorDriver.c: 251: if (Microstep==31){
  2994  0003FA  0E1F               	movlw	31
  2995  0003FC  1840               	xorwf	_Microstep,w,c
  2996  0003FE  1041               	iorwf	_Microstep+1,w,c
  2997  000400  A4D8               	btfss	status,2,c
  2998  000402  D002               	goto	l2095
  2999                           
  3000                           ;MotorDriver.c: 252: EstadoActual = STATE3;
  3001  000404  0E03               	movlw	3
  3002  000406  6E4E               	movwf	_EstadoActual,c
  3003  000408                     l2095:
  3004                           
  3005                           ;MotorDriver.c: 253: }
  3006                           ;MotorDriver.c: 254: Microstep++;
  3007  000408  4A40               	infsnz	_Microstep,f,c
  3008  00040A  2A41               	incf	_Microstep+1,f,c
  3009                           
  3010                           ;MotorDriver.c: 255: }
  3011  00040C  0012               	return	
  3012  00040E                     l2097:
  3013                           
  3014                           ;MotorDriver.c: 256: else{
  3015                           ;MotorDriver.c: 257: if (Microstep==16){
  3016  00040E  0E10               	movlw	16
  3017  000410  1840               	xorwf	_Microstep,w,c
  3018  000412  1041               	iorwf	_Microstep+1,w,c
  3019  000414  A4D8               	btfss	status,2,c
  3020  000416  D002               	goto	l2101
  3021                           
  3022                           ;MotorDriver.c: 258: EstadoActual = STATE1;
  3023  000418  0E01               	movlw	1
  3024  00041A  6E4E               	movwf	_EstadoActual,c
  3025  00041C                     l2101:
  3026                           
  3027                           ;MotorDriver.c: 259: }
  3028                           ;MotorDriver.c: 260: Microstep--;
  3029  00041C  0640               	decf	_Microstep,f,c
  3030  00041E  A0D8               	btfss	status,0,c
  3031  000420  0641               	decf	_Microstep+1,f,c
  3032                           
  3033                           ;MotorDriver.c: 261: }
  3034                           ;MotorDriver.c: 262: }
  3035                           ;MotorDriver.c: 263: break;
  3036  000422  0012               	return	
  3037  000424                     l2103:
  3038                           
  3039                           ;MotorDriver.c: 265: PSTR1CON = 0x02; PSTR2CON = 0x02;
  3040  000424  0E02               	movlw	2
  3041  000426  6EB9               	movwf	4025,c	;volatile
  3042  000428  0E02               	movlw	2
  3043  00042A  6E63               	movwf	3939,c	;volatile
  3044                           
  3045                           ;MotorDriver.c: 266: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  3046  00042C  948B               	bcf	3979,2,c	;volatile
  3047  00042E  928B               	bcf	3979,1,c	;volatile
  3048                           
  3049                           ;MotorDriver.c: 267: if ((Microstep<48)&&(Microstep>31)){
  3050  000430  BE41               	btfsc	_Microstep+1,7,c
  3051  000432  D006               	goto	l2111
  3052  000434  5041               	movf	_Microstep+1,w,c
  3053  000436  E103               	bnz	u1381
  3054  000438  0E30               	movlw	48
  3055  00043A  5C40               	subwf	_Microstep,w,c
  3056  00043C  B0D8               	btfsc	status,0,c
  3057  00043E                     u1381:
  3058  00043E  0012               	return	
  3059  000440                     l2111:
  3060  000440  BE41               	btfsc	_Microstep+1,7,c
  3061  000442  0012               	return	
  3062  000444  5041               	movf	_Microstep+1,w,c
  3063  000446  E104               	bnz	u1390
  3064  000448  0E20               	movlw	32
  3065  00044A  5C40               	subwf	_Microstep,w,c
  3066  00044C  A0D8               	btfss	status,0,c
  3067  00044E  0012               	return	
  3068  000450                     u1390:
  3069                           
  3070                           ;MotorDriver.c: 272: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  3071  000450  0EA0               	movlw	low _LookUP_TABLE_COS_16
  3072  000452  2440               	addwf	_Microstep,w,c
  3073  000454  6ED9               	movwf	fsr2l,c
  3074  000456  0E00               	movlw	high _LookUP_TABLE_COS_16
  3075  000458  2041               	addwfc	_Microstep+1,w,c
  3076  00045A  6EDA               	movwf	fsr2h,c
  3077  00045C  50DF               	movf	indf2,w,c
  3078  00045E  6E33               	movwf	??_State16MEF_act& (0+255),c
  3079  000460  5033               	movf	??_State16MEF_act,w,c
  3080  000462  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3081  000464  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3082  000466  EC37  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3083                           
  3084                           ;MotorDriver.c: 273: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  3085  00046A  0E60               	movlw	low _LookUP_TABLE_SEN_16
  3086  00046C  2440               	addwf	_Microstep,w,c
  3087  00046E  6ED9               	movwf	fsr2l,c
  3088  000470  0E00               	movlw	high _LookUP_TABLE_SEN_16
  3089  000472  2041               	addwfc	_Microstep+1,w,c
  3090  000474  6EDA               	movwf	fsr2h,c
  3091  000476  50DF               	movf	indf2,w,c
  3092  000478  6E33               	movwf	??_State16MEF_act& (0+255),c
  3093  00047A  5033               	movf	??_State16MEF_act,w,c
  3094  00047C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3095  00047E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3096  000480  EC1F  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3097                           
  3098                           ;MotorDriver.c: 275: if (direccion == 1){
  3099  000484  0434               	decf	State16MEF_act@direccion,w,c
  3100  000486  A4D8               	btfss	status,2,c
  3101  000488  D00A               	goto	l2123
  3102                           
  3103                           ;MotorDriver.c: 276: if (Microstep==47){
  3104  00048A  0E2F               	movlw	47
  3105  00048C  1840               	xorwf	_Microstep,w,c
  3106  00048E  1041               	iorwf	_Microstep+1,w,c
  3107  000490  A4D8               	btfss	status,2,c
  3108  000492  D002               	goto	l2121
  3109                           
  3110                           ;MotorDriver.c: 277: EstadoActual = STATE4;
  3111  000494  0E04               	movlw	4
  3112  000496  6E4E               	movwf	_EstadoActual,c
  3113  000498                     l2121:
  3114                           
  3115                           ;MotorDriver.c: 278: }
  3116                           ;MotorDriver.c: 279: Microstep++;
  3117  000498  4A40               	infsnz	_Microstep,f,c
  3118  00049A  2A41               	incf	_Microstep+1,f,c
  3119                           
  3120                           ;MotorDriver.c: 280: }
  3121  00049C  0012               	return	
  3122  00049E                     l2123:
  3123                           
  3124                           ;MotorDriver.c: 281: else{
  3125                           ;MotorDriver.c: 282: if (Microstep==32){
  3126  00049E  0E20               	movlw	32
  3127  0004A0  1840               	xorwf	_Microstep,w,c
  3128  0004A2  1041               	iorwf	_Microstep+1,w,c
  3129  0004A4  A4D8               	btfss	status,2,c
  3130  0004A6  D002               	goto	l2127
  3131                           
  3132                           ;MotorDriver.c: 283: EstadoActual = STATE2;
  3133  0004A8  0E02               	movlw	2
  3134  0004AA  6E4E               	movwf	_EstadoActual,c
  3135  0004AC                     l2127:
  3136                           
  3137                           ;MotorDriver.c: 284: }
  3138                           ;MotorDriver.c: 285: Microstep--;
  3139  0004AC  0640               	decf	_Microstep,f,c
  3140  0004AE  A0D8               	btfss	status,0,c
  3141  0004B0  0641               	decf	_Microstep+1,f,c
  3142                           
  3143                           ;MotorDriver.c: 286: }
  3144                           ;MotorDriver.c: 287: }
  3145                           ;MotorDriver.c: 288: break;
  3146  0004B2  0012               	return	
  3147  0004B4                     l2129:
  3148                           
  3149                           ;MotorDriver.c: 290: PSTR1CON = 0x01; PSTR2CON = 0x02;
  3150  0004B4  0E01               	movlw	1
  3151  0004B6  6EB9               	movwf	4025,c	;volatile
  3152  0004B8  0E02               	movlw	2
  3153  0004BA  6E63               	movwf	3939,c	;volatile
  3154                           
  3155                           ;MotorDriver.c: 291: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  3156  0004BC  9A8C               	bcf	3980,5,c	;volatile
  3157  0004BE  928B               	bcf	3979,1,c	;volatile
  3158                           
  3159                           ;MotorDriver.c: 292: if ((Microstep<64)&&(Microstep>47)){
  3160  0004C0  BE41               	btfsc	_Microstep+1,7,c
  3161  0004C2  D006               	goto	l2137
  3162  0004C4  5041               	movf	_Microstep+1,w,c
  3163  0004C6  E14E               	bnz	l547
  3164  0004C8  0E40               	movlw	64
  3165  0004CA  5C40               	subwf	_Microstep,w,c
  3166  0004CC  B0D8               	btfsc	status,0,c
  3167  0004CE  0012               	return	
  3168  0004D0                     l2137:
  3169  0004D0  BE41               	btfsc	_Microstep+1,7,c
  3170  0004D2  0012               	return	
  3171  0004D4  5041               	movf	_Microstep+1,w,c
  3172  0004D6  E104               	bnz	u1440
  3173  0004D8  0E30               	movlw	48
  3174  0004DA  5C40               	subwf	_Microstep,w,c
  3175  0004DC  A0D8               	btfss	status,0,c
  3176  0004DE  0012               	return	
  3177  0004E0                     u1440:
  3178                           
  3179                           ;MotorDriver.c: 297: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  3180  0004E0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  3181  0004E2  2440               	addwf	_Microstep,w,c
  3182  0004E4  6ED9               	movwf	fsr2l,c
  3183  0004E6  0E00               	movlw	high _LookUP_TABLE_COS_16
  3184  0004E8  2041               	addwfc	_Microstep+1,w,c
  3185  0004EA  6EDA               	movwf	fsr2h,c
  3186  0004EC  50DF               	movf	indf2,w,c
  3187  0004EE  6E33               	movwf	??_State16MEF_act& (0+255),c
  3188  0004F0  5033               	movf	??_State16MEF_act,w,c
  3189  0004F2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3190  0004F4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3191  0004F6  EC37  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3192                           
  3193                           ;MotorDriver.c: 298: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  3194  0004FA  0E60               	movlw	low _LookUP_TABLE_SEN_16
  3195  0004FC  2440               	addwf	_Microstep,w,c
  3196  0004FE  6ED9               	movwf	fsr2l,c
  3197  000500  0E00               	movlw	high _LookUP_TABLE_SEN_16
  3198  000502  2041               	addwfc	_Microstep+1,w,c
  3199  000504  6EDA               	movwf	fsr2h,c
  3200  000506  50DF               	movf	indf2,w,c
  3201  000508  6E33               	movwf	??_State16MEF_act& (0+255),c
  3202  00050A  5033               	movf	??_State16MEF_act,w,c
  3203  00050C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3204  00050E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3205  000510  EC1F  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3206                           
  3207                           ;MotorDriver.c: 300: if (direccion == 1){
  3208  000514  0434               	decf	State16MEF_act@direccion,w,c
  3209  000516  A4D8               	btfss	status,2,c
  3210  000518  D00C               	goto	l2151
  3211                           
  3212                           ;MotorDriver.c: 301: if (Microstep==63){
  3213  00051A  0E3F               	movlw	63
  3214  00051C  1840               	xorwf	_Microstep,w,c
  3215  00051E  1041               	iorwf	_Microstep+1,w,c
  3216  000520  A4D8               	btfss	status,2,c
  3217  000522  D004               	goto	l2149
  3218                           
  3219                           ;MotorDriver.c: 302: EstadoActual = STATE1;
  3220  000524  0E01               	movlw	1
  3221  000526  6E4E               	movwf	_EstadoActual,c
  3222                           
  3223                           ;MotorDriver.c: 303: Microstep=-1;
  3224  000528  6840               	setf	_Microstep,c
  3225  00052A  6841               	setf	_Microstep+1,c
  3226  00052C                     l2149:
  3227                           
  3228                           ;MotorDriver.c: 304: }
  3229                           ;MotorDriver.c: 305: Microstep++;
  3230  00052C  4A40               	infsnz	_Microstep,f,c
  3231  00052E  2A41               	incf	_Microstep+1,f,c
  3232                           
  3233                           ;MotorDriver.c: 306: }
  3234  000530  0012               	return	
  3235  000532                     l2151:
  3236                           
  3237                           ;MotorDriver.c: 307: else{
  3238                           ;MotorDriver.c: 308: if (Microstep==48){
  3239  000532  0E30               	movlw	48
  3240  000534  1840               	xorwf	_Microstep,w,c
  3241  000536  1041               	iorwf	_Microstep+1,w,c
  3242  000538  A4D8               	btfss	status,2,c
  3243  00053A  D002               	goto	l2155
  3244                           
  3245                           ;MotorDriver.c: 309: EstadoActual = STATE3;
  3246  00053C  0E03               	movlw	3
  3247  00053E  6E4E               	movwf	_EstadoActual,c
  3248  000540                     l2155:
  3249                           
  3250                           ;MotorDriver.c: 310: }
  3251                           ;MotorDriver.c: 311: Microstep--;
  3252  000540  0640               	decf	_Microstep,f,c
  3253  000542  A0D8               	btfss	status,0,c
  3254  000544  0641               	decf	_Microstep+1,f,c
  3255                           
  3256                           ;MotorDriver.c: 318: }
  3257                           
  3258                           ;MotorDriver.c: 317: break;
  3259                           
  3260                           ;MotorDriver.c: 315: default:
  3261                           
  3262                           ;MotorDriver.c: 312: }
  3263                           ;MotorDriver.c: 313: }
  3264                           ;MotorDriver.c: 314: break;
  3265  000546  0012               	return	
  3266  000548                     l2159:
  3267  000548  504E               	movf	_EstadoActual,w,c
  3268                           
  3269                           ; Switch size 1, requested type "space"
  3270                           ; Number of cases is 4, Range of values is 1 to 4
  3271                           ; switch strategies available:
  3272                           ; Name         Instructions Cycles
  3273                           ; simple_byte           13     7 (average)
  3274                           ;	Chosen strategy is simple_byte
  3275  00054A  0A01               	xorlw	1	; case 1
  3276  00054C  B4D8               	btfsc	status,2,c
  3277  00054E  D6DF               	goto	l2053
  3278  000550  0A03               	xorlw	3	; case 2
  3279  000552  B4D8               	btfsc	status,2,c
  3280  000554  D71F               	goto	l2077
  3281  000556  0A01               	xorlw	1	; case 3
  3282  000558  B4D8               	btfsc	status,2,c
  3283  00055A  D764               	goto	l2103
  3284  00055C  0A07               	xorlw	7	; case 4
  3285  00055E  A4D8               	btfss	status,2,c
  3286  000560  0012               	return	
  3287  000562  D7A8               	goto	l2129
  3288  000564                     l547:
  3289  000564  0012               	return		;funcret
  3290  000566                     __end_of_State16MEF_act:
  3291                           	opt stack 0
  3292                           tblptru	equ	0xFF8
  3293                           tblptrh	equ	0xFF7
  3294                           tblptrl	equ	0xFF6
  3295                           tablat	equ	0xFF5
  3296                           intcon	equ	0xFF2
  3297                           intcon2	equ	0xFF1
  3298                           postinc0	equ	0xFEE
  3299                           wreg	equ	0xFE8
  3300                           postdec1	equ	0xFE5
  3301                           fsr1l	equ	0xFE1
  3302                           indf2	equ	0xFDF
  3303                           fsr2h	equ	0xFDA
  3304                           fsr2l	equ	0xFD9
  3305                           status	equ	0xFD8
  3306                           
  3307 ;; *************** function _EPWM2_LoadDutyValue *****************
  3308 ;; Defined at:
  3309 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  dutyValue       2   14[COMRAM] unsigned int 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;Total ram usage:        4 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    4
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_State8MEF_act
  3334 ;;		_State16MEF_act
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text21
  3339  00083E                     __ptext21:
  3340                           	opt stack 0
  3341  00083E                     _EPWM2_LoadDutyValue:
  3342                           	opt stack 24
  3343                           
  3344                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  3345                           
  3346                           ;incstack = 0
  3347  00083E  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3348  000842  C030  F032         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  3349  000846  90D8               	bcf	status,0,c
  3350  000848  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  3351  00084A  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  3352  00084C  90D8               	bcf	status,0,c
  3353  00084E  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  3354  000850  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  3355  000852  5031               	movf	??_EPWM2_LoadDutyValue,w,c
  3356  000854  6E67               	movwf	3943,c	;volatile
  3357                           
  3358                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3359  000856  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3360  00085A  0E03               	movlw	3
  3361  00085C  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  3362  00085E  3A31               	swapf	??_EPWM2_LoadDutyValue,f,c
  3363  000860  0EF0               	movlw	240
  3364  000862  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  3365  000864  5066               	movf	3942,w,c	;volatile
  3366  000866  0BCF               	andlw	207
  3367  000868  1031               	iorwf	??_EPWM2_LoadDutyValue,w,c
  3368  00086A  6E66               	movwf	3942,c	;volatile
  3369  00086C  0012               	return		;funcret
  3370  00086E                     __end_of_EPWM2_LoadDutyValue:
  3371                           	opt stack 0
  3372                           tblptru	equ	0xFF8
  3373                           tblptrh	equ	0xFF7
  3374                           tblptrl	equ	0xFF6
  3375                           tablat	equ	0xFF5
  3376                           intcon	equ	0xFF2
  3377                           intcon2	equ	0xFF1
  3378                           postinc0	equ	0xFEE
  3379                           wreg	equ	0xFE8
  3380                           postdec1	equ	0xFE5
  3381                           fsr1l	equ	0xFE1
  3382                           indf2	equ	0xFDF
  3383                           fsr2h	equ	0xFDA
  3384                           fsr2l	equ	0xFD9
  3385                           status	equ	0xFD8
  3386                           
  3387 ;; *************** function _EPWM1_LoadDutyValue *****************
  3388 ;; Defined at:
  3389 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  dutyValue       2   14[COMRAM] unsigned int 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;Total ram usage:        4 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    4
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_State8MEF_act
  3414 ;;		_State16MEF_act
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text22
  3419  00086E                     __ptext22:
  3420                           	opt stack 0
  3421  00086E                     _EPWM1_LoadDutyValue:
  3422                           	opt stack 24
  3423                           
  3424                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  3425                           
  3426                           ;incstack = 0
  3427  00086E  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3428  000872  C030  F032         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  3429  000876  90D8               	bcf	status,0,c
  3430  000878  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3431  00087A  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3432  00087C  90D8               	bcf	status,0,c
  3433  00087E  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3434  000880  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3435  000882  5031               	movf	??_EPWM1_LoadDutyValue,w,c
  3436  000884  6EBE               	movwf	4030,c	;volatile
  3437                           
  3438                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3439  000886  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3440  00088A  0E03               	movlw	3
  3441  00088C  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  3442  00088E  3A31               	swapf	??_EPWM1_LoadDutyValue,f,c
  3443  000890  0EF0               	movlw	240
  3444  000892  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  3445  000894  50BD               	movf	4029,w,c	;volatile
  3446  000896  0BCF               	andlw	207
  3447  000898  1031               	iorwf	??_EPWM1_LoadDutyValue,w,c
  3448  00089A  6EBD               	movwf	4029,c	;volatile
  3449  00089C  0012               	return		;funcret
  3450  00089E                     __end_of_EPWM1_LoadDutyValue:
  3451                           	opt stack 0
  3452                           tblptru	equ	0xFF8
  3453                           tblptrh	equ	0xFF7
  3454                           tblptrl	equ	0xFF6
  3455                           tablat	equ	0xFF5
  3456                           intcon	equ	0xFF2
  3457                           intcon2	equ	0xFF1
  3458                           postinc0	equ	0xFEE
  3459                           wreg	equ	0xFE8
  3460                           postdec1	equ	0xFE5
  3461                           fsr1l	equ	0xFE1
  3462                           indf2	equ	0xFDF
  3463                           fsr2h	equ	0xFDA
  3464                           fsr2l	equ	0xFD9
  3465                           status	equ	0xFD8
  3466                           
  3467 ;; *************** function _Motor_Stop *****************
  3468 ;; Defined at:
  3469 ;;		line 81 in file "MotorDriver.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;Total ram usage:        0 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    4
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text23
  3498  000A22                     __ptext23:
  3499                           	opt stack 0
  3500  000A22                     _Motor_Stop:
  3501                           	opt stack 26
  3502                           
  3503                           ;MotorDriver.c: 82: PSTR1CON = 0x00; PSTR2CON = 0x00;
  3504                           
  3505                           ;incstack = 0
  3506  000A22  0E00               	movlw	0
  3507  000A24  6EB9               	movwf	4025,c	;volatile
  3508  000A26  0E00               	movlw	0
  3509  000A28  6E63               	movwf	3939,c	;volatile
  3510                           
  3511                           ;MotorDriver.c: 83: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whil
      +                          e(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  3512  000A2A  948B               	bcf	3979,2,c	;volatile
  3513  000A2C  9A8C               	bcf	3980,5,c	;volatile
  3514  000A2E  928B               	bcf	3979,1,c	;volatile
  3515  000A30  908B               	bcf	3979,0,c	;volatile
  3516  000A32  0012               	return	
  3517  000A34                     __end_of_Motor_Stop:
  3518                           	opt stack 0
  3519                           tblptru	equ	0xFF8
  3520                           tblptrh	equ	0xFF7
  3521                           tblptrl	equ	0xFF6
  3522                           tablat	equ	0xFF5
  3523                           intcon	equ	0xFF2
  3524                           intcon2	equ	0xFF1
  3525                           postinc0	equ	0xFEE
  3526                           wreg	equ	0xFE8
  3527                           postdec1	equ	0xFE5
  3528                           fsr1l	equ	0xFE1
  3529                           indf2	equ	0xFDF
  3530                           fsr2h	equ	0xFDA
  3531                           fsr2l	equ	0xFD9
  3532                           status	equ	0xFD8
  3533                           
  3534 ;; *************** function _DelayTmr2 *****************
  3535 ;; Defined at:
  3536 ;;		line 86 in file "MotorDriver.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  Timeout         2   14[COMRAM] unsigned int 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;		None
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;Total ram usage:        2 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; Hardware stack levels required when called:    4
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_main
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text24
  3565  0009C4                     __ptext24:
  3566                           	opt stack 0
  3567  0009C4                     _DelayTmr2:
  3568                           	opt stack 0
  3569                           
  3570                           ;incstack = 0
  3571  0009C4  D006               	goto	l2003
  3572  0009C6                     l1999:
  3573                           
  3574                           ;MotorDriver.c: 92: {
  3575                           ;MotorDriver.c: 93: if (DelayTimerTicked)
  3576  0009C6  5048               	movf	_DelayTimerTicked,w,c	;volatile
  3577  0009C8  B4D8               	btfsc	status,2,c
  3578  0009CA  D005               	goto	l2005
  3579                           
  3580                           ;MotorDriver.c: 94: {
  3581                           ;MotorDriver.c: 95: Timeout--;
  3582  0009CC  062F               	decf	DelayTmr2@Timeout,f,c
  3583  0009CE  A0D8               	btfss	status,0,c
  3584  0009D0  0630               	decf	DelayTmr2@Timeout+1,f,c
  3585  0009D2                     l2003:
  3586                           
  3587                           ;MotorDriver.c: 96: DelayTimerTicked = 0;
  3588  0009D2  0E00               	movlw	0
  3589  0009D4  6E48               	movwf	_DelayTimerTicked,c	;volatile
  3590  0009D6                     l2005:
  3591  0009D6  502F               	movf	DelayTmr2@Timeout,w,c
  3592  0009D8  1030               	iorwf	DelayTmr2@Timeout+1,w,c
  3593  0009DA  B4D8               	btfsc	status,2,c
  3594  0009DC  0012               	return	
  3595  0009DE  D7F3               	goto	l1999
  3596  0009E0                     __end_of_DelayTmr2:
  3597                           	opt stack 0
  3598                           tblptru	equ	0xFF8
  3599                           tblptrh	equ	0xFF7
  3600                           tblptrl	equ	0xFF6
  3601                           tablat	equ	0xFF5
  3602                           intcon	equ	0xFF2
  3603                           intcon2	equ	0xFF1
  3604                           postinc0	equ	0xFEE
  3605                           wreg	equ	0xFE8
  3606                           postdec1	equ	0xFE5
  3607                           fsr1l	equ	0xFE1
  3608                           indf2	equ	0xFDF
  3609                           fsr2h	equ	0xFDA
  3610                           fsr2l	equ	0xFD9
  3611                           status	equ	0xFD8
  3612                           
  3613 ;; *************** function _INTERRUPT_InterruptManager *****************
  3614 ;; Defined at:
  3615 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;		None
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;Total ram usage:       14 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    3
  3636 ;; This function calls:
  3637 ;;		_ADC_ISR
  3638 ;;		_TMR2_ISR
  3639 ;;		_TMR6_ISR
  3640 ;; This function is called by:
  3641 ;;		Interrupt level 2
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           	psect	intcode
  3646  000008                     __pintcode:
  3647                           	opt stack 0
  3648  000008                     _INTERRUPT_InterruptManager:
  3649                           	opt stack 23
  3650                           
  3651                           ;incstack = 0
  3652  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3653  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  3654  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3655  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3656  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3657  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3658  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3659  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3660  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3661  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3662  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3663  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3664  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3665  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3666  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3667                           
  3668                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  3669  000042  BCF2               	btfsc	intcon,6,c	;volatile
  3670  000044  AC9D               	btfss	3997,6,c	;volatile
  3671  000046  D005               	goto	i2l270
  3672  000048  AC9E               	btfss	3998,6,c	;volatile
  3673  00004A  D003               	goto	i2l270
  3674                           
  3675                           ;interrupt_manager.c: 61: {
  3676                           ;interrupt_manager.c: 62: ADC_ISR();
  3677  00004C  EC3D  F005         	call	_ADC_ISR	;wreg free
  3678                           
  3679                           ;interrupt_manager.c: 63: }
  3680  000050  D00E               	goto	i2l276
  3681  000052                     i2l270:
  3682                           
  3683                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  3684  000052  BCF2               	btfsc	intcon,6,c	;volatile
  3685  000054  A47D               	btfss	3965,2,c	;volatile
  3686  000056  D005               	goto	i2l272
  3687  000058  A47E               	btfss	3966,2,c	;volatile
  3688  00005A  D003               	goto	i2l272
  3689                           
  3690                           ;interrupt_manager.c: 65: {
  3691                           ;interrupt_manager.c: 66: TMR6_ISR();
  3692  00005C  ECC1  F004         	call	_TMR6_ISR	;wreg free
  3693                           
  3694                           ;interrupt_manager.c: 67: }
  3695  000060  D006               	goto	i2l276
  3696  000062                     i2l272:
  3697                           
  3698                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  3699  000062  BCF2               	btfsc	intcon,6,c	;volatile
  3700  000064  A29D               	btfss	3997,1,c	;volatile
  3701  000066  D003               	goto	i2l276
  3702  000068  B29E               	btfsc	3998,1,c	;volatile
  3703                           
  3704                           ;interrupt_manager.c: 69: {
  3705                           ;interrupt_manager.c: 70: TMR2_ISR();
  3706  00006A  EC32  F005         	call	_TMR2_ISR	;wreg free
  3707  00006E                     i2l276:
  3708  00006E  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3709  000072  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3710  000076  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3711  00007A  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3712  00007E  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3713  000082  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3714  000086  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3715  00008A  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3716  00008E  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3717  000092  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3718  000096  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3719  00009A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3720  00009E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3721  0000A2  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3722  0000A6  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3723  0000A8  0011               	retfie		f
  3724  0000AA                     __end_of_INTERRUPT_InterruptManager:
  3725                           	opt stack 0
  3726                           pclatu	equ	0xFFB
  3727                           pclath	equ	0xFFA
  3728                           tblptru	equ	0xFF8
  3729                           tblptrh	equ	0xFF7
  3730                           tblptrl	equ	0xFF6
  3731                           tablat	equ	0xFF5
  3732                           prodh	equ	0xFF4
  3733                           prodl	equ	0xFF3
  3734                           intcon	equ	0xFF2
  3735                           intcon2	equ	0xFF1
  3736                           postinc0	equ	0xFEE
  3737                           fsr0h	equ	0xFEA
  3738                           fsr0l	equ	0xFE9
  3739                           wreg	equ	0xFE8
  3740                           postdec1	equ	0xFE5
  3741                           fsr1h	equ	0xFE2
  3742                           fsr1l	equ	0xFE1
  3743                           indf2	equ	0xFDF
  3744                           fsr2h	equ	0xFDA
  3745                           fsr2l	equ	0xFD9
  3746                           status	equ	0xFD8
  3747                           
  3748 ;; *************** function _TMR6_ISR *****************
  3749 ;; Defined at:
  3750 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;Total ram usage:        0 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    1
  3771 ;; This function calls:
  3772 ;;		Absolute function
  3773 ;;		_TMR6_DefaultInterruptHandler
  3774 ;; This function is called by:
  3775 ;;		_INTERRUPT_InterruptManager
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text26
  3780  000982                     __ptext26:
  3781                           	opt stack 0
  3782  000982                     _TMR6_ISR:
  3783                           	opt stack 24
  3784                           
  3785                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  3786                           
  3787                           ;incstack = 0
  3788  000982  947E               	bcf	3966,2,c	;volatile
  3789                           
  3790                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  3791  000984  504C               	movf	_TMR6_InterruptHandler,w,c
  3792  000986  104D               	iorwf	_TMR6_InterruptHandler+1,w,c
  3793  000988  B4D8               	btfsc	status,2,c
  3794  00098A  0012               	return	
  3795                           
  3796                           ;tmr6.c: 128: {
  3797                           ;tmr6.c: 129: TMR6_InterruptHandler();
  3798  00098C  D801               	call	i2u46_48
  3799  00098E  0012               	return	
  3800  000990                     i2u46_48:
  3801  000990  0005               	push	
  3802  000992  6EFA               	movwf	pclath,c
  3803  000994  504C               	movf	_TMR6_InterruptHandler,w,c
  3804  000996  6EFD               	movwf	tosl,c
  3805  000998  504D               	movf	_TMR6_InterruptHandler+1,w,c
  3806  00099A  6EFE               	movwf	tosh,c
  3807  00099C  50F8               	movf	tblptru,w,c
  3808  00099E  6EFF               	movwf	tosu,c
  3809  0009A0  50FA               	movf	pclath,w,c
  3810  0009A2  0012               	return		;indir
  3811  0009A4                     __end_of_TMR6_ISR:
  3812                           	opt stack 0
  3813                           tosu	equ	0xFFF
  3814                           tosh	equ	0xFFE
  3815                           tosl	equ	0xFFD
  3816                           pclatu	equ	0xFFB
  3817                           pclath	equ	0xFFA
  3818                           tblptru	equ	0xFF8
  3819                           tblptrh	equ	0xFF7
  3820                           tblptrl	equ	0xFF6
  3821                           tablat	equ	0xFF5
  3822                           prodh	equ	0xFF4
  3823                           prodl	equ	0xFF3
  3824                           intcon	equ	0xFF2
  3825                           intcon2	equ	0xFF1
  3826                           postinc0	equ	0xFEE
  3827                           fsr0h	equ	0xFEA
  3828                           fsr0l	equ	0xFE9
  3829                           wreg	equ	0xFE8
  3830                           postdec1	equ	0xFE5
  3831                           fsr1h	equ	0xFE2
  3832                           fsr1l	equ	0xFE1
  3833                           indf2	equ	0xFDF
  3834                           fsr2h	equ	0xFDA
  3835                           fsr2l	equ	0xFD9
  3836                           status	equ	0xFD8
  3837                           
  3838 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  3839 ;; Defined at:
  3840 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;		None
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;		None
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  1    wreg      void 
  3847 ;; Registers used:
  3848 ;;		None
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;Total ram usage:        0 bytes
  3859 ;; Hardware stack levels used:    1
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_TMR6_Initialize
  3864 ;;		_TMR6_ISR
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text27
  3869  000A7E                     __ptext27:
  3870                           	opt stack 0
  3871  000A7E                     _TMR6_DefaultInterruptHandler:
  3872                           	opt stack 24
  3873                           
  3874                           ;incstack = 0
  3875  000A7E  0012               	return		;funcret
  3876  000A80                     __end_of_TMR6_DefaultInterruptHandler:
  3877                           	opt stack 0
  3878                           tosu	equ	0xFFF
  3879                           tosh	equ	0xFFE
  3880                           tosl	equ	0xFFD
  3881                           pclatu	equ	0xFFB
  3882                           pclath	equ	0xFFA
  3883                           tblptru	equ	0xFF8
  3884                           tblptrh	equ	0xFF7
  3885                           tblptrl	equ	0xFF6
  3886                           tablat	equ	0xFF5
  3887                           prodh	equ	0xFF4
  3888                           prodl	equ	0xFF3
  3889                           intcon	equ	0xFF2
  3890                           intcon2	equ	0xFF1
  3891                           postinc0	equ	0xFEE
  3892                           fsr0h	equ	0xFEA
  3893                           fsr0l	equ	0xFE9
  3894                           wreg	equ	0xFE8
  3895                           postdec1	equ	0xFE5
  3896                           fsr1h	equ	0xFE2
  3897                           fsr1l	equ	0xFE1
  3898                           indf2	equ	0xFDF
  3899                           fsr2h	equ	0xFDA
  3900                           fsr2l	equ	0xFD9
  3901                           status	equ	0xFD8
  3902                           
  3903 ;; *************** function _TMR2_ISR *****************
  3904 ;; Defined at:
  3905 ;;		line 126 in file "mcc_generated_files/tmr2.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;Total ram usage:        0 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    2
  3926 ;; This function calls:
  3927 ;;		_TMR2_CallBack
  3928 ;; This function is called by:
  3929 ;;		_INTERRUPT_InterruptManager
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text28
  3934  000A64                     __ptext28:
  3935                           	opt stack 0
  3936  000A64                     _TMR2_ISR:
  3937                           	opt stack 23
  3938                           
  3939                           ;tmr2.c: 130: PIR1bits.TMR2IF = 0;
  3940                           
  3941                           ;incstack = 0
  3942  000A64  929E               	bcf	3998,1,c	;volatile
  3943                           
  3944                           ;tmr2.c: 134: TMR2_CallBack();
  3945  000A66  EC78  F004         	call	_TMR2_CallBack	;wreg free
  3946  000A6A  0012               	return		;funcret
  3947  000A6C                     __end_of_TMR2_ISR:
  3948                           	opt stack 0
  3949                           tosu	equ	0xFFF
  3950                           tosh	equ	0xFFE
  3951                           tosl	equ	0xFFD
  3952                           pclatu	equ	0xFFB
  3953                           pclath	equ	0xFFA
  3954                           tblptru	equ	0xFF8
  3955                           tblptrh	equ	0xFF7
  3956                           tblptrl	equ	0xFF6
  3957                           tablat	equ	0xFF5
  3958                           prodh	equ	0xFF4
  3959                           prodl	equ	0xFF3
  3960                           intcon	equ	0xFF2
  3961                           intcon2	equ	0xFF1
  3962                           postinc0	equ	0xFEE
  3963                           fsr0h	equ	0xFEA
  3964                           fsr0l	equ	0xFE9
  3965                           wreg	equ	0xFE8
  3966                           postdec1	equ	0xFE5
  3967                           fsr1h	equ	0xFE2
  3968                           fsr1l	equ	0xFE1
  3969                           indf2	equ	0xFDF
  3970                           fsr2h	equ	0xFDA
  3971                           fsr2l	equ	0xFD9
  3972                           status	equ	0xFD8
  3973                           
  3974 ;; *************** function _TMR2_CallBack *****************
  3975 ;; Defined at:
  3976 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;Total ram usage:        0 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:    1
  3997 ;; This function calls:
  3998 ;;		Absolute function
  3999 ;;		_TMR2_DefaultInterruptHandler
  4000 ;; This function is called by:
  4001 ;;		_TMR2_ISR
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text29
  4006  0008F0                     __ptext29:
  4007                           	opt stack 0
  4008  0008F0                     _TMR2_CallBack:
  4009                           	opt stack 23
  4010                           
  4011                           ;tmr2.c: 140: Timer2Ticked = 1;
  4012                           
  4013                           ;incstack = 0
  4014  0008F0  0E01               	movlw	1
  4015  0008F2  6E49               	movwf	_Timer2Ticked,c	;volatile
  4016                           
  4017                           ;tmr2.c: 141: DelayTimerTicked = 1;
  4018  0008F4  0E01               	movlw	1
  4019  0008F6  6E48               	movwf	_DelayTimerTicked,c	;volatile
  4020                           
  4021                           ;tmr2.c: 144: if(TMR2_InterruptHandler)
  4022  0008F8  504A               	movf	_TMR2_InterruptHandler,w,c
  4023  0008FA  104B               	iorwf	_TMR2_InterruptHandler+1,w,c
  4024  0008FC  B4D8               	btfsc	status,2,c
  4025  0008FE  0012               	return	
  4026                           
  4027                           ;tmr2.c: 145: {
  4028                           ;tmr2.c: 146: TMR2_InterruptHandler();
  4029  000900  D801               	call	i2u40_48
  4030  000902  0012               	return	
  4031  000904                     i2u40_48:
  4032  000904  0005               	push	
  4033  000906  6EFA               	movwf	pclath,c
  4034  000908  504A               	movf	_TMR2_InterruptHandler,w,c
  4035  00090A  6EFD               	movwf	tosl,c
  4036  00090C  504B               	movf	_TMR2_InterruptHandler+1,w,c
  4037  00090E  6EFE               	movwf	tosh,c
  4038  000910  50F8               	movf	tblptru,w,c
  4039  000912  6EFF               	movwf	tosu,c
  4040  000914  50FA               	movf	pclath,w,c
  4041  000916  0012               	return		;indir
  4042  000918                     __end_of_TMR2_CallBack:
  4043                           	opt stack 0
  4044                           tosu	equ	0xFFF
  4045                           tosh	equ	0xFFE
  4046                           tosl	equ	0xFFD
  4047                           pclatu	equ	0xFFB
  4048                           pclath	equ	0xFFA
  4049                           tblptru	equ	0xFF8
  4050                           tblptrh	equ	0xFF7
  4051                           tblptrl	equ	0xFF6
  4052                           tablat	equ	0xFF5
  4053                           prodh	equ	0xFF4
  4054                           prodl	equ	0xFF3
  4055                           intcon	equ	0xFF2
  4056                           intcon2	equ	0xFF1
  4057                           postinc0	equ	0xFEE
  4058                           fsr0h	equ	0xFEA
  4059                           fsr0l	equ	0xFE9
  4060                           wreg	equ	0xFE8
  4061                           postdec1	equ	0xFE5
  4062                           fsr1h	equ	0xFE2
  4063                           fsr1l	equ	0xFE1
  4064                           indf2	equ	0xFDF
  4065                           fsr2h	equ	0xFDA
  4066                           fsr2l	equ	0xFD9
  4067                           status	equ	0xFD8
  4068                           
  4069 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4070 ;; Defined at:
  4071 ;;		line 154 in file "mcc_generated_files/tmr2.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;		None
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		None
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;Total ram usage:        0 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_TMR2_Initialize
  4095 ;;		_TMR2_CallBack
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text30
  4100  000A80                     __ptext30:
  4101                           	opt stack 0
  4102  000A80                     _TMR2_DefaultInterruptHandler:
  4103                           	opt stack 23
  4104                           
  4105                           ;incstack = 0
  4106  000A80  0012               	return		;funcret
  4107  000A82                     __end_of_TMR2_DefaultInterruptHandler:
  4108                           	opt stack 0
  4109                           tosu	equ	0xFFF
  4110                           tosh	equ	0xFFE
  4111                           tosl	equ	0xFFD
  4112                           pclatu	equ	0xFFB
  4113                           pclath	equ	0xFFA
  4114                           tblptru	equ	0xFF8
  4115                           tblptrh	equ	0xFF7
  4116                           tblptrl	equ	0xFF6
  4117                           tablat	equ	0xFF5
  4118                           prodh	equ	0xFF4
  4119                           prodl	equ	0xFF3
  4120                           intcon	equ	0xFF2
  4121                           intcon2	equ	0xFF1
  4122                           postinc0	equ	0xFEE
  4123                           fsr0h	equ	0xFEA
  4124                           fsr0l	equ	0xFE9
  4125                           wreg	equ	0xFE8
  4126                           postdec1	equ	0xFE5
  4127                           fsr1h	equ	0xFE2
  4128                           fsr1l	equ	0xFE1
  4129                           indf2	equ	0xFDF
  4130                           fsr2h	equ	0xFDA
  4131                           fsr2l	equ	0xFD9
  4132                           status	equ	0xFD8
  4133                           
  4134 ;; *************** function _ADC_ISR *****************
  4135 ;; Defined at:
  4136 ;;		line 144 in file "mcc_generated_files/adc.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;		None
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		None
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;Total ram usage:        0 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_INTERRUPT_InterruptManager
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text31
  4164  000A7A                     __ptext31:
  4165                           	opt stack 0
  4166  000A7A                     _ADC_ISR:
  4167                           	opt stack 25
  4168                           
  4169                           ;adc.c: 149: PIR1bits.ADIF = 0;
  4170                           
  4171                           ;incstack = 0
  4172  000A7A  9C9E               	bcf	3998,6,c	;volatile
  4173  000A7C  0012               	return		;funcret
  4174  000A7E                     __end_of_ADC_ISR:
  4175                           	opt stack 0
  4176  0000                     tosu	equ	0xFFF
  4177                           tosh	equ	0xFFE
  4178                           tosl	equ	0xFFD
  4179                           pclatu	equ	0xFFB
  4180                           pclath	equ	0xFFA
  4181                           tblptru	equ	0xFF8
  4182                           tblptrh	equ	0xFF7
  4183                           tblptrl	equ	0xFF6
  4184                           tablat	equ	0xFF5
  4185                           prodh	equ	0xFF4
  4186                           prodl	equ	0xFF3
  4187                           intcon	equ	0xFF2
  4188                           intcon2	equ	0xFF1
  4189                           postinc0	equ	0xFEE
  4190                           fsr0h	equ	0xFEA
  4191                           fsr0l	equ	0xFE9
  4192                           wreg	equ	0xFE8
  4193                           postdec1	equ	0xFE5
  4194                           fsr1h	equ	0xFE2
  4195                           fsr1l	equ	0xFE1
  4196                           indf2	equ	0xFDF
  4197                           fsr2h	equ	0xFDA
  4198                           fsr2l	equ	0xFD9
  4199                           status	equ	0xFD8
  4200                           tosu	equ	0xFFF
  4201                           tosh	equ	0xFFE
  4202                           tosl	equ	0xFFD
  4203                           pclatu	equ	0xFFB
  4204                           pclath	equ	0xFFA
  4205                           tblptru	equ	0xFF8
  4206                           tblptrh	equ	0xFF7
  4207                           tblptrl	equ	0xFF6
  4208                           tablat	equ	0xFF5
  4209                           prodh	equ	0xFF4
  4210                           prodl	equ	0xFF3
  4211                           intcon	equ	0xFF2
  4212                           intcon2	equ	0xFF1
  4213                           postinc0	equ	0xFEE
  4214                           fsr0h	equ	0xFEA
  4215                           fsr0l	equ	0xFE9
  4216                           wreg	equ	0xFE8
  4217                           postdec1	equ	0xFE5
  4218                           fsr1h	equ	0xFE2
  4219                           fsr1l	equ	0xFE1
  4220                           indf2	equ	0xFDF
  4221                           fsr2h	equ	0xFDA
  4222                           fsr2l	equ	0xFD9
  4223                           status	equ	0xFD8
  4224                           
  4225                           	psect	text32
  4226  000000                     __ptext32:
  4227                           	opt stack 0
  4228                           tosu	equ	0xFFF
  4229                           tosh	equ	0xFFE
  4230                           tosl	equ	0xFFD
  4231                           pclatu	equ	0xFFB
  4232                           pclath	equ	0xFFA
  4233                           tblptru	equ	0xFF8
  4234                           tblptrh	equ	0xFF7
  4235                           tblptrl	equ	0xFF6
  4236                           tablat	equ	0xFF5
  4237                           prodh	equ	0xFF4
  4238                           prodl	equ	0xFF3
  4239                           intcon	equ	0xFF2
  4240                           intcon2	equ	0xFF1
  4241                           postinc0	equ	0xFEE
  4242                           fsr0h	equ	0xFEA
  4243                           fsr0l	equ	0xFE9
  4244                           wreg	equ	0xFE8
  4245                           postdec1	equ	0xFE5
  4246                           fsr1h	equ	0xFE2
  4247                           fsr1l	equ	0xFE1
  4248                           indf2	equ	0xFDF
  4249                           fsr2h	equ	0xFDA
  4250                           fsr2l	equ	0xFD9
  4251                           status	equ	0xFD8
  4252                           
  4253                           	psect	rparam
  4254  0000                     tosu	equ	0xFFF
  4255                           tosh	equ	0xFFE
  4256                           tosl	equ	0xFFD
  4257                           pclatu	equ	0xFFB
  4258                           pclath	equ	0xFFA
  4259                           tblptru	equ	0xFF8
  4260                           tblptrh	equ	0xFF7
  4261                           tblptrl	equ	0xFF6
  4262                           tablat	equ	0xFF5
  4263                           prodh	equ	0xFF4
  4264                           prodl	equ	0xFF3
  4265                           intcon	equ	0xFF2
  4266                           intcon2	equ	0xFF1
  4267                           postinc0	equ	0xFEE
  4268                           fsr0h	equ	0xFEA
  4269                           fsr0l	equ	0xFE9
  4270                           wreg	equ	0xFE8
  4271                           postdec1	equ	0xFE5
  4272                           fsr1h	equ	0xFE2
  4273                           fsr1l	equ	0xFE1
  4274                           indf2	equ	0xFDF
  4275                           fsr2h	equ	0xFDA
  4276                           fsr2l	equ	0xFD9
  4277                           status	equ	0xFD8
  4278                           
  4279                           	psect	temp
  4280  000050                     btemp:
  4281                           	opt stack 0
  4282  000050                     	ds	1
  4283  0000                     int$flags	set	btemp
  4284                           tosu	equ	0xFFF
  4285                           tosh	equ	0xFFE
  4286                           tosl	equ	0xFFD
  4287                           pclatu	equ	0xFFB
  4288                           pclath	equ	0xFFA
  4289                           tblptru	equ	0xFF8
  4290                           tblptrh	equ	0xFF7
  4291                           tblptrl	equ	0xFF6
  4292                           tablat	equ	0xFF5
  4293                           prodh	equ	0xFF4
  4294                           prodl	equ	0xFF3
  4295                           intcon	equ	0xFF2
  4296                           intcon2	equ	0xFF1
  4297                           postinc0	equ	0xFEE
  4298                           fsr0h	equ	0xFEA
  4299                           fsr0l	equ	0xFE9
  4300                           wreg	equ	0xFE8
  4301                           postdec1	equ	0xFE5
  4302                           fsr1h	equ	0xFE2
  4303                           fsr1l	equ	0xFE1
  4304                           indf2	equ	0xFDF
  4305                           fsr2h	equ	0xFDA
  4306                           fsr2l	equ	0xFD9
  4307                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        192
    BSS         14
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     27      79
    BANK0           160      0     160
    BANK1           256      4       4
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StepMove
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _RectaAceleracion->_StepMove
    _StepMove->_State16MEF_act
    _StepMove->_State8MEF_act
    _State8MEF_act->_EPWM1_LoadDutyValue
    _State8MEF_act->_EPWM2_LoadDutyValue
    _State16MEF_act->_EPWM1_LoadDutyValue
    _State16MEF_act->_EPWM2_LoadDutyValue

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_RectaAceleracion

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9647
                          _DelayTmr2
                         _Motor_Stop
                   _RectaAceleracion
                  _SYSTEM_Initialize
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RectaAceleracion                                     4     2      2    4977
                                              0 BANK1      4     2      2
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StepMove                                             7     2      5    4347
                                             20 COMRAM     7     2      5
                     _State16MEF_act
                      _State8MEF_act
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act                                        2     2      0    1480
                                             18 COMRAM     2     2      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act                                       2     2      0    1480
                                             18 COMRAM     2     2      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2     678
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     678
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Motor_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayTmr2                                            2     0      2     151
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayTmr2
   _Motor_Stop
   _RectaAceleracion
     _StepMove
       _State16MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
       _State8MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_ini
   _StepMove
     _State16MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
     _State8MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4       4       7        1.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1B      4F       1       84.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F3      12        0.0%
DATA                 0      0      F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Jun 23 11:46:50 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 0A64  
                       ??_TMR6_StartTimer 002F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l501 0308                                       l431 0794  
                                     l547 0564                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _PR6 000F4B                           __end_of_ADC_ISR 0A7E  
                         _TMR2_Initialize 0960                                       tosl 000FFD  
                                     wreg 000FE8                  __end_of_EPWM2_Initialize 093C  
                         _CCP5_Initialize 0A0E                                      l2003 09D2  
                                    l2005 09D6                                      l2101 041C  
                                    l2111 0440                                      l2103 0424  
                                    l2121 0498                                      l2123 049E  
                                    l2211 01C0                                      l2061 032A  
                                    l2053 030E                                      l2221 01E4  
                                    l2213 01C8                                      l2205 01AC  
                                    l2301 06C0                                      l2151 0532  
                                    l2127 04AC                                      l2071 0378  
                                    l2231 023C                                      l2207 01B2  
                                    l2311 0702                                      l2137 04D0  
                                    l2129 04B4                                      l2233 0242  
                                    l2305 06E2                                      l2155 0540  
                                    l2075 038C                                      l2171 00CE  
                                    l2163 00B2                                      l2315 0724  
                                    l2307 06F0                                      l2149 052C  
                                    l2085 03B0                                      l2077 0394  
                                    l2069 0372                                      l2261 02D6  
                                    l2237 0250                                      l2181 011C  
                                    l2333 0580                                      l2095 0408  
                                    l2159 0548                                      l2247 0274  
                                    l2239 0258                                      l2343 05D6  
                                    l2335 0592                                      l2097 040E  
                                    l2265 02E4                                      l2185 0130  
                                    l2259 02D0                                      l2195 0154  
                                    l2187 0138                                      l2179 0116  
                                    l2283 076C                                      l2291 0782  
                                    l2269 02EC                                      l2285 0772  
                                    l2293 0788                                      l2289 077E  
                                    l1999 09C6                                      u1331 03AE  
                                    u1340 03C0                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    u1440 04E0                                      _LATD 000F8C  
                                    u1521 0152                                      _LATE 000F8D  
                                    u1530 0164                                      u1291 0328  
                                    u1381 043E                                      u1390 0450  
                                    u1630 0284                                      u1481 00CC  
                                    u1571 01E2                                      u1580 01F4  
                                    _TMR2 000FBC                                      _TMR6 000F4C  
                                    _WPUB 000F61                          _RectaAceleracion 06AA  
                                    _main 0566                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0050                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00AA                             __CFG_IESO$OFF 000000  
                   ??_EPWM1_LoadDutyValue 0031                              ___param_bank 000000  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 0A50  
                                   ?_main 0021                                     _T2CON 000FBA  
                                   _T6CON 000F4A                            __CFG_DEBUG$OFF 000000  
                                   i2l270 0052                                     i2l272 0062  
                                   i2l276 006E                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
       __size_of_TMR6_SetInterruptHandler 000A                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
               ?_TMR6_SetInterruptHandler 002F                          __end_of_TMR2_ISR 0A6C  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                          __end_of_TMR6_ISR 09A4  
                          __CFG_EBTRB$OFF 000000                          _LookUP_TABLE_COS 0001  
                        _LookUP_TABLE_SEN 00E0                        __CFG_MCLRE$EXTMCLR 000000  
                      StepMove@StepNumber 0035                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 0A72  
                          __CFG_PBADEN$ON 000000            ??_TMR6_DefaultInterruptHandler 0021  
                         __initialization 0798                __end_of_EUSART1_Initialize 0A0E  
                            __end_of_main 060A                   __end_of_TMR2_Initialize 0982  
                               ??_ADC_ISR 0021                        __size_of_DelayTmr2 001C  
             ?_INTERRUPT_InterruptManager 0021                  _TMR2_SetInterruptHandler 0A5A  
                                  ??_main 003C                   __end_of_CCP5_Initialize 0A22  
                           __activetblptr 000002                          DelayTmr2@Timeout 002F  
                         _TMR6_Initialize 08C8                          __end_of_StepMove 0798  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1H 000FBF  
                                  _CCPR2H 000F68                                    _CCPR1L 000FBE  
                                  _CCPR2L 000F67                                    _CCPR5H 000F56  
                                  _CCPR5L 000F55                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAE  
                                  _RCSTA1 000FAB                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                            __CFG_XINST$OFF 000000  
                            _CCPTMRS0bits 000F49                                _Motor_Stop 0A22  
                          __CFG_STVREN$ON 000000                   __size_of_State16MEF_act 025C  
                                  clear_0 07DE                              __pdataCOMRAM 0001  
                StepMove@microstep_number 0038                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                     _EPWM2_LoadDutyValue 083E                   __end_of_TMR2_StartTimer 0A76  
TMR2_SetInterruptHandler@InterruptHandler 002F  TMR6_SetInterruptHandler@InterruptHandler 002F  
           __size_of_INTERRUPT_Initialize 0004                         __end_of_DelayTmr2 09E0  
                       _SYSTEM_Initialize 089E                                __accesstop 0060  
                 __end_of__initialization 07E4                     __end_of_TMR2_CallBack 0918  
                      ?_SYSTEM_Initialize 0021                           _TMR6_StartTimer 0A6C  
                           ___rparam_used 000001                         ?_EPWM1_Initialize 0021  
                          __pcstackCOMRAM 0021                      ?_EPWM2_LoadDutyValue 002F  
                            __pidataBANK0 060A                       ??_SYSTEM_Initialize 0031  
                   __end_of_State8MEF_act 030A                                 ?_TMR2_ISR 0021  
                               ?_TMR6_ISR 0021                        ??_EPWM1_Initialize 002F  
                        ?_TMR2_Initialize 0021                   __end_of_TMR6_Initialize 08F0  
                __end_of_RectaAceleracion 0732                          ?_CCP5_Initialize 0021  
                       ?_EPWM2_Initialize 0021                 __end_of_SYSTEM_Initialize 08C8  
                      ??_EPWM2_Initialize 002F                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 004A                        __CFG_CCP2MX$PORTC1 000000  
                   ??_EPWM2_LoadDutyValue 0031                               ?_Motor_Stop 0021  
        __end_of_TMR6_SetInterruptHandler 0A5A                                ??_TMR2_ISR 0021  
                      __CFG_CCP3MX$PORTB5 000000                                 ?_StepMove 0035  
                              ??_TMR6_ISR 0021                                   _CCP1CON 000FBD  
                                 _CCP2CON 000F66                                   _CCP5CON 000F54  
                                 _ECCP1AS 000FB6                                   _ECCP2AS 000F64  
                                 _ADC_ISR 0A7A                   __size_of_ADC_Initialize 0018  
                                 _OSCCON2 000FD2                                   i2u40_48 0904  
                                 _OSCTUNE 000F9B                                   i2u46_48 0990  
                                 _PWM1CON 000FB7                                   _PWM2CON 000F65  
                                 _SPBRGH1 000FB0                          ?_TMR2_StartTimer 0021  
                 __end_of_TMR6_StartTimer 0A72               __end_of_EPWM1_LoadDutyValue 089E  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0031  
                              ??_StepMove 003A                            _State16MEF_act 030A  
                                 __pcinit 0798                          ?_TMR6_Initialize 0021  
                                 __ramtop 1000                                   __ptext0 0566  
                                 __ptext1 0A34                                   __ptext2 089E  
                                 __ptext3 08C8                                   __ptext4 0A6C  
                                 __ptext5 0A50                                   __ptext6 0960  
                                 __ptext7 0A72                                   __ptext8 0A5A  
                                 __ptext9 07F2                     _OSCILLATOR_Initialize 0A42  
                               _T2CONbits 000FBA                             ?_StateMEF_ini 0021  
                      _EUSART1_Initialize 09F8                  ??_PIN_MANAGER_Initialize 002F  
                               _T6CONbits 000F4A                __size_of_SYSTEM_Initialize 002A  
                     __size_of_Motor_Stop 0012                      end_of_initialization 07E4  
                     ?_EUSART1_Initialize 0021                             __Lmediumconst 0000  
                  __end_of_State16MEF_act 0566                                   postdec1 000FE5  
                                 postinc0 000FEE                      ??_EUSART1_Initialize 002F  
                _TMR6_SetInterruptHandler 0A50                            ??_StateMEF_ini 002F  
                        ?_TMR6_StartTimer 0021                              _EstadoActual 004E  
                       RectaAceleracion@i 0103                                 _DelayTmr2 09C4  
                         ?_State16MEF_act 0021              __end_of_INTERRUPT_Initialize 0A7A  
    __end_of_TMR2_DefaultInterruptHandler 0A82     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 0A80                 RectaAceleracion@direccion 0101  
                       StepMove@Velocidad 0037                             __pidataCOMRAM 09A4  
                       __size_of_TMR2_ISR 0008                            _ADC_Initialize 09E0  
                       __size_of_TMR6_ISR 0022                    ?_OSCILLATOR_Initialize 0021  
                       ?_RectaAceleracion 0100                       start_initialization 0798  
                      ??_RectaAceleracion 003C                 __size_of_EPWM1_Initialize 0024  
         __size_of_PIN_MANAGER_Initialize 004C                                 _Microstep 0040  
            EPWM1_LoadDutyValue@dutyValue 002F                                ?_DelayTmr2 002F  
               __size_of_EPWM2_Initialize 0024                              ??_Motor_Stop 002F  
                        _DelayTimerTicked 0048                                 _Velocidad 004F  
                  __end_of_ADC_Initialize 09F8                               __pdataBANK0 0060  
               RectaAceleracion@velocidad 0102                                  ?_ADC_ISR 0021  
                               _StepCount 003E                         StepMove@direccion 0039  
           ?_TMR2_DefaultInterruptHandler 0021                         __size_of_StepMove 0066  
                  __size_of_TMR2_CallBack 0028                               __pbssCOMRAM 003C  
                           __pcstackBANK1 0100                  __size_of_TMR2_Initialize 0022  
                __size_of_CCP5_Initialize 0014                        __end_of_Motor_Stop 0A34  
                  __size_of_State8MEF_act 025C               __end_of_EPWM2_LoadDutyValue 086E  
                   _TMR6_InterruptHandler 004C                      __end_of_StateMEF_ini 0A42  
                  _PIN_MANAGER_Initialize 07F2                                 __pintcode 0008  
                         ?_ADC_Initialize 0021                   State16MEF_act@direccion 0034  
            ??_INTERRUPT_InterruptManager 0021                          __CFG_PRICLKEN$ON 000000  
                                _BAUDCON1 000FB8                                  _ANALOG_0 0044  
                                _ANALOG_1 0042                      _INTERRUPT_Initialize 0A76  
                                _LATBbits 000F8A                                  _LATCbits 000F8B  
                                _LATDbits 000F8C                             _TMR2_CallBack 08F0  
                                _PIE1bits 000F9D                                  _PIE5bits 000F7D  
                             ??_DelayTmr2 0031                  __size_of_TMR2_StartTimer 0004  
     __size_of_INTERRUPT_InterruptManager 00A2                                  _PIR1bits 000F9E  
                                _PIR5bits 000F7E              __size_of_EPWM1_LoadDutyValue 0030  
              ??_TMR6_SetInterruptHandler 0031                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR2_ISR 0A64  
                                _PSTR1CON 000FB9                                  _PSTR2CON 000F63  
                                _TMR6_ISR 0982                             _State8MEF_act 00AE  
                        _Timer2Tick_count 003C                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2            ??_TMR2_DefaultInterruptHandler 0021  
                        _EPWM1_Initialize 093C         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 002F                  __size_of_TMR6_Initialize 0028  
                             _INTCON2bits 000FF1                                 copy_data0 07AC  
                               copy_data1 07CC                     ?_INTERRUPT_Initialize 0021  
                       ??_TMR2_Initialize 0031                            ?_TMR2_CallBack 0021  
                        ??_State16MEF_act 0033                         ??_CCP5_Initialize 002F  
                                _MoveDone 0046                                  __Hrparam 0000  
                            _Timer2Ticked 0049                          _EPWM2_Initialize 0918  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTC0 000000                            ?_State8MEF_act 0021  
                                _StepMove 0732                   ??_OSCILLATOR_Initialize 002F  
             __size_of_EUSART1_Initialize 0016                                  __ptext10 0A42  
                                __ptext11 0A76                                  __ptext20 030A  
                                __ptext12 09F8                                  __ptext21 083E  
                                __ptext13 0918                                  __ptext30 0A80  
                                __ptext22 086E                                  __ptext14 093C  
                                __ptext31 0A7A                                  __ptext23 0A22  
                                __ptext15 0A0E                                  __ptext32 0000  
                                __ptext24 09C4                                  __ptext16 09E0  
                                __ptext17 06AA                                  __ptext26 0982  
                                __ptext18 0732                                  __ptext27 0A7E  
                                __ptext19 00AE                                  __ptext28 0A64  
                                __ptext29 08F0                     __size_of_StateMEF_ini 000E  
               __size_of_RectaAceleracion 0088                             __size_of_main 00A4  
        RectaAceleracion@microstep_number 0100                       _LookUP_TABLE_COS_16 00A0  
                     _LookUP_TABLE_SEN_16 0060                  __size_of_TMR6_StartTimer 0006  
                                int$flags 0050                         ??_TMR2_StartTimer 002F  
      __end_of_INTERRUPT_InterruptManager 00AA                _INTERRUPT_InterruptManager 0008  
                              _INTCONbits 000FF2                              _StateMEF_ini 0A34  
                  ??_INTERRUPT_Initialize 002F      __end_of_TMR6_DefaultInterruptHandler 0A80  
   __size_of_TMR6_DefaultInterruptHandler 0002              _TMR6_DefaultInterruptHandler 0A7E  
                                intlevel2 0000                           ??_TMR2_CallBack 0021  
            EPWM2_LoadDutyValue@dutyValue 002F                   ?_PIN_MANAGER_Initialize 0021  
                       ??_TMR6_Initialize 0031                                _RCSTA1bits 000FAB  
                        ??_ADC_Initialize 002F                             _StepsComplete 0047  
                         ??_State8MEF_act 0033                    State8MEF_act@direccion 0034  
                       __CFG_T3CMX$PORTC0 000000                       _EPWM1_LoadDutyValue 086E  
          __end_of_PIN_MANAGER_Initialize 083E             ?_TMR6_DefaultInterruptHandler 0021  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 004A  
                __end_of_EPWM1_Initialize 0960                      ?_EPWM1_LoadDutyValue 002F  
