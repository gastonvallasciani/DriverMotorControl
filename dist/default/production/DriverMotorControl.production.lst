

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Jun 08 11:45:56 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 1.41
    56                           ; Generated 25/01/2017 GMT
    57                           ; 
    58                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F46K22 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataBANK0
    91  0009A0                     __pidataBANK0:
    92                           	opt stack 0
    93                           
    94                           ;initializer for _LookUP_TABLE_COS_16
    95  0009A0  FE                 	db	254
    96  0009A1  FA                 	db	250
    97  0009A2  F4                 	db	244
    98  0009A3  EC                 	db	236
    99  0009A4  E2                 	db	226
   100  0009A5  D6                 	db	214
   101  0009A6  C8                 	db	200
   102  0009A7  B8                 	db	184
   103  0009A8  A6                 	db	166
   104  0009A9  93                 	db	147
   105  0009AA  7F                 	db	127
   106  0009AB  6A                 	db	106
   107  0009AC  53                 	db	83
   108  0009AD  3C                 	db	60
   109  0009AE  24                 	db	36
   110  0009AF  0C                 	db	12
   111  0009B0  0C                 	db	12
   112  0009B1  24                 	db	36
   113  0009B2  3C                 	db	60
   114  0009B3  53                 	db	83
   115  0009B4  6A                 	db	106
   116  0009B5  7F                 	db	127
   117  0009B6  93                 	db	147
   118  0009B7  A6                 	db	166
   119  0009B8  B8                 	db	184
   120  0009B9  C8                 	db	200
   121  0009BA  D6                 	db	214
   122  0009BB  E2                 	db	226
   123  0009BC  EC                 	db	236
   124  0009BD  F4                 	db	244
   125  0009BE  FA                 	db	250
   126  0009BF  FE                 	db	254
   127  0009C0  FE                 	db	254
   128  0009C1  FA                 	db	250
   129  0009C2  F4                 	db	244
   130  0009C3  EC                 	db	236
   131  0009C4  E2                 	db	226
   132  0009C5  D6                 	db	214
   133  0009C6  C8                 	db	200
   134  0009C7  B8                 	db	184
   135  0009C8  A6                 	db	166
   136  0009C9  93                 	db	147
   137  0009CA  7F                 	db	127
   138  0009CB  6A                 	db	106
   139  0009CC  53                 	db	83
   140  0009CD  3C                 	db	60
   141  0009CE  24                 	db	36
   142  0009CF  0C                 	db	12
   143  0009D0  0C                 	db	12
   144  0009D1  24                 	db	36
   145  0009D2  3C                 	db	60
   146  0009D3  53                 	db	83
   147  0009D4  6A                 	db	106
   148  0009D5  7F                 	db	127
   149  0009D6  93                 	db	147
   150  0009D7  A6                 	db	166
   151  0009D8  B8                 	db	184
   152  0009D9  C8                 	db	200
   153  0009DA  D6                 	db	214
   154  0009DB  E2                 	db	226
   155  0009DC  EC                 	db	236
   156  0009DD  F4                 	db	244
   157  0009DE  FA                 	db	250
   158  0009DF  FE                 	db	254
   159                           
   160                           ;initializer for _LookUP_TABLE_SEN
   161  0009E0  18                 	db	24
   162  0009E1  45                 	db	69
   163  0009E2  71                 	db	113
   164  0009E3  99                 	db	153
   165  0009E4  BC                 	db	188
   166  0009E5  D8                 	db	216
   167  0009E6  ED                 	db	237
   168  0009E7  FA                 	db	250
   169  0009E8  FA                 	db	250
   170  0009E9  ED                 	db	237
   171  0009EA  D8                 	db	216
   172  0009EB  BC                 	db	188
   173  0009EC  99                 	db	153
   174  0009ED  71                 	db	113
   175  0009EE  45                 	db	69
   176  0009EF  18                 	db	24
   177  0009F0  18                 	db	24
   178  0009F1  45                 	db	69
   179  0009F2  71                 	db	113
   180  0009F3  99                 	db	153
   181  0009F4  BC                 	db	188
   182  0009F5  D8                 	db	216
   183  0009F6  ED                 	db	237
   184  0009F7  FA                 	db	250
   185  0009F8  FA                 	db	250
   186  0009F9  ED                 	db	237
   187  0009FA  D8                 	db	216
   188  0009FB  BC                 	db	188
   189  0009FC  99                 	db	153
   190  0009FD  71                 	db	113
   191  0009FE  45                 	db	69
   192  0009FF  18                 	db	24
   193                           
   194                           ;initializer for _LookUP_TABLE_COS
   195  000A00  FA                 	db	250
   196  000A01  ED                 	db	237
   197  000A02  D8                 	db	216
   198  000A03  BC                 	db	188
   199  000A04  99                 	db	153
   200  000A05  71                 	db	113
   201  000A06  45                 	db	69
   202  000A07  18                 	db	24
   203  000A08  18                 	db	24
   204  000A09  45                 	db	69
   205  000A0A  71                 	db	113
   206  000A0B  99                 	db	153
   207  000A0C  BC                 	db	188
   208  000A0D  D8                 	db	216
   209  000A0E  ED                 	db	237
   210  000A0F  FA                 	db	250
   211  000A10  FA                 	db	250
   212  000A11  ED                 	db	237
   213  000A12  D8                 	db	216
   214  000A13  BC                 	db	188
   215  000A14  99                 	db	153
   216  000A15  71                 	db	113
   217  000A16  45                 	db	69
   218  000A17  18                 	db	24
   219  000A18  18                 	db	24
   220  000A19  45                 	db	69
   221  000A1A  71                 	db	113
   222  000A1B  99                 	db	153
   223  000A1C  BC                 	db	188
   224  000A1D  D8                 	db	216
   225  000A1E  ED                 	db	237
   226  000A1F  FA                 	db	250
   227                           
   228                           	psect	idataBANK1
   229  000B14                     __pidataBANK1:
   230                           	opt stack 0
   231                           
   232                           ;initializer for _LookUP_TABLE_SEN_16
   233  000B14  0C                 	db	12
   234  000B15  24                 	db	36
   235  000B16  3C                 	db	60
   236  000B17  53                 	db	83
   237  000B18  6A                 	db	106
   238  000B19  7F                 	db	127
   239  000B1A  93                 	db	147
   240  000B1B  A6                 	db	166
   241  000B1C  B8                 	db	184
   242  000B1D  C8                 	db	200
   243  000B1E  D6                 	db	214
   244  000B1F  E2                 	db	226
   245  000B20  EC                 	db	236
   246  000B21  F4                 	db	244
   247  000B22  FA                 	db	250
   248  000B23  FE                 	db	254
   249  000B24  FE                 	db	254
   250  000B25  FA                 	db	250
   251  000B26  F4                 	db	244
   252  000B27  EC                 	db	236
   253  000B28  E2                 	db	226
   254  000B29  D6                 	db	214
   255  000B2A  C8                 	db	200
   256  000B2B  B8                 	db	184
   257  000B2C  A6                 	db	166
   258  000B2D  93                 	db	147
   259  000B2E  7F                 	db	127
   260  000B2F  6A                 	db	106
   261  000B30  53                 	db	83
   262  000B31  3C                 	db	60
   263  000B32  24                 	db	36
   264  000B33  0C                 	db	12
   265  000B34  0C                 	db	12
   266  000B35  24                 	db	36
   267  000B36  3C                 	db	60
   268  000B37  53                 	db	83
   269  000B38  6A                 	db	106
   270  000B39  7F                 	db	127
   271  000B3A  93                 	db	147
   272  000B3B  A6                 	db	166
   273  000B3C  B8                 	db	184
   274  000B3D  C8                 	db	200
   275  000B3E  D6                 	db	214
   276  000B3F  E2                 	db	226
   277  000B40  EC                 	db	236
   278  000B41  F4                 	db	244
   279  000B42  FA                 	db	250
   280  000B43  FE                 	db	254
   281  000B44  FE                 	db	254
   282  000B45  FA                 	db	250
   283  000B46  F4                 	db	244
   284  000B47  EC                 	db	236
   285  000B48  E2                 	db	226
   286  000B49  D6                 	db	214
   287  000B4A  C8                 	db	200
   288  000B4B  B8                 	db	184
   289  000B4C  A6                 	db	166
   290  000B4D  93                 	db	147
   291  000B4E  7F                 	db	127
   292  000B4F  6A                 	db	106
   293  000B50  53                 	db	83
   294  000B51  3C                 	db	60
   295  000B52  24                 	db	36
   296  000B53  0C                 	db	12
   297                           
   298                           	psect	nvCOMRAM
   299  000049                     __pnvCOMRAM:
   300                           	opt stack 0
   301  000049                     _TMR2_InterruptHandler:
   302                           	opt stack 0
   303  000049                     	ds	2
   304  00004B                     _TMR6_InterruptHandler:
   305                           	opt stack 0
   306  00004B                     	ds	2
   307  00004D                     _EstadoActual:
   308                           	opt stack 0
   309  00004D                     	ds	1
   310  0000                     _CCPTMRS0bits	set	3913
   311  0000                     _ANSELA	set	3896
   312  0000                     _ANSELE	set	3900
   313  0000                     _ANSELD	set	3899
   314  0000                     _ANSELB	set	3897
   315  0000                     _ANSELC	set	3898
   316  0000                     _CCPR5H	set	3926
   317  0000                     _CCPR5L	set	3925
   318  0000                     _CCP5CON	set	3924
   319  0000                     _T6CONbits	set	3914
   320  0000                     _TMR6	set	3916
   321  0000                     _PR6	set	3915
   322  0000                     _T6CON	set	3914
   323  0000                     _LATDbits	set	3980
   324  0000                     _LATCbits	set	3979
   325  0000                     _LATBbits	set	3978
   326  0000                     _TXREG1	set	4013
   327  0000                     _RCREG1	set	4014
   328  0000                     _RCSTA1bits	set	4011
   329  0000                     _SPBRGH1	set	4016
   330  0000                     _SPBRG1	set	4015
   331  0000                     _TXSTA1	set	4012
   332  0000                     _RCSTA1	set	4011
   333  0000                     _BAUDCON1	set	4024
   334  0000                     _OSCTUNE	set	3995
   335  0000                     _OSCCON2	set	4050
   336  0000                     _OSCCON	set	4051
   337  0000                     _INTCONbits	set	4082
   338  0000                     _RCONbits	set	4048
   339  0000                     _ADCON0bits	set	4034
   340  0000                     _ADRESH	set	4036
   341  0000                     _ADRESL	set	4035
   342  0000                     _ADCON2	set	4032
   343  0000                     _ADCON1	set	4033
   344  0000                     _ADCON0	set	4034
   345  0000                     _CCPR1H	set	4031
   346  0000                     _CCPR1L	set	4030
   347  0000                     _PSTR1CON	set	4025
   348  0000                     _PWM1CON	set	4023
   349  0000                     _ECCP1AS	set	4022
   350  0000                     _CCP1CON	set	4029
   351  0000                     _CCPR2H	set	3944
   352  0000                     _CCPR2L	set	3943
   353  0000                     _PSTR2CON	set	3939
   354  0000                     _PWM2CON	set	3941
   355  0000                     _ECCP2AS	set	3940
   356  0000                     _CCP2CON	set	3942
   357  0000                     _INTCON2bits	set	4081
   358  0000                     _WPUB	set	3937
   359  0000                     _TRISD	set	3989
   360  0000                     _TRISC	set	3988
   361  0000                     _TRISB	set	3987
   362  0000                     _TRISA	set	3986
   363  0000                     _TRISE	set	3990
   364  0000                     _LATC	set	3979
   365  0000                     _LATB	set	3978
   366  0000                     _LATA	set	3977
   367  0000                     _LATD	set	3980
   368  0000                     _LATE	set	3981
   369  0000                     _T2CONbits	set	4026
   370  0000                     _PIE1bits	set	3997
   371  0000                     _PIR1bits	set	3998
   372  0000                     _TMR2	set	4028
   373  0000                     _PR2	set	4027
   374  0000                     _T2CON	set	4026
   375  0000                     _PIE5bits	set	3965
   376  0000                     _PIR5bits	set	3966
   377                           
   378                           ; #config settings
   379  0000                     
   380                           	psect	cinit
   381  000A20                     __pcinit:
   382                           	opt stack 0
   383  000A20                     start_initialization:
   384                           	opt stack 0
   385  000A20                     __initialization:
   386                           	opt stack 0
   387                           
   388                           ; Initialize objects allocated to BANK1 (64 bytes)
   389                           ; load TBLPTR registers with __pidataBANK1
   390  000A20  0E14               	movlw	low __pidataBANK1
   391  000A22  6EF6               	movwf	tblptrl,c
   392  000A24  0E0B               	movlw	high __pidataBANK1
   393  000A26  6EF7               	movwf	tblptrh,c
   394  000A28  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   395  000A2A  6EF8               	movwf	tblptru,c
   396  000A2C  EE01  F000         	lfsr	0,__pdataBANK1
   397  000A30  EE10 F040          	lfsr	1,64
   398  000A34                     copy_data0:
   399  000A34  0009               	tblrd		*+
   400  000A36  CFF5 FFEE          	movff	tablat,postinc0
   401  000A3A  50E5               	movf	postdec1,w,c
   402  000A3C  50E1               	movf	fsr1l,w,c
   403  000A3E  E1FA               	bnz	copy_data0
   404                           
   405                           ; Initialize objects allocated to BANK0 (128 bytes)
   406                           ; load TBLPTR registers with __pidataBANK0
   407  000A40  0EA0               	movlw	low __pidataBANK0
   408  000A42  6EF6               	movwf	tblptrl,c
   409  000A44  0E09               	movlw	high __pidataBANK0
   410  000A46  6EF7               	movwf	tblptrh,c
   411  000A48  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   412  000A4A  6EF8               	movwf	tblptru,c
   413  000A4C  EE00  F060         	lfsr	0,__pdataBANK0
   414  000A50  EE10 F080          	lfsr	1,128
   415  000A54                     copy_data1:
   416  000A54  0009               	tblrd		*+
   417  000A56  CFF5 FFEE          	movff	tablat,postinc0
   418  000A5A  50E5               	movf	postdec1,w,c
   419  000A5C  50E1               	movf	fsr1l,w,c
   420  000A5E  E1FA               	bnz	copy_data1
   421                           
   422                           ; Clear objects allocated to COMRAM (11 bytes)
   423  000A60  EE00  F03E         	lfsr	0,__pbssCOMRAM
   424  000A64  0E0B               	movlw	11
   425  000A66                     clear_0:
   426  000A66  6AEE               	clrf	postinc0,c
   427  000A68  06E8               	decf	wreg,f,c
   428  000A6A  E1FD               	bnz	clear_0
   429  000A6C                     end_of_initialization:
   430                           	opt stack 0
   431  000A6C                     __end_of__initialization:
   432                           	opt stack 0
   433  000A6C  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   434  000A6E  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   435  000A70  0E00               	movlw	low (__Lmediumconst shr (0+16))
   436  000A72  6EF8               	movwf	tblptru,c
   437  000A74  0100               	movlb	0
   438  000A76  EF07  F006         	goto	_main	;jump to C main() function
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           postdec1	equ	0xFE5
   446                           fsr1l	equ	0xFE1
   447                           
   448                           	psect	bssCOMRAM
   449  00003E                     __pbssCOMRAM:
   450                           	opt stack 0
   451  00003E                     _Timer2Tick_count:
   452                           	opt stack 0
   453  00003E                     	ds	2
   454  000040                     _StepCount:
   455                           	opt stack 0
   456  000040                     	ds	2
   457  000042                     _ANALOG_1:
   458                           	opt stack 0
   459  000042                     	ds	2
   460  000044                     _ANALOG_0:
   461                           	opt stack 0
   462  000044                     	ds	2
   463  000046                     	ds	1
   464  000047                     _Microstep:
   465                           	opt stack 0
   466  000047                     	ds	1
   467  000048                     _Timer2Ticked:
   468                           	opt stack 0
   469  000048                     	ds	1
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           postdec1	equ	0xFE5
   477                           fsr1l	equ	0xFE1
   478                           
   479                           	psect	dataBANK0
   480  000060                     __pdataBANK0:
   481                           	opt stack 0
   482  000060                     _LookUP_TABLE_COS_16:
   483                           	opt stack 0
   484  000060                     	ds	64
   485  0000A0                     _LookUP_TABLE_SEN:
   486                           	opt stack 0
   487  0000A0                     	ds	32
   488  0000C0                     _LookUP_TABLE_COS:
   489                           	opt stack 0
   490  0000C0                     	ds	32
   491                           tblptru	equ	0xFF8
   492                           tblptrh	equ	0xFF7
   493                           tblptrl	equ	0xFF6
   494                           tablat	equ	0xFF5
   495                           postinc0	equ	0xFEE
   496                           wreg	equ	0xFE8
   497                           postdec1	equ	0xFE5
   498                           fsr1l	equ	0xFE1
   499                           
   500                           	psect	dataBANK1
   501  000100                     __pdataBANK1:
   502                           	opt stack 0
   503  000100                     _LookUP_TABLE_SEN_16:
   504                           	opt stack 0
   505  000100                     	ds	64
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           tblptrl	equ	0xFF6
   509                           tablat	equ	0xFF5
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           postdec1	equ	0xFE5
   513                           fsr1l	equ	0xFE1
   514                           
   515                           	psect	cstackCOMRAM
   516  000001                     __pcstackCOMRAM:
   517                           	opt stack 0
   518  000001                     ??_INTERRUPT_InterruptManager:
   519  000001                     
   520                           ; 1 bytes @ 0x0
   521  000001                     	ds	14
   522  00000F                     ?_ADC_GetConversion:
   523                           	opt stack 0
   524  00000F                     ?___ftpack:
   525                           	opt stack 0
   526  00000F                     ?___fttol:
   527                           	opt stack 0
   528  00000F                     EUSART1_Write@txData:
   529                           	opt stack 0
   530  00000F                     TMR6_SetInterruptHandler@InterruptHandler:
   531                           	opt stack 0
   532  00000F                     TMR2_SetInterruptHandler@InterruptHandler:
   533                           	opt stack 0
   534  00000F                     EPWM2_LoadDutyValue@dutyValue:
   535                           	opt stack 0
   536  00000F                     EPWM1_LoadDutyValue@dutyValue:
   537                           	opt stack 0
   538  00000F                     ___ftpack@arg:
   539                           	opt stack 0
   540  00000F                     ___fttol@f1:
   541                           	opt stack 0
   542                           
   543                           ; 3 bytes @ 0xE
   544  00000F                     	ds	2
   545  000011                     ??_EPWM2_LoadDutyValue:
   546  000011                     ??_EPWM1_LoadDutyValue:
   547  000011                     ??_ADC_GetConversion:
   548  000011                     
   549                           ; 1 bytes @ 0x10
   550  000011                     	ds	1
   551  000012                     ___ftpack@exp:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x11
   555  000012                     	ds	1
   556  000013                     ??_State16MEF_act:
   557  000013                     ??___fttol:
   558  000013                     ADC_GetConversion@channel:
   559                           	opt stack 0
   560  000013                     ___ftpack@sign:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x12
   564  000013                     	ds	1
   565  000014                     ??___ftpack:
   566                           
   567                           ; 1 bytes @ 0x13
   568  000014                     	ds	3
   569  000017                     ?___ftdiv:
   570                           	opt stack 0
   571  000017                     ?___lwtoft:
   572                           	opt stack 0
   573  000017                     ___lwtoft@c:
   574                           	opt stack 0
   575  000017                     ___ftdiv@f1:
   576                           	opt stack 0
   577                           
   578                           ; 3 bytes @ 0x16
   579  000017                     	ds	1
   580  000018                     ___fttol@sign1:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x17
   584  000018                     	ds	1
   585  000019                     ___fttol@lval:
   586                           	opt stack 0
   587                           
   588                           ; 4 bytes @ 0x18
   589  000019                     	ds	1
   590  00001A                     ___ftdiv@f2:
   591                           	opt stack 0
   592                           
   593                           ; 3 bytes @ 0x19
   594  00001A                     	ds	3
   595  00001D                     ??___ftdiv:
   596  00001D                     ___fttol@exp1:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x1C
   600  00001D                     	ds	3
   601  000020                     ___ftdiv@cntr:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x1F
   605  000020                     	ds	1
   606  000021                     ___ftdiv@f3:
   607                           	opt stack 0
   608                           
   609                           ; 3 bytes @ 0x20
   610  000021                     	ds	3
   611  000024                     ___ftdiv@exp:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x23
   615  000024                     	ds	1
   616  000025                     ___ftdiv@sign:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x24
   620  000025                     	ds	1
   621  000026                     controlador1@An_Acquisition:
   622                           	opt stack 0
   623  000026                     controlador2@An_Acquisition:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x25
   627  000026                     	ds	2
   628  000028                     ??_controlador1:
   629  000028                     ??_controlador2:
   630                           
   631                           ; 1 bytes @ 0x27
   632  000028                     	ds	1
   633  000029                     controlador1@Vref:
   634                           	opt stack 0
   635  000029                     controlador2@An_float:
   636                           	opt stack 0
   637                           
   638                           ; 3 bytes @ 0x28
   639  000029                     	ds	3
   640  00002C                     controlador2@output:
   641                           	opt stack 0
   642  00002C                     controlador1@An_float:
   643                           	opt stack 0
   644                           
   645                           ; 3 bytes @ 0x2B
   646  00002C                     	ds	1
   647  00002D                     controlador2@Vref:
   648                           	opt stack 0
   649                           
   650                           ; 3 bytes @ 0x2C
   651  00002D                     	ds	2
   652  00002F                     controlador1@output:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x2E
   656  00002F                     	ds	1
   657  000030                     controlador1@error:
   658                           	opt stack 0
   659  000030                     controlador2@error:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x2F
   663  000030                     	ds	1
   664  000031                     controlador1@LookUp:
   665                           	opt stack 0
   666  000031                     controlador2@LookUp:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x30
   670  000031                     	ds	1
   671  000032                     State8MEF_act@ANALOG_0:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x31
   675  000032                     	ds	2
   676  000034                     State8MEF_act@ANALOG_1:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x33
   680  000034                     	ds	2
   681  000036                     State8MEF_act@PWM1:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x35
   685  000036                     	ds	1
   686  000037                     State8MEF_act@PWM2:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x36
   690  000037                     	ds	1
   691  000038                     StepMove@StepNumber:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x37
   695  000038                     	ds	2
   696  00003A                     StepMove@Velocidad:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x39
   700  00003A                     	ds	1
   701  00003B                     StepMove@microstep_number:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x3A
   705  00003B                     	ds	1
   706  00003C                     ??_StepMove:
   707                           
   708                           ; 1 bytes @ 0x3B
   709  00003C                     	ds	2
   710  00003E                     tblptru	equ	0xFF8
   711                           tblptrh	equ	0xFF7
   712                           tblptrl	equ	0xFF6
   713                           tablat	equ	0xFF5
   714                           postinc0	equ	0xFEE
   715                           wreg	equ	0xFE8
   716                           postdec1	equ	0xFE5
   717                           fsr1l	equ	0xFE1
   718                           
   719                           ; 1 bytes @ 0x3D
   720 ;;
   721 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   722 ;;
   723 ;; *************** function _main *****************
   724 ;; Defined at:
   725 ;;		line 21 in file "main.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;Total ram usage:        0 bytes
   744 ;; Hardware stack levels required when called:    9
   745 ;; This function calls:
   746 ;;		_SYSTEM_Initialize
   747 ;;		_StateMEF_ini
   748 ;;		_StepMove
   749 ;; This function is called by:
   750 ;;		Startup code after reset
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text0
   755  000C0E                     __ptext0:
   756                           	opt stack 0
   757  000C0E                     _main:
   758                           	opt stack 22
   759                           
   760                           ;main.c: 24: SYSTEM_Initialize();
   761                           
   762                           ;incstack = 0
   763  000C0E  ECF2  F005         	call	_SYSTEM_Initialize	;wreg free
   764                           
   765                           ;main.c: 25: StateMEF_ini();
   766  000C12  ECC7  F006         	call	_StateMEF_ini	;wreg free
   767                           
   768                           ;main.c: 26: Timer2Ticked=0;
   769  000C16  0E00               	movlw	0
   770  000C18  6E48               	movwf	_Timer2Ticked,c	;volatile
   771                           
   772                           ;main.c: 27: do { LATBbits.LATB6 = 1; } while(0);
   773  000C1A  8C8A               	bsf	3978,6,c	;volatile
   774                           
   775                           ;main.c: 30: (INTCONbits.GIE = 1);
   776  000C1C  8EF2               	bsf	intcon,7,c	;volatile
   777                           
   778                           ;main.c: 33: (INTCONbits.PEIE = 1);
   779  000C1E  8CF2               	bsf	intcon,6,c	;volatile
   780  000C20                     l2211:
   781                           
   782                           ;main.c: 35: {
   783                           ;main.c: 36: StepMove(3000,1,16);
   784  000C20  0E0B               	movlw	11
   785  000C22  6E39               	movwf	StepMove@StepNumber+1,c
   786  000C24  0EB8               	movlw	184
   787  000C26  6E38               	movwf	StepMove@StepNumber,c
   788  000C28  0E01               	movlw	1
   789  000C2A  6E3A               	movwf	StepMove@Velocidad,c
   790  000C2C  0E10               	movlw	16
   791  000C2E  6E3B               	movwf	StepMove@microstep_number,c
   792  000C30  EC3D  F005         	call	_StepMove	;wreg free
   793  000C34  D7F5               	goto	l2211
   794  000C36                     __end_of_main:
   795                           	opt stack 0
   796                           tblptru	equ	0xFF8
   797                           tblptrh	equ	0xFF7
   798                           tblptrl	equ	0xFF6
   799                           tablat	equ	0xFF5
   800                           intcon	equ	0xFF2
   801                           postinc0	equ	0xFEE
   802                           wreg	equ	0xFE8
   803                           postdec1	equ	0xFE5
   804                           fsr1l	equ	0xFE1
   805                           
   806 ;; *************** function _StepMove *****************
   807 ;; Defined at:
   808 ;;		line 211 in file "MotorDriver.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  StepNumber      2   55[COMRAM] unsigned int 
   811 ;;  Velocidad       1   57[COMRAM] unsigned char 
   812 ;;  microstep_nu    1   58[COMRAM] unsigned char 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;Total ram usage:        6 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    8
   831 ;; This function calls:
   832 ;;		_State16MEF_act
   833 ;;		_State8MEF_act
   834 ;; This function is called by:
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text1
   840  000A7A                     __ptext1:
   841                           	opt stack 0
   842  000A7A                     _StepMove:
   843                           	opt stack 22
   844                           
   845                           ;MotorDriver.c: 213: if (StepCount<StepNumber)
   846                           
   847                           ;incstack = 0
   848  000A7A  5038               	movf	StepMove@StepNumber,w,c
   849  000A7C  5C40               	subwf	_StepCount,w,c
   850  000A7E  5039               	movf	StepMove@StepNumber+1,w,c
   851  000A80  5841               	subwfb	_StepCount+1,w,c
   852  000A82  B0D8               	btfsc	status,0,c
   853  000A84  0012               	return	
   854                           
   855                           ;MotorDriver.c: 214: {
   856                           ;MotorDriver.c: 215: if (Timer2Ticked){
   857  000A86  5048               	movf	_Timer2Ticked,w,c	;volatile
   858  000A88  B4D8               	btfsc	status,2,c
   859  000A8A  0012               	return	
   860                           
   861                           ;MotorDriver.c: 216: Timer2Tick_count++;
   862  000A8C  4A3E               	infsnz	_Timer2Tick_count,f,c
   863  000A8E  2A3F               	incf	_Timer2Tick_count+1,f,c
   864                           
   865                           ;MotorDriver.c: 217: if (Timer2Tick_count == Velocidad){
   866  000A90  503A               	movf	StepMove@Velocidad,w,c
   867  000A92  6E3C               	movwf	??_StepMove& (0+255),c
   868  000A94  6A3D               	clrf	(??_StepMove+1)& (0+255),c
   869  000A96  503E               	movf	_Timer2Tick_count,w,c
   870  000A98  183C               	xorwf	??_StepMove,w,c
   871  000A9A  E113               	bnz	l2185
   872  000A9C  503F               	movf	_Timer2Tick_count+1,w,c
   873  000A9E  183D               	xorwf	??_StepMove+1,w,c
   874  000AA0  A4D8               	btfss	status,2,c
   875  000AA2  D00F               	goto	l2185
   876                           
   877                           ;MotorDriver.c: 218: if (microstep_number==16){
   878  000AA4  0E10               	movlw	16
   879  000AA6  183B               	xorwf	StepMove@microstep_number,w,c
   880  000AA8  A4D8               	btfss	status,2,c
   881  000AAA  D003               	goto	l2179
   882                           
   883                           ;MotorDriver.c: 219: State16MEF_act();
   884  000AAC  EC00  F002         	call	_State16MEF_act	;wreg free
   885                           
   886                           ;MotorDriver.c: 220: }
   887  000AB0  D002               	goto	l2181
   888  000AB2                     l2179:
   889                           
   890                           ;MotorDriver.c: 221: else{
   891                           ;MotorDriver.c: 222: State8MEF_act();
   892  000AB2  EC57  F000         	call	_State8MEF_act	;wreg free
   893  000AB6                     l2181:
   894                           
   895                           ;MotorDriver.c: 223: }
   896                           ;MotorDriver.c: 224: StepCount++;
   897  000AB6  4A40               	infsnz	_StepCount,f,c
   898  000AB8  2A41               	incf	_StepCount+1,f,c
   899                           
   900                           ;MotorDriver.c: 225: Timer2Tick_count=0;
   901  000ABA  0E00               	movlw	0
   902  000ABC  6E3F               	movwf	_Timer2Tick_count+1,c
   903  000ABE  0E00               	movlw	0
   904  000AC0  6E3E               	movwf	_Timer2Tick_count,c
   905  000AC2                     l2185:
   906                           
   907                           ;MotorDriver.c: 226: }
   908                           ;MotorDriver.c: 227: Timer2Ticked = 0;
   909  000AC2  0E00               	movlw	0
   910  000AC4  6E48               	movwf	_Timer2Ticked,c	;volatile
   911  000AC6  0012               	return	
   912  000AC8                     __end_of_StepMove:
   913                           	opt stack 0
   914                           tblptru	equ	0xFF8
   915                           tblptrh	equ	0xFF7
   916                           tblptrl	equ	0xFF6
   917                           tablat	equ	0xFF5
   918                           intcon	equ	0xFF2
   919                           postinc0	equ	0xFEE
   920                           wreg	equ	0xFE8
   921                           postdec1	equ	0xFE5
   922                           fsr1l	equ	0xFE1
   923                           status	equ	0xFD8
   924                           
   925 ;; *************** function _State8MEF_act *****************
   926 ;; Defined at:
   927 ;;		line 38 in file "MotorDriver.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  ANALOG_1        2   51[COMRAM] unsigned int 
   932 ;;  ANALOG_0        2   49[COMRAM] unsigned int 
   933 ;;  PWM2            1   54[COMRAM] unsigned char 
   934 ;;  PWM1            1   53[COMRAM] unsigned char 
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;Total ram usage:        6 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; Hardware stack levels required when called:    7
   951 ;; This function calls:
   952 ;;		_ADC_GetConversion
   953 ;;		_EPWM1_LoadDutyValue
   954 ;;		_EPWM2_LoadDutyValue
   955 ;;		_controlador1
   956 ;;		_controlador2
   957 ;; This function is called by:
   958 ;;		_StepMove
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text2
   963  0000AE                     __ptext2:
   964                           	opt stack 0
   965  0000AE                     _State8MEF_act:
   966                           	opt stack 22
   967                           
   968                           ;MotorDriver.c: 39: uint8_t PWM1,PWM2;
   969                           ;MotorDriver.c: 40: uint16_t ANALOG_0,ANALOG_1;
   970                           ;MotorDriver.c: 41: switch(EstadoActual) {
   971                           
   972                           ;incstack = 0
   973  0000AE  D197               	goto	l2041
   974  0000B0                     l1925:
   975                           
   976                           ;MotorDriver.c: 43: PSTR1CON = 0x00; PSTR2CON = 0x00;
   977  0000B0  0E00               	movlw	0
   978  0000B2  6EB9               	movwf	4025,c	;volatile
   979  0000B4  0E00               	movlw	0
   980  0000B6  6E63               	movwf	3939,c	;volatile
   981                           
   982                           ;MotorDriver.c: 44: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whil
      +                          e(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
   983  0000B8  948B               	bcf	3979,2,c	;volatile
   984  0000BA  9A8C               	bcf	3980,5,c	;volatile
   985  0000BC  928B               	bcf	3979,1,c	;volatile
   986  0000BE  908B               	bcf	3979,0,c	;volatile
   987                           
   988                           ;MotorDriver.c: 45: EstadoActual = STATE1;
   989  0000C0  0E01               	movlw	1
   990  0000C2  6E4D               	movwf	_EstadoActual,c
   991                           
   992                           ;MotorDriver.c: 46: break;
   993  0000C4  0012               	return	
   994  0000C6                     l1935:
   995                           
   996                           ;MotorDriver.c: 48: PSTR1CON = 0x01; PSTR2CON = 0x01;
   997  0000C6  0E01               	movlw	1
   998  0000C8  6EB9               	movwf	4025,c	;volatile
   999  0000CA  0E01               	movlw	1
  1000  0000CC  6E63               	movwf	3939,c	;volatile
  1001                           
  1002                           ;MotorDriver.c: 49: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  1003  0000CE  9A8C               	bcf	3980,5,c	;volatile
  1004  0000D0  908B               	bcf	3979,0,c	;volatile
  1005                           
  1006                           ;MotorDriver.c: 50: if (Microstep<8){
  1007  0000D2  5047               	movf	_Microstep,w,c
  1008  0000D4  0A80               	xorlw	128
  1009  0000D6  0F78               	addlw	-136
  1010  0000D8  B0D8               	btfsc	status,0,c
  1011  0000DA  0012               	return	
  1012                           
  1013                           ;MotorDriver.c: 52: ANALOG_0 = ADC_GetConversion(AN_A);
  1014  0000DC  0E00               	movlw	0
  1015  0000DE  ECAA  F005         	call	_ADC_GetConversion
  1016  0000E2  C00F  F032         	movff	?_ADC_GetConversion,State8MEF_act@ANALOG_0
  1017  0000E6  C010  F033         	movff	?_ADC_GetConversion+1,State8MEF_act@ANALOG_0+1
  1018                           
  1019                           ;MotorDriver.c: 53: ANALOG_1 = ADC_GetConversion(AN_B);
  1020  0000EA  0E01               	movlw	1
  1021  0000EC  ECAA  F005         	call	_ADC_GetConversion
  1022  0000F0  C00F  F034         	movff	?_ADC_GetConversion,State8MEF_act@ANALOG_1
  1023  0000F4  C010  F035         	movff	?_ADC_GetConversion+1,State8MEF_act@ANALOG_1+1
  1024                           
  1025                           ;MotorDriver.c: 54: PWM1 = controlador1(LookUP_TABLE_COS[Microstep], ANALOG_0);
  1026  0000F8  C032  F026         	movff	State8MEF_act@ANALOG_0,controlador1@An_Acquisition
  1027  0000FC  C033  F027         	movff	State8MEF_act@ANALOG_0+1,controlador1@An_Acquisition+1
  1028  000100  5047               	movf	_Microstep,w,c
  1029  000102  0D01               	mullw	1
  1030  000104  0EC0               	movlw	low _LookUP_TABLE_COS
  1031  000106  24F3               	addwf	prodl,w,c
  1032  000108  6ED9               	movwf	fsr2l,c
  1033  00010A  0E00               	movlw	high _LookUP_TABLE_COS
  1034  00010C  20F4               	addwfc	prodh,w,c
  1035  00010E  6EDA               	movwf	fsr2h,c
  1036  000110  50DF               	movf	indf2,w,c
  1037  000112  EC8E  F004         	call	_controlador1
  1038  000116  6E36               	movwf	State8MEF_act@PWM1,c
  1039                           
  1040                           ;MotorDriver.c: 55: PWM2 = controlador2(LookUP_TABLE_SEN[Microstep], ANALOG_1);
  1041  000118  C034  F026         	movff	State8MEF_act@ANALOG_1,controlador2@An_Acquisition
  1042  00011C  C035  F027         	movff	State8MEF_act@ANALOG_1+1,controlador2@An_Acquisition+1
  1043  000120  5047               	movf	_Microstep,w,c
  1044  000122  0D01               	mullw	1
  1045  000124  0EA0               	movlw	low _LookUP_TABLE_SEN
  1046  000126  24F3               	addwf	prodl,w,c
  1047  000128  6ED9               	movwf	fsr2l,c
  1048  00012A  0E00               	movlw	high _LookUP_TABLE_SEN
  1049  00012C  20F4               	addwfc	prodh,w,c
  1050  00012E  6EDA               	movwf	fsr2h,c
  1051  000130  50DF               	movf	indf2,w,c
  1052  000132  EC41  F004         	call	_controlador2
  1053  000136  6E37               	movwf	State8MEF_act@PWM2,c
  1054                           
  1055                           ;MotorDriver.c: 56: LookUP_TABLE_COS[Microstep]=PWM1;
  1056  000138  5047               	movf	_Microstep,w,c
  1057  00013A  0D01               	mullw	1
  1058  00013C  0EC0               	movlw	low _LookUP_TABLE_COS
  1059  00013E  24F3               	addwf	prodl,w,c
  1060  000140  6ED9               	movwf	fsr2l,c
  1061  000142  0E00               	movlw	high _LookUP_TABLE_COS
  1062  000144  20F4               	addwfc	prodh,w,c
  1063  000146  6EDA               	movwf	fsr2h,c
  1064  000148  C036  FFDF         	movff	State8MEF_act@PWM1,indf2
  1065                           
  1066                           ;MotorDriver.c: 57: LookUP_TABLE_SEN[Microstep]=PWM2;
  1067  00014C  5047               	movf	_Microstep,w,c
  1068  00014E  0D01               	mullw	1
  1069  000150  0EA0               	movlw	low _LookUP_TABLE_SEN
  1070  000152  24F3               	addwf	prodl,w,c
  1071  000154  6ED9               	movwf	fsr2l,c
  1072  000156  0E00               	movlw	high _LookUP_TABLE_SEN
  1073  000158  20F4               	addwfc	prodh,w,c
  1074  00015A  6EDA               	movwf	fsr2h,c
  1075  00015C  C037  FFDF         	movff	State8MEF_act@PWM2,indf2
  1076                           
  1077                           ;MotorDriver.c: 58: EPWM1_LoadDutyValue(PWM1);
  1078  000160  C036  F00F         	movff	State8MEF_act@PWM1,EPWM1_LoadDutyValue@dutyValue
  1079  000164  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1080  000166  ECDA  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1081                           
  1082                           ;MotorDriver.c: 59: EPWM2_LoadDutyValue(PWM2);
  1083  00016A  C037  F00F         	movff	State8MEF_act@PWM2,EPWM2_LoadDutyValue@dutyValue
  1084  00016E  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1085  000170  ECC2  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1086                           
  1087                           ;MotorDriver.c: 63: if (Microstep==7){
  1088  000174  0E07               	movlw	7
  1089  000176  1847               	xorwf	_Microstep,w,c
  1090  000178  A4D8               	btfss	status,2,c
  1091  00017A  D002               	goto	l1957
  1092                           
  1093                           ;MotorDriver.c: 64: EstadoActual = STATE2;
  1094  00017C  0E02               	movlw	2
  1095  00017E  6E4D               	movwf	_EstadoActual,c
  1096  000180                     l1957:
  1097                           
  1098                           ;MotorDriver.c: 65: }
  1099                           ;MotorDriver.c: 66: Microstep++;
  1100  000180  2A47               	incf	_Microstep,f,c
  1101                           
  1102                           ;MotorDriver.c: 67: }
  1103                           ;MotorDriver.c: 68: break;
  1104  000182  0012               	return	
  1105  000184                     l1959:
  1106                           
  1107                           ;MotorDriver.c: 70: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1108  000184  0E02               	movlw	2
  1109  000186  6EB9               	movwf	4025,c	;volatile
  1110  000188  0E01               	movlw	1
  1111  00018A  6E63               	movwf	3939,c	;volatile
  1112                           
  1113                           ;MotorDriver.c: 71: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  1114  00018C  948B               	bcf	3979,2,c	;volatile
  1115  00018E  908B               	bcf	3979,0,c	;volatile
  1116                           
  1117                           ;MotorDriver.c: 72: if ((Microstep<16)&&(Microstep>7)){
  1118  000190  5047               	movf	_Microstep,w,c
  1119  000192  0A80               	xorlw	128
  1120  000194  0F70               	addlw	-144
  1121  000196  B0D8               	btfsc	status,0,c
  1122  000198  0012               	return	
  1123  00019A  5047               	movf	_Microstep,w,c
  1124  00019C  0A80               	xorlw	128
  1125  00019E  0F78               	addlw	-136
  1126  0001A0  A0D8               	btfss	status,0,c
  1127  0001A2  0012               	return	
  1128                           
  1129                           ;MotorDriver.c: 74: ANALOG_0 = ADC_GetConversion(AN_A);
  1130  0001A4  0E00               	movlw	0
  1131  0001A6  ECAA  F005         	call	_ADC_GetConversion
  1132  0001AA  C00F  F032         	movff	?_ADC_GetConversion,State8MEF_act@ANALOG_0
  1133  0001AE  C010  F033         	movff	?_ADC_GetConversion+1,State8MEF_act@ANALOG_0+1
  1134                           
  1135                           ;MotorDriver.c: 75: ANALOG_1 = ADC_GetConversion(AN_B);
  1136  0001B2  0E01               	movlw	1
  1137  0001B4  ECAA  F005         	call	_ADC_GetConversion
  1138  0001B8  C00F  F034         	movff	?_ADC_GetConversion,State8MEF_act@ANALOG_1
  1139  0001BC  C010  F035         	movff	?_ADC_GetConversion+1,State8MEF_act@ANALOG_1+1
  1140                           
  1141                           ;MotorDriver.c: 76: PWM1 = controlador1(LookUP_TABLE_COS[Microstep], ANALOG_0);
  1142  0001C0  C032  F026         	movff	State8MEF_act@ANALOG_0,controlador1@An_Acquisition
  1143  0001C4  C033  F027         	movff	State8MEF_act@ANALOG_0+1,controlador1@An_Acquisition+1
  1144  0001C8  5047               	movf	_Microstep,w,c
  1145  0001CA  0D01               	mullw	1
  1146  0001CC  0EC0               	movlw	low _LookUP_TABLE_COS
  1147  0001CE  24F3               	addwf	prodl,w,c
  1148  0001D0  6ED9               	movwf	fsr2l,c
  1149  0001D2  0E00               	movlw	high _LookUP_TABLE_COS
  1150  0001D4  20F4               	addwfc	prodh,w,c
  1151  0001D6  6EDA               	movwf	fsr2h,c
  1152  0001D8  50DF               	movf	indf2,w,c
  1153  0001DA  EC8E  F004         	call	_controlador1
  1154  0001DE  6E36               	movwf	State8MEF_act@PWM1,c
  1155                           
  1156                           ;MotorDriver.c: 77: PWM2 = controlador2(LookUP_TABLE_SEN[Microstep], ANALOG_1);
  1157  0001E0  C034  F026         	movff	State8MEF_act@ANALOG_1,controlador2@An_Acquisition
  1158  0001E4  C035  F027         	movff	State8MEF_act@ANALOG_1+1,controlador2@An_Acquisition+1
  1159  0001E8  5047               	movf	_Microstep,w,c
  1160  0001EA  0D01               	mullw	1
  1161  0001EC  0EA0               	movlw	low _LookUP_TABLE_SEN
  1162  0001EE  24F3               	addwf	prodl,w,c
  1163  0001F0  6ED9               	movwf	fsr2l,c
  1164  0001F2  0E00               	movlw	high _LookUP_TABLE_SEN
  1165  0001F4  20F4               	addwfc	prodh,w,c
  1166  0001F6  6EDA               	movwf	fsr2h,c
  1167  0001F8  50DF               	movf	indf2,w,c
  1168  0001FA  EC41  F004         	call	_controlador2
  1169  0001FE  6E37               	movwf	State8MEF_act@PWM2,c
  1170                           
  1171                           ;MotorDriver.c: 78: LookUP_TABLE_COS[Microstep]=PWM1;
  1172  000200  5047               	movf	_Microstep,w,c
  1173  000202  0D01               	mullw	1
  1174  000204  0EC0               	movlw	low _LookUP_TABLE_COS
  1175  000206  24F3               	addwf	prodl,w,c
  1176  000208  6ED9               	movwf	fsr2l,c
  1177  00020A  0E00               	movlw	high _LookUP_TABLE_COS
  1178  00020C  20F4               	addwfc	prodh,w,c
  1179  00020E  6EDA               	movwf	fsr2h,c
  1180  000210  C036  FFDF         	movff	State8MEF_act@PWM1,indf2
  1181                           
  1182                           ;MotorDriver.c: 79: LookUP_TABLE_SEN[Microstep]=PWM2;
  1183  000214  5047               	movf	_Microstep,w,c
  1184  000216  0D01               	mullw	1
  1185  000218  0EA0               	movlw	low _LookUP_TABLE_SEN
  1186  00021A  24F3               	addwf	prodl,w,c
  1187  00021C  6ED9               	movwf	fsr2l,c
  1188  00021E  0E00               	movlw	high _LookUP_TABLE_SEN
  1189  000220  20F4               	addwfc	prodh,w,c
  1190  000222  6EDA               	movwf	fsr2h,c
  1191  000224  C037  FFDF         	movff	State8MEF_act@PWM2,indf2
  1192                           
  1193                           ;MotorDriver.c: 80: EPWM1_LoadDutyValue(PWM1);
  1194  000228  C036  F00F         	movff	State8MEF_act@PWM1,EPWM1_LoadDutyValue@dutyValue
  1195  00022C  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1196  00022E  ECDA  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1197                           
  1198                           ;MotorDriver.c: 81: EPWM2_LoadDutyValue(PWM2);
  1199  000232  C037  F00F         	movff	State8MEF_act@PWM2,EPWM2_LoadDutyValue@dutyValue
  1200  000236  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1201  000238  ECC2  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1202                           
  1203                           ;MotorDriver.c: 86: if (Microstep==15){
  1204  00023C  0E0F               	movlw	15
  1205  00023E  1847               	xorwf	_Microstep,w,c
  1206  000240  A4D8               	btfss	status,2,c
  1207  000242  D002               	goto	l1983
  1208                           
  1209                           ;MotorDriver.c: 87: EstadoActual = STATE3;
  1210  000244  0E03               	movlw	3
  1211  000246  6E4D               	movwf	_EstadoActual,c
  1212  000248                     l1983:
  1213                           
  1214                           ;MotorDriver.c: 88: }
  1215                           ;MotorDriver.c: 89: Microstep++;
  1216  000248  2A47               	incf	_Microstep,f,c
  1217                           
  1218                           ;MotorDriver.c: 90: }
  1219                           ;MotorDriver.c: 91: break;
  1220  00024A  0012               	return	
  1221  00024C                     l1985:
  1222                           
  1223                           ;MotorDriver.c: 93: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1224  00024C  0E02               	movlw	2
  1225  00024E  6EB9               	movwf	4025,c	;volatile
  1226  000250  0E02               	movlw	2
  1227  000252  6E63               	movwf	3939,c	;volatile
  1228                           
  1229                           ;MotorDriver.c: 94: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
  1230  000254  948B               	bcf	3979,2,c	;volatile
  1231  000256  928B               	bcf	3979,1,c	;volatile
  1232                           
  1233                           ;MotorDriver.c: 95: if ((Microstep<24)&&(Microstep>15)){
  1234  000258  5047               	movf	_Microstep,w,c
  1235  00025A  0A80               	xorlw	128
  1236  00025C  0F68               	addlw	-152
  1237  00025E  B0D8               	btfsc	status,0,c
  1238  000260  0012               	return	
  1239  000262  5047               	movf	_Microstep,w,c
  1240  000264  0A80               	xorlw	128
  1241  000266  0F70               	addlw	-144
  1242  000268  A0D8               	btfss	status,0,c
  1243  00026A  0012               	return	
  1244                           
  1245                           ;MotorDriver.c: 97: ANALOG_0 = ADC_GetConversion(AN_A);
  1246  00026C  0E00               	movlw	0
  1247  00026E  ECAA  F005         	call	_ADC_GetConversion
  1248  000272  C00F  F032         	movff	?_ADC_GetConversion,State8MEF_act@ANALOG_0
  1249  000276  C010  F033         	movff	?_ADC_GetConversion+1,State8MEF_act@ANALOG_0+1
  1250                           
  1251                           ;MotorDriver.c: 98: ANALOG_1 = ADC_GetConversion(AN_B);
  1252  00027A  0E01               	movlw	1
  1253  00027C  ECAA  F005         	call	_ADC_GetConversion
  1254  000280  C00F  F034         	movff	?_ADC_GetConversion,State8MEF_act@ANALOG_1
  1255  000284  C010  F035         	movff	?_ADC_GetConversion+1,State8MEF_act@ANALOG_1+1
  1256                           
  1257                           ;MotorDriver.c: 99: PWM1 = controlador1(LookUP_TABLE_COS[Microstep], ANALOG_0);
  1258  000288  C032  F026         	movff	State8MEF_act@ANALOG_0,controlador1@An_Acquisition
  1259  00028C  C033  F027         	movff	State8MEF_act@ANALOG_0+1,controlador1@An_Acquisition+1
  1260  000290  5047               	movf	_Microstep,w,c
  1261  000292  0D01               	mullw	1
  1262  000294  0EC0               	movlw	low _LookUP_TABLE_COS
  1263  000296  24F3               	addwf	prodl,w,c
  1264  000298  6ED9               	movwf	fsr2l,c
  1265  00029A  0E00               	movlw	high _LookUP_TABLE_COS
  1266  00029C  20F4               	addwfc	prodh,w,c
  1267  00029E  6EDA               	movwf	fsr2h,c
  1268  0002A0  50DF               	movf	indf2,w,c
  1269  0002A2  EC8E  F004         	call	_controlador1
  1270  0002A6  6E36               	movwf	State8MEF_act@PWM1,c
  1271                           
  1272                           ;MotorDriver.c: 100: PWM2 = controlador2(LookUP_TABLE_SEN[Microstep], ANALOG_1);
  1273  0002A8  C034  F026         	movff	State8MEF_act@ANALOG_1,controlador2@An_Acquisition
  1274  0002AC  C035  F027         	movff	State8MEF_act@ANALOG_1+1,controlador2@An_Acquisition+1
  1275  0002B0  5047               	movf	_Microstep,w,c
  1276  0002B2  0D01               	mullw	1
  1277  0002B4  0EA0               	movlw	low _LookUP_TABLE_SEN
  1278  0002B6  24F3               	addwf	prodl,w,c
  1279  0002B8  6ED9               	movwf	fsr2l,c
  1280  0002BA  0E00               	movlw	high _LookUP_TABLE_SEN
  1281  0002BC  20F4               	addwfc	prodh,w,c
  1282  0002BE  6EDA               	movwf	fsr2h,c
  1283  0002C0  50DF               	movf	indf2,w,c
  1284  0002C2  EC41  F004         	call	_controlador2
  1285  0002C6  6E37               	movwf	State8MEF_act@PWM2,c
  1286                           
  1287                           ;MotorDriver.c: 101: LookUP_TABLE_COS[Microstep]=PWM1;
  1288  0002C8  5047               	movf	_Microstep,w,c
  1289  0002CA  0D01               	mullw	1
  1290  0002CC  0EC0               	movlw	low _LookUP_TABLE_COS
  1291  0002CE  24F3               	addwf	prodl,w,c
  1292  0002D0  6ED9               	movwf	fsr2l,c
  1293  0002D2  0E00               	movlw	high _LookUP_TABLE_COS
  1294  0002D4  20F4               	addwfc	prodh,w,c
  1295  0002D6  6EDA               	movwf	fsr2h,c
  1296  0002D8  C036  FFDF         	movff	State8MEF_act@PWM1,indf2
  1297                           
  1298                           ;MotorDriver.c: 102: LookUP_TABLE_SEN[Microstep]=PWM2;
  1299  0002DC  5047               	movf	_Microstep,w,c
  1300  0002DE  0D01               	mullw	1
  1301  0002E0  0EA0               	movlw	low _LookUP_TABLE_SEN
  1302  0002E2  24F3               	addwf	prodl,w,c
  1303  0002E4  6ED9               	movwf	fsr2l,c
  1304  0002E6  0E00               	movlw	high _LookUP_TABLE_SEN
  1305  0002E8  20F4               	addwfc	prodh,w,c
  1306  0002EA  6EDA               	movwf	fsr2h,c
  1307  0002EC  C037  FFDF         	movff	State8MEF_act@PWM2,indf2
  1308                           
  1309                           ;MotorDriver.c: 103: EPWM1_LoadDutyValue(PWM1);
  1310  0002F0  C036  F00F         	movff	State8MEF_act@PWM1,EPWM1_LoadDutyValue@dutyValue
  1311  0002F4  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1312  0002F6  ECDA  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1313                           
  1314                           ;MotorDriver.c: 104: EPWM2_LoadDutyValue(PWM2);
  1315  0002FA  C037  F00F         	movff	State8MEF_act@PWM2,EPWM2_LoadDutyValue@dutyValue
  1316  0002FE  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1317  000300  ECC2  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1318                           
  1319                           ;MotorDriver.c: 109: if (Microstep==23){
  1320  000304  0E17               	movlw	23
  1321  000306  1847               	xorwf	_Microstep,w,c
  1322  000308  A4D8               	btfss	status,2,c
  1323  00030A  D002               	goto	l2009
  1324                           
  1325                           ;MotorDriver.c: 110: EstadoActual = STATE4;
  1326  00030C  0E04               	movlw	4
  1327  00030E  6E4D               	movwf	_EstadoActual,c
  1328  000310                     l2009:
  1329                           
  1330                           ;MotorDriver.c: 111: }
  1331                           ;MotorDriver.c: 112: Microstep++;
  1332  000310  2A47               	incf	_Microstep,f,c
  1333                           
  1334                           ;MotorDriver.c: 113: }
  1335                           ;MotorDriver.c: 114: break;
  1336  000312  0012               	return	
  1337  000314                     l2011:
  1338                           
  1339                           ;MotorDriver.c: 116: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1340  000314  0E01               	movlw	1
  1341  000316  6EB9               	movwf	4025,c	;volatile
  1342  000318  0E02               	movlw	2
  1343  00031A  6E63               	movwf	3939,c	;volatile
  1344                           
  1345                           ;MotorDriver.c: 117: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1346  00031C  9A8C               	bcf	3980,5,c	;volatile
  1347  00031E  928B               	bcf	3979,1,c	;volatile
  1348                           
  1349                           ;MotorDriver.c: 118: if ((Microstep<32)&&(Microstep>23)){
  1350  000320  5047               	movf	_Microstep,w,c
  1351  000322  0A80               	xorlw	128
  1352  000324  0F60               	addlw	-160
  1353  000326  B0D8               	btfsc	status,0,c
  1354  000328  0012               	return	
  1355  00032A  5047               	movf	_Microstep,w,c
  1356  00032C  0A80               	xorlw	128
  1357  00032E  0F68               	addlw	-152
  1358  000330  A0D8               	btfss	status,0,c
  1359  000332  0012               	return	
  1360                           
  1361                           ;MotorDriver.c: 120: ANALOG_0 = ADC_GetConversion(AN_A);
  1362  000334  0E00               	movlw	0
  1363  000336  ECAA  F005         	call	_ADC_GetConversion
  1364  00033A  C00F  F032         	movff	?_ADC_GetConversion,State8MEF_act@ANALOG_0
  1365  00033E  C010  F033         	movff	?_ADC_GetConversion+1,State8MEF_act@ANALOG_0+1
  1366                           
  1367                           ;MotorDriver.c: 121: ANALOG_1 = ADC_GetConversion(AN_B);
  1368  000342  0E01               	movlw	1
  1369  000344  ECAA  F005         	call	_ADC_GetConversion
  1370  000348  C00F  F034         	movff	?_ADC_GetConversion,State8MEF_act@ANALOG_1
  1371  00034C  C010  F035         	movff	?_ADC_GetConversion+1,State8MEF_act@ANALOG_1+1
  1372                           
  1373                           ;MotorDriver.c: 122: PWM1 = controlador1(LookUP_TABLE_COS[Microstep], ANALOG_0);
  1374  000350  C032  F026         	movff	State8MEF_act@ANALOG_0,controlador1@An_Acquisition
  1375  000354  C033  F027         	movff	State8MEF_act@ANALOG_0+1,controlador1@An_Acquisition+1
  1376  000358  5047               	movf	_Microstep,w,c
  1377  00035A  0D01               	mullw	1
  1378  00035C  0EC0               	movlw	low _LookUP_TABLE_COS
  1379  00035E  24F3               	addwf	prodl,w,c
  1380  000360  6ED9               	movwf	fsr2l,c
  1381  000362  0E00               	movlw	high _LookUP_TABLE_COS
  1382  000364  20F4               	addwfc	prodh,w,c
  1383  000366  6EDA               	movwf	fsr2h,c
  1384  000368  50DF               	movf	indf2,w,c
  1385  00036A  EC8E  F004         	call	_controlador1
  1386  00036E  6E36               	movwf	State8MEF_act@PWM1,c
  1387                           
  1388                           ;MotorDriver.c: 123: PWM2 = controlador2(LookUP_TABLE_SEN[Microstep], ANALOG_1);
  1389  000370  C034  F026         	movff	State8MEF_act@ANALOG_1,controlador2@An_Acquisition
  1390  000374  C035  F027         	movff	State8MEF_act@ANALOG_1+1,controlador2@An_Acquisition+1
  1391  000378  5047               	movf	_Microstep,w,c
  1392  00037A  0D01               	mullw	1
  1393  00037C  0EA0               	movlw	low _LookUP_TABLE_SEN
  1394  00037E  24F3               	addwf	prodl,w,c
  1395  000380  6ED9               	movwf	fsr2l,c
  1396  000382  0E00               	movlw	high _LookUP_TABLE_SEN
  1397  000384  20F4               	addwfc	prodh,w,c
  1398  000386  6EDA               	movwf	fsr2h,c
  1399  000388  50DF               	movf	indf2,w,c
  1400  00038A  EC41  F004         	call	_controlador2
  1401  00038E  6E37               	movwf	State8MEF_act@PWM2,c
  1402                           
  1403                           ;MotorDriver.c: 124: LookUP_TABLE_COS[Microstep]=PWM1;
  1404  000390  5047               	movf	_Microstep,w,c
  1405  000392  0D01               	mullw	1
  1406  000394  0EC0               	movlw	low _LookUP_TABLE_COS
  1407  000396  24F3               	addwf	prodl,w,c
  1408  000398  6ED9               	movwf	fsr2l,c
  1409  00039A  0E00               	movlw	high _LookUP_TABLE_COS
  1410  00039C  20F4               	addwfc	prodh,w,c
  1411  00039E  6EDA               	movwf	fsr2h,c
  1412  0003A0  C036  FFDF         	movff	State8MEF_act@PWM1,indf2
  1413                           
  1414                           ;MotorDriver.c: 125: LookUP_TABLE_SEN[Microstep]=PWM2;
  1415  0003A4  5047               	movf	_Microstep,w,c
  1416  0003A6  0D01               	mullw	1
  1417  0003A8  0EA0               	movlw	low _LookUP_TABLE_SEN
  1418  0003AA  24F3               	addwf	prodl,w,c
  1419  0003AC  6ED9               	movwf	fsr2l,c
  1420  0003AE  0E00               	movlw	high _LookUP_TABLE_SEN
  1421  0003B0  20F4               	addwfc	prodh,w,c
  1422  0003B2  6EDA               	movwf	fsr2h,c
  1423  0003B4  C037  FFDF         	movff	State8MEF_act@PWM2,indf2
  1424                           
  1425                           ;MotorDriver.c: 126: EPWM1_LoadDutyValue(PWM1);
  1426  0003B8  C036  F00F         	movff	State8MEF_act@PWM1,EPWM1_LoadDutyValue@dutyValue
  1427  0003BC  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1428  0003BE  ECDA  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1429                           
  1430                           ;MotorDriver.c: 127: EPWM2_LoadDutyValue(PWM2);
  1431  0003C2  C037  F00F         	movff	State8MEF_act@PWM2,EPWM2_LoadDutyValue@dutyValue
  1432  0003C6  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1433  0003C8  ECC2  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1434                           
  1435                           ;MotorDriver.c: 132: if (Microstep==31){
  1436  0003CC  0E1F               	movlw	31
  1437  0003CE  1847               	xorwf	_Microstep,w,c
  1438  0003D0  A4D8               	btfss	status,2,c
  1439  0003D2  D003               	goto	l2037
  1440                           
  1441                           ;MotorDriver.c: 133: EstadoActual = STATE0;
  1442  0003D4  0E00               	movlw	0
  1443  0003D6  6E4D               	movwf	_EstadoActual,c
  1444                           
  1445                           ;MotorDriver.c: 134: Microstep=-1;
  1446  0003D8  6847               	setf	_Microstep,c
  1447  0003DA                     l2037:
  1448                           
  1449                           ;MotorDriver.c: 135: }
  1450                           ;MotorDriver.c: 136: Microstep++;
  1451  0003DA  2A47               	incf	_Microstep,f,c
  1452                           
  1453                           ;MotorDriver.c: 142: }
  1454                           
  1455                           ;MotorDriver.c: 141: break;
  1456                           
  1457                           ;MotorDriver.c: 139: default:
  1458                           
  1459                           ;MotorDriver.c: 137: }
  1460                           ;MotorDriver.c: 138: break;
  1461  0003DC  0012               	return	
  1462  0003DE                     l2041:
  1463  0003DE  504D               	movf	_EstadoActual,w,c
  1464                           
  1465                           ; Switch size 1, requested type "space"
  1466                           ; Number of cases is 5, Range of values is 0 to 4
  1467                           ; switch strategies available:
  1468                           ; Name         Instructions Cycles
  1469                           ; simple_byte           16     9 (average)
  1470                           ;	Chosen strategy is simple_byte
  1471  0003E0  0A00               	xorlw	0	; case 0
  1472  0003E2  B4D8               	btfsc	status,2,c
  1473  0003E4  D665               	goto	l1925
  1474  0003E6  0A01               	xorlw	1	; case 1
  1475  0003E8  B4D8               	btfsc	status,2,c
  1476  0003EA  D66D               	goto	l1935
  1477  0003EC  0A03               	xorlw	3	; case 2
  1478  0003EE  B4D8               	btfsc	status,2,c
  1479  0003F0  D6C9               	goto	l1959
  1480  0003F2  0A01               	xorlw	1	; case 3
  1481  0003F4  B4D8               	btfsc	status,2,c
  1482  0003F6  D72A               	goto	l1985
  1483  0003F8  0A07               	xorlw	7	; case 4
  1484  0003FA  A4D8               	btfss	status,2,c
  1485  0003FC  0012               	return	
  1486  0003FE  D78A               	goto	l2011
  1487  000400                     __end_of_State8MEF_act:
  1488                           	opt stack 0
  1489                           tblptru	equ	0xFF8
  1490                           tblptrh	equ	0xFF7
  1491                           tblptrl	equ	0xFF6
  1492                           tablat	equ	0xFF5
  1493                           prodh	equ	0xFF4
  1494                           prodl	equ	0xFF3
  1495                           intcon	equ	0xFF2
  1496                           postinc0	equ	0xFEE
  1497                           wreg	equ	0xFE8
  1498                           postdec1	equ	0xFE5
  1499                           fsr1l	equ	0xFE1
  1500                           indf2	equ	0xFDF
  1501                           fsr2h	equ	0xFDA
  1502                           fsr2l	equ	0xFD9
  1503                           status	equ	0xFD8
  1504                           
  1505 ;; *************** function _controlador2 *****************
  1506 ;; Defined at:
  1507 ;;		line 254 in file "MotorDriver.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  LookUp          1    wreg     unsigned char 
  1510 ;;  An_Acquisiti    2   37[COMRAM] unsigned int 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  LookUp          1   48[COMRAM] unsigned char 
  1513 ;;  Vref            3   44[COMRAM] float 
  1514 ;;  An_float        3   40[COMRAM] float 
  1515 ;;  error           1   47[COMRAM] char 
  1516 ;;  output          1   43[COMRAM] char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      unsigned char 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;Total ram usage:       12 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    6
  1533 ;; This function calls:
  1534 ;;		_EUSART1_Write
  1535 ;;		___ftdiv
  1536 ;;		___fttol
  1537 ;;		___lwtoft
  1538 ;; This function is called by:
  1539 ;;		_State8MEF_act
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text3
  1544  000882                     __ptext3:
  1545                           	opt stack 0
  1546  000882                     _controlador2:
  1547                           	opt stack 22
  1548                           
  1549                           ;incstack = 0
  1550                           ;controlador2@LookUp stored from wreg
  1551  000882  6E31               	movwf	controlador2@LookUp,c
  1552                           
  1553                           ;MotorDriver.c: 256: int8_t error,output;
  1554                           ;MotorDriver.c: 257: float Vref,An_float;
  1555                           ;MotorDriver.c: 259: An_float = An_Acquisition;
  1556  000884  C026  F017         	movff	controlador2@An_Acquisition,___lwtoft@c
  1557  000888  C027  F018         	movff	controlador2@An_Acquisition+1,___lwtoft@c+1
  1558  00088C  EC2F  F006         	call	___lwtoft	;wreg free
  1559  000890  C017  F029         	movff	?___lwtoft,controlador2@An_float
  1560  000894  C018  F02A         	movff	?___lwtoft+1,controlador2@An_float+1
  1561  000898  C019  F02B         	movff	?___lwtoft+2,controlador2@An_float+2
  1562                           
  1563                           ;MotorDriver.c: 260: Vref = An_float/257;
  1564  00089C  C029  F017         	movff	controlador2@An_float,___ftdiv@f1
  1565  0008A0  C02A  F018         	movff	controlador2@An_float+1,___ftdiv@f1+1
  1566  0008A4  C02B  F019         	movff	controlador2@An_float+2,___ftdiv@f1+2
  1567  0008A8  0E80               	movlw	128
  1568  0008AA  6E1A               	movwf	___ftdiv@f2,c
  1569  0008AC  0E80               	movlw	128
  1570  0008AE  6E1B               	movwf	___ftdiv@f2+1,c
  1571  0008B0  0E43               	movlw	67
  1572  0008B2  6E1C               	movwf	___ftdiv@f2+2,c
  1573  0008B4  EC77  F003         	call	___ftdiv	;wreg free
  1574  0008B8  C017  F02D         	movff	?___ftdiv,controlador2@Vref
  1575  0008BC  C018  F02E         	movff	?___ftdiv+1,controlador2@Vref+1
  1576  0008C0  C019  F02F         	movff	?___ftdiv+2,controlador2@Vref+2
  1577                           
  1578                           ;MotorDriver.c: 261: EUSART1_Write((uint8_t)Vref);
  1579  0008C4  C02D  F00F         	movff	controlador2@Vref,___fttol@f1
  1580  0008C8  C02E  F010         	movff	controlador2@Vref+1,___fttol@f1+1
  1581  0008CC  C02F  F011         	movff	controlador2@Vref+2,___fttol@f1+2
  1582  0008D0  ECFD  F002         	call	___fttol	;wreg free
  1583  0008D4  500F               	movf	?___fttol,w,c
  1584  0008D6  ECC1  F006         	call	_EUSART1_Write
  1585                           
  1586                           ;MotorDriver.c: 262: error = (uint8_t)Vref - LookUp;
  1587  0008DA  5031               	movf	controlador2@LookUp,w,c
  1588  0008DC  0800               	sublw	0
  1589  0008DE  6E28               	movwf	??_controlador2& (0+255),c
  1590  0008E0  C02D  F00F         	movff	controlador2@Vref,___fttol@f1
  1591  0008E4  C02E  F010         	movff	controlador2@Vref+1,___fttol@f1+1
  1592  0008E8  C02F  F011         	movff	controlador2@Vref+2,___fttol@f1+2
  1593  0008EC  ECFD  F002         	call	___fttol	;wreg free
  1594  0008F0  500F               	movf	?___fttol,w,c
  1595  0008F2  2428               	addwf	??_controlador2,w,c
  1596  0008F4  6E30               	movwf	controlador2@error,c
  1597                           
  1598                           ;MotorDriver.c: 264: if(error<-2){
  1599  0008F6  5030               	movf	controlador2@error,w,c
  1600  0008F8  0A80               	xorlw	128
  1601  0008FA  0F82               	addlw	130
  1602  0008FC  B0D8               	btfsc	status,0,c
  1603  0008FE  D002               	goto	l1895
  1604                           
  1605                           ;MotorDriver.c: 265: output = LookUp + 1;
  1606  000900  2831               	incf	controlador2@LookUp,w,c
  1607  000902  D006               	goto	L1
  1608  000904                     l1895:
  1609  000904  5030               	movf	controlador2@error,w,c
  1610  000906  0A80               	xorlw	128
  1611  000908  0F7D               	addlw	-131
  1612  00090A  A0D8               	btfss	status,0,c
  1613  00090C  D003               	goto	l509
  1614                           
  1615                           ;MotorDriver.c: 267: output = LookUp - 1;
  1616  00090E  0431               	decf	controlador2@LookUp,w,c
  1617  000910                     L1:
  1618  000910  6E2C               	movwf	controlador2@output,c
  1619                           
  1620                           ;MotorDriver.c: 268: }else{
  1621  000912  D002               	goto	l1899
  1622  000914                     l509:
  1623                           
  1624                           ;MotorDriver.c: 269: output = LookUp;
  1625  000914  C031  F02C         	movff	controlador2@LookUp,controlador2@output
  1626  000918                     l1899:
  1627                           
  1628                           ;MotorDriver.c: 270: }
  1629                           ;MotorDriver.c: 272: return(output);
  1630  000918  502C               	movf	controlador2@output,w,c
  1631  00091A  0012               	return	
  1632  00091C                     __end_of_controlador2:
  1633                           	opt stack 0
  1634                           tblptru	equ	0xFF8
  1635                           tblptrh	equ	0xFF7
  1636                           tblptrl	equ	0xFF6
  1637                           tablat	equ	0xFF5
  1638                           prodh	equ	0xFF4
  1639                           prodl	equ	0xFF3
  1640                           intcon	equ	0xFF2
  1641                           postinc0	equ	0xFEE
  1642                           wreg	equ	0xFE8
  1643                           postdec1	equ	0xFE5
  1644                           fsr1l	equ	0xFE1
  1645                           indf2	equ	0xFDF
  1646                           fsr2h	equ	0xFDA
  1647                           fsr2l	equ	0xFD9
  1648                           status	equ	0xFD8
  1649                           
  1650 ;; *************** function _controlador1 *****************
  1651 ;; Defined at:
  1652 ;;		line 233 in file "MotorDriver.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  LookUp          1    wreg     unsigned char 
  1655 ;;  An_Acquisiti    2   37[COMRAM] unsigned int 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  LookUp          1   48[COMRAM] unsigned char 
  1658 ;;  An_float        3   43[COMRAM] float 
  1659 ;;  Vref            3   40[COMRAM] float 
  1660 ;;  error           1   47[COMRAM] char 
  1661 ;;  output          1   46[COMRAM] char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      unsigned char 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1674 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1675 ;;Total ram usage:       12 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    6
  1678 ;; This function calls:
  1679 ;;		___ftdiv
  1680 ;;		___fttol
  1681 ;;		___lwtoft
  1682 ;; This function is called by:
  1683 ;;		_State8MEF_act
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text4
  1688  00091C                     __ptext4:
  1689                           	opt stack 0
  1690  00091C                     _controlador1:
  1691                           	opt stack 22
  1692                           
  1693                           ;incstack = 0
  1694                           ;controlador1@LookUp stored from wreg
  1695  00091C  6E31               	movwf	controlador1@LookUp,c
  1696                           
  1697                           ;MotorDriver.c: 235: int8_t error,output;
  1698                           ;MotorDriver.c: 236: float Vref,An_float;
  1699                           ;MotorDriver.c: 238: An_float = An_Acquisition;
  1700  00091E  C026  F017         	movff	controlador1@An_Acquisition,___lwtoft@c
  1701  000922  C027  F018         	movff	controlador1@An_Acquisition+1,___lwtoft@c+1
  1702  000926  EC2F  F006         	call	___lwtoft	;wreg free
  1703  00092A  C017  F02C         	movff	?___lwtoft,controlador1@An_float
  1704  00092E  C018  F02D         	movff	?___lwtoft+1,controlador1@An_float+1
  1705  000932  C019  F02E         	movff	?___lwtoft+2,controlador1@An_float+2
  1706                           
  1707                           ;MotorDriver.c: 239: Vref = An_float/257;
  1708  000936  C02C  F017         	movff	controlador1@An_float,___ftdiv@f1
  1709  00093A  C02D  F018         	movff	controlador1@An_float+1,___ftdiv@f1+1
  1710  00093E  C02E  F019         	movff	controlador1@An_float+2,___ftdiv@f1+2
  1711  000942  0E80               	movlw	128
  1712  000944  6E1A               	movwf	___ftdiv@f2,c
  1713  000946  0E80               	movlw	128
  1714  000948  6E1B               	movwf	___ftdiv@f2+1,c
  1715  00094A  0E43               	movlw	67
  1716  00094C  6E1C               	movwf	___ftdiv@f2+2,c
  1717  00094E  EC77  F003         	call	___ftdiv	;wreg free
  1718  000952  C017  F029         	movff	?___ftdiv,controlador1@Vref
  1719  000956  C018  F02A         	movff	?___ftdiv+1,controlador1@Vref+1
  1720  00095A  C019  F02B         	movff	?___ftdiv+2,controlador1@Vref+2
  1721                           
  1722                           ;MotorDriver.c: 241: error = (uint8_t)Vref - LookUp;
  1723  00095E  5031               	movf	controlador1@LookUp,w,c
  1724  000960  0800               	sublw	0
  1725  000962  6E28               	movwf	??_controlador1& (0+255),c
  1726  000964  C029  F00F         	movff	controlador1@Vref,___fttol@f1
  1727  000968  C02A  F010         	movff	controlador1@Vref+1,___fttol@f1+1
  1728  00096C  C02B  F011         	movff	controlador1@Vref+2,___fttol@f1+2
  1729  000970  ECFD  F002         	call	___fttol	;wreg free
  1730  000974  500F               	movf	?___fttol,w,c
  1731  000976  2428               	addwf	??_controlador1,w,c
  1732  000978  6E30               	movwf	controlador1@error,c
  1733                           
  1734                           ;MotorDriver.c: 243: if (error<-1){
  1735  00097A  5030               	movf	controlador1@error,w,c
  1736  00097C  0A80               	xorlw	128
  1737  00097E  0F81               	addlw	129
  1738  000980  B0D8               	btfsc	status,0,c
  1739  000982  D002               	goto	l1881
  1740                           
  1741                           ;MotorDriver.c: 244: output = LookUp + 1;
  1742  000984  2831               	incf	controlador1@LookUp,w,c
  1743  000986  D006               	goto	L2
  1744  000988                     l1881:
  1745  000988  5030               	movf	controlador1@error,w,c
  1746  00098A  0A80               	xorlw	128
  1747  00098C  0F7E               	addlw	-130
  1748  00098E  A0D8               	btfss	status,0,c
  1749  000990  D003               	goto	l502
  1750                           
  1751                           ;MotorDriver.c: 246: output = LookUp - 1;
  1752  000992  0431               	decf	controlador1@LookUp,w,c
  1753  000994                     L2:
  1754  000994  6E2F               	movwf	controlador1@output,c
  1755                           
  1756                           ;MotorDriver.c: 247: }else{
  1757  000996  D002               	goto	l1885
  1758  000998                     l502:
  1759                           
  1760                           ;MotorDriver.c: 248: output = LookUp;
  1761  000998  C031  F02F         	movff	controlador1@LookUp,controlador1@output
  1762  00099C                     l1885:
  1763                           
  1764                           ;MotorDriver.c: 249: }
  1765                           ;MotorDriver.c: 251: return(output);
  1766  00099C  502F               	movf	controlador1@output,w,c
  1767  00099E  0012               	return	
  1768  0009A0                     __end_of_controlador1:
  1769                           	opt stack 0
  1770                           tblptru	equ	0xFF8
  1771                           tblptrh	equ	0xFF7
  1772                           tblptrl	equ	0xFF6
  1773                           tablat	equ	0xFF5
  1774                           prodh	equ	0xFF4
  1775                           prodl	equ	0xFF3
  1776                           intcon	equ	0xFF2
  1777                           postinc0	equ	0xFEE
  1778                           wreg	equ	0xFE8
  1779                           postdec1	equ	0xFE5
  1780                           fsr1l	equ	0xFE1
  1781                           indf2	equ	0xFDF
  1782                           fsr2h	equ	0xFDA
  1783                           fsr2l	equ	0xFD9
  1784                           status	equ	0xFD8
  1785                           
  1786 ;; *************** function ___lwtoft *****************
  1787 ;; Defined at:
  1788 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  c               2   22[COMRAM] unsigned int 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  3   22[COMRAM] float 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1802 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;Total ram usage:        3 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    5
  1809 ;; This function calls:
  1810 ;;		___ftpack
  1811 ;; This function is called by:
  1812 ;;		_controlador1
  1813 ;;		_controlador2
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text5
  1818  000C5E                     __ptext5:
  1819                           	opt stack 0
  1820  000C5E                     ___lwtoft:
  1821                           	opt stack 22
  1822                           
  1823                           ;incstack = 0
  1824  000C5E  C017  F00F         	movff	___lwtoft@c,___ftpack@arg
  1825  000C62  C018  F010         	movff	___lwtoft@c+1,___ftpack@arg+1
  1826  000C66  6A11               	clrf	___ftpack@arg+2,c
  1827  000C68  0E8E               	movlw	142
  1828  000C6A  6E12               	movwf	___ftpack@exp,c
  1829  000C6C  0E00               	movlw	0
  1830  000C6E  6E13               	movwf	___ftpack@sign,c
  1831  000C70  ECEA  F003         	call	___ftpack	;wreg free
  1832  000C74  C00F  F017         	movff	?___ftpack,?___lwtoft
  1833  000C78  C010  F018         	movff	?___ftpack+1,?___lwtoft+1
  1834  000C7C  C011  F019         	movff	?___ftpack+2,?___lwtoft+2
  1835  000C80  0012               	return	
  1836  000C82                     __end_of___lwtoft:
  1837                           	opt stack 0
  1838                           tblptru	equ	0xFF8
  1839                           tblptrh	equ	0xFF7
  1840                           tblptrl	equ	0xFF6
  1841                           tablat	equ	0xFF5
  1842                           prodh	equ	0xFF4
  1843                           prodl	equ	0xFF3
  1844                           intcon	equ	0xFF2
  1845                           postinc0	equ	0xFEE
  1846                           wreg	equ	0xFE8
  1847                           postdec1	equ	0xFE5
  1848                           fsr1l	equ	0xFE1
  1849                           indf2	equ	0xFDF
  1850                           fsr2h	equ	0xFDA
  1851                           fsr2l	equ	0xFD9
  1852                           status	equ	0xFD8
  1853                           
  1854 ;; *************** function ___fttol *****************
  1855 ;; Defined at:
  1856 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\fttol.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  f1              3   14[COMRAM] float 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  lval            4   24[COMRAM] unsigned long 
  1861 ;;  exp1            1   28[COMRAM] unsigned char 
  1862 ;;  sign1           1   23[COMRAM] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  4   14[COMRAM] long 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;Total ram usage:       15 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    4
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_controlador1
  1883 ;;		_controlador2
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text6
  1888  0005FA                     __ptext6:
  1889                           	opt stack 0
  1890  0005FA                     ___fttol:
  1891                           	opt stack 23
  1892                           
  1893                           ;incstack = 0
  1894  0005FA  C011  F013         	movff	___fttol@f1+2,??___fttol
  1895  0005FE  6A14               	clrf	(??___fttol+1)& (0+255),c
  1896  000600  6A15               	clrf	(??___fttol+2)& (0+255),c
  1897  000602  3410               	rlcf	___fttol@f1+1,w,c
  1898  000604  3613               	rlcf	??___fttol& (0+255),f,c
  1899  000606  E301               	bnc	u861
  1900  000608  8014               	bsf	(??___fttol+1)& (0+255),0,c
  1901  00060A                     u861:
  1902  00060A  5013               	movf	??___fttol,w,c
  1903  00060C  6E1D               	movwf	___fttol@exp1,c
  1904  00060E  501D               	movf	___fttol@exp1,w,c
  1905  000610  A4D8               	btfss	status,2,c
  1906  000612  D009               	goto	l1813
  1907  000614  0E00               	movlw	0
  1908  000616  6E0F               	movwf	?___fttol,c
  1909  000618  0E00               	movlw	0
  1910  00061A  6E10               	movwf	?___fttol+1,c
  1911  00061C  0E00               	movlw	0
  1912  00061E  6E11               	movwf	?___fttol+2,c
  1913  000620  0E00               	movlw	0
  1914  000622  6E12               	movwf	?___fttol+3,c
  1915  000624  0012               	return	
  1916  000626                     l1813:
  1917  000626  0E17               	movlw	23
  1918  000628  6E13               	movwf	??___fttol& (0+255),c
  1919  00062A  C00F  F014         	movff	___fttol@f1,??___fttol+1
  1920  00062E  C010  F015         	movff	___fttol@f1+1,??___fttol+2
  1921  000632  C011  F016         	movff	___fttol@f1+2,??___fttol+3
  1922  000636  2813               	incf	??___fttol,w,c
  1923  000638  6E17               	movwf	(??___fttol+4)& (0+255),c
  1924  00063A  D004               	goto	u880
  1925  00063C                     u885:
  1926  00063C  90D8               	bcf	status,0,c
  1927  00063E  3216               	rrcf	??___fttol+3,f,c
  1928  000640  3215               	rrcf	??___fttol+2,f,c
  1929  000642  3214               	rrcf	??___fttol+1,f,c
  1930  000644                     u880:
  1931  000644  2E17               	decfsz	(??___fttol+4)& (0+255),f,c
  1932  000646  D7FA               	goto	u885
  1933  000648  5014               	movf	??___fttol+1,w,c
  1934  00064A  6E18               	movwf	___fttol@sign1,c
  1935  00064C  8E10               	bsf	___fttol@f1+1,7,c
  1936  00064E  0EFF               	movlw	255
  1937  000650  160F               	andwf	___fttol@f1,f,c
  1938  000652  0EFF               	movlw	255
  1939  000654  1610               	andwf	___fttol@f1+1,f,c
  1940  000656  0E00               	movlw	0
  1941  000658  1611               	andwf	___fttol@f1+2,f,c
  1942  00065A  500F               	movf	___fttol@f1,w,c
  1943  00065C  6E19               	movwf	___fttol@lval,c
  1944  00065E  5010               	movf	___fttol@f1+1,w,c
  1945  000660  6E1A               	movwf	___fttol@lval+1,c
  1946  000662  5011               	movf	___fttol@f1+2,w,c
  1947  000664  6E1B               	movwf	___fttol@lval+2,c
  1948  000666  6A1C               	clrf	___fttol@lval+3,c
  1949  000668  0E8E               	movlw	142
  1950  00066A  5E1D               	subwf	___fttol@exp1,f,c
  1951  00066C  AE1D               	btfss	___fttol@exp1,7,c
  1952  00066E  D016               	goto	l1835
  1953  000670  501D               	movf	___fttol@exp1,w,c
  1954  000672  0A80               	xorlw	128
  1955  000674  0F8F               	addlw	143
  1956  000676  B0D8               	btfsc	status,0,c
  1957  000678  D009               	goto	l1831
  1958  00067A  0E00               	movlw	0
  1959  00067C  6E0F               	movwf	?___fttol,c
  1960  00067E  0E00               	movlw	0
  1961  000680  6E10               	movwf	?___fttol+1,c
  1962  000682  0E00               	movlw	0
  1963  000684  6E11               	movwf	?___fttol+2,c
  1964  000686  0E00               	movlw	0
  1965  000688  6E12               	movwf	?___fttol+3,c
  1966  00068A  0012               	return	
  1967  00068C                     l1831:
  1968  00068C  90D8               	bcf	status,0,c
  1969  00068E  321C               	rrcf	___fttol@lval+3,f,c
  1970  000690  321B               	rrcf	___fttol@lval+2,f,c
  1971  000692  321A               	rrcf	___fttol@lval+1,f,c
  1972  000694  3219               	rrcf	___fttol@lval,f,c
  1973  000696  3E1D               	incfsz	___fttol@exp1,f,c
  1974  000698  D7F9               	goto	l1831
  1975  00069A  D015               	goto	l1845
  1976  00069C                     l1835:
  1977  00069C  0E17               	movlw	23
  1978  00069E  641D               	cpfsgt	___fttol@exp1,c
  1979  0006A0  D00F               	goto	l1843
  1980  0006A2  0E00               	movlw	0
  1981  0006A4  6E0F               	movwf	?___fttol,c
  1982  0006A6  0E00               	movlw	0
  1983  0006A8  6E10               	movwf	?___fttol+1,c
  1984  0006AA  0E00               	movlw	0
  1985  0006AC  6E11               	movwf	?___fttol+2,c
  1986  0006AE  0E00               	movlw	0
  1987  0006B0  6E12               	movwf	?___fttol+3,c
  1988  0006B2  0012               	return	
  1989  0006B4                     l1841:
  1990  0006B4  90D8               	bcf	status,0,c
  1991  0006B6  3619               	rlcf	___fttol@lval,f,c
  1992  0006B8  361A               	rlcf	___fttol@lval+1,f,c
  1993  0006BA  361B               	rlcf	___fttol@lval+2,f,c
  1994  0006BC  361C               	rlcf	___fttol@lval+3,f,c
  1995  0006BE  061D               	decf	___fttol@exp1,f,c
  1996  0006C0                     l1843:
  1997  0006C0  501D               	movf	___fttol@exp1,w,c
  1998  0006C2  A4D8               	btfss	status,2,c
  1999  0006C4  D7F7               	goto	l1841
  2000  0006C6                     l1845:
  2001  0006C6  5018               	movf	___fttol@sign1,w,c
  2002  0006C8  B4D8               	btfsc	status,2,c
  2003  0006CA  D008               	goto	l1849
  2004  0006CC  1E1C               	comf	___fttol@lval+3,f,c
  2005  0006CE  1E1B               	comf	___fttol@lval+2,f,c
  2006  0006D0  1E1A               	comf	___fttol@lval+1,f,c
  2007  0006D2  6C19               	negf	___fttol@lval,c
  2008  0006D4  0E00               	movlw	0
  2009  0006D6  221A               	addwfc	___fttol@lval+1,f,c
  2010  0006D8  221B               	addwfc	___fttol@lval+2,f,c
  2011  0006DA  221C               	addwfc	___fttol@lval+3,f,c
  2012  0006DC                     l1849:
  2013  0006DC  C019  F00F         	movff	___fttol@lval,?___fttol
  2014  0006E0  C01A  F010         	movff	___fttol@lval+1,?___fttol+1
  2015  0006E4  C01B  F011         	movff	___fttol@lval+2,?___fttol+2
  2016  0006E8  C01C  F012         	movff	___fttol@lval+3,?___fttol+3
  2017  0006EC  0012               	return	
  2018  0006EE                     __end_of___fttol:
  2019                           	opt stack 0
  2020                           tblptru	equ	0xFF8
  2021                           tblptrh	equ	0xFF7
  2022                           tblptrl	equ	0xFF6
  2023                           tablat	equ	0xFF5
  2024                           prodh	equ	0xFF4
  2025                           prodl	equ	0xFF3
  2026                           intcon	equ	0xFF2
  2027                           postinc0	equ	0xFEE
  2028                           wreg	equ	0xFE8
  2029                           postdec1	equ	0xFE5
  2030                           fsr1l	equ	0xFE1
  2031                           indf2	equ	0xFDF
  2032                           fsr2h	equ	0xFDA
  2033                           fsr2l	equ	0xFD9
  2034                           status	equ	0xFD8
  2035                           
  2036 ;; *************** function ___ftdiv *****************
  2037 ;; Defined at:
  2038 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  f1              3   22[COMRAM] float 
  2041 ;;  f2              3   25[COMRAM] float 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  f3              3   32[COMRAM] float 
  2044 ;;  sign            1   36[COMRAM] unsigned char 
  2045 ;;  exp             1   35[COMRAM] unsigned char 
  2046 ;;  cntr            1   31[COMRAM] unsigned char 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  3   22[COMRAM] float 
  2049 ;; Registers used:
  2050 ;;		wreg, status,2, status,0, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2056 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;Total ram usage:       15 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    5
  2063 ;; This function calls:
  2064 ;;		___ftpack
  2065 ;; This function is called by:
  2066 ;;		_controlador1
  2067 ;;		_controlador2
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text7
  2072  0006EE                     __ptext7:
  2073                           	opt stack 0
  2074  0006EE                     ___ftdiv:
  2075                           	opt stack 22
  2076                           
  2077                           ;incstack = 0
  2078  0006EE  C019  F01D         	movff	___ftdiv@f1+2,??___ftdiv
  2079  0006F2  6A1E               	clrf	(??___ftdiv+1)& (0+255),c
  2080  0006F4  6A1F               	clrf	(??___ftdiv+2)& (0+255),c
  2081  0006F6  3418               	rlcf	___ftdiv@f1+1,w,c
  2082  0006F8  361D               	rlcf	??___ftdiv& (0+255),f,c
  2083  0006FA  E301               	bnc	u811
  2084  0006FC  801E               	bsf	(??___ftdiv+1)& (0+255),0,c
  2085  0006FE                     u811:
  2086  0006FE  501D               	movf	??___ftdiv,w,c
  2087  000700  6E24               	movwf	___ftdiv@exp,c
  2088  000702  5024               	movf	___ftdiv@exp,w,c
  2089  000704  A4D8               	btfss	status,2,c
  2090  000706  D007               	goto	l1767
  2091  000708  0E00               	movlw	0
  2092  00070A  6E17               	movwf	?___ftdiv,c
  2093  00070C  0E00               	movlw	0
  2094  00070E  6E18               	movwf	?___ftdiv+1,c
  2095  000710  0E00               	movlw	0
  2096  000712  6E19               	movwf	?___ftdiv+2,c
  2097  000714  0012               	return	
  2098  000716                     l1767:
  2099  000716  C01C  F01D         	movff	___ftdiv@f2+2,??___ftdiv
  2100  00071A  6A1E               	clrf	(??___ftdiv+1)& (0+255),c
  2101  00071C  6A1F               	clrf	(??___ftdiv+2)& (0+255),c
  2102  00071E  341B               	rlcf	___ftdiv@f2+1,w,c
  2103  000720  361D               	rlcf	??___ftdiv& (0+255),f,c
  2104  000722  E301               	bnc	u831
  2105  000724  801E               	bsf	(??___ftdiv+1)& (0+255),0,c
  2106  000726                     u831:
  2107  000726  501D               	movf	??___ftdiv,w,c
  2108  000728  6E25               	movwf	___ftdiv@sign,c
  2109  00072A  5025               	movf	___ftdiv@sign,w,c
  2110  00072C  A4D8               	btfss	status,2,c
  2111  00072E  D007               	goto	l1773
  2112  000730  0E00               	movlw	0
  2113  000732  6E17               	movwf	?___ftdiv,c
  2114  000734  0E00               	movlw	0
  2115  000736  6E18               	movwf	?___ftdiv+1,c
  2116  000738  0E00               	movlw	0
  2117  00073A  6E19               	movwf	?___ftdiv+2,c
  2118  00073C  0012               	return	
  2119  00073E                     l1773:
  2120  00073E  0E00               	movlw	0
  2121  000740  6E21               	movwf	___ftdiv@f3,c
  2122  000742  0E00               	movlw	0
  2123  000744  6E22               	movwf	___ftdiv@f3+1,c
  2124  000746  0E00               	movlw	0
  2125  000748  6E23               	movwf	___ftdiv@f3+2,c
  2126  00074A  5025               	movf	___ftdiv@sign,w,c
  2127  00074C  0F89               	addlw	137
  2128  00074E  5E24               	subwf	___ftdiv@exp,f,c
  2129  000750  C019  F025         	movff	___ftdiv@f1+2,___ftdiv@sign
  2130  000754  501C               	movf	___ftdiv@f2+2,w,c
  2131  000756  1A25               	xorwf	___ftdiv@sign,f,c
  2132  000758  0E80               	movlw	128
  2133  00075A  1625               	andwf	___ftdiv@sign,f,c
  2134  00075C  8E18               	bsf	___ftdiv@f1+1,7,c
  2135  00075E  0EFF               	movlw	255
  2136  000760  1617               	andwf	___ftdiv@f1,f,c
  2137  000762  0EFF               	movlw	255
  2138  000764  1618               	andwf	___ftdiv@f1+1,f,c
  2139  000766  0E00               	movlw	0
  2140  000768  1619               	andwf	___ftdiv@f1+2,f,c
  2141  00076A  8E1B               	bsf	___ftdiv@f2+1,7,c
  2142  00076C  0EFF               	movlw	255
  2143  00076E  161A               	andwf	___ftdiv@f2,f,c
  2144  000770  0EFF               	movlw	255
  2145  000772  161B               	andwf	___ftdiv@f2+1,f,c
  2146  000774  0E00               	movlw	0
  2147  000776  161C               	andwf	___ftdiv@f2+2,f,c
  2148  000778  0E18               	movlw	24
  2149  00077A  6E20               	movwf	___ftdiv@cntr,c
  2150  00077C                     l1793:
  2151  00077C  90D8               	bcf	status,0,c
  2152  00077E  3621               	rlcf	___ftdiv@f3,f,c
  2153  000780  3622               	rlcf	___ftdiv@f3+1,f,c
  2154  000782  3623               	rlcf	___ftdiv@f3+2,f,c
  2155  000784  501A               	movf	___ftdiv@f2,w,c
  2156  000786  5C17               	subwf	___ftdiv@f1,w,c
  2157  000788  501B               	movf	___ftdiv@f2+1,w,c
  2158  00078A  5818               	subwfb	___ftdiv@f1+1,w,c
  2159  00078C  501C               	movf	___ftdiv@f2+2,w,c
  2160  00078E  5819               	subwfb	___ftdiv@f1+2,w,c
  2161  000790  A0D8               	btfss	status,0,c
  2162  000792  D007               	goto	l794
  2163  000794  501A               	movf	___ftdiv@f2,w,c
  2164  000796  5E17               	subwf	___ftdiv@f1,f,c
  2165  000798  501B               	movf	___ftdiv@f2+1,w,c
  2166  00079A  5A18               	subwfb	___ftdiv@f1+1,f,c
  2167  00079C  501C               	movf	___ftdiv@f2+2,w,c
  2168  00079E  5A19               	subwfb	___ftdiv@f1+2,f,c
  2169  0007A0  8021               	bsf	___ftdiv@f3,0,c
  2170  0007A2                     l794:
  2171  0007A2  90D8               	bcf	status,0,c
  2172  0007A4  3617               	rlcf	___ftdiv@f1,f,c
  2173  0007A6  3618               	rlcf	___ftdiv@f1+1,f,c
  2174  0007A8  3619               	rlcf	___ftdiv@f1+2,f,c
  2175  0007AA  2E20               	decfsz	___ftdiv@cntr,f,c
  2176  0007AC  D7E7               	goto	l1793
  2177  0007AE  C021  F00F         	movff	___ftdiv@f3,___ftpack@arg
  2178  0007B2  C022  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2179  0007B6  C023  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2180  0007BA  C024  F012         	movff	___ftdiv@exp,___ftpack@exp
  2181  0007BE  C025  F013         	movff	___ftdiv@sign,___ftpack@sign
  2182  0007C2  ECEA  F003         	call	___ftpack	;wreg free
  2183  0007C6  C00F  F017         	movff	?___ftpack,?___ftdiv
  2184  0007CA  C010  F018         	movff	?___ftpack+1,?___ftdiv+1
  2185  0007CE  C011  F019         	movff	?___ftpack+2,?___ftdiv+2
  2186  0007D2  0012               	return	
  2187  0007D4                     __end_of___ftdiv:
  2188                           	opt stack 0
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           prodh	equ	0xFF4
  2194                           prodl	equ	0xFF3
  2195                           intcon	equ	0xFF2
  2196                           postinc0	equ	0xFEE
  2197                           wreg	equ	0xFE8
  2198                           postdec1	equ	0xFE5
  2199                           fsr1l	equ	0xFE1
  2200                           indf2	equ	0xFDF
  2201                           fsr2h	equ	0xFDA
  2202                           fsr2l	equ	0xFD9
  2203                           status	equ	0xFD8
  2204                           
  2205 ;; *************** function ___ftpack *****************
  2206 ;; Defined at:
  2207 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\float.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  arg             3   14[COMRAM] unsigned um
  2210 ;;  exp             1   17[COMRAM] unsigned char 
  2211 ;;  sign            1   18[COMRAM] unsigned char 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;		None
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  3   14[COMRAM] float 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2223 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2225 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2226 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;Total ram usage:        8 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:    4
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		___ftdiv
  2234 ;;		___lwtoft
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text8
  2239  0007D4                     __ptext8:
  2240                           	opt stack 0
  2241  0007D4                     ___ftpack:
  2242                           	opt stack 22
  2243                           
  2244                           ;incstack = 0
  2245  0007D4  5012               	movf	___ftpack@exp,w,c
  2246  0007D6  B4D8               	btfsc	status,2,c
  2247  0007D8  D005               	goto	l1725
  2248  0007DA  500F               	movf	___ftpack@arg,w,c
  2249  0007DC  1010               	iorwf	___ftpack@arg+1,w,c
  2250  0007DE  1011               	iorwf	___ftpack@arg+2,w,c
  2251  0007E0  A4D8               	btfss	status,2,c
  2252  0007E2  D00C               	goto	l1731
  2253  0007E4                     l1725:
  2254  0007E4  0E00               	movlw	0
  2255  0007E6  6E0F               	movwf	?___ftpack,c
  2256  0007E8  0E00               	movlw	0
  2257  0007EA  6E10               	movwf	?___ftpack+1,c
  2258  0007EC  0E00               	movlw	0
  2259  0007EE  6E11               	movwf	?___ftpack+2,c
  2260  0007F0  0012               	return	
  2261  0007F2                     l1729:
  2262  0007F2  2A12               	incf	___ftpack@exp,f,c
  2263  0007F4  90D8               	bcf	status,0,c
  2264  0007F6  3211               	rrcf	___ftpack@arg+2,f,c
  2265  0007F8  3210               	rrcf	___ftpack@arg+1,f,c
  2266  0007FA  320F               	rrcf	___ftpack@arg,f,c
  2267  0007FC                     l1731:
  2268  0007FC  0E00               	movlw	0
  2269  0007FE  140F               	andwf	___ftpack@arg,w,c
  2270  000800  6E14               	movwf	??___ftpack& (0+255),c
  2271  000802  0E00               	movlw	0
  2272  000804  1410               	andwf	___ftpack@arg+1,w,c
  2273  000806  6E15               	movwf	(??___ftpack+1)& (0+255),c
  2274  000808  0EFE               	movlw	254
  2275  00080A  1411               	andwf	___ftpack@arg+2,w,c
  2276  00080C  6E16               	movwf	(??___ftpack+2)& (0+255),c
  2277  00080E  5014               	movf	??___ftpack,w,c
  2278  000810  1015               	iorwf	??___ftpack+1,w,c
  2279  000812  1016               	iorwf	??___ftpack+2,w,c
  2280  000814  B4D8               	btfsc	status,2,c
  2281  000816  D00C               	goto	l1737
  2282  000818  D7EC               	goto	l1729
  2283  00081A                     l1733:
  2284  00081A  2A12               	incf	___ftpack@exp,f,c
  2285  00081C  0E01               	movlw	1
  2286  00081E  260F               	addwf	___ftpack@arg,f,c
  2287  000820  0E00               	movlw	0
  2288  000822  2210               	addwfc	___ftpack@arg+1,f,c
  2289  000824  0E00               	movlw	0
  2290  000826  2211               	addwfc	___ftpack@arg+2,f,c
  2291  000828  90D8               	bcf	status,0,c
  2292  00082A  3211               	rrcf	___ftpack@arg+2,f,c
  2293  00082C  3210               	rrcf	___ftpack@arg+1,f,c
  2294  00082E  320F               	rrcf	___ftpack@arg,f,c
  2295  000830                     l1737:
  2296  000830  0E00               	movlw	0
  2297  000832  140F               	andwf	___ftpack@arg,w,c
  2298  000834  6E14               	movwf	??___ftpack& (0+255),c
  2299  000836  0E00               	movlw	0
  2300  000838  1410               	andwf	___ftpack@arg+1,w,c
  2301  00083A  6E15               	movwf	(??___ftpack+1)& (0+255),c
  2302  00083C  0EFF               	movlw	255
  2303  00083E  1411               	andwf	___ftpack@arg+2,w,c
  2304  000840  6E16               	movwf	(??___ftpack+2)& (0+255),c
  2305  000842  5014               	movf	??___ftpack,w,c
  2306  000844  1015               	iorwf	??___ftpack+1,w,c
  2307  000846  1016               	iorwf	??___ftpack+2,w,c
  2308  000848  B4D8               	btfsc	status,2,c
  2309  00084A  D006               	goto	l1741
  2310  00084C  D7E6               	goto	l1733
  2311  00084E                     l1739:
  2312  00084E  0612               	decf	___ftpack@exp,f,c
  2313  000850  90D8               	bcf	status,0,c
  2314  000852  360F               	rlcf	___ftpack@arg,f,c
  2315  000854  3610               	rlcf	___ftpack@arg+1,f,c
  2316  000856  3611               	rlcf	___ftpack@arg+2,f,c
  2317  000858                     l1741:
  2318  000858  BE10               	btfsc	___ftpack@arg+1,7,c
  2319  00085A  D003               	goto	l736
  2320  00085C  0E02               	movlw	2
  2321  00085E  6012               	cpfslt	___ftpack@exp,c
  2322  000860  D7F6               	goto	l1739
  2323  000862                     l736:
  2324  000862  A012               	btfss	___ftpack@exp,0,c
  2325  000864  9E10               	bcf	___ftpack@arg+1,7,c
  2326  000866  90D8               	bcf	status,0,c
  2327  000868  3212               	rrcf	___ftpack@exp,f,c
  2328  00086A  5012               	movf	___ftpack@exp,w,c
  2329  00086C  1211               	iorwf	___ftpack@arg+2,f,c
  2330  00086E  5013               	movf	___ftpack@sign,w,c
  2331  000870  A4D8               	btfss	status,2,c
  2332  000872  8E11               	bsf	___ftpack@arg+2,7,c
  2333  000874  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  2334  000878  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  2335  00087C  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  2336  000880  0012               	return	
  2337  000882                     __end_of___ftpack:
  2338                           	opt stack 0
  2339                           tblptru	equ	0xFF8
  2340                           tblptrh	equ	0xFF7
  2341                           tblptrl	equ	0xFF6
  2342                           tablat	equ	0xFF5
  2343                           prodh	equ	0xFF4
  2344                           prodl	equ	0xFF3
  2345                           intcon	equ	0xFF2
  2346                           postinc0	equ	0xFEE
  2347                           wreg	equ	0xFE8
  2348                           postdec1	equ	0xFE5
  2349                           fsr1l	equ	0xFE1
  2350                           indf2	equ	0xFDF
  2351                           fsr2h	equ	0xFDA
  2352                           fsr2l	equ	0xFD9
  2353                           status	equ	0xFD8
  2354                           
  2355 ;; *************** function _ADC_GetConversion *****************
  2356 ;; Defined at:
  2357 ;;		line 111 in file "mcc_generated_files/adc.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  channel         1    wreg     enum E6986
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  channel         1   18[COMRAM] enum E6986
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  2   14[COMRAM] unsigned int 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;Total ram usage:        5 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    4
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_State8MEF_act
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text9
  2386  000B54                     __ptext9:
  2387                           	opt stack 0
  2388  000B54                     _ADC_GetConversion:
  2389                           	opt stack 24
  2390                           
  2391                           ;incstack = 0
  2392                           ;ADC_GetConversion@channel stored from wreg
  2393  000B54  6E13               	movwf	ADC_GetConversion@channel,c
  2394                           
  2395                           ;adc.c: 114: ADCON0bits.CHS = channel;
  2396  000B56  C013  F011         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  2397  000B5A  4611               	rlncf	??_ADC_GetConversion,f,c
  2398  000B5C  4611               	rlncf	??_ADC_GetConversion,f,c
  2399  000B5E  50C2               	movf	4034,w,c	;volatile
  2400  000B60  1811               	xorwf	??_ADC_GetConversion,w,c
  2401  000B62  0B83               	andlw	-125
  2402  000B64  1811               	xorwf	??_ADC_GetConversion,w,c
  2403  000B66  6EC2               	movwf	4034,c	;volatile
  2404                           
  2405                           ;adc.c: 117: ADCON0bits.ADON = 1;
  2406  000B68  80C2               	bsf	4034,0,c	;volatile
  2407                           
  2408                           ;adc.c: 120: ADCON0bits.GO_nDONE = 1;
  2409  000B6A  82C2               	bsf	4034,1,c	;volatile
  2410  000B6C                     l232:
  2411  000B6C  B2C2               	btfsc	4034,1,c	;volatile
  2412  000B6E  D7FE               	goto	l232
  2413                           
  2414                           ;adc.c: 125: }
  2415                           ;adc.c: 127: return ((ADRESH << 8) + ADRESL);
  2416  000B70  50C4               	movf	4036,w,c	;volatile
  2417  000B72  6E12               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  2418  000B74  6A11               	clrf	??_ADC_GetConversion& (0+255),c
  2419  000B76  50C3               	movf	4035,w,c	;volatile
  2420  000B78  2411               	addwf	??_ADC_GetConversion,w,c
  2421  000B7A  6E0F               	movwf	?_ADC_GetConversion,c
  2422  000B7C  0E00               	movlw	0
  2423  000B7E  2012               	addwfc	??_ADC_GetConversion+1,w,c
  2424  000B80  6E10               	movwf	?_ADC_GetConversion+1,c
  2425  000B82  0012               	return	
  2426  000B84                     __end_of_ADC_GetConversion:
  2427                           	opt stack 0
  2428                           tblptru	equ	0xFF8
  2429                           tblptrh	equ	0xFF7
  2430                           tblptrl	equ	0xFF6
  2431                           tablat	equ	0xFF5
  2432                           prodh	equ	0xFF4
  2433                           prodl	equ	0xFF3
  2434                           intcon	equ	0xFF2
  2435                           postinc0	equ	0xFEE
  2436                           wreg	equ	0xFE8
  2437                           postdec1	equ	0xFE5
  2438                           fsr1l	equ	0xFE1
  2439                           indf2	equ	0xFDF
  2440                           fsr2h	equ	0xFDA
  2441                           fsr2l	equ	0xFD9
  2442                           status	equ	0xFD8
  2443                           
  2444 ;; *************** function _State16MEF_act *****************
  2445 ;; Defined at:
  2446 ;;		line 145 in file "MotorDriver.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;Total ram usage:        1 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    5
  2467 ;; This function calls:
  2468 ;;		_EPWM1_LoadDutyValue
  2469 ;;		_EPWM2_LoadDutyValue
  2470 ;;		_EUSART1_Write
  2471 ;; This function is called by:
  2472 ;;		_StepMove
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text10
  2477  000400                     __ptext10:
  2478                           	opt stack 0
  2479  000400                     _State16MEF_act:
  2480                           	opt stack 24
  2481                           
  2482                           ;MotorDriver.c: 146: switch(EstadoActual) {
  2483                           
  2484                           ;incstack = 0
  2485  000400  D0EB               	goto	l2145
  2486  000402                     l2045:
  2487                           
  2488                           ;MotorDriver.c: 148: PSTR1CON = 0x00; PSTR2CON = 0x00;
  2489  000402  0E00               	movlw	0
  2490  000404  6EB9               	movwf	4025,c	;volatile
  2491  000406  0E00               	movlw	0
  2492  000408  6E63               	movwf	3939,c	;volatile
  2493                           
  2494                           ;MotorDriver.c: 149: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  2495  00040A  948B               	bcf	3979,2,c	;volatile
  2496  00040C  9A8C               	bcf	3980,5,c	;volatile
  2497  00040E  928B               	bcf	3979,1,c	;volatile
  2498  000410  908B               	bcf	3979,0,c	;volatile
  2499                           
  2500                           ;MotorDriver.c: 150: EstadoActual = STATE1;
  2501  000412  0E01               	movlw	1
  2502  000414  6E4D               	movwf	_EstadoActual,c
  2503                           
  2504                           ;MotorDriver.c: 151: break;
  2505  000416  0012               	return	
  2506  000418                     l2055:
  2507                           
  2508                           ;MotorDriver.c: 153: PSTR1CON = 0x01; PSTR2CON = 0x01;
  2509  000418  0E01               	movlw	1
  2510  00041A  6EB9               	movwf	4025,c	;volatile
  2511  00041C  0E01               	movlw	1
  2512  00041E  6E63               	movwf	3939,c	;volatile
  2513                           
  2514                           ;MotorDriver.c: 154: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2515  000420  9A8C               	bcf	3980,5,c	;volatile
  2516  000422  908B               	bcf	3979,0,c	;volatile
  2517                           
  2518                           ;MotorDriver.c: 155: if (Microstep<16){
  2519  000424  5047               	movf	_Microstep,w,c
  2520  000426  0A80               	xorlw	128
  2521  000428  0F70               	addlw	-144
  2522  00042A  B0D8               	btfsc	status,0,c
  2523  00042C  0012               	return	
  2524                           
  2525                           ;MotorDriver.c: 156: EUSART1_Write(Microstep);
  2526  00042E  5047               	movf	_Microstep,w,c
  2527  000430  ECC1  F006         	call	_EUSART1_Write
  2528                           
  2529                           ;MotorDriver.c: 157: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2530  000434  5047               	movf	_Microstep,w,c
  2531  000436  0D01               	mullw	1
  2532  000438  0E60               	movlw	low _LookUP_TABLE_COS_16
  2533  00043A  24F3               	addwf	prodl,w,c
  2534  00043C  6ED9               	movwf	fsr2l,c
  2535  00043E  0E00               	movlw	high _LookUP_TABLE_COS_16
  2536  000440  20F4               	addwfc	prodh,w,c
  2537  000442  6EDA               	movwf	fsr2h,c
  2538  000444  50DF               	movf	indf2,w,c
  2539  000446  6E13               	movwf	??_State16MEF_act& (0+255),c
  2540  000448  5013               	movf	??_State16MEF_act,w,c
  2541  00044A  6E0F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2542  00044C  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2543  00044E  ECDA  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2544                           
  2545                           ;MotorDriver.c: 158: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2546  000452  5047               	movf	_Microstep,w,c
  2547  000454  0D01               	mullw	1
  2548  000456  0E00               	movlw	low _LookUP_TABLE_SEN_16
  2549  000458  24F3               	addwf	prodl,w,c
  2550  00045A  6ED9               	movwf	fsr2l,c
  2551  00045C  0E01               	movlw	high _LookUP_TABLE_SEN_16
  2552  00045E  20F4               	addwfc	prodh,w,c
  2553  000460  6EDA               	movwf	fsr2h,c
  2554  000462  50DF               	movf	indf2,w,c
  2555  000464  6E13               	movwf	??_State16MEF_act& (0+255),c
  2556  000466  5013               	movf	??_State16MEF_act,w,c
  2557  000468  6E0F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2558  00046A  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2559  00046C  ECC2  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2560                           
  2561                           ;MotorDriver.c: 159: if (Microstep==15){
  2562  000470  0E0F               	movlw	15
  2563  000472  1847               	xorwf	_Microstep,w,c
  2564  000474  A4D8               	btfss	status,2,c
  2565  000476  D002               	goto	l2073
  2566                           
  2567                           ;MotorDriver.c: 160: EstadoActual = STATE2;
  2568  000478  0E02               	movlw	2
  2569  00047A  6E4D               	movwf	_EstadoActual,c
  2570  00047C                     l2073:
  2571                           
  2572                           ;MotorDriver.c: 161: }
  2573                           ;MotorDriver.c: 162: Microstep++;
  2574  00047C  2A47               	incf	_Microstep,f,c
  2575                           
  2576                           ;MotorDriver.c: 163: }
  2577                           ;MotorDriver.c: 164: break;
  2578  00047E  0012               	return	
  2579  000480                     l2075:
  2580                           
  2581                           ;MotorDriver.c: 166: PSTR1CON = 0x02; PSTR2CON = 0x01;
  2582  000480  0E02               	movlw	2
  2583  000482  6EB9               	movwf	4025,c	;volatile
  2584  000484  0E01               	movlw	1
  2585  000486  6E63               	movwf	3939,c	;volatile
  2586                           
  2587                           ;MotorDriver.c: 167: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2588  000488  948B               	bcf	3979,2,c	;volatile
  2589  00048A  908B               	bcf	3979,0,c	;volatile
  2590                           
  2591                           ;MotorDriver.c: 168: if ((Microstep<32)&&(Microstep>15)){
  2592  00048C  5047               	movf	_Microstep,w,c
  2593  00048E  0A80               	xorlw	128
  2594  000490  0F60               	addlw	-160
  2595  000492  B0D8               	btfsc	status,0,c
  2596  000494  0012               	return	
  2597  000496  5047               	movf	_Microstep,w,c
  2598  000498  0A80               	xorlw	128
  2599  00049A  0F70               	addlw	-144
  2600  00049C  A0D8               	btfss	status,0,c
  2601  00049E  0012               	return	
  2602                           
  2603                           ;MotorDriver.c: 169: EUSART1_Write(Microstep);
  2604  0004A0  5047               	movf	_Microstep,w,c
  2605  0004A2  ECC1  F006         	call	_EUSART1_Write
  2606                           
  2607                           ;MotorDriver.c: 170: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2608  0004A6  5047               	movf	_Microstep,w,c
  2609  0004A8  0D01               	mullw	1
  2610  0004AA  0E60               	movlw	low _LookUP_TABLE_COS_16
  2611  0004AC  24F3               	addwf	prodl,w,c
  2612  0004AE  6ED9               	movwf	fsr2l,c
  2613  0004B0  0E00               	movlw	high _LookUP_TABLE_COS_16
  2614  0004B2  20F4               	addwfc	prodh,w,c
  2615  0004B4  6EDA               	movwf	fsr2h,c
  2616  0004B6  50DF               	movf	indf2,w,c
  2617  0004B8  6E13               	movwf	??_State16MEF_act& (0+255),c
  2618  0004BA  5013               	movf	??_State16MEF_act,w,c
  2619  0004BC  6E0F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2620  0004BE  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2621  0004C0  ECDA  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2622                           
  2623                           ;MotorDriver.c: 171: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2624  0004C4  5047               	movf	_Microstep,w,c
  2625  0004C6  0D01               	mullw	1
  2626  0004C8  0E00               	movlw	low _LookUP_TABLE_SEN_16
  2627  0004CA  24F3               	addwf	prodl,w,c
  2628  0004CC  6ED9               	movwf	fsr2l,c
  2629  0004CE  0E01               	movlw	high _LookUP_TABLE_SEN_16
  2630  0004D0  20F4               	addwfc	prodh,w,c
  2631  0004D2  6EDA               	movwf	fsr2h,c
  2632  0004D4  50DF               	movf	indf2,w,c
  2633  0004D6  6E13               	movwf	??_State16MEF_act& (0+255),c
  2634  0004D8  5013               	movf	??_State16MEF_act,w,c
  2635  0004DA  6E0F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2636  0004DC  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2637  0004DE  ECC2  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2638                           
  2639                           ;MotorDriver.c: 172: if (Microstep==31){
  2640  0004E2  0E1F               	movlw	31
  2641  0004E4  1847               	xorwf	_Microstep,w,c
  2642  0004E6  A4D8               	btfss	status,2,c
  2643  0004E8  D002               	goto	l2095
  2644                           
  2645                           ;MotorDriver.c: 173: EstadoActual = STATE3;
  2646  0004EA  0E03               	movlw	3
  2647  0004EC  6E4D               	movwf	_EstadoActual,c
  2648  0004EE                     l2095:
  2649                           
  2650                           ;MotorDriver.c: 174: }
  2651                           ;MotorDriver.c: 175: Microstep++;
  2652  0004EE  2A47               	incf	_Microstep,f,c
  2653                           
  2654                           ;MotorDriver.c: 176: }
  2655                           ;MotorDriver.c: 177: break;
  2656  0004F0  0012               	return	
  2657  0004F2                     l2097:
  2658                           
  2659                           ;MotorDriver.c: 179: PSTR1CON = 0x02; PSTR2CON = 0x02;
  2660  0004F2  0E02               	movlw	2
  2661  0004F4  6EB9               	movwf	4025,c	;volatile
  2662  0004F6  0E02               	movlw	2
  2663  0004F8  6E63               	movwf	3939,c	;volatile
  2664                           
  2665                           ;MotorDriver.c: 180: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2666  0004FA  948B               	bcf	3979,2,c	;volatile
  2667  0004FC  928B               	bcf	3979,1,c	;volatile
  2668                           
  2669                           ;MotorDriver.c: 181: if ((Microstep<48)&&(Microstep>31)){
  2670  0004FE  5047               	movf	_Microstep,w,c
  2671  000500  0A80               	xorlw	128
  2672  000502  0F50               	addlw	-176
  2673  000504  B0D8               	btfsc	status,0,c
  2674  000506  0012               	return	
  2675  000508  5047               	movf	_Microstep,w,c
  2676  00050A  0A80               	xorlw	128
  2677  00050C  0F60               	addlw	-160
  2678  00050E  A0D8               	btfss	status,0,c
  2679  000510  0012               	return	
  2680                           
  2681                           ;MotorDriver.c: 182: EUSART1_Write(Microstep);
  2682  000512  5047               	movf	_Microstep,w,c
  2683  000514  ECC1  F006         	call	_EUSART1_Write
  2684                           
  2685                           ;MotorDriver.c: 183: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2686  000518  5047               	movf	_Microstep,w,c
  2687  00051A  0D01               	mullw	1
  2688  00051C  0E60               	movlw	low _LookUP_TABLE_COS_16
  2689  00051E  24F3               	addwf	prodl,w,c
  2690  000520  6ED9               	movwf	fsr2l,c
  2691  000522  0E00               	movlw	high _LookUP_TABLE_COS_16
  2692  000524  20F4               	addwfc	prodh,w,c
  2693  000526  6EDA               	movwf	fsr2h,c
  2694  000528  50DF               	movf	indf2,w,c
  2695  00052A  6E13               	movwf	??_State16MEF_act& (0+255),c
  2696  00052C  5013               	movf	??_State16MEF_act,w,c
  2697  00052E  6E0F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2698  000530  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2699  000532  ECDA  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2700                           
  2701                           ;MotorDriver.c: 184: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2702  000536  5047               	movf	_Microstep,w,c
  2703  000538  0D01               	mullw	1
  2704  00053A  0E00               	movlw	low _LookUP_TABLE_SEN_16
  2705  00053C  24F3               	addwf	prodl,w,c
  2706  00053E  6ED9               	movwf	fsr2l,c
  2707  000540  0E01               	movlw	high _LookUP_TABLE_SEN_16
  2708  000542  20F4               	addwfc	prodh,w,c
  2709  000544  6EDA               	movwf	fsr2h,c
  2710  000546  50DF               	movf	indf2,w,c
  2711  000548  6E13               	movwf	??_State16MEF_act& (0+255),c
  2712  00054A  5013               	movf	??_State16MEF_act,w,c
  2713  00054C  6E0F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2714  00054E  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2715  000550  ECC2  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2716                           
  2717                           ;MotorDriver.c: 185: if (Microstep==47){
  2718  000554  0E2F               	movlw	47
  2719  000556  1847               	xorwf	_Microstep,w,c
  2720  000558  A4D8               	btfss	status,2,c
  2721  00055A  D002               	goto	l2117
  2722                           
  2723                           ;MotorDriver.c: 186: EstadoActual = STATE4;
  2724  00055C  0E04               	movlw	4
  2725  00055E  6E4D               	movwf	_EstadoActual,c
  2726  000560                     l2117:
  2727                           
  2728                           ;MotorDriver.c: 187: }
  2729                           ;MotorDriver.c: 188: Microstep++;
  2730  000560  2A47               	incf	_Microstep,f,c
  2731                           
  2732                           ;MotorDriver.c: 189: }
  2733                           ;MotorDriver.c: 190: break;
  2734  000562  0012               	return	
  2735  000564                     l2119:
  2736                           
  2737                           ;MotorDriver.c: 192: PSTR1CON = 0x01; PSTR2CON = 0x02;
  2738  000564  0E01               	movlw	1
  2739  000566  6EB9               	movwf	4025,c	;volatile
  2740  000568  0E02               	movlw	2
  2741  00056A  6E63               	movwf	3939,c	;volatile
  2742                           
  2743                           ;MotorDriver.c: 193: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2744  00056C  9A8C               	bcf	3980,5,c	;volatile
  2745  00056E  928B               	bcf	3979,1,c	;volatile
  2746                           
  2747                           ;MotorDriver.c: 194: if ((Microstep<64)&&(Microstep>47)){
  2748  000570  5047               	movf	_Microstep,w,c
  2749  000572  0A80               	xorlw	128
  2750  000574  0F40               	addlw	-192
  2751  000576  B0D8               	btfsc	status,0,c
  2752  000578  0012               	return	
  2753  00057A  5047               	movf	_Microstep,w,c
  2754  00057C  0A80               	xorlw	128
  2755  00057E  0F50               	addlw	-176
  2756  000580  A0D8               	btfss	status,0,c
  2757  000582  0012               	return	
  2758                           
  2759                           ;MotorDriver.c: 195: EUSART1_Write(Microstep);
  2760  000584  5047               	movf	_Microstep,w,c
  2761  000586  ECC1  F006         	call	_EUSART1_Write
  2762                           
  2763                           ;MotorDriver.c: 196: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2764  00058A  5047               	movf	_Microstep,w,c
  2765  00058C  0D01               	mullw	1
  2766  00058E  0E60               	movlw	low _LookUP_TABLE_COS_16
  2767  000590  24F3               	addwf	prodl,w,c
  2768  000592  6ED9               	movwf	fsr2l,c
  2769  000594  0E00               	movlw	high _LookUP_TABLE_COS_16
  2770  000596  20F4               	addwfc	prodh,w,c
  2771  000598  6EDA               	movwf	fsr2h,c
  2772  00059A  50DF               	movf	indf2,w,c
  2773  00059C  6E13               	movwf	??_State16MEF_act& (0+255),c
  2774  00059E  5013               	movf	??_State16MEF_act,w,c
  2775  0005A0  6E0F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2776  0005A2  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2777  0005A4  ECDA  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2778                           
  2779                           ;MotorDriver.c: 197: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2780  0005A8  5047               	movf	_Microstep,w,c
  2781  0005AA  0D01               	mullw	1
  2782  0005AC  0E00               	movlw	low _LookUP_TABLE_SEN_16
  2783  0005AE  24F3               	addwf	prodl,w,c
  2784  0005B0  6ED9               	movwf	fsr2l,c
  2785  0005B2  0E01               	movlw	high _LookUP_TABLE_SEN_16
  2786  0005B4  20F4               	addwfc	prodh,w,c
  2787  0005B6  6EDA               	movwf	fsr2h,c
  2788  0005B8  50DF               	movf	indf2,w,c
  2789  0005BA  6E13               	movwf	??_State16MEF_act& (0+255),c
  2790  0005BC  5013               	movf	??_State16MEF_act,w,c
  2791  0005BE  6E0F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2792  0005C0  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2793  0005C2  ECC2  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2794                           
  2795                           ;MotorDriver.c: 198: if (Microstep==63){
  2796  0005C6  0E3F               	movlw	63
  2797  0005C8  1847               	xorwf	_Microstep,w,c
  2798  0005CA  A4D8               	btfss	status,2,c
  2799  0005CC  D003               	goto	l2141
  2800                           
  2801                           ;MotorDriver.c: 199: EstadoActual = STATE0;
  2802  0005CE  0E00               	movlw	0
  2803  0005D0  6E4D               	movwf	_EstadoActual,c
  2804                           
  2805                           ;MotorDriver.c: 200: Microstep=-1;
  2806  0005D2  6847               	setf	_Microstep,c
  2807  0005D4                     l2141:
  2808                           
  2809                           ;MotorDriver.c: 201: }
  2810                           ;MotorDriver.c: 202: Microstep++;
  2811  0005D4  2A47               	incf	_Microstep,f,c
  2812                           
  2813                           ;MotorDriver.c: 208: }
  2814                           
  2815                           ;MotorDriver.c: 207: break;
  2816                           
  2817                           ;MotorDriver.c: 205: default:
  2818                           
  2819                           ;MotorDriver.c: 203: }
  2820                           ;MotorDriver.c: 204: break;
  2821  0005D6  0012               	return	
  2822  0005D8                     l2145:
  2823  0005D8  504D               	movf	_EstadoActual,w,c
  2824                           
  2825                           ; Switch size 1, requested type "space"
  2826                           ; Number of cases is 5, Range of values is 0 to 4
  2827                           ; switch strategies available:
  2828                           ; Name         Instructions Cycles
  2829                           ; simple_byte           16     9 (average)
  2830                           ;	Chosen strategy is simple_byte
  2831  0005DA  0A00               	xorlw	0	; case 0
  2832  0005DC  B4D8               	btfsc	status,2,c
  2833  0005DE  D711               	goto	l2045
  2834  0005E0  0A01               	xorlw	1	; case 1
  2835  0005E2  B4D8               	btfsc	status,2,c
  2836  0005E4  D719               	goto	l2055
  2837  0005E6  0A03               	xorlw	3	; case 2
  2838  0005E8  B4D8               	btfsc	status,2,c
  2839  0005EA  D74A               	goto	l2075
  2840  0005EC  0A01               	xorlw	1	; case 3
  2841  0005EE  B4D8               	btfsc	status,2,c
  2842  0005F0  D780               	goto	l2097
  2843  0005F2  0A07               	xorlw	7	; case 4
  2844  0005F4  A4D8               	btfss	status,2,c
  2845  0005F6  0012               	return	
  2846  0005F8  D7B5               	goto	l2119
  2847  0005FA                     __end_of_State16MEF_act:
  2848                           	opt stack 0
  2849                           tblptru	equ	0xFF8
  2850                           tblptrh	equ	0xFF7
  2851                           tblptrl	equ	0xFF6
  2852                           tablat	equ	0xFF5
  2853                           prodh	equ	0xFF4
  2854                           prodl	equ	0xFF3
  2855                           intcon	equ	0xFF2
  2856                           postinc0	equ	0xFEE
  2857                           wreg	equ	0xFE8
  2858                           postdec1	equ	0xFE5
  2859                           fsr1l	equ	0xFE1
  2860                           indf2	equ	0xFDF
  2861                           fsr2h	equ	0xFDA
  2862                           fsr2l	equ	0xFD9
  2863                           status	equ	0xFD8
  2864                           
  2865 ;; *************** function _EUSART1_Write *****************
  2866 ;; Defined at:
  2867 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  txData          1    wreg     unsigned char 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  txData          1   14[COMRAM] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;Total ram usage:        1 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    4
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_State16MEF_act
  2892 ;;		_controlador2
  2893 ;;		_ADC_Conversion
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text11
  2898  000D82                     __ptext11:
  2899                           	opt stack 0
  2900  000D82                     _EUSART1_Write:
  2901                           	opt stack 23
  2902                           
  2903                           ;incstack = 0
  2904                           ;EUSART1_Write@txData stored from wreg
  2905  000D82  6E0F               	movwf	EUSART1_Write@txData,c
  2906  000D84                     l337:
  2907  000D84  A89E               	btfss	3998,4,c	;volatile
  2908  000D86  D7FE               	goto	l337
  2909                           
  2910                           ;eusart1.c: 100: }
  2911                           ;eusart1.c: 102: TXREG1 = txData;
  2912  000D88  C00F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2913  000D8C  0012               	return		;funcret
  2914  000D8E                     __end_of_EUSART1_Write:
  2915                           	opt stack 0
  2916                           tblptru	equ	0xFF8
  2917                           tblptrh	equ	0xFF7
  2918                           tblptrl	equ	0xFF6
  2919                           tablat	equ	0xFF5
  2920                           prodh	equ	0xFF4
  2921                           prodl	equ	0xFF3
  2922                           intcon	equ	0xFF2
  2923                           postinc0	equ	0xFEE
  2924                           wreg	equ	0xFE8
  2925                           postdec1	equ	0xFE5
  2926                           fsr1l	equ	0xFE1
  2927                           indf2	equ	0xFDF
  2928                           fsr2h	equ	0xFDA
  2929                           fsr2l	equ	0xFD9
  2930                           status	equ	0xFD8
  2931                           
  2932 ;; *************** function _EPWM2_LoadDutyValue *****************
  2933 ;; Defined at:
  2934 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  dutyValue       2   14[COMRAM] unsigned int 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;Total ram usage:        4 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    4
  2955 ;; This function calls:
  2956 ;;		Nothing
  2957 ;; This function is called by:
  2958 ;;		_State8MEF_act
  2959 ;;		_State16MEF_act
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text12
  2964  000B84                     __ptext12:
  2965                           	opt stack 0
  2966  000B84                     _EPWM2_LoadDutyValue:
  2967                           	opt stack 24
  2968                           
  2969                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  2970                           
  2971                           ;incstack = 0
  2972  000B84  C00F  F011         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  2973  000B88  C010  F012         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  2974  000B8C  90D8               	bcf	status,0,c
  2975  000B8E  3212               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  2976  000B90  3211               	rrcf	??_EPWM2_LoadDutyValue,f,c
  2977  000B92  90D8               	bcf	status,0,c
  2978  000B94  3212               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  2979  000B96  3211               	rrcf	??_EPWM2_LoadDutyValue,f,c
  2980  000B98  5011               	movf	??_EPWM2_LoadDutyValue,w,c
  2981  000B9A  6E67               	movwf	3943,c	;volatile
  2982                           
  2983                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2984  000B9C  C00F  F011         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  2985  000BA0  0E03               	movlw	3
  2986  000BA2  1611               	andwf	??_EPWM2_LoadDutyValue,f,c
  2987  000BA4  3A11               	swapf	??_EPWM2_LoadDutyValue,f,c
  2988  000BA6  0EF0               	movlw	240
  2989  000BA8  1611               	andwf	??_EPWM2_LoadDutyValue,f,c
  2990  000BAA  5066               	movf	3942,w,c	;volatile
  2991  000BAC  0BCF               	andlw	207
  2992  000BAE  1011               	iorwf	??_EPWM2_LoadDutyValue,w,c
  2993  000BB0  6E66               	movwf	3942,c	;volatile
  2994  000BB2  0012               	return		;funcret
  2995  000BB4                     __end_of_EPWM2_LoadDutyValue:
  2996                           	opt stack 0
  2997                           tblptru	equ	0xFF8
  2998                           tblptrh	equ	0xFF7
  2999                           tblptrl	equ	0xFF6
  3000                           tablat	equ	0xFF5
  3001                           prodh	equ	0xFF4
  3002                           prodl	equ	0xFF3
  3003                           intcon	equ	0xFF2
  3004                           postinc0	equ	0xFEE
  3005                           wreg	equ	0xFE8
  3006                           postdec1	equ	0xFE5
  3007                           fsr1l	equ	0xFE1
  3008                           indf2	equ	0xFDF
  3009                           fsr2h	equ	0xFDA
  3010                           fsr2l	equ	0xFD9
  3011                           status	equ	0xFD8
  3012                           
  3013 ;; *************** function _EPWM1_LoadDutyValue *****************
  3014 ;; Defined at:
  3015 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  dutyValue       2   14[COMRAM] unsigned int 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;		None
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      void 
  3022 ;; Registers used:
  3023 ;;		wreg, status,2, status,0
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;Total ram usage:        4 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:    4
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_State8MEF_act
  3040 ;;		_State16MEF_act
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text13
  3045  000BB4                     __ptext13:
  3046                           	opt stack 0
  3047  000BB4                     _EPWM1_LoadDutyValue:
  3048                           	opt stack 24
  3049                           
  3050                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  3051                           
  3052                           ;incstack = 0
  3053  000BB4  C00F  F011         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3054  000BB8  C010  F012         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  3055  000BBC  90D8               	bcf	status,0,c
  3056  000BBE  3212               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3057  000BC0  3211               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3058  000BC2  90D8               	bcf	status,0,c
  3059  000BC4  3212               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3060  000BC6  3211               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3061  000BC8  5011               	movf	??_EPWM1_LoadDutyValue,w,c
  3062  000BCA  6EBE               	movwf	4030,c	;volatile
  3063                           
  3064                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3065  000BCC  C00F  F011         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3066  000BD0  0E03               	movlw	3
  3067  000BD2  1611               	andwf	??_EPWM1_LoadDutyValue,f,c
  3068  000BD4  3A11               	swapf	??_EPWM1_LoadDutyValue,f,c
  3069  000BD6  0EF0               	movlw	240
  3070  000BD8  1611               	andwf	??_EPWM1_LoadDutyValue,f,c
  3071  000BDA  50BD               	movf	4029,w,c	;volatile
  3072  000BDC  0BCF               	andlw	207
  3073  000BDE  1011               	iorwf	??_EPWM1_LoadDutyValue,w,c
  3074  000BE0  6EBD               	movwf	4029,c	;volatile
  3075  000BE2  0012               	return		;funcret
  3076  000BE4                     __end_of_EPWM1_LoadDutyValue:
  3077                           	opt stack 0
  3078                           tblptru	equ	0xFF8
  3079                           tblptrh	equ	0xFF7
  3080                           tblptrl	equ	0xFF6
  3081                           tablat	equ	0xFF5
  3082                           prodh	equ	0xFF4
  3083                           prodl	equ	0xFF3
  3084                           intcon	equ	0xFF2
  3085                           postinc0	equ	0xFEE
  3086                           wreg	equ	0xFE8
  3087                           postdec1	equ	0xFE5
  3088                           fsr1l	equ	0xFE1
  3089                           indf2	equ	0xFDF
  3090                           fsr2h	equ	0xFDA
  3091                           fsr2l	equ	0xFD9
  3092                           status	equ	0xFD8
  3093                           
  3094 ;; *************** function _StateMEF_ini *****************
  3095 ;; Defined at:
  3096 ;;		line 33 in file "MotorDriver.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;Total ram usage:        0 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    4
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_main
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text14
  3125  000D8E                     __ptext14:
  3126                           	opt stack 0
  3127  000D8E                     _StateMEF_ini:
  3128                           	opt stack 26
  3129                           
  3130                           ;MotorDriver.c: 34: EstadoActual = STATE1;
  3131                           
  3132                           ;incstack = 0
  3133  000D8E  0E01               	movlw	1
  3134  000D90  6E4D               	movwf	_EstadoActual,c
  3135                           
  3136                           ;MotorDriver.c: 35: Microstep=0;
  3137  000D92  0E00               	movlw	0
  3138  000D94  6E47               	movwf	_Microstep,c
  3139  000D96  0012               	return		;funcret
  3140  000D98                     __end_of_StateMEF_ini:
  3141                           	opt stack 0
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           prodh	equ	0xFF4
  3147                           prodl	equ	0xFF3
  3148                           intcon	equ	0xFF2
  3149                           postinc0	equ	0xFEE
  3150                           wreg	equ	0xFE8
  3151                           postdec1	equ	0xFE5
  3152                           fsr1l	equ	0xFE1
  3153                           indf2	equ	0xFDF
  3154                           fsr2h	equ	0xFDA
  3155                           fsr2l	equ	0xFD9
  3156                           status	equ	0xFD8
  3157                           
  3158 ;; *************** function _SYSTEM_Initialize *****************
  3159 ;; Defined at:
  3160 ;;		line 111 in file "mcc_generated_files/mcc.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      void 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;Total ram usage:        0 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    6
  3181 ;; This function calls:
  3182 ;;		_ADC_Initialize
  3183 ;;		_CCP5_Initialize
  3184 ;;		_EPWM1_Initialize
  3185 ;;		_EPWM2_Initialize
  3186 ;;		_EUSART1_Initialize
  3187 ;;		_INTERRUPT_Initialize
  3188 ;;		_OSCILLATOR_Initialize
  3189 ;;		_PIN_MANAGER_Initialize
  3190 ;;		_TMR2_Initialize
  3191 ;;		_TMR6_Initialize
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text15
  3198  000BE4                     __ptext15:
  3199                           	opt stack 0
  3200  000BE4                     _SYSTEM_Initialize:
  3201                           	opt stack 24
  3202                           
  3203                           ;mcc.c: 114: INTERRUPT_Initialize();
  3204                           
  3205                           ;incstack = 0
  3206  000BE4  ECDF  F006         	call	_INTERRUPT_Initialize	;wreg free
  3207                           
  3208                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  3209  000BE8  EC64  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  3210                           
  3211                           ;mcc.c: 116: OSCILLATOR_Initialize();
  3212  000BEC  ECBA  F006         	call	_OSCILLATOR_Initialize	;wreg free
  3213                           
  3214                           ;mcc.c: 117: TMR6_Initialize();
  3215  000BF0  EC1B  F006         	call	_TMR6_Initialize	;wreg free
  3216                           
  3217                           ;mcc.c: 118: EPWM2_Initialize();
  3218  000BF4  EC41  F006         	call	_EPWM2_Initialize	;wreg free
  3219                           
  3220                           ;mcc.c: 119: CCP5_Initialize();
  3221  000BF8  ECB0  F006         	call	_CCP5_Initialize	;wreg free
  3222                           
  3223                           ;mcc.c: 120: ADC_Initialize();
  3224  000BFC  EC99  F006         	call	_ADC_Initialize	;wreg free
  3225                           
  3226                           ;mcc.c: 121: EPWM1_Initialize();
  3227  000C00  EC53  F006         	call	_EPWM1_Initialize	;wreg free
  3228                           
  3229                           ;mcc.c: 122: TMR2_Initialize();
  3230  000C04  EC77  F006         	call	_TMR2_Initialize	;wreg free
  3231                           
  3232                           ;mcc.c: 123: EUSART1_Initialize();
  3233  000C08  ECA5  F006         	call	_EUSART1_Initialize	;wreg free
  3234  000C0C  0012               	return		;funcret
  3235  000C0E                     __end_of_SYSTEM_Initialize:
  3236                           	opt stack 0
  3237                           tblptru	equ	0xFF8
  3238                           tblptrh	equ	0xFF7
  3239                           tblptrl	equ	0xFF6
  3240                           tablat	equ	0xFF5
  3241                           prodh	equ	0xFF4
  3242                           prodl	equ	0xFF3
  3243                           intcon	equ	0xFF2
  3244                           postinc0	equ	0xFEE
  3245                           wreg	equ	0xFE8
  3246                           postdec1	equ	0xFE5
  3247                           fsr1l	equ	0xFE1
  3248                           indf2	equ	0xFDF
  3249                           fsr2h	equ	0xFDA
  3250                           fsr2l	equ	0xFD9
  3251                           status	equ	0xFD8
  3252                           
  3253 ;; *************** function _TMR6_Initialize *****************
  3254 ;; Defined at:
  3255 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;Total ram usage:        0 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    5
  3276 ;; This function calls:
  3277 ;;		_TMR6_SetInterruptHandler
  3278 ;;		_TMR6_StartTimer
  3279 ;; This function is called by:
  3280 ;;		_SYSTEM_Initialize
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text16
  3285  000C36                     __ptext16:
  3286                           	opt stack 0
  3287  000C36                     _TMR6_Initialize:
  3288                           	opt stack 24
  3289                           
  3290                           ;tmr6.c: 68: T6CON = 0x01;
  3291                           
  3292                           ;incstack = 0
  3293  000C36  0E01               	movlw	1
  3294  000C38  010F               	movlb	15	; () banked
  3295  000C3A  6F4A               	movwf	74,b	;volatile
  3296                           
  3297                           ;tmr6.c: 71: PR6 = 0x3C;
  3298  000C3C  0E3C               	movlw	60
  3299  000C3E  010F               	movlb	15	; () banked
  3300  000C40  6F4B               	movwf	75,b	;volatile
  3301                           
  3302                           ;tmr6.c: 74: TMR6 = 0x00;
  3303  000C42  0E00               	movlw	0
  3304  000C44  010F               	movlb	15	; () banked
  3305  000C46  6F4C               	movwf	76,b	;volatile
  3306                           
  3307                           ; BSR set to: 15
  3308                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
  3309  000C48  947E               	bcf	3966,2,c	;volatile
  3310                           
  3311                           ; BSR set to: 15
  3312                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
  3313  000C4A  847D               	bsf	3965,2,c	;volatile
  3314                           
  3315                           ; BSR set to: 15
  3316                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  3317  000C4C  0EC6               	movlw	low _TMR6_DefaultInterruptHandler
  3318  000C4E  6E0F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  3319  000C50  0E0D               	movlw	high _TMR6_DefaultInterruptHandler
  3320  000C52  6E10               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  3321  000C54  ECCC  F006         	call	_TMR6_SetInterruptHandler	;wreg free
  3322                           
  3323                           ;tmr6.c: 86: TMR6_StartTimer();
  3324  000C58  ECDA  F006         	call	_TMR6_StartTimer	;wreg free
  3325  000C5C  0012               	return		;funcret
  3326  000C5E                     __end_of_TMR6_Initialize:
  3327                           	opt stack 0
  3328                           tblptru	equ	0xFF8
  3329                           tblptrh	equ	0xFF7
  3330                           tblptrl	equ	0xFF6
  3331                           tablat	equ	0xFF5
  3332                           prodh	equ	0xFF4
  3333                           prodl	equ	0xFF3
  3334                           intcon	equ	0xFF2
  3335                           postinc0	equ	0xFEE
  3336                           wreg	equ	0xFE8
  3337                           postdec1	equ	0xFE5
  3338                           fsr1l	equ	0xFE1
  3339                           indf2	equ	0xFDF
  3340                           fsr2h	equ	0xFDA
  3341                           fsr2l	equ	0xFD9
  3342                           status	equ	0xFD8
  3343                           
  3344 ;; *************** function _TMR6_StartTimer *****************
  3345 ;; Defined at:
  3346 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;		None
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		None
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;Total ram usage:        0 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    4
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		_TMR6_Initialize
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text17
  3375  000DB4                     __ptext17:
  3376                           	opt stack 0
  3377  000DB4                     _TMR6_StartTimer:
  3378                           	opt stack 24
  3379                           
  3380                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  3381                           
  3382                           ;incstack = 0
  3383  000DB4  010F               	movlb	15	; () banked
  3384  000DB6  854A               	bsf	74,2,b	;volatile
  3385                           
  3386                           ; BSR set to: 15
  3387  000DB8  0012               	return		;funcret
  3388  000DBA                     __end_of_TMR6_StartTimer:
  3389                           	opt stack 0
  3390                           tblptru	equ	0xFF8
  3391                           tblptrh	equ	0xFF7
  3392                           tblptrl	equ	0xFF6
  3393                           tablat	equ	0xFF5
  3394                           prodh	equ	0xFF4
  3395                           prodl	equ	0xFF3
  3396                           intcon	equ	0xFF2
  3397                           postinc0	equ	0xFEE
  3398                           wreg	equ	0xFE8
  3399                           postdec1	equ	0xFE5
  3400                           fsr1l	equ	0xFE1
  3401                           indf2	equ	0xFDF
  3402                           fsr2h	equ	0xFDA
  3403                           fsr2l	equ	0xFD9
  3404                           status	equ	0xFD8
  3405                           
  3406 ;; *************** function _TMR6_SetInterruptHandler *****************
  3407 ;; Defined at:
  3408 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  InterruptHan    2   14[COMRAM] PTR void 
  3411 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;		None
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, status,2, status,0
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;Total ram usage:        2 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:    4
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_TMR6_Initialize
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text18
  3438  000D98                     __ptext18:
  3439                           	opt stack 0
  3440  000D98                     _TMR6_SetInterruptHandler:
  3441                           	opt stack 24
  3442                           
  3443                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  3444                           
  3445                           ; BSR set to: 15
  3446                           ;incstack = 0
  3447  000D98  C00F  F04B         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  3448  000D9C  C010  F04C         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  3449  000DA0  0012               	return		;funcret
  3450  000DA2                     __end_of_TMR6_SetInterruptHandler:
  3451                           	opt stack 0
  3452                           tblptru	equ	0xFF8
  3453                           tblptrh	equ	0xFF7
  3454                           tblptrl	equ	0xFF6
  3455                           tablat	equ	0xFF5
  3456                           prodh	equ	0xFF4
  3457                           prodl	equ	0xFF3
  3458                           intcon	equ	0xFF2
  3459                           postinc0	equ	0xFEE
  3460                           wreg	equ	0xFE8
  3461                           postdec1	equ	0xFE5
  3462                           fsr1l	equ	0xFE1
  3463                           indf2	equ	0xFDF
  3464                           fsr2h	equ	0xFDA
  3465                           fsr2l	equ	0xFD9
  3466                           status	equ	0xFD8
  3467                           
  3468 ;; *************** function _TMR2_Initialize *****************
  3469 ;; Defined at:
  3470 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;Total ram usage:        0 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    5
  3491 ;; This function calls:
  3492 ;;		_TMR2_SetInterruptHandler
  3493 ;;		_TMR2_StartTimer
  3494 ;; This function is called by:
  3495 ;;		_SYSTEM_Initialize
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           	psect	text19
  3500  000CEE                     __ptext19:
  3501                           	opt stack 0
  3502  000CEE                     _TMR2_Initialize:
  3503                           	opt stack 24
  3504                           
  3505                           ;tmr2.c: 69: T2CON = 0x08;
  3506                           
  3507                           ;incstack = 0
  3508  000CEE  0E08               	movlw	8
  3509  000CF0  6EBA               	movwf	4026,c	;volatile
  3510                           
  3511                           ;tmr2.c: 72: PR2 = 0xF9;
  3512  000CF2  0EF9               	movlw	249
  3513  000CF4  6EBB               	movwf	4027,c	;volatile
  3514                           
  3515                           ;tmr2.c: 75: TMR2 = 0x4E;
  3516  000CF6  0E4E               	movlw	78
  3517  000CF8  6EBC               	movwf	4028,c	;volatile
  3518                           
  3519                           ;tmr2.c: 78: PIR1bits.TMR2IF = 0;
  3520  000CFA  929E               	bcf	3998,1,c	;volatile
  3521                           
  3522                           ;tmr2.c: 81: PIE1bits.TMR2IE = 1;
  3523  000CFC  829D               	bsf	3997,1,c	;volatile
  3524                           
  3525                           ;tmr2.c: 84: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  3526  000CFE  0EC8               	movlw	low _TMR2_DefaultInterruptHandler
  3527  000D00  6E0F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  3528  000D02  0E0D               	movlw	high _TMR2_DefaultInterruptHandler
  3529  000D04  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  3530  000D06  ECD1  F006         	call	_TMR2_SetInterruptHandler	;wreg free
  3531                           
  3532                           ;tmr2.c: 87: TMR2_StartTimer();
  3533  000D0A  ECDD  F006         	call	_TMR2_StartTimer	;wreg free
  3534  000D0E  0012               	return		;funcret
  3535  000D10                     __end_of_TMR2_Initialize:
  3536                           	opt stack 0
  3537                           tblptru	equ	0xFF8
  3538                           tblptrh	equ	0xFF7
  3539                           tblptrl	equ	0xFF6
  3540                           tablat	equ	0xFF5
  3541                           prodh	equ	0xFF4
  3542                           prodl	equ	0xFF3
  3543                           intcon	equ	0xFF2
  3544                           postinc0	equ	0xFEE
  3545                           wreg	equ	0xFE8
  3546                           postdec1	equ	0xFE5
  3547                           fsr1l	equ	0xFE1
  3548                           indf2	equ	0xFDF
  3549                           fsr2h	equ	0xFDA
  3550                           fsr2l	equ	0xFD9
  3551                           status	equ	0xFD8
  3552                           
  3553 ;; *************** function _TMR2_StartTimer *****************
  3554 ;; Defined at:
  3555 ;;		line 90 in file "mcc_generated_files/tmr2.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;		None
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;		None
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  1    wreg      void 
  3562 ;; Registers used:
  3563 ;;		None
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3573 ;;Total ram usage:        0 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    4
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_TMR2_Initialize
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text20
  3584  000DBA                     __ptext20:
  3585                           	opt stack 0
  3586  000DBA                     _TMR2_StartTimer:
  3587                           	opt stack 24
  3588                           
  3589                           ;tmr2.c: 93: T2CONbits.TMR2ON = 1;
  3590                           
  3591                           ;incstack = 0
  3592  000DBA  84BA               	bsf	4026,2,c	;volatile
  3593  000DBC  0012               	return		;funcret
  3594  000DBE                     __end_of_TMR2_StartTimer:
  3595                           	opt stack 0
  3596                           tblptru	equ	0xFF8
  3597                           tblptrh	equ	0xFF7
  3598                           tblptrl	equ	0xFF6
  3599                           tablat	equ	0xFF5
  3600                           prodh	equ	0xFF4
  3601                           prodl	equ	0xFF3
  3602                           intcon	equ	0xFF2
  3603                           postinc0	equ	0xFEE
  3604                           wreg	equ	0xFE8
  3605                           postdec1	equ	0xFE5
  3606                           fsr1l	equ	0xFE1
  3607                           indf2	equ	0xFDF
  3608                           fsr2h	equ	0xFDA
  3609                           fsr2l	equ	0xFD9
  3610                           status	equ	0xFD8
  3611                           
  3612 ;; *************** function _TMR2_SetInterruptHandler *****************
  3613 ;; Defined at:
  3614 ;;		line 144 in file "mcc_generated_files/tmr2.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;  InterruptHan    2   14[COMRAM] PTR void 
  3617 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;Total ram usage:        2 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    4
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_TMR2_Initialize
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text21
  3644  000DA2                     __ptext21:
  3645                           	opt stack 0
  3646  000DA2                     _TMR2_SetInterruptHandler:
  3647                           	opt stack 24
  3648                           
  3649                           ;tmr2.c: 145: TMR2_InterruptHandler = InterruptHandler;
  3650                           
  3651                           ;incstack = 0
  3652  000DA2  C00F  F049         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  3653  000DA6  C010  F04A         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  3654  000DAA  0012               	return		;funcret
  3655  000DAC                     __end_of_TMR2_SetInterruptHandler:
  3656                           	opt stack 0
  3657                           tblptru	equ	0xFF8
  3658                           tblptrh	equ	0xFF7
  3659                           tblptrl	equ	0xFF6
  3660                           tablat	equ	0xFF5
  3661                           prodh	equ	0xFF4
  3662                           prodl	equ	0xFF3
  3663                           intcon	equ	0xFF2
  3664                           postinc0	equ	0xFEE
  3665                           wreg	equ	0xFE8
  3666                           postdec1	equ	0xFE5
  3667                           fsr1l	equ	0xFE1
  3668                           indf2	equ	0xFDF
  3669                           fsr2h	equ	0xFDA
  3670                           fsr2l	equ	0xFD9
  3671                           status	equ	0xFD8
  3672                           
  3673 ;; *************** function _PIN_MANAGER_Initialize *****************
  3674 ;; Defined at:
  3675 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg, status,2
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;Total ram usage:        0 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    4
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_SYSTEM_Initialize
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text22
  3704  000AC8                     __ptext22:
  3705                           	opt stack 0
  3706  000AC8                     _PIN_MANAGER_Initialize:
  3707                           	opt stack 25
  3708                           
  3709                           ;pin_manager.c: 56: LATE = 0x00;
  3710                           
  3711                           ;incstack = 0
  3712  000AC8  0E00               	movlw	0
  3713  000ACA  6E8D               	movwf	3981,c	;volatile
  3714                           
  3715                           ;pin_manager.c: 57: LATD = 0x00;
  3716  000ACC  0E00               	movlw	0
  3717  000ACE  6E8C               	movwf	3980,c	;volatile
  3718                           
  3719                           ;pin_manager.c: 58: LATA = 0x00;
  3720  000AD0  0E00               	movlw	0
  3721  000AD2  6E89               	movwf	3977,c	;volatile
  3722                           
  3723                           ;pin_manager.c: 59: LATB = 0x00;
  3724  000AD4  0E00               	movlw	0
  3725  000AD6  6E8A               	movwf	3978,c	;volatile
  3726                           
  3727                           ;pin_manager.c: 60: LATC = 0x00;
  3728  000AD8  0E00               	movlw	0
  3729  000ADA  6E8B               	movwf	3979,c	;volatile
  3730                           
  3731                           ;pin_manager.c: 65: TRISE = 0x07;
  3732  000ADC  0E07               	movlw	7
  3733  000ADE  6E96               	movwf	3990,c	;volatile
  3734                           
  3735                           ;pin_manager.c: 66: TRISA = 0xEB;
  3736  000AE0  0EEB               	movlw	235
  3737  000AE2  6E92               	movwf	3986,c	;volatile
  3738                           
  3739                           ;pin_manager.c: 67: TRISB = 0xBF;
  3740  000AE4  0EBF               	movlw	191
  3741  000AE6  6E93               	movwf	3987,c	;volatile
  3742                           
  3743                           ;pin_manager.c: 68: TRISC = 0xB8;
  3744  000AE8  0EB8               	movlw	184
  3745  000AEA  6E94               	movwf	3988,c	;volatile
  3746                           
  3747                           ;pin_manager.c: 69: TRISD = 0xDF;
  3748  000AEC  0EDF               	movlw	223
  3749  000AEE  6E95               	movwf	3989,c	;volatile
  3750                           
  3751                           ;pin_manager.c: 74: ANSELC = 0x38;
  3752  000AF0  0E38               	movlw	56
  3753  000AF2  010F               	movlb	15	; () banked
  3754  000AF4  6F3A               	movwf	58,b	;volatile
  3755                           
  3756                           ;pin_manager.c: 75: ANSELB = 0x3E;
  3757  000AF6  0E3E               	movlw	62
  3758  000AF8  010F               	movlb	15	; () banked
  3759  000AFA  6F39               	movwf	57,b	;volatile
  3760                           
  3761                           ;pin_manager.c: 76: ANSELD = 0xDF;
  3762  000AFC  0EDF               	movlw	223
  3763  000AFE  010F               	movlb	15	; () banked
  3764  000B00  6F3B               	movwf	59,b	;volatile
  3765                           
  3766                           ;pin_manager.c: 77: ANSELE = 0x03;
  3767  000B02  0E03               	movlw	3
  3768  000B04  010F               	movlb	15	; () banked
  3769  000B06  6F3C               	movwf	60,b	;volatile
  3770                           
  3771                           ;pin_manager.c: 78: ANSELA = 0x2B;
  3772  000B08  0E2B               	movlw	43
  3773  000B0A  010F               	movlb	15	; () banked
  3774  000B0C  6F38               	movwf	56,b	;volatile
  3775                           
  3776                           ; BSR set to: 15
  3777                           ;pin_manager.c: 83: WPUB = 0xFF;
  3778  000B0E  6861               	setf	3937,c	;volatile
  3779                           
  3780                           ; BSR set to: 15
  3781                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  3782  000B10  9EF1               	bcf	intcon2,7,c	;volatile
  3783                           
  3784                           ; BSR set to: 15
  3785  000B12  0012               	return		;funcret
  3786  000B14                     __end_of_PIN_MANAGER_Initialize:
  3787                           	opt stack 0
  3788                           tblptru	equ	0xFF8
  3789                           tblptrh	equ	0xFF7
  3790                           tblptrl	equ	0xFF6
  3791                           tablat	equ	0xFF5
  3792                           prodh	equ	0xFF4
  3793                           prodl	equ	0xFF3
  3794                           intcon	equ	0xFF2
  3795                           intcon2	equ	0xFF1
  3796                           postinc0	equ	0xFEE
  3797                           wreg	equ	0xFE8
  3798                           postdec1	equ	0xFE5
  3799                           fsr1l	equ	0xFE1
  3800                           indf2	equ	0xFDF
  3801                           fsr2h	equ	0xFDA
  3802                           fsr2l	equ	0xFD9
  3803                           status	equ	0xFD8
  3804                           
  3805 ;; *************** function _OSCILLATOR_Initialize *****************
  3806 ;; Defined at:
  3807 ;;		line 126 in file "mcc_generated_files/mcc.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;Total ram usage:        0 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    4
  3828 ;; This function calls:
  3829 ;;		Nothing
  3830 ;; This function is called by:
  3831 ;;		_SYSTEM_Initialize
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text23
  3836  000D74                     __ptext23:
  3837                           	opt stack 0
  3838  000D74                     _OSCILLATOR_Initialize:
  3839                           	opt stack 25
  3840                           
  3841                           ;mcc.c: 129: OSCCON = 0x70;
  3842                           
  3843                           ; BSR set to: 15
  3844                           ;incstack = 0
  3845  000D74  0E70               	movlw	112
  3846  000D76  6ED3               	movwf	4051,c	;volatile
  3847                           
  3848                           ;mcc.c: 131: OSCCON2 = 0x04;
  3849  000D78  0E04               	movlw	4
  3850  000D7A  6ED2               	movwf	4050,c	;volatile
  3851                           
  3852                           ;mcc.c: 133: OSCTUNE = 0x00;
  3853  000D7C  0E00               	movlw	0
  3854  000D7E  6E9B               	movwf	3995,c	;volatile
  3855  000D80  0012               	return		;funcret
  3856  000D82                     __end_of_OSCILLATOR_Initialize:
  3857                           	opt stack 0
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           prodh	equ	0xFF4
  3863                           prodl	equ	0xFF3
  3864                           intcon	equ	0xFF2
  3865                           intcon2	equ	0xFF1
  3866                           postinc0	equ	0xFEE
  3867                           wreg	equ	0xFE8
  3868                           postdec1	equ	0xFE5
  3869                           fsr1l	equ	0xFE1
  3870                           indf2	equ	0xFDF
  3871                           fsr2h	equ	0xFDA
  3872                           fsr2l	equ	0xFD9
  3873                           status	equ	0xFD8
  3874                           
  3875 ;; *************** function _INTERRUPT_Initialize *****************
  3876 ;; Defined at:
  3877 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		None
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;Total ram usage:        0 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    4
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_SYSTEM_Initialize
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text24
  3906  000DBE                     __ptext24:
  3907                           	opt stack 0
  3908  000DBE                     _INTERRUPT_Initialize:
  3909                           	opt stack 25
  3910                           
  3911                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  3912                           
  3913                           ;incstack = 0
  3914  000DBE  9ED0               	bcf	4048,7,c	;volatile
  3915  000DC0  0012               	return		;funcret
  3916  000DC2                     __end_of_INTERRUPT_Initialize:
  3917                           	opt stack 0
  3918                           tblptru	equ	0xFF8
  3919                           tblptrh	equ	0xFF7
  3920                           tblptrl	equ	0xFF6
  3921                           tablat	equ	0xFF5
  3922                           prodh	equ	0xFF4
  3923                           prodl	equ	0xFF3
  3924                           intcon	equ	0xFF2
  3925                           intcon2	equ	0xFF1
  3926                           postinc0	equ	0xFEE
  3927                           wreg	equ	0xFE8
  3928                           postdec1	equ	0xFE5
  3929                           fsr1l	equ	0xFE1
  3930                           indf2	equ	0xFDF
  3931                           fsr2h	equ	0xFDA
  3932                           fsr2l	equ	0xFD9
  3933                           status	equ	0xFD8
  3934                           
  3935 ;; *************** function _EUSART1_Initialize *****************
  3936 ;; Defined at:
  3937 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;		None
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;		None
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      void 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;Total ram usage:        0 bytes
  3956 ;; Hardware stack levels used:    1
  3957 ;; Hardware stack levels required when called:    4
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_SYSTEM_Initialize
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text25
  3966  000D4A                     __ptext25:
  3967                           	opt stack 0
  3968  000D4A                     _EUSART1_Initialize:
  3969                           	opt stack 25
  3970                           
  3971                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  3972                           
  3973                           ;incstack = 0
  3974  000D4A  0E08               	movlw	8
  3975  000D4C  6EB8               	movwf	4024,c	;volatile
  3976                           
  3977                           ;eusart1.c: 63: RCSTA1 = 0x90;
  3978  000D4E  0E90               	movlw	144
  3979  000D50  6EAB               	movwf	4011,c	;volatile
  3980                           
  3981                           ;eusart1.c: 66: TXSTA1 = 0x24;
  3982  000D52  0E24               	movlw	36
  3983  000D54  6EAC               	movwf	4012,c	;volatile
  3984                           
  3985                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  3986  000D56  0EA0               	movlw	160
  3987  000D58  6EAF               	movwf	4015,c	;volatile
  3988                           
  3989                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  3990  000D5A  0E01               	movlw	1
  3991  000D5C  6EB0               	movwf	4016,c	;volatile
  3992  000D5E  0012               	return		;funcret
  3993  000D60                     __end_of_EUSART1_Initialize:
  3994                           	opt stack 0
  3995                           tblptru	equ	0xFF8
  3996                           tblptrh	equ	0xFF7
  3997                           tblptrl	equ	0xFF6
  3998                           tablat	equ	0xFF5
  3999                           prodh	equ	0xFF4
  4000                           prodl	equ	0xFF3
  4001                           intcon	equ	0xFF2
  4002                           intcon2	equ	0xFF1
  4003                           postinc0	equ	0xFEE
  4004                           wreg	equ	0xFE8
  4005                           postdec1	equ	0xFE5
  4006                           fsr1l	equ	0xFE1
  4007                           indf2	equ	0xFDF
  4008                           fsr2h	equ	0xFDA
  4009                           fsr2l	equ	0xFD9
  4010                           status	equ	0xFD8
  4011                           
  4012 ;; *************** function _EPWM2_Initialize *****************
  4013 ;; Defined at:
  4014 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  1    wreg      void 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4032 ;;Total ram usage:        0 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    4
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_SYSTEM_Initialize
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text26
  4043  000C82                     __ptext26:
  4044                           	opt stack 0
  4045  000C82                     _EPWM2_Initialize:
  4046                           	opt stack 25
  4047                           
  4048                           ;epwm2.c: 68: CCP2CON = 0x0C;
  4049                           
  4050                           ;incstack = 0
  4051  000C82  0E0C               	movlw	12
  4052  000C84  6E66               	movwf	3942,c	;volatile
  4053                           
  4054                           ;epwm2.c: 71: ECCP2AS = 0x00;
  4055  000C86  0E00               	movlw	0
  4056  000C88  6E64               	movwf	3940,c	;volatile
  4057                           
  4058                           ;epwm2.c: 74: PWM2CON = 0x80;
  4059  000C8A  0E80               	movlw	128
  4060  000C8C  6E65               	movwf	3941,c	;volatile
  4061                           
  4062                           ;epwm2.c: 77: PSTR2CON = 0x03;
  4063  000C8E  0E03               	movlw	3
  4064  000C90  6E63               	movwf	3939,c	;volatile
  4065                           
  4066                           ;epwm2.c: 80: CCPR2L = 0x0C;
  4067  000C92  0E0C               	movlw	12
  4068  000C94  6E67               	movwf	3943,c	;volatile
  4069                           
  4070                           ;epwm2.c: 83: CCPR2H = 0x00;
  4071  000C96  0E00               	movlw	0
  4072  000C98  6E68               	movwf	3944,c	;volatile
  4073                           
  4074                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  4075  000C9A  010F               	movlb	15	; () banked
  4076  000C9C  5149               	movf	73,w,b	;volatile
  4077  000C9E  0BE7               	andlw	-25
  4078  000CA0  0910               	iorlw	16
  4079  000CA2  6F49               	movwf	73,b	;volatile
  4080                           
  4081                           ; BSR set to: 15
  4082  000CA4  0012               	return		;funcret
  4083  000CA6                     __end_of_EPWM2_Initialize:
  4084                           	opt stack 0
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           prodh	equ	0xFF4
  4090                           prodl	equ	0xFF3
  4091                           intcon	equ	0xFF2
  4092                           intcon2	equ	0xFF1
  4093                           postinc0	equ	0xFEE
  4094                           wreg	equ	0xFE8
  4095                           postdec1	equ	0xFE5
  4096                           fsr1l	equ	0xFE1
  4097                           indf2	equ	0xFDF
  4098                           fsr2h	equ	0xFDA
  4099                           fsr2l	equ	0xFD9
  4100                           status	equ	0xFD8
  4101                           
  4102 ;; *************** function _EPWM1_Initialize *****************
  4103 ;; Defined at:
  4104 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      void 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;Total ram usage:        0 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    4
  4125 ;; This function calls:
  4126 ;;		Nothing
  4127 ;; This function is called by:
  4128 ;;		_SYSTEM_Initialize
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text27
  4133  000CA6                     __ptext27:
  4134                           	opt stack 0
  4135  000CA6                     _EPWM1_Initialize:
  4136                           	opt stack 25
  4137                           
  4138                           ;epwm1.c: 68: CCP1CON = 0x0C;
  4139                           
  4140                           ; BSR set to: 15
  4141                           ;incstack = 0
  4142  000CA6  0E0C               	movlw	12
  4143  000CA8  6EBD               	movwf	4029,c	;volatile
  4144                           
  4145                           ;epwm1.c: 71: ECCP1AS = 0x00;
  4146  000CAA  0E00               	movlw	0
  4147  000CAC  6EB6               	movwf	4022,c	;volatile
  4148                           
  4149                           ;epwm1.c: 74: PWM1CON = 0x80;
  4150  000CAE  0E80               	movlw	128
  4151  000CB0  6EB7               	movwf	4023,c	;volatile
  4152                           
  4153                           ;epwm1.c: 77: PSTR1CON = 0x03;
  4154  000CB2  0E03               	movlw	3
  4155  000CB4  6EB9               	movwf	4025,c	;volatile
  4156                           
  4157                           ;epwm1.c: 80: CCPR1L = 0x0C;
  4158  000CB6  0E0C               	movlw	12
  4159  000CB8  6EBE               	movwf	4030,c	;volatile
  4160                           
  4161                           ;epwm1.c: 83: CCPR1H = 0x00;
  4162  000CBA  0E00               	movlw	0
  4163  000CBC  6EBF               	movwf	4031,c	;volatile
  4164                           
  4165                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  4166  000CBE  010F               	movlb	15	; () banked
  4167  000CC0  5149               	movf	73,w,b	;volatile
  4168  000CC2  0BFC               	andlw	-4
  4169  000CC4  0902               	iorlw	2
  4170  000CC6  6F49               	movwf	73,b	;volatile
  4171                           
  4172                           ; BSR set to: 15
  4173  000CC8  0012               	return		;funcret
  4174  000CCA                     __end_of_EPWM1_Initialize:
  4175                           	opt stack 0
  4176                           tblptru	equ	0xFF8
  4177                           tblptrh	equ	0xFF7
  4178                           tblptrl	equ	0xFF6
  4179                           tablat	equ	0xFF5
  4180                           prodh	equ	0xFF4
  4181                           prodl	equ	0xFF3
  4182                           intcon	equ	0xFF2
  4183                           intcon2	equ	0xFF1
  4184                           postinc0	equ	0xFEE
  4185                           wreg	equ	0xFE8
  4186                           postdec1	equ	0xFE5
  4187                           fsr1l	equ	0xFE1
  4188                           indf2	equ	0xFDF
  4189                           fsr2h	equ	0xFDA
  4190                           fsr2l	equ	0xFD9
  4191                           status	equ	0xFD8
  4192                           
  4193 ;; *************** function _CCP5_Initialize *****************
  4194 ;; Defined at:
  4195 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;Total ram usage:        0 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    4
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_SYSTEM_Initialize
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text28
  4224  000D60                     __ptext28:
  4225                           	opt stack 0
  4226  000D60                     _CCP5_Initialize:
  4227                           	opt stack 25
  4228                           
  4229                           ;ccp5.c: 60: CCP5CON = 0x00;
  4230                           
  4231                           ; BSR set to: 15
  4232                           ;incstack = 0
  4233  000D60  0E00               	movlw	0
  4234  000D62  010F               	movlb	15	; () banked
  4235  000D64  6F54               	movwf	84,b	;volatile
  4236                           
  4237                           ;ccp5.c: 62: CCPR5L = 0x00;
  4238  000D66  0E00               	movlw	0
  4239  000D68  010F               	movlb	15	; () banked
  4240  000D6A  6F55               	movwf	85,b	;volatile
  4241                           
  4242                           ;ccp5.c: 64: CCPR5H = 0x00;
  4243  000D6C  0E00               	movlw	0
  4244  000D6E  010F               	movlb	15	; () banked
  4245  000D70  6F56               	movwf	86,b	;volatile
  4246                           
  4247                           ; BSR set to: 15
  4248  000D72  0012               	return		;funcret
  4249  000D74                     __end_of_CCP5_Initialize:
  4250                           	opt stack 0
  4251                           tblptru	equ	0xFF8
  4252                           tblptrh	equ	0xFF7
  4253                           tblptrl	equ	0xFF6
  4254                           tablat	equ	0xFF5
  4255                           prodh	equ	0xFF4
  4256                           prodl	equ	0xFF3
  4257                           intcon	equ	0xFF2
  4258                           intcon2	equ	0xFF1
  4259                           postinc0	equ	0xFEE
  4260                           wreg	equ	0xFE8
  4261                           postdec1	equ	0xFE5
  4262                           fsr1l	equ	0xFE1
  4263                           indf2	equ	0xFDF
  4264                           fsr2h	equ	0xFDA
  4265                           fsr2l	equ	0xFD9
  4266                           status	equ	0xFD8
  4267                           
  4268 ;; *************** function _ADC_Initialize *****************
  4269 ;; Defined at:
  4270 ;;		line 61 in file "mcc_generated_files/adc.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;		None
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;Total ram usage:        0 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    4
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_SYSTEM_Initialize
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text29
  4299  000D32                     __ptext29:
  4300                           	opt stack 0
  4301  000D32                     _ADC_Initialize:
  4302                           	opt stack 25
  4303                           
  4304                           ;adc.c: 66: ADCON0 = 0x01;
  4305                           
  4306                           ; BSR set to: 15
  4307                           ;incstack = 0
  4308  000D32  0E01               	movlw	1
  4309  000D34  6EC2               	movwf	4034,c	;volatile
  4310                           
  4311                           ;adc.c: 69: ADCON1 = 0x00;
  4312  000D36  0E00               	movlw	0
  4313  000D38  6EC1               	movwf	4033,c	;volatile
  4314                           
  4315                           ;adc.c: 72: ADCON2 = 0x05;
  4316  000D3A  0E05               	movlw	5
  4317  000D3C  6EC0               	movwf	4032,c	;volatile
  4318                           
  4319                           ;adc.c: 75: ADRESL = 0x00;
  4320  000D3E  0E00               	movlw	0
  4321  000D40  6EC3               	movwf	4035,c	;volatile
  4322                           
  4323                           ;adc.c: 78: ADRESH = 0x00;
  4324  000D42  0E00               	movlw	0
  4325  000D44  6EC4               	movwf	4036,c	;volatile
  4326                           
  4327                           ;adc.c: 81: PIE1bits.ADIE = 1;
  4328  000D46  8C9D               	bsf	3997,6,c	;volatile
  4329  000D48  0012               	return		;funcret
  4330  000D4A                     __end_of_ADC_Initialize:
  4331                           	opt stack 0
  4332                           tblptru	equ	0xFF8
  4333                           tblptrh	equ	0xFF7
  4334                           tblptrl	equ	0xFF6
  4335                           tablat	equ	0xFF5
  4336                           prodh	equ	0xFF4
  4337                           prodl	equ	0xFF3
  4338                           intcon	equ	0xFF2
  4339                           intcon2	equ	0xFF1
  4340                           postinc0	equ	0xFEE
  4341                           wreg	equ	0xFE8
  4342                           postdec1	equ	0xFE5
  4343                           fsr1l	equ	0xFE1
  4344                           indf2	equ	0xFDF
  4345                           fsr2h	equ	0xFDA
  4346                           fsr2l	equ	0xFD9
  4347                           status	equ	0xFD8
  4348                           
  4349 ;; *************** function _INTERRUPT_InterruptManager *****************
  4350 ;; Defined at:
  4351 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;		None
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;		None
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;Total ram usage:       14 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; Hardware stack levels required when called:    3
  4372 ;; This function calls:
  4373 ;;		_ADC_ISR
  4374 ;;		_TMR2_ISR
  4375 ;;		_TMR6_ISR
  4376 ;; This function is called by:
  4377 ;;		Interrupt level 2
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	intcode
  4382  000008                     __pintcode:
  4383                           	opt stack 0
  4384  000008                     _INTERRUPT_InterruptManager:
  4385                           	opt stack 22
  4386                           
  4387                           ;incstack = 0
  4388  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4389  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  4390  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4391  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4392  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4393  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4394  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4395  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4396  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4397  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4398  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4399  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4400  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4401  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4402  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4403                           
  4404                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  4405  000042  BCF2               	btfsc	intcon,6,c	;volatile
  4406  000044  AC9D               	btfss	3997,6,c	;volatile
  4407  000046  D005               	goto	i2l268
  4408  000048  AC9E               	btfss	3998,6,c	;volatile
  4409  00004A  D003               	goto	i2l268
  4410                           
  4411                           ;interrupt_manager.c: 61: {
  4412                           ;interrupt_manager.c: 62: ADC_ISR();
  4413  00004C  ECE1  F006         	call	_ADC_ISR	;wreg free
  4414                           
  4415                           ;interrupt_manager.c: 63: }
  4416  000050  D00E               	goto	i2l274
  4417  000052                     i2l268:
  4418                           
  4419                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  4420  000052  BCF2               	btfsc	intcon,6,c	;volatile
  4421  000054  A47D               	btfss	3965,2,c	;volatile
  4422  000056  D005               	goto	i2l270
  4423  000058  A47E               	btfss	3966,2,c	;volatile
  4424  00005A  D003               	goto	i2l270
  4425                           
  4426                           ;interrupt_manager.c: 65: {
  4427                           ;interrupt_manager.c: 66: TMR6_ISR();
  4428  00005C  EC88  F006         	call	_TMR6_ISR	;wreg free
  4429                           
  4430                           ;interrupt_manager.c: 67: }
  4431  000060  D006               	goto	i2l274
  4432  000062                     i2l270:
  4433                           
  4434                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  4435  000062  BCF2               	btfsc	intcon,6,c	;volatile
  4436  000064  A29D               	btfss	3997,1,c	;volatile
  4437  000066  D003               	goto	i2l274
  4438  000068  B29E               	btfsc	3998,1,c	;volatile
  4439                           
  4440                           ;interrupt_manager.c: 69: {
  4441                           ;interrupt_manager.c: 70: TMR2_ISR();
  4442  00006A  ECD6  F006         	call	_TMR2_ISR	;wreg free
  4443  00006E                     i2l274:
  4444  00006E  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4445  000072  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4446  000076  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4447  00007A  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4448  00007E  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4449  000082  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4450  000086  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4451  00008A  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4452  00008E  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4453  000092  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4454  000096  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4455  00009A  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4456  00009E  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4457  0000A2  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4458  0000A6  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4459  0000A8  0011               	retfie		f
  4460  0000AA                     __end_of_INTERRUPT_InterruptManager:
  4461                           	opt stack 0
  4462                           pclatu	equ	0xFFB
  4463                           pclath	equ	0xFFA
  4464                           tblptru	equ	0xFF8
  4465                           tblptrh	equ	0xFF7
  4466                           tblptrl	equ	0xFF6
  4467                           tablat	equ	0xFF5
  4468                           prodh	equ	0xFF4
  4469                           prodl	equ	0xFF3
  4470                           intcon	equ	0xFF2
  4471                           intcon2	equ	0xFF1
  4472                           postinc0	equ	0xFEE
  4473                           fsr0h	equ	0xFEA
  4474                           fsr0l	equ	0xFE9
  4475                           wreg	equ	0xFE8
  4476                           postdec1	equ	0xFE5
  4477                           fsr1h	equ	0xFE2
  4478                           fsr1l	equ	0xFE1
  4479                           indf2	equ	0xFDF
  4480                           fsr2h	equ	0xFDA
  4481                           fsr2l	equ	0xFD9
  4482                           status	equ	0xFD8
  4483                           
  4484 ;; *************** function _TMR6_ISR *****************
  4485 ;; Defined at:
  4486 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;		None
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;		None
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;Total ram usage:        0 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:    1
  4507 ;; This function calls:
  4508 ;;		Absolute function
  4509 ;;		_TMR6_DefaultInterruptHandler
  4510 ;; This function is called by:
  4511 ;;		_INTERRUPT_InterruptManager
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text31
  4516  000D10                     __ptext31:
  4517                           	opt stack 0
  4518  000D10                     _TMR6_ISR:
  4519                           	opt stack 23
  4520                           
  4521                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  4522                           
  4523                           ;incstack = 0
  4524  000D10  947E               	bcf	3966,2,c	;volatile
  4525                           
  4526                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  4527  000D12  504B               	movf	_TMR6_InterruptHandler,w,c
  4528  000D14  104C               	iorwf	_TMR6_InterruptHandler+1,w,c
  4529  000D16  B4D8               	btfsc	status,2,c
  4530  000D18  0012               	return	
  4531                           
  4532                           ;tmr6.c: 128: {
  4533                           ;tmr6.c: 129: TMR6_InterruptHandler();
  4534  000D1A  D801               	call	i2u53_48
  4535  000D1C  0012               	return	
  4536  000D1E                     i2u53_48:
  4537  000D1E  0005               	push	
  4538  000D20  6EFA               	movwf	pclath,c
  4539  000D22  504B               	movf	_TMR6_InterruptHandler,w,c
  4540  000D24  6EFD               	movwf	tosl,c
  4541  000D26  504C               	movf	_TMR6_InterruptHandler+1,w,c
  4542  000D28  6EFE               	movwf	tosh,c
  4543  000D2A  50F8               	movf	tblptru,w,c
  4544  000D2C  6EFF               	movwf	tosu,c
  4545  000D2E  50FA               	movf	pclath,w,c
  4546  000D30  0012               	return		;indir
  4547  000D32                     __end_of_TMR6_ISR:
  4548                           	opt stack 0
  4549                           tosu	equ	0xFFF
  4550                           tosh	equ	0xFFE
  4551                           tosl	equ	0xFFD
  4552                           pclatu	equ	0xFFB
  4553                           pclath	equ	0xFFA
  4554                           tblptru	equ	0xFF8
  4555                           tblptrh	equ	0xFF7
  4556                           tblptrl	equ	0xFF6
  4557                           tablat	equ	0xFF5
  4558                           prodh	equ	0xFF4
  4559                           prodl	equ	0xFF3
  4560                           intcon	equ	0xFF2
  4561                           intcon2	equ	0xFF1
  4562                           postinc0	equ	0xFEE
  4563                           fsr0h	equ	0xFEA
  4564                           fsr0l	equ	0xFE9
  4565                           wreg	equ	0xFE8
  4566                           postdec1	equ	0xFE5
  4567                           fsr1h	equ	0xFE2
  4568                           fsr1l	equ	0xFE1
  4569                           indf2	equ	0xFDF
  4570                           fsr2h	equ	0xFDA
  4571                           fsr2l	equ	0xFD9
  4572                           status	equ	0xFD8
  4573                           
  4574 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  4575 ;; Defined at:
  4576 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		None
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;Total ram usage:        0 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_TMR6_Initialize
  4600 ;;		_TMR6_ISR
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text32
  4605  000DC6                     __ptext32:
  4606                           	opt stack 0
  4607  000DC6                     _TMR6_DefaultInterruptHandler:
  4608                           	opt stack 23
  4609                           
  4610                           ;incstack = 0
  4611  000DC6  0012               	return		;funcret
  4612  000DC8                     __end_of_TMR6_DefaultInterruptHandler:
  4613                           	opt stack 0
  4614                           tosu	equ	0xFFF
  4615                           tosh	equ	0xFFE
  4616                           tosl	equ	0xFFD
  4617                           pclatu	equ	0xFFB
  4618                           pclath	equ	0xFFA
  4619                           tblptru	equ	0xFF8
  4620                           tblptrh	equ	0xFF7
  4621                           tblptrl	equ	0xFF6
  4622                           tablat	equ	0xFF5
  4623                           prodh	equ	0xFF4
  4624                           prodl	equ	0xFF3
  4625                           intcon	equ	0xFF2
  4626                           intcon2	equ	0xFF1
  4627                           postinc0	equ	0xFEE
  4628                           fsr0h	equ	0xFEA
  4629                           fsr0l	equ	0xFE9
  4630                           wreg	equ	0xFE8
  4631                           postdec1	equ	0xFE5
  4632                           fsr1h	equ	0xFE2
  4633                           fsr1l	equ	0xFE1
  4634                           indf2	equ	0xFDF
  4635                           fsr2h	equ	0xFDA
  4636                           fsr2l	equ	0xFD9
  4637                           status	equ	0xFD8
  4638                           
  4639 ;; *************** function _TMR2_ISR *****************
  4640 ;; Defined at:
  4641 ;;		line 122 in file "mcc_generated_files/tmr2.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;		None
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;Total ram usage:        0 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    2
  4662 ;; This function calls:
  4663 ;;		_TMR2_CallBack
  4664 ;; This function is called by:
  4665 ;;		_INTERRUPT_InterruptManager
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text33
  4670  000DAC                     __ptext33:
  4671                           	opt stack 0
  4672  000DAC                     _TMR2_ISR:
  4673                           	opt stack 22
  4674                           
  4675                           ;tmr2.c: 126: PIR1bits.TMR2IF = 0;
  4676                           
  4677                           ;incstack = 0
  4678  000DAC  929E               	bcf	3998,1,c	;volatile
  4679                           
  4680                           ;tmr2.c: 130: TMR2_CallBack();
  4681  000DAE  EC65  F006         	call	_TMR2_CallBack	;wreg free
  4682  000DB2  0012               	return		;funcret
  4683  000DB4                     __end_of_TMR2_ISR:
  4684                           	opt stack 0
  4685                           tosu	equ	0xFFF
  4686                           tosh	equ	0xFFE
  4687                           tosl	equ	0xFFD
  4688                           pclatu	equ	0xFFB
  4689                           pclath	equ	0xFFA
  4690                           tblptru	equ	0xFF8
  4691                           tblptrh	equ	0xFF7
  4692                           tblptrl	equ	0xFF6
  4693                           tablat	equ	0xFF5
  4694                           prodh	equ	0xFF4
  4695                           prodl	equ	0xFF3
  4696                           intcon	equ	0xFF2
  4697                           intcon2	equ	0xFF1
  4698                           postinc0	equ	0xFEE
  4699                           fsr0h	equ	0xFEA
  4700                           fsr0l	equ	0xFE9
  4701                           wreg	equ	0xFE8
  4702                           postdec1	equ	0xFE5
  4703                           fsr1h	equ	0xFE2
  4704                           fsr1l	equ	0xFE1
  4705                           indf2	equ	0xFDF
  4706                           fsr2h	equ	0xFDA
  4707                           fsr2l	equ	0xFD9
  4708                           status	equ	0xFD8
  4709                           
  4710 ;; *************** function _TMR2_CallBack *****************
  4711 ;; Defined at:
  4712 ;;		line 133 in file "mcc_generated_files/tmr2.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;		None
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;		None
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      void 
  4719 ;; Registers used:
  4720 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;Total ram usage:        0 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    1
  4733 ;; This function calls:
  4734 ;;		Absolute function
  4735 ;;		_TMR2_DefaultInterruptHandler
  4736 ;; This function is called by:
  4737 ;;		_TMR2_ISR
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text34
  4742  000CCA                     __ptext34:
  4743                           	opt stack 0
  4744  000CCA                     _TMR2_CallBack:
  4745                           	opt stack 22
  4746                           
  4747                           ;tmr2.c: 135: Timer2Ticked=1;
  4748                           
  4749                           ;incstack = 0
  4750  000CCA  0E01               	movlw	1
  4751  000CCC  6E48               	movwf	_Timer2Ticked,c	;volatile
  4752                           
  4753                           ;tmr2.c: 138: if(TMR2_InterruptHandler)
  4754  000CCE  5049               	movf	_TMR2_InterruptHandler,w,c
  4755  000CD0  104A               	iorwf	_TMR2_InterruptHandler+1,w,c
  4756  000CD2  B4D8               	btfsc	status,2,c
  4757  000CD4  0012               	return	
  4758                           
  4759                           ;tmr2.c: 139: {
  4760                           ;tmr2.c: 140: TMR2_InterruptHandler();
  4761  000CD6  D801               	call	i2u29_48
  4762  000CD8  0012               	return	
  4763  000CDA                     i2u29_48:
  4764  000CDA  0005               	push	
  4765  000CDC  6EFA               	movwf	pclath,c
  4766  000CDE  5049               	movf	_TMR2_InterruptHandler,w,c
  4767  000CE0  6EFD               	movwf	tosl,c
  4768  000CE2  504A               	movf	_TMR2_InterruptHandler+1,w,c
  4769  000CE4  6EFE               	movwf	tosh,c
  4770  000CE6  50F8               	movf	tblptru,w,c
  4771  000CE8  6EFF               	movwf	tosu,c
  4772  000CEA  50FA               	movf	pclath,w,c
  4773  000CEC  0012               	return		;indir
  4774  000CEE                     __end_of_TMR2_CallBack:
  4775                           	opt stack 0
  4776                           tosu	equ	0xFFF
  4777                           tosh	equ	0xFFE
  4778                           tosl	equ	0xFFD
  4779                           pclatu	equ	0xFFB
  4780                           pclath	equ	0xFFA
  4781                           tblptru	equ	0xFF8
  4782                           tblptrh	equ	0xFF7
  4783                           tblptrl	equ	0xFF6
  4784                           tablat	equ	0xFF5
  4785                           prodh	equ	0xFF4
  4786                           prodl	equ	0xFF3
  4787                           intcon	equ	0xFF2
  4788                           intcon2	equ	0xFF1
  4789                           postinc0	equ	0xFEE
  4790                           fsr0h	equ	0xFEA
  4791                           fsr0l	equ	0xFE9
  4792                           wreg	equ	0xFE8
  4793                           postdec1	equ	0xFE5
  4794                           fsr1h	equ	0xFE2
  4795                           fsr1l	equ	0xFE1
  4796                           indf2	equ	0xFDF
  4797                           fsr2h	equ	0xFDA
  4798                           fsr2l	equ	0xFD9
  4799                           status	equ	0xFD8
  4800                           
  4801 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4802 ;; Defined at:
  4803 ;;		line 148 in file "mcc_generated_files/tmr2.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;		None
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		None
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;Total ram usage:        0 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_TMR2_Initialize
  4827 ;;		_TMR2_CallBack
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text35
  4832  000DC8                     __ptext35:
  4833                           	opt stack 0
  4834  000DC8                     _TMR2_DefaultInterruptHandler:
  4835                           	opt stack 22
  4836                           
  4837                           ;incstack = 0
  4838  000DC8  0012               	return		;funcret
  4839  000DCA                     __end_of_TMR2_DefaultInterruptHandler:
  4840                           	opt stack 0
  4841                           tosu	equ	0xFFF
  4842                           tosh	equ	0xFFE
  4843                           tosl	equ	0xFFD
  4844                           pclatu	equ	0xFFB
  4845                           pclath	equ	0xFFA
  4846                           tblptru	equ	0xFF8
  4847                           tblptrh	equ	0xFF7
  4848                           tblptrl	equ	0xFF6
  4849                           tablat	equ	0xFF5
  4850                           prodh	equ	0xFF4
  4851                           prodl	equ	0xFF3
  4852                           intcon	equ	0xFF2
  4853                           intcon2	equ	0xFF1
  4854                           postinc0	equ	0xFEE
  4855                           fsr0h	equ	0xFEA
  4856                           fsr0l	equ	0xFE9
  4857                           wreg	equ	0xFE8
  4858                           postdec1	equ	0xFE5
  4859                           fsr1h	equ	0xFE2
  4860                           fsr1l	equ	0xFE1
  4861                           indf2	equ	0xFDF
  4862                           fsr2h	equ	0xFDA
  4863                           fsr2l	equ	0xFD9
  4864                           status	equ	0xFD8
  4865                           
  4866 ;; *************** function _ADC_ISR *****************
  4867 ;; Defined at:
  4868 ;;		line 144 in file "mcc_generated_files/adc.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		None
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;Total ram usage:        0 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_INTERRUPT_InterruptManager
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text36
  4896  000DC2                     __ptext36:
  4897                           	opt stack 0
  4898  000DC2                     _ADC_ISR:
  4899                           	opt stack 24
  4900                           
  4901                           ;adc.c: 149: PIR1bits.ADIF = 0;
  4902                           
  4903                           ;incstack = 0
  4904  000DC2  9C9E               	bcf	3998,6,c	;volatile
  4905  000DC4  0012               	return		;funcret
  4906  000DC6                     __end_of_ADC_ISR:
  4907                           	opt stack 0
  4908  0000                     tosu	equ	0xFFF
  4909                           tosh	equ	0xFFE
  4910                           tosl	equ	0xFFD
  4911                           pclatu	equ	0xFFB
  4912                           pclath	equ	0xFFA
  4913                           tblptru	equ	0xFF8
  4914                           tblptrh	equ	0xFF7
  4915                           tblptrl	equ	0xFF6
  4916                           tablat	equ	0xFF5
  4917                           prodh	equ	0xFF4
  4918                           prodl	equ	0xFF3
  4919                           intcon	equ	0xFF2
  4920                           intcon2	equ	0xFF1
  4921                           postinc0	equ	0xFEE
  4922                           fsr0h	equ	0xFEA
  4923                           fsr0l	equ	0xFE9
  4924                           wreg	equ	0xFE8
  4925                           postdec1	equ	0xFE5
  4926                           fsr1h	equ	0xFE2
  4927                           fsr1l	equ	0xFE1
  4928                           indf2	equ	0xFDF
  4929                           fsr2h	equ	0xFDA
  4930                           fsr2l	equ	0xFD9
  4931                           status	equ	0xFD8
  4932                           tosu	equ	0xFFF
  4933                           tosh	equ	0xFFE
  4934                           tosl	equ	0xFFD
  4935                           pclatu	equ	0xFFB
  4936                           pclath	equ	0xFFA
  4937                           tblptru	equ	0xFF8
  4938                           tblptrh	equ	0xFF7
  4939                           tblptrl	equ	0xFF6
  4940                           tablat	equ	0xFF5
  4941                           prodh	equ	0xFF4
  4942                           prodl	equ	0xFF3
  4943                           intcon	equ	0xFF2
  4944                           intcon2	equ	0xFF1
  4945                           postinc0	equ	0xFEE
  4946                           fsr0h	equ	0xFEA
  4947                           fsr0l	equ	0xFE9
  4948                           wreg	equ	0xFE8
  4949                           postdec1	equ	0xFE5
  4950                           fsr1h	equ	0xFE2
  4951                           fsr1l	equ	0xFE1
  4952                           indf2	equ	0xFDF
  4953                           fsr2h	equ	0xFDA
  4954                           fsr2l	equ	0xFD9
  4955                           status	equ	0xFD8
  4956                           
  4957                           	psect	text37
  4958  000000                     __ptext37:
  4959                           	opt stack 0
  4960                           tosu	equ	0xFFF
  4961                           tosh	equ	0xFFE
  4962                           tosl	equ	0xFFD
  4963                           pclatu	equ	0xFFB
  4964                           pclath	equ	0xFFA
  4965                           tblptru	equ	0xFF8
  4966                           tblptrh	equ	0xFF7
  4967                           tblptrl	equ	0xFF6
  4968                           tablat	equ	0xFF5
  4969                           prodh	equ	0xFF4
  4970                           prodl	equ	0xFF3
  4971                           intcon	equ	0xFF2
  4972                           intcon2	equ	0xFF1
  4973                           postinc0	equ	0xFEE
  4974                           fsr0h	equ	0xFEA
  4975                           fsr0l	equ	0xFE9
  4976                           wreg	equ	0xFE8
  4977                           postdec1	equ	0xFE5
  4978                           fsr1h	equ	0xFE2
  4979                           fsr1l	equ	0xFE1
  4980                           indf2	equ	0xFDF
  4981                           fsr2h	equ	0xFDA
  4982                           fsr2l	equ	0xFD9
  4983                           status	equ	0xFD8
  4984                           
  4985                           	psect	rparam
  4986  0000                     tosu	equ	0xFFF
  4987                           tosh	equ	0xFFE
  4988                           tosl	equ	0xFFD
  4989                           pclatu	equ	0xFFB
  4990                           pclath	equ	0xFFA
  4991                           tblptru	equ	0xFF8
  4992                           tblptrh	equ	0xFF7
  4993                           tblptrl	equ	0xFF6
  4994                           tablat	equ	0xFF5
  4995                           prodh	equ	0xFF4
  4996                           prodl	equ	0xFF3
  4997                           intcon	equ	0xFF2
  4998                           intcon2	equ	0xFF1
  4999                           postinc0	equ	0xFEE
  5000                           fsr0h	equ	0xFEA
  5001                           fsr0l	equ	0xFE9
  5002                           wreg	equ	0xFE8
  5003                           postdec1	equ	0xFE5
  5004                           fsr1h	equ	0xFE2
  5005                           fsr1l	equ	0xFE1
  5006                           indf2	equ	0xFDF
  5007                           fsr2h	equ	0xFDA
  5008                           fsr2l	equ	0xFD9
  5009                           status	equ	0xFD8
  5010                           
  5011                           	psect	temp
  5012  00004E                     btemp:
  5013                           	opt stack 0
  5014  00004E                     	ds	1
  5015  0000                     int$flags	set	btemp
  5016                           tosu	equ	0xFFF
  5017                           tosh	equ	0xFFE
  5018                           tosl	equ	0xFFD
  5019                           pclatu	equ	0xFFB
  5020                           pclath	equ	0xFFA
  5021                           tblptru	equ	0xFF8
  5022                           tblptrh	equ	0xFF7
  5023                           tblptrl	equ	0xFF6
  5024                           tablat	equ	0xFF5
  5025                           prodh	equ	0xFF4
  5026                           prodl	equ	0xFF3
  5027                           intcon	equ	0xFF2
  5028                           intcon2	equ	0xFF1
  5029                           postinc0	equ	0xFEE
  5030                           fsr0h	equ	0xFEA
  5031                           fsr0l	equ	0xFE9
  5032                           wreg	equ	0xFE8
  5033                           postdec1	equ	0xFE5
  5034                           fsr1h	equ	0xFE2
  5035                           fsr1l	equ	0xFE1
  5036                           indf2	equ	0xFDF
  5037                           fsr2h	equ	0xFDA
  5038                           fsr2l	equ	0xFD9
  5039                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        192
    BSS         11
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      77
    BANK0           160      0     128
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StepMove
    _StepMove->_State8MEF_act
    _State8MEF_act->_controlador1
    _State8MEF_act->_controlador2
    _controlador2->___ftdiv
    _controlador1->___ftdiv
    ___lwtoft->___ftpack
    ___ftdiv->___ftpack
    _State16MEF_act->_EPWM1_LoadDutyValue
    _State16MEF_act->_EPWM2_LoadDutyValue
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14682
                  _SYSTEM_Initialize
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StepMove                                             6     2      4   14510
                                             55 COMRAM     6     2      4
                     _State16MEF_act
                      _State8MEF_act
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act                                        6     6      0   13118
                                             49 COMRAM     6     6      0
                  _ADC_GetConversion
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                       _controlador1
                       _controlador2
 ---------------------------------------------------------------------------------
 (3) _controlador2                                        12    10      2    5742
                                             37 COMRAM    12    10      2
                      _EUSART1_Write
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) _controlador1                                        12    10      2    5698
                                             37 COMRAM    12    10      2
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             3     0      3    2142
                                             22 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     444
                                             14 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    2630
                                             22 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1992
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    5     3      2      22
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act                                       1     1      0    1134
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2     556
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     556
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_ini
   _StepMove
     _State16MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _EUSART1_Write
     _State8MEF_act
       _ADC_GetConversion
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _controlador1
         ___ftdiv
           ___ftpack
         ___fttol
         ___lwtoft
           ___ftpack
       _controlador2
         _EUSART1_Write
         ___ftdiv
           ___ftpack
         ___fttol
         ___lwtoft
           ___ftpack

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      4D       1       81.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10D      12        0.0%
DATA                 0      0     10D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Jun 08 11:45:56 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 0DAC  
                       ??_TMR6_StartTimer 000F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l232 0B6C                                       l502 0998  
                                     l337 0D84                                       l509 0914  
                                     l736 0862                                       l794 07A2  
                            __CFG_CPB$OFF 000000                                       _PR2 000FBB  
                            __CFG_CPD$OFF 000000                                       _PR6 000F4B  
                                     u811 06FE                                       u831 0726  
                                     u861 060A                                       u880 0644  
                                     u885 063C                           __end_of_ADC_ISR 0DC6  
                         _TMR2_Initialize 0CEE                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                __end_of_EPWM2_Initialize 0CA6                           _CCP5_Initialize 0D60  
                            ___ftdiv@cntr 0020                              ___ftdiv@sign 0025  
                                    l2011 0314                                      l2009 0310  
                                    l2041 03DE                                      l2211 0C20  
                                    l2141 05D4                                      l2117 0560  
                                    l2045 0402                                      l2037 03DA  
                                    l2119 0564                                      l2055 0418  
                                    l2073 047C                                      l2145 05D8  
                                    l2075 0480                                      l2181 0AB6  
                                    l2095 04EE                                      l2097 04F2  
                                    l2185 0AC2                                      l1731 07FC  
                                    l2179 0AB2                                      l1741 0858  
                                    l1733 081A                                      l1725 07E4  
                                    l1813 0626                                      l1831 068C  
                                    l1737 0830                                      l1729 07F2  
                                    l1841 06B4                                      l1739 084E  
                                    l1843 06C0                                      l1835 069C  
                                    l1773 073E                                      l1845 06C6  
                                    l1925 00B0                                      l1767 0716  
                                    l1935 00C6                                      l1793 077C  
                                    l1849 06DC                                      l1881 0988  
                                    l1885 099C                                      l1957 0180  
                                    l1895 0904                                      l1983 0248  
                                    l1959 0184                                      l1985 024C  
                                    l1899 0918                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    _TMR2 000FBC                                      _TMR6 000F4C  
                                    _WPUB 000F61                             _EUSART1_Write 0D82  
                                    _main 0C0E                              ___ftpack@arg 000F  
                            ___ftpack@exp 0012                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 004E                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00AA                             __CFG_IESO$OFF 000000  
                   ??_EPWM1_LoadDutyValue 0011                              ___param_bank 000000  
                            ___fttol@exp1 001D                              ___fttol@lval 0019  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 0D82  
                           ?_controlador1 0026                             ?_controlador2 0026  
                                   ?_main 0001                           __end_of___ftdiv 07D4  
                         __end_of___fttol 06EE                                     _T2CON 000FBA  
                                   _T6CON 000F4A                            __CFG_DEBUG$OFF 000000  
                                   i2l270 0062                                     i2l274 006E  
                                   i2l268 0052                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
       __size_of_TMR6_SetInterruptHandler 000A                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
               ?_TMR6_SetInterruptHandler 000F                          __end_of_TMR2_ISR 0DB4  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                          __end_of_TMR6_ISR 0D32  
                          __CFG_EBTRB$OFF 000000                          _LookUP_TABLE_COS 00C0  
                        _LookUP_TABLE_SEN 00A0                        __CFG_MCLRE$EXTMCLR 000000  
                           ___ftpack@sign 0013                        StepMove@StepNumber 0038  
                          ?_EUSART1_Write 0001                                     pclath 000FFA  
                                   tablat 000FF5                         State8MEF_act@PWM1 0036  
                       State8MEF_act@PWM2 0037                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 0DBA  
                          __CFG_PBADEN$ON 000000            ??_TMR6_DefaultInterruptHandler 0001  
                         __initialization 0A20                __end_of_EUSART1_Initialize 0D60  
                            __end_of_main 0C36                   __end_of_TMR2_Initialize 0D10  
                               ??_ADC_ISR 0001               ?_INTERRUPT_InterruptManager 0001  
                          ??_controlador1 0028                            ??_controlador2 0028  
                _TMR2_SetInterruptHandler 0DA2                                    ??_main 003E  
                           ___fttol@sign1 0018                   __end_of_CCP5_Initialize 0D74  
                           __activetblptr 000002                           _TMR6_Initialize 0C36  
                        __end_of_StepMove 0AC8                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR1H 000FBF                                    _CCPR2H 000F68  
                                  _CCPR1L 000FBE                                    _CCPR2L 000F67  
                                  _CCPR5H 000F56                                    _CCPR5L 000F55  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                          __end_of___ftpack 0882  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAE  
                        __end_of___lwtoft 0C82                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                          __CFG_XINST$OFF 000000                              _CCPTMRS0bits 000F49  
                          __CFG_STVREN$ON 000000                                 ??___ftdiv 001D  
                               ??___fttol 0013                   __size_of_State16MEF_act 01FA  
                                  clear_0 0A66                  StepMove@microstep_number 003B  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                  ADC_GetConversion@channel 0013  
                         ??_EUSART1_Write 000F                       _EPWM2_LoadDutyValue 0B84  
                 __end_of_TMR2_StartTimer 0DBE  TMR2_SetInterruptHandler@InterruptHandler 000F  
TMR6_SetInterruptHandler@InterruptHandler 000F             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 0BE4                                __accesstop 0060  
                 __end_of__initialization 0A6C                     __end_of_TMR2_CallBack 0CEE  
                      ?_SYSTEM_Initialize 0001                           _TMR6_StartTimer 0DB4  
                           ___rparam_used 000001                                ___ftdiv@f1 0017  
                              ___ftdiv@f2 001A                                ___ftdiv@f3 0021  
                       ?_EPWM1_Initialize 0001                                ___fttol@f1 000F  
                          __pcstackCOMRAM 0001                      ?_EPWM2_LoadDutyValue 000F  
                            __pidataBANK0 09A0                              __pidataBANK1 0B14  
                     ??_SYSTEM_Initialize 0011                     __end_of_State8MEF_act 0400  
                               ?_TMR2_ISR 0001                                 ?_TMR6_ISR 0001  
                      ??_EPWM1_Initialize 000F                          ?_TMR2_Initialize 0001  
                 __end_of_TMR6_Initialize 0C5E                                ___lwtoft@c 0017  
                        ?_CCP5_Initialize 0001                         ?_EPWM2_Initialize 0001  
               __end_of_SYSTEM_Initialize 0C0E                        ??_EPWM2_Initialize 000F  
                         __CFG_PLLCFG$OFF 000000                      __end_of_controlador1 09A0  
                    __end_of_controlador2 091C                                __pnvCOMRAM 0049  
                      __CFG_CCP2MX$PORTC1 000000                     ??_EPWM2_LoadDutyValue 0011  
        __end_of_TMR6_SetInterruptHandler 0DA2                                ??_TMR2_ISR 0001  
                      __CFG_CCP3MX$PORTB5 000000                                 ?_StepMove 0038  
                              ??_TMR6_ISR 0001                                   _CCP1CON 000FBD  
                                 _CCP2CON 000F66                                   _CCP5CON 000F54  
                                 _ECCP1AS 000FB6                                   _ECCP2AS 000F64  
                                 _ADC_ISR 0DC2                                 ?___ftpack 000F  
                 __size_of_ADC_Initialize 0018                                 ?___lwtoft 0017  
                                 _OSCCON2 000FD2                                   i2u29_48 0CDA  
                                 i2u53_48 0D1E                                   _OSCTUNE 000F9B  
                                 _PWM1CON 000FB7                                   _PWM2CON 000F65  
                                 _SPBRGH1 000FB0                controlador2@An_Acquisition 0026  
                        ?_TMR2_StartTimer 0001                   __end_of_TMR6_StartTimer 0DBA  
             __end_of_EPWM1_LoadDutyValue 0BE4                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 0011                                   ___ftdiv 06EE  
                              ??_StepMove 003C                                   ___fttol 05FA  
                          _State16MEF_act 0400                        controlador1@LookUp 0031  
                      controlador2@LookUp 0031                                   __pcinit 0A20  
                              ??___ftpack 0014                          ?_TMR6_Initialize 0001  
                                 __ramtop 1000                                   __ptext0 0C0E  
                                 __ptext1 0A7A                                   __ptext2 00AE  
                                 __ptext3 0882                                   __ptext4 091C  
                                 __ptext5 0C5E                                   __ptext6 05FA  
                                 __ptext7 06EE                                   __ptext8 07D4  
                                 __ptext9 0B54                                ??___lwtoft 001A  
                   _OSCILLATOR_Initialize 0D74                                 _T2CONbits 000FBA  
                           ?_StateMEF_ini 0001                        _EUSART1_Initialize 0D4A  
                ??_PIN_MANAGER_Initialize 000F                                 _T6CONbits 000F4A  
                      controlador1@output 002F                        controlador2@output 002C  
              __size_of_SYSTEM_Initialize 002A                      end_of_initialization 0A6C  
                     ?_EUSART1_Initialize 0001                             __Lmediumconst 0000  
                  __end_of_State16MEF_act 05FA                                   postdec1 000FE5  
                                 postinc0 000FEE                      ??_EUSART1_Initialize 000F  
                _TMR6_SetInterruptHandler 0D98                            ??_StateMEF_ini 000F  
                   __size_of_controlador1 0084                     __size_of_controlador2 009A  
                     EUSART1_Write@txData 000F                          ?_TMR6_StartTimer 0001  
                             ___ftdiv@exp 0024                              _EstadoActual 004D  
                         ?_State16MEF_act 0001              __end_of_INTERRUPT_Initialize 0DC2  
                               _Direccion 0046      __end_of_TMR2_DefaultInterruptHandler 0DCA  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 0DC8  
                       StepMove@Velocidad 003A                         __size_of_TMR2_ISR 0008  
                          _ADC_Initialize 0D32                         __size_of_TMR6_ISR 0022  
                            _controlador1 091C                              _controlador2 0882  
                  ?_OSCILLATOR_Initialize 0001                       start_initialization 0A20  
               __size_of_EPWM1_Initialize 0024           __size_of_PIN_MANAGER_Initialize 004C  
                               _Microstep 0047              EPWM1_LoadDutyValue@dutyValue 000F  
                   __end_of_EUSART1_Write 0D8E                 __size_of_EPWM2_Initialize 0024  
                  __end_of_ADC_Initialize 0D4A                               __pdataBANK0 0060  
                             __pdataBANK1 0100                                  ?_ADC_ISR 0001  
                               _StepCount 0040             ?_TMR2_DefaultInterruptHandler 0001  
                       __size_of_StepMove 004E                      controlador1@An_float 002C  
                       __size_of___ftpack 00AE                    __size_of_TMR2_CallBack 0024  
                    controlador2@An_float 0029                               __pbssCOMRAM 003E  
                       __size_of___lwtoft 0024                  __size_of_TMR2_Initialize 0022  
                __size_of_CCP5_Initialize 0014                    __size_of_State8MEF_act 0352  
             __end_of_EPWM2_LoadDutyValue 0BB4                     _TMR6_InterruptHandler 004B  
                    __end_of_StateMEF_ini 0D98                    _PIN_MANAGER_Initialize 0AC8  
                               __pintcode 0008                                  ?___ftdiv 0017  
                                ?___fttol 000F                           ?_ADC_Initialize 0001  
            ??_INTERRUPT_InterruptManager 0001                          __CFG_PRICLKEN$ON 000000  
                                _BAUDCON1 000FB8                                  _ANALOG_0 0044  
                                _ANALOG_1 0042                      _INTERRUPT_Initialize 0DBE  
                       controlador1@error 0030                         controlador2@error 0030  
                                _LATBbits 000F8A                                  _LATCbits 000F8B  
                                _LATDbits 000F8C                             _TMR2_CallBack 0CCA  
                                _PIE1bits 000F9D                                  _PIE5bits 000F7D  
                __size_of_TMR2_StartTimer 0004       __size_of_INTERRUPT_InterruptManager 00A2  
                                _PIR1bits 000F9E                                  _PIR5bits 000F7E  
            __size_of_EPWM1_LoadDutyValue 0030                ??_TMR6_SetInterruptHandler 0011  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR2_ISR 0DAC                                  _PSTR1CON 000FB9  
                                _PSTR2CON 000F63                                  _TMR6_ISR 0D10  
                           _State8MEF_act 00AE                          _Timer2Tick_count 003E  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
          ??_TMR2_DefaultInterruptHandler 0001                          _EPWM1_Initialize 0CA6  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 000F  
                __size_of_TMR6_Initialize 0028                               _INTCON2bits 000FF1  
                               copy_data0 0A34                                 copy_data1 0A54  
                   ?_INTERRUPT_Initialize 0001                         ??_TMR2_Initialize 0011  
                          ?_TMR2_CallBack 0001                          ??_State16MEF_act 0013  
                       ??_CCP5_Initialize 000F                                  __Hrparam 0000  
                            _Timer2Ticked 0048                          _EPWM2_Initialize 0C82  
                                __Lrparam 0000                         _ADC_GetConversion 0B54  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTC0 000000  
                          ?_State8MEF_act 0001                                  _StepMove 0A7A  
                 ??_OSCILLATOR_Initialize 000F                        ?_ADC_GetConversion 000F  
                        __size_of___ftdiv 00E6                          __size_of___fttol 00F4  
             __size_of_EUSART1_Initialize 0016                                  ___ftpack 07D4  
                                ___lwtoft 0C5E                       ??_ADC_GetConversion 0011  
              controlador1@An_Acquisition 0026                                  __ptext10 0400  
                                __ptext11 0D82                                  __ptext20 0DBA  
                                __ptext12 0B84                                  __ptext21 0DA2  
                                __ptext13 0BB4                                  __ptext22 0AC8  
                                __ptext14 0D8E                                  __ptext31 0D10  
                                __ptext23 0D74                                  __ptext15 0BE4  
                                __ptext32 0DC6                                  __ptext24 0DBE  
                                __ptext16 0C36                                  __ptext33 0DAC  
                                __ptext25 0D4A                                  __ptext17 0DB4  
                                __ptext34 0CCA                                  __ptext26 0C82  
                                __ptext18 0D98                                  __ptext35 0DC8  
                                __ptext27 0CA6                                  __ptext19 0CEE  
                                __ptext36 0DC2                                  __ptext28 0D60  
                                __ptext37 0000                                  __ptext29 0D32  
                   State8MEF_act@ANALOG_0 0032                     State8MEF_act@ANALOG_1 0034  
                   __size_of_StateMEF_ini 000A                             __size_of_main 0028  
                        controlador1@Vref 0029                          controlador2@Vref 002D  
                     _LookUP_TABLE_COS_16 0060                 __end_of_ADC_GetConversion 0B84  
                     _LookUP_TABLE_SEN_16 0100                  __size_of_TMR6_StartTimer 0006  
                                int$flags 004E                         ??_TMR2_StartTimer 000F  
      __end_of_INTERRUPT_InterruptManager 00AA                _INTERRUPT_InterruptManager 0008  
                              _INTCONbits 000FF2                              _StateMEF_ini 0D8E  
                  ??_INTERRUPT_Initialize 000F      __end_of_TMR6_DefaultInterruptHandler 0DC8  
   __size_of_TMR6_DefaultInterruptHandler 0002              _TMR6_DefaultInterruptHandler 0DC6  
                                intlevel2 0000                           ??_TMR2_CallBack 0001  
            EPWM2_LoadDutyValue@dutyValue 000F                   ?_PIN_MANAGER_Initialize 0001  
                       ??_TMR6_Initialize 0011                                _RCSTA1bits 000FAB  
                        ??_ADC_Initialize 000F                           ??_State8MEF_act 0032  
                  __size_of_EUSART1_Write 000C                         __CFG_T3CMX$PORTC0 000000  
                     _EPWM1_LoadDutyValue 0BB4            __end_of_PIN_MANAGER_Initialize 0B14  
           ?_TMR6_DefaultInterruptHandler 0001                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 0049                __size_of_ADC_GetConversion 0030  
                __end_of_EPWM1_Initialize 0CCA                      ?_EPWM1_LoadDutyValue 000F  
