

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Jun 06 09:56:57 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 1.41
    46                           ; Generated 25/01/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F46K22 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataBANK0
    81  0002A8                     __pidataBANK0:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _LookUP_TABLE_SEN
    85  0002A8  0C                 	db	12
    86  0002A9  24                 	db	36
    87  0002AA  3C                 	db	60
    88  0002AB  53                 	db	83
    89  0002AC  6A                 	db	106
    90  0002AD  7F                 	db	127
    91  0002AE  93                 	db	147
    92  0002AF  A6                 	db	166
    93  0002B0  B8                 	db	184
    94  0002B1  C8                 	db	200
    95  0002B2  D6                 	db	214
    96  0002B3  E2                 	db	226
    97  0002B4  EC                 	db	236
    98  0002B5  F4                 	db	244
    99  0002B6  FA                 	db	250
   100  0002B7  FE                 	db	254
   101  0002B8  FE                 	db	254
   102  0002B9  FA                 	db	250
   103  0002BA  F4                 	db	244
   104  0002BB  EC                 	db	236
   105  0002BC  E2                 	db	226
   106  0002BD  D6                 	db	214
   107  0002BE  C8                 	db	200
   108  0002BF  B8                 	db	184
   109  0002C0  A6                 	db	166
   110  0002C1  93                 	db	147
   111  0002C2  7F                 	db	127
   112  0002C3  6A                 	db	106
   113  0002C4  53                 	db	83
   114  0002C5  3C                 	db	60
   115  0002C6  24                 	db	36
   116  0002C7  0C                 	db	12
   117  0002C8  0C                 	db	12
   118  0002C9  24                 	db	36
   119  0002CA  3C                 	db	60
   120  0002CB  53                 	db	83
   121  0002CC  6A                 	db	106
   122  0002CD  7F                 	db	127
   123  0002CE  93                 	db	147
   124  0002CF  A6                 	db	166
   125  0002D0  B8                 	db	184
   126  0002D1  C8                 	db	200
   127  0002D2  D6                 	db	214
   128  0002D3  E2                 	db	226
   129  0002D4  EC                 	db	236
   130  0002D5  F4                 	db	244
   131  0002D6  FA                 	db	250
   132  0002D7  FE                 	db	254
   133  0002D8  FE                 	db	254
   134  0002D9  FA                 	db	250
   135  0002DA  F4                 	db	244
   136  0002DB  EC                 	db	236
   137  0002DC  E2                 	db	226
   138  0002DD  D6                 	db	214
   139  0002DE  C8                 	db	200
   140  0002DF  B8                 	db	184
   141  0002E0  A6                 	db	166
   142  0002E1  93                 	db	147
   143  0002E2  7F                 	db	127
   144  0002E3  6A                 	db	106
   145  0002E4  53                 	db	83
   146  0002E5  3C                 	db	60
   147  0002E6  24                 	db	36
   148  0002E7  0C                 	db	12
   149                           
   150                           ;initializer for _LookUP_TABLE_COS
   151  0002E8  FE                 	db	254
   152  0002E9  FA                 	db	250
   153  0002EA  F4                 	db	244
   154  0002EB  EC                 	db	236
   155  0002EC  E2                 	db	226
   156  0002ED  D6                 	db	214
   157  0002EE  C8                 	db	200
   158  0002EF  B8                 	db	184
   159  0002F0  A6                 	db	166
   160  0002F1  93                 	db	147
   161  0002F2  7F                 	db	127
   162  0002F3  6A                 	db	106
   163  0002F4  53                 	db	83
   164  0002F5  3C                 	db	60
   165  0002F6  24                 	db	36
   166  0002F7  0C                 	db	12
   167  0002F8  0C                 	db	12
   168  0002F9  24                 	db	36
   169  0002FA  3C                 	db	60
   170  0002FB  53                 	db	83
   171  0002FC  6A                 	db	106
   172  0002FD  7F                 	db	127
   173  0002FE  93                 	db	147
   174  0002FF  A6                 	db	166
   175  000300  B8                 	db	184
   176  000301  C8                 	db	200
   177  000302  D6                 	db	214
   178  000303  E2                 	db	226
   179  000304  EC                 	db	236
   180  000305  F4                 	db	244
   181  000306  FA                 	db	250
   182  000307  FE                 	db	254
   183  000308  FE                 	db	254
   184  000309  FA                 	db	250
   185  00030A  F4                 	db	244
   186  00030B  EC                 	db	236
   187  00030C  E2                 	db	226
   188  00030D  D6                 	db	214
   189  00030E  C8                 	db	200
   190  00030F  B8                 	db	184
   191  000310  A6                 	db	166
   192  000311  93                 	db	147
   193  000312  7F                 	db	127
   194  000313  6A                 	db	106
   195  000314  53                 	db	83
   196  000315  3C                 	db	60
   197  000316  24                 	db	36
   198  000317  0C                 	db	12
   199  000318  0C                 	db	12
   200  000319  24                 	db	36
   201  00031A  3C                 	db	60
   202  00031B  53                 	db	83
   203  00031C  6A                 	db	106
   204  00031D  7F                 	db	127
   205  00031E  93                 	db	147
   206  00031F  A6                 	db	166
   207  000320  B8                 	db	184
   208  000321  C8                 	db	200
   209  000322  D6                 	db	214
   210  000323  E2                 	db	226
   211  000324  EC                 	db	236
   212  000325  F4                 	db	244
   213  000326  FA                 	db	250
   214  000327  FE                 	db	254
   215                           
   216                           	psect	nvCOMRAM
   217  000022                     __pnvCOMRAM:
   218                           	opt stack 0
   219  000022                     _TMR2_InterruptHandler:
   220                           	opt stack 0
   221  000022                     	ds	2
   222  000024                     _TMR6_InterruptHandler:
   223                           	opt stack 0
   224  000024                     	ds	2
   225  000026                     _EstadoActual:
   226                           	opt stack 0
   227  000026                     	ds	1
   228  0000                     _CCPTMRS0bits	set	3913
   229  0000                     _ANSELA	set	3896
   230  0000                     _ANSELE	set	3900
   231  0000                     _ANSELD	set	3899
   232  0000                     _ANSELB	set	3897
   233  0000                     _ANSELC	set	3898
   234  0000                     _CCPR5H	set	3926
   235  0000                     _CCPR5L	set	3925
   236  0000                     _CCP5CON	set	3924
   237  0000                     _T6CONbits	set	3914
   238  0000                     _TMR6	set	3916
   239  0000                     _PR6	set	3915
   240  0000                     _T6CON	set	3914
   241  0000                     _LATDbits	set	3980
   242  0000                     _LATCbits	set	3979
   243  0000                     _LATBbits	set	3978
   244  0000                     _TXREG1	set	4013
   245  0000                     _RCREG1	set	4014
   246  0000                     _RCSTA1bits	set	4011
   247  0000                     _SPBRGH1	set	4016
   248  0000                     _SPBRG1	set	4015
   249  0000                     _TXSTA1	set	4012
   250  0000                     _RCSTA1	set	4011
   251  0000                     _BAUDCON1	set	4024
   252  0000                     _OSCTUNE	set	3995
   253  0000                     _OSCCON2	set	4050
   254  0000                     _OSCCON	set	4051
   255  0000                     _INTCONbits	set	4082
   256  0000                     _RCONbits	set	4048
   257  0000                     _ADCON0bits	set	4034
   258  0000                     _ADRESH	set	4036
   259  0000                     _ADRESL	set	4035
   260  0000                     _ADCON2	set	4032
   261  0000                     _ADCON1	set	4033
   262  0000                     _ADCON0	set	4034
   263  0000                     _CCPR1H	set	4031
   264  0000                     _CCPR1L	set	4030
   265  0000                     _PSTR1CON	set	4025
   266  0000                     _PWM1CON	set	4023
   267  0000                     _ECCP1AS	set	4022
   268  0000                     _CCP1CON	set	4029
   269  0000                     _CCPR2H	set	3944
   270  0000                     _CCPR2L	set	3943
   271  0000                     _PSTR2CON	set	3939
   272  0000                     _PWM2CON	set	3941
   273  0000                     _ECCP2AS	set	3940
   274  0000                     _CCP2CON	set	3942
   275  0000                     _INTCON2bits	set	4081
   276  0000                     _WPUB	set	3937
   277  0000                     _TRISD	set	3989
   278  0000                     _TRISC	set	3988
   279  0000                     _TRISB	set	3987
   280  0000                     _TRISA	set	3986
   281  0000                     _TRISE	set	3990
   282  0000                     _LATC	set	3979
   283  0000                     _LATB	set	3978
   284  0000                     _LATA	set	3977
   285  0000                     _LATD	set	3980
   286  0000                     _LATE	set	3981
   287  0000                     _T2CONbits	set	4026
   288  0000                     _PIE1bits	set	3997
   289  0000                     _PIR1bits	set	3998
   290  0000                     _TMR2	set	4028
   291  0000                     _PR2	set	4027
   292  0000                     _T2CON	set	4026
   293  0000                     _PIE5bits	set	3965
   294  0000                     _PIR5bits	set	3966
   295                           
   296                           ; #config settings
   297  0000                     
   298                           	psect	cinit
   299  0003C0                     __pcinit:
   300                           	opt stack 0
   301  0003C0                     start_initialization:
   302                           	opt stack 0
   303  0003C0                     __initialization:
   304                           	opt stack 0
   305                           
   306                           ; Initialize objects allocated to BANK0 (128 bytes)
   307                           ; load TBLPTR registers with __pidataBANK0
   308  0003C0  0EA8               	movlw	low __pidataBANK0
   309  0003C2  6EF6               	movwf	tblptrl,c
   310  0003C4  0E02               	movlw	high __pidataBANK0
   311  0003C6  6EF7               	movwf	tblptrh,c
   312  0003C8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   313  0003CA  6EF8               	movwf	tblptru,c
   314  0003CC  EE00  F060         	lfsr	0,__pdataBANK0
   315  0003D0  EE10 F080          	lfsr	1,128
   316  0003D4                     copy_data0:
   317  0003D4  0009               	tblrd		*+
   318  0003D6  CFF5 FFEE          	movff	tablat,postinc0
   319  0003DA  50E5               	movf	postdec1,w,c
   320  0003DC  50E1               	movf	fsr1l,w,c
   321  0003DE  E1FA               	bnz	copy_data0
   322                           
   323                           ; Clear objects allocated to COMRAM (9 bytes)
   324  0003E0  EE00  F019         	lfsr	0,__pbssCOMRAM
   325  0003E4  0E09               	movlw	9
   326  0003E6                     clear_0:
   327  0003E6  6AEE               	clrf	postinc0,c
   328  0003E8  06E8               	decf	wreg,f,c
   329  0003EA  E1FD               	bnz	clear_0
   330  0003EC                     end_of_initialization:
   331                           	opt stack 0
   332  0003EC                     __end_of__initialization:
   333                           	opt stack 0
   334  0003EC  9027               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   335  0003EE  9227               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   336  0003F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   337  0003F2  6EF8               	movwf	tblptru,c
   338  0003F4  0100               	movlb	0
   339  0003F6  EFAE  F002         	goto	_main	;jump to C main() function
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           tblptrl	equ	0xFF6
   343                           tablat	equ	0xFF5
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           postdec1	equ	0xFE5
   347                           fsr1l	equ	0xFE1
   348                           
   349                           	psect	bssCOMRAM
   350  000019                     __pbssCOMRAM:
   351                           	opt stack 0
   352  000019                     _Timer2Tick_count:
   353                           	opt stack 0
   354  000019                     	ds	2
   355  00001B                     _StepCount:
   356                           	opt stack 0
   357  00001B                     	ds	2
   358  00001D                     TMR2_ISR@CountCallBack:
   359                           	opt stack 0
   360  00001D                     	ds	2
   361  00001F                     	ds	1
   362  000020                     _Microstep:
   363                           	opt stack 0
   364  000020                     	ds	1
   365  000021                     _Timer2Ticked:
   366                           	opt stack 0
   367  000021                     	ds	1
   368                           tblptru	equ	0xFF8
   369                           tblptrh	equ	0xFF7
   370                           tblptrl	equ	0xFF6
   371                           tablat	equ	0xFF5
   372                           postinc0	equ	0xFEE
   373                           wreg	equ	0xFE8
   374                           postdec1	equ	0xFE5
   375                           fsr1l	equ	0xFE1
   376                           
   377                           	psect	dataBANK0
   378  000060                     __pdataBANK0:
   379                           	opt stack 0
   380  000060                     _LookUP_TABLE_SEN:
   381                           	opt stack 0
   382  000060                     	ds	64
   383  0000A0                     _LookUP_TABLE_COS:
   384                           	opt stack 0
   385  0000A0                     	ds	64
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	cstackCOMRAM
   396  000001                     __pcstackCOMRAM:
   397                           	opt stack 0
   398  000001                     ??_INTERRUPT_InterruptManager:
   399  000001                     
   400                           ; 1 bytes @ 0x0
   401  000001                     	ds	14
   402  00000F                     EUSART1_Write@txData:
   403                           	opt stack 0
   404  00000F                     TMR6_SetInterruptHandler@InterruptHandler:
   405                           	opt stack 0
   406  00000F                     TMR2_SetInterruptHandler@InterruptHandler:
   407                           	opt stack 0
   408  00000F                     EPWM2_LoadDutyValue@dutyValue:
   409                           	opt stack 0
   410  00000F                     EPWM1_LoadDutyValue@dutyValue:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0xE
   414  00000F                     	ds	2
   415  000011                     ??_EPWM2_LoadDutyValue:
   416  000011                     ??_EPWM1_LoadDutyValue:
   417  000011                     
   418                           ; 1 bytes @ 0x10
   419  000011                     	ds	2
   420  000013                     ??_StateMEF_act:
   421                           
   422                           ; 1 bytes @ 0x12
   423  000013                     	ds	1
   424  000014                     StepMove@StepNumber:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x13
   428  000014                     	ds	2
   429  000016                     StepMove@Velocidad:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x15
   433  000016                     	ds	1
   434  000017                     ??_StepMove:
   435                           
   436                           ; 1 bytes @ 0x16
   437  000017                     	ds	2
   438  000019                     tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           postdec1	equ	0xFE5
   445                           fsr1l	equ	0xFE1
   446                           
   447                           ; 1 bytes @ 0x18
   448 ;;
   449 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   450 ;;
   451 ;; *************** function _main *****************
   452 ;; Defined at:
   453 ;;		line 17 in file "main.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;Total ram usage:        0 bytes
   472 ;; Hardware stack levels required when called:    7
   473 ;; This function calls:
   474 ;;		_SYSTEM_Initialize
   475 ;;		_StateMEF_ini
   476 ;;		_StepMove
   477 ;; This function is called by:
   478 ;;		Startup code after reset
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	text0
   483  00055C                     __ptext0:
   484                           	opt stack 0
   485  00055C                     _main:
   486                           	opt stack 24
   487                           
   488                           ;main.c: 20: SYSTEM_Initialize();
   489                           
   490                           ;incstack = 0
   491  00055C  EC2D  F002         	call	_SYSTEM_Initialize	;wreg free
   492                           
   493                           ;main.c: 21: StateMEF_ini();
   494  000560  ECFA  F002         	call	_StateMEF_ini	;wreg free
   495                           
   496                           ;main.c: 22: do { LATBbits.LATB6 = 1; } while(0);
   497  000564  8C8A               	bsf	3978,6,c	;volatile
   498                           
   499                           ;main.c: 25: (INTCONbits.GIE = 1);
   500  000566  8EF2               	bsf	intcon,7,c	;volatile
   501                           
   502                           ;main.c: 28: (INTCONbits.PEIE = 1);
   503  000568  8CF2               	bsf	intcon,6,c	;volatile
   504  00056A                     l1534:
   505                           
   506                           ;main.c: 30: {
   507                           ;main.c: 31: StepMove(1400,1);
   508  00056A  0E05               	movlw	5
   509  00056C  6E15               	movwf	StepMove@StepNumber+1,c
   510  00056E  0E78               	movlw	120
   511  000570  6E14               	movwf	StepMove@StepNumber,c
   512  000572  0E01               	movlw	1
   513  000574  6E16               	movwf	StepMove@Velocidad,c
   514  000576  EC94  F001         	call	_StepMove	;wreg free
   515  00057A  D7F7               	goto	l1534
   516  00057C                     __end_of_main:
   517                           	opt stack 0
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           intcon	equ	0xFF2
   523                           postinc0	equ	0xFEE
   524                           wreg	equ	0xFE8
   525                           postdec1	equ	0xFE5
   526                           fsr1l	equ	0xFE1
   527                           
   528 ;; *************** function _StepMove *****************
   529 ;; Defined at:
   530 ;;		line 103 in file "MotorDriver.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;  StepNumber      2   19[COMRAM] unsigned int 
   533 ;;  Velocidad       1   21[COMRAM] unsigned char 
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   545 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;Total ram usage:        5 bytes
   550 ;; Hardware stack levels used:    1
   551 ;; Hardware stack levels required when called:    6
   552 ;; This function calls:
   553 ;;		_StateMEF_act
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text1
   560  000328                     __ptext1:
   561                           	opt stack 0
   562  000328                     _StepMove:
   563                           	opt stack 24
   564                           
   565                           ;MotorDriver.c: 105: if (StepCount<StepNumber)
   566                           
   567                           ;incstack = 0
   568  000328  5014               	movf	StepMove@StepNumber,w,c
   569  00032A  5C1B               	subwf	_StepCount,w,c
   570  00032C  5015               	movf	StepMove@StepNumber+1,w,c
   571  00032E  581C               	subwfb	_StepCount+1,w,c
   572  000330  B0D8               	btfsc	status,0,c
   573  000332  0012               	return	
   574                           
   575                           ;MotorDriver.c: 106: {
   576                           ;MotorDriver.c: 107: if (StepCount < StepNumber)
   577  000334  5014               	movf	StepMove@StepNumber,w,c
   578  000336  5C1B               	subwf	_StepCount,w,c
   579  000338  5015               	movf	StepMove@StepNumber+1,w,c
   580  00033A  581C               	subwfb	_StepCount+1,w,c
   581  00033C  B0D8               	btfsc	status,0,c
   582  00033E  0012               	return	
   583                           
   584                           ;MotorDriver.c: 108: {
   585                           ;MotorDriver.c: 109: if (Timer2Ticked){
   586  000340  5021               	movf	_Timer2Ticked,w,c	;volatile
   587  000342  B4D8               	btfsc	status,2,c
   588  000344  0012               	return	
   589                           
   590                           ;MotorDriver.c: 110: Timer2Tick_count++;
   591  000346  4A19               	infsnz	_Timer2Tick_count,f,c
   592  000348  2A1A               	incf	_Timer2Tick_count+1,f,c
   593                           
   594                           ;MotorDriver.c: 111: if (Timer2Tick_count == Velocidad){
   595  00034A  5016               	movf	StepMove@Velocidad,w,c
   596  00034C  6E17               	movwf	??_StepMove& (0+255),c
   597  00034E  6A18               	clrf	(??_StepMove+1)& (0+255),c
   598  000350  5019               	movf	_Timer2Tick_count,w,c
   599  000352  1817               	xorwf	??_StepMove,w,c
   600  000354  E10C               	bnz	l1522
   601  000356  501A               	movf	_Timer2Tick_count+1,w,c
   602  000358  1818               	xorwf	??_StepMove+1,w,c
   603  00035A  A4D8               	btfss	status,2,c
   604  00035C  D008               	goto	l1522
   605                           
   606                           ;MotorDriver.c: 112: StateMEF_act();
   607  00035E  EC57  F000         	call	_StateMEF_act	;wreg free
   608                           
   609                           ;MotorDriver.c: 113: StepCount++;
   610  000362  4A1B               	infsnz	_StepCount,f,c
   611  000364  2A1C               	incf	_StepCount+1,f,c
   612                           
   613                           ;MotorDriver.c: 114: Timer2Tick_count=0;
   614  000366  0E00               	movlw	0
   615  000368  6E1A               	movwf	_Timer2Tick_count+1,c
   616  00036A  0E00               	movlw	0
   617  00036C  6E19               	movwf	_Timer2Tick_count,c
   618  00036E                     l1522:
   619                           
   620                           ;MotorDriver.c: 115: }
   621                           ;MotorDriver.c: 116: Timer2Ticked = 0;
   622  00036E  0E00               	movlw	0
   623  000370  6E21               	movwf	_Timer2Ticked,c	;volatile
   624  000372  0012               	return	
   625  000374                     __end_of_StepMove:
   626                           	opt stack 0
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           intcon	equ	0xFF2
   632                           postinc0	equ	0xFEE
   633                           wreg	equ	0xFE8
   634                           postdec1	equ	0xFE5
   635                           fsr1l	equ	0xFE1
   636                           status	equ	0xFD8
   637                           
   638 ;; *************** function _StateMEF_act *****************
   639 ;; Defined at:
   640 ;;		line 37 in file "MotorDriver.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;Total ram usage:        1 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    5
   661 ;; This function calls:
   662 ;;		_EPWM1_LoadDutyValue
   663 ;;		_EPWM2_LoadDutyValue
   664 ;;		_EUSART1_Write
   665 ;; This function is called by:
   666 ;;		_StepMove
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text2
   671  0000AE                     __ptext2:
   672                           	opt stack 0
   673  0000AE                     _StateMEF_act:
   674                           	opt stack 24
   675                           
   676                           ;MotorDriver.c: 38: switch(EstadoActual) {
   677                           
   678                           ;incstack = 0
   679  0000AE  D0EB               	goto	l1484
   680  0000B0                     l1384:
   681                           
   682                           ;MotorDriver.c: 40: PSTR1CON = 0x00; PSTR2CON = 0x00;
   683  0000B0  0E00               	movlw	0
   684  0000B2  6EB9               	movwf	4025,c	;volatile
   685  0000B4  0E00               	movlw	0
   686  0000B6  6E63               	movwf	3939,c	;volatile
   687                           
   688                           ;MotorDriver.c: 41: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whil
      +                          e(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
   689  0000B8  948B               	bcf	3979,2,c	;volatile
   690  0000BA  9A8C               	bcf	3980,5,c	;volatile
   691  0000BC  928B               	bcf	3979,1,c	;volatile
   692  0000BE  908B               	bcf	3979,0,c	;volatile
   693                           
   694                           ;MotorDriver.c: 42: EstadoActual = STATE1;
   695  0000C0  0E01               	movlw	1
   696  0000C2  6E26               	movwf	_EstadoActual,c
   697                           
   698                           ;MotorDriver.c: 43: break;
   699  0000C4  0012               	return	
   700  0000C6                     l1394:
   701                           
   702                           ;MotorDriver.c: 45: PSTR1CON = 0x01; PSTR2CON = 0x01;
   703  0000C6  0E01               	movlw	1
   704  0000C8  6EB9               	movwf	4025,c	;volatile
   705  0000CA  0E01               	movlw	1
   706  0000CC  6E63               	movwf	3939,c	;volatile
   707                           
   708                           ;MotorDriver.c: 46: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
   709  0000CE  9A8C               	bcf	3980,5,c	;volatile
   710  0000D0  908B               	bcf	3979,0,c	;volatile
   711                           
   712                           ;MotorDriver.c: 47: if (Microstep<16){
   713  0000D2  5020               	movf	_Microstep,w,c
   714  0000D4  0A80               	xorlw	128
   715  0000D6  0F70               	addlw	-144
   716  0000D8  B0D8               	btfsc	status,0,c
   717  0000DA  0012               	return	
   718                           
   719                           ;MotorDriver.c: 48: EUSART1_Write(Microstep);
   720  0000DC  5020               	movf	_Microstep,w,c
   721  0000DE  ECF4  F002         	call	_EUSART1_Write
   722                           
   723                           ;MotorDriver.c: 49: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   724  0000E2  5020               	movf	_Microstep,w,c
   725  0000E4  0D01               	mullw	1
   726  0000E6  0EA0               	movlw	low _LookUP_TABLE_COS
   727  0000E8  24F3               	addwf	prodl,w,c
   728  0000EA  6ED9               	movwf	fsr2l,c
   729  0000EC  0E00               	movlw	high _LookUP_TABLE_COS
   730  0000EE  20F4               	addwfc	prodh,w,c
   731  0000F0  6EDA               	movwf	fsr2h,c
   732  0000F2  50DF               	movf	indf2,w,c
   733  0000F4  6E13               	movwf	??_StateMEF_act& (0+255),c
   734  0000F6  5013               	movf	??_StateMEF_act,w,c
   735  0000F8  6E0F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   736  0000FA  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   737  0000FC  EC15  F002         	call	_EPWM1_LoadDutyValue	;wreg free
   738                           
   739                           ;MotorDriver.c: 50: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   740  000100  5020               	movf	_Microstep,w,c
   741  000102  0D01               	mullw	1
   742  000104  0E60               	movlw	low _LookUP_TABLE_SEN
   743  000106  24F3               	addwf	prodl,w,c
   744  000108  6ED9               	movwf	fsr2l,c
   745  00010A  0E00               	movlw	high _LookUP_TABLE_SEN
   746  00010C  20F4               	addwfc	prodh,w,c
   747  00010E  6EDA               	movwf	fsr2h,c
   748  000110  50DF               	movf	indf2,w,c
   749  000112  6E13               	movwf	??_StateMEF_act& (0+255),c
   750  000114  5013               	movf	??_StateMEF_act,w,c
   751  000116  6E0F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   752  000118  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   753  00011A  ECFD  F001         	call	_EPWM2_LoadDutyValue	;wreg free
   754                           
   755                           ;MotorDriver.c: 51: if (Microstep==15){
   756  00011E  0E0F               	movlw	15
   757  000120  1820               	xorwf	_Microstep,w,c
   758  000122  A4D8               	btfss	status,2,c
   759  000124  D002               	goto	l1412
   760                           
   761                           ;MotorDriver.c: 52: EstadoActual = STATE2;
   762  000126  0E02               	movlw	2
   763  000128  6E26               	movwf	_EstadoActual,c
   764  00012A                     l1412:
   765                           
   766                           ;MotorDriver.c: 53: }
   767                           ;MotorDriver.c: 54: Microstep++;
   768  00012A  2A20               	incf	_Microstep,f,c
   769                           
   770                           ;MotorDriver.c: 55: }
   771                           ;MotorDriver.c: 56: break;
   772  00012C  0012               	return	
   773  00012E                     l1414:
   774                           
   775                           ;MotorDriver.c: 58: PSTR1CON = 0x02; PSTR2CON = 0x01;
   776  00012E  0E02               	movlw	2
   777  000130  6EB9               	movwf	4025,c	;volatile
   778  000132  0E01               	movlw	1
   779  000134  6E63               	movwf	3939,c	;volatile
   780                           
   781                           ;MotorDriver.c: 59: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
   782  000136  948B               	bcf	3979,2,c	;volatile
   783  000138  908B               	bcf	3979,0,c	;volatile
   784                           
   785                           ;MotorDriver.c: 60: if ((Microstep<32)&&(Microstep>15)){
   786  00013A  5020               	movf	_Microstep,w,c
   787  00013C  0A80               	xorlw	128
   788  00013E  0F60               	addlw	-160
   789  000140  B0D8               	btfsc	status,0,c
   790  000142  0012               	return	
   791  000144  5020               	movf	_Microstep,w,c
   792  000146  0A80               	xorlw	128
   793  000148  0F70               	addlw	-144
   794  00014A  A0D8               	btfss	status,0,c
   795  00014C  0012               	return	
   796                           
   797                           ;MotorDriver.c: 61: EUSART1_Write(Microstep);
   798  00014E  5020               	movf	_Microstep,w,c
   799  000150  ECF4  F002         	call	_EUSART1_Write
   800                           
   801                           ;MotorDriver.c: 62: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   802  000154  5020               	movf	_Microstep,w,c
   803  000156  0D01               	mullw	1
   804  000158  0EA0               	movlw	low _LookUP_TABLE_COS
   805  00015A  24F3               	addwf	prodl,w,c
   806  00015C  6ED9               	movwf	fsr2l,c
   807  00015E  0E00               	movlw	high _LookUP_TABLE_COS
   808  000160  20F4               	addwfc	prodh,w,c
   809  000162  6EDA               	movwf	fsr2h,c
   810  000164  50DF               	movf	indf2,w,c
   811  000166  6E13               	movwf	??_StateMEF_act& (0+255),c
   812  000168  5013               	movf	??_StateMEF_act,w,c
   813  00016A  6E0F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   814  00016C  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   815  00016E  EC15  F002         	call	_EPWM1_LoadDutyValue	;wreg free
   816                           
   817                           ;MotorDriver.c: 63: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   818  000172  5020               	movf	_Microstep,w,c
   819  000174  0D01               	mullw	1
   820  000176  0E60               	movlw	low _LookUP_TABLE_SEN
   821  000178  24F3               	addwf	prodl,w,c
   822  00017A  6ED9               	movwf	fsr2l,c
   823  00017C  0E00               	movlw	high _LookUP_TABLE_SEN
   824  00017E  20F4               	addwfc	prodh,w,c
   825  000180  6EDA               	movwf	fsr2h,c
   826  000182  50DF               	movf	indf2,w,c
   827  000184  6E13               	movwf	??_StateMEF_act& (0+255),c
   828  000186  5013               	movf	??_StateMEF_act,w,c
   829  000188  6E0F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   830  00018A  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   831  00018C  ECFD  F001         	call	_EPWM2_LoadDutyValue	;wreg free
   832                           
   833                           ;MotorDriver.c: 64: if (Microstep==31){
   834  000190  0E1F               	movlw	31
   835  000192  1820               	xorwf	_Microstep,w,c
   836  000194  A4D8               	btfss	status,2,c
   837  000196  D002               	goto	l1434
   838                           
   839                           ;MotorDriver.c: 65: EstadoActual = STATE3;
   840  000198  0E03               	movlw	3
   841  00019A  6E26               	movwf	_EstadoActual,c
   842  00019C                     l1434:
   843                           
   844                           ;MotorDriver.c: 66: }
   845                           ;MotorDriver.c: 67: Microstep++;
   846  00019C  2A20               	incf	_Microstep,f,c
   847                           
   848                           ;MotorDriver.c: 68: }
   849                           ;MotorDriver.c: 69: break;
   850  00019E  0012               	return	
   851  0001A0                     l1436:
   852                           
   853                           ;MotorDriver.c: 71: PSTR1CON = 0x02; PSTR2CON = 0x02;
   854  0001A0  0E02               	movlw	2
   855  0001A2  6EB9               	movwf	4025,c	;volatile
   856  0001A4  0E02               	movlw	2
   857  0001A6  6E63               	movwf	3939,c	;volatile
   858                           
   859                           ;MotorDriver.c: 72: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
   860  0001A8  948B               	bcf	3979,2,c	;volatile
   861  0001AA  928B               	bcf	3979,1,c	;volatile
   862                           
   863                           ;MotorDriver.c: 73: if ((Microstep<48)&&(Microstep>31)){
   864  0001AC  5020               	movf	_Microstep,w,c
   865  0001AE  0A80               	xorlw	128
   866  0001B0  0F50               	addlw	-176
   867  0001B2  B0D8               	btfsc	status,0,c
   868  0001B4  0012               	return	
   869  0001B6  5020               	movf	_Microstep,w,c
   870  0001B8  0A80               	xorlw	128
   871  0001BA  0F60               	addlw	-160
   872  0001BC  A0D8               	btfss	status,0,c
   873  0001BE  0012               	return	
   874                           
   875                           ;MotorDriver.c: 74: EUSART1_Write(Microstep);
   876  0001C0  5020               	movf	_Microstep,w,c
   877  0001C2  ECF4  F002         	call	_EUSART1_Write
   878                           
   879                           ;MotorDriver.c: 75: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   880  0001C6  5020               	movf	_Microstep,w,c
   881  0001C8  0D01               	mullw	1
   882  0001CA  0EA0               	movlw	low _LookUP_TABLE_COS
   883  0001CC  24F3               	addwf	prodl,w,c
   884  0001CE  6ED9               	movwf	fsr2l,c
   885  0001D0  0E00               	movlw	high _LookUP_TABLE_COS
   886  0001D2  20F4               	addwfc	prodh,w,c
   887  0001D4  6EDA               	movwf	fsr2h,c
   888  0001D6  50DF               	movf	indf2,w,c
   889  0001D8  6E13               	movwf	??_StateMEF_act& (0+255),c
   890  0001DA  5013               	movf	??_StateMEF_act,w,c
   891  0001DC  6E0F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   892  0001DE  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   893  0001E0  EC15  F002         	call	_EPWM1_LoadDutyValue	;wreg free
   894                           
   895                           ;MotorDriver.c: 76: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   896  0001E4  5020               	movf	_Microstep,w,c
   897  0001E6  0D01               	mullw	1
   898  0001E8  0E60               	movlw	low _LookUP_TABLE_SEN
   899  0001EA  24F3               	addwf	prodl,w,c
   900  0001EC  6ED9               	movwf	fsr2l,c
   901  0001EE  0E00               	movlw	high _LookUP_TABLE_SEN
   902  0001F0  20F4               	addwfc	prodh,w,c
   903  0001F2  6EDA               	movwf	fsr2h,c
   904  0001F4  50DF               	movf	indf2,w,c
   905  0001F6  6E13               	movwf	??_StateMEF_act& (0+255),c
   906  0001F8  5013               	movf	??_StateMEF_act,w,c
   907  0001FA  6E0F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   908  0001FC  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   909  0001FE  ECFD  F001         	call	_EPWM2_LoadDutyValue	;wreg free
   910                           
   911                           ;MotorDriver.c: 77: if (Microstep==47){
   912  000202  0E2F               	movlw	47
   913  000204  1820               	xorwf	_Microstep,w,c
   914  000206  A4D8               	btfss	status,2,c
   915  000208  D002               	goto	l1456
   916                           
   917                           ;MotorDriver.c: 78: EstadoActual = STATE4;
   918  00020A  0E04               	movlw	4
   919  00020C  6E26               	movwf	_EstadoActual,c
   920  00020E                     l1456:
   921                           
   922                           ;MotorDriver.c: 79: }
   923                           ;MotorDriver.c: 80: Microstep++;
   924  00020E  2A20               	incf	_Microstep,f,c
   925                           
   926                           ;MotorDriver.c: 81: }
   927                           ;MotorDriver.c: 82: break;
   928  000210  0012               	return	
   929  000212                     l1458:
   930                           
   931                           ;MotorDriver.c: 84: PSTR1CON = 0x01; PSTR2CON = 0x02;
   932  000212  0E01               	movlw	1
   933  000214  6EB9               	movwf	4025,c	;volatile
   934  000216  0E02               	movlw	2
   935  000218  6E63               	movwf	3939,c	;volatile
   936                           
   937                           ;MotorDriver.c: 85: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
   938  00021A  9A8C               	bcf	3980,5,c	;volatile
   939  00021C  928B               	bcf	3979,1,c	;volatile
   940                           
   941                           ;MotorDriver.c: 86: if ((Microstep<64)&&(Microstep>47)){
   942  00021E  5020               	movf	_Microstep,w,c
   943  000220  0A80               	xorlw	128
   944  000222  0F40               	addlw	-192
   945  000224  B0D8               	btfsc	status,0,c
   946  000226  0012               	return	
   947  000228  5020               	movf	_Microstep,w,c
   948  00022A  0A80               	xorlw	128
   949  00022C  0F50               	addlw	-176
   950  00022E  A0D8               	btfss	status,0,c
   951  000230  0012               	return	
   952                           
   953                           ;MotorDriver.c: 87: EUSART1_Write(Microstep);
   954  000232  5020               	movf	_Microstep,w,c
   955  000234  ECF4  F002         	call	_EUSART1_Write
   956                           
   957                           ;MotorDriver.c: 88: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   958  000238  5020               	movf	_Microstep,w,c
   959  00023A  0D01               	mullw	1
   960  00023C  0EA0               	movlw	low _LookUP_TABLE_COS
   961  00023E  24F3               	addwf	prodl,w,c
   962  000240  6ED9               	movwf	fsr2l,c
   963  000242  0E00               	movlw	high _LookUP_TABLE_COS
   964  000244  20F4               	addwfc	prodh,w,c
   965  000246  6EDA               	movwf	fsr2h,c
   966  000248  50DF               	movf	indf2,w,c
   967  00024A  6E13               	movwf	??_StateMEF_act& (0+255),c
   968  00024C  5013               	movf	??_StateMEF_act,w,c
   969  00024E  6E0F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   970  000250  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   971  000252  EC15  F002         	call	_EPWM1_LoadDutyValue	;wreg free
   972                           
   973                           ;MotorDriver.c: 89: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   974  000256  5020               	movf	_Microstep,w,c
   975  000258  0D01               	mullw	1
   976  00025A  0E60               	movlw	low _LookUP_TABLE_SEN
   977  00025C  24F3               	addwf	prodl,w,c
   978  00025E  6ED9               	movwf	fsr2l,c
   979  000260  0E00               	movlw	high _LookUP_TABLE_SEN
   980  000262  20F4               	addwfc	prodh,w,c
   981  000264  6EDA               	movwf	fsr2h,c
   982  000266  50DF               	movf	indf2,w,c
   983  000268  6E13               	movwf	??_StateMEF_act& (0+255),c
   984  00026A  5013               	movf	??_StateMEF_act,w,c
   985  00026C  6E0F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   986  00026E  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   987  000270  ECFD  F001         	call	_EPWM2_LoadDutyValue	;wreg free
   988                           
   989                           ;MotorDriver.c: 90: if (Microstep==63){
   990  000274  0E3F               	movlw	63
   991  000276  1820               	xorwf	_Microstep,w,c
   992  000278  A4D8               	btfss	status,2,c
   993  00027A  D003               	goto	l1480
   994                           
   995                           ;MotorDriver.c: 91: EstadoActual = STATE0;
   996  00027C  0E00               	movlw	0
   997  00027E  6E26               	movwf	_EstadoActual,c
   998                           
   999                           ;MotorDriver.c: 92: Microstep=-1;
  1000  000280  6820               	setf	_Microstep,c
  1001  000282                     l1480:
  1002                           
  1003                           ;MotorDriver.c: 93: }
  1004                           ;MotorDriver.c: 94: Microstep++;
  1005  000282  2A20               	incf	_Microstep,f,c
  1006                           
  1007                           ;MotorDriver.c: 100: }
  1008                           
  1009                           ;MotorDriver.c: 99: break;
  1010                           
  1011                           ;MotorDriver.c: 97: default:
  1012                           
  1013                           ;MotorDriver.c: 95: }
  1014                           ;MotorDriver.c: 96: break;
  1015  000284  0012               	return	
  1016  000286                     l1484:
  1017  000286  5026               	movf	_EstadoActual,w,c
  1018                           
  1019                           ; Switch size 1, requested type "space"
  1020                           ; Number of cases is 5, Range of values is 0 to 4
  1021                           ; switch strategies available:
  1022                           ; Name         Instructions Cycles
  1023                           ; simple_byte           16     9 (average)
  1024                           ;	Chosen strategy is simple_byte
  1025  000288  0A00               	xorlw	0	; case 0
  1026  00028A  B4D8               	btfsc	status,2,c
  1027  00028C  D711               	goto	l1384
  1028  00028E  0A01               	xorlw	1	; case 1
  1029  000290  B4D8               	btfsc	status,2,c
  1030  000292  D719               	goto	l1394
  1031  000294  0A03               	xorlw	3	; case 2
  1032  000296  B4D8               	btfsc	status,2,c
  1033  000298  D74A               	goto	l1414
  1034  00029A  0A01               	xorlw	1	; case 3
  1035  00029C  B4D8               	btfsc	status,2,c
  1036  00029E  D780               	goto	l1436
  1037  0002A0  0A07               	xorlw	7	; case 4
  1038  0002A2  A4D8               	btfss	status,2,c
  1039  0002A4  0012               	return	
  1040  0002A6  D7B5               	goto	l1458
  1041  0002A8                     __end_of_StateMEF_act:
  1042                           	opt stack 0
  1043                           tblptru	equ	0xFF8
  1044                           tblptrh	equ	0xFF7
  1045                           tblptrl	equ	0xFF6
  1046                           tablat	equ	0xFF5
  1047                           prodh	equ	0xFF4
  1048                           prodl	equ	0xFF3
  1049                           intcon	equ	0xFF2
  1050                           postinc0	equ	0xFEE
  1051                           wreg	equ	0xFE8
  1052                           postdec1	equ	0xFE5
  1053                           fsr1l	equ	0xFE1
  1054                           indf2	equ	0xFDF
  1055                           fsr2h	equ	0xFDA
  1056                           fsr2l	equ	0xFD9
  1057                           status	equ	0xFD8
  1058                           
  1059 ;; *************** function _EUSART1_Write *****************
  1060 ;; Defined at:
  1061 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  txData          1    wreg     unsigned char 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  txData          1   14[COMRAM] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;Total ram usage:        1 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:    4
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_StateMEF_act
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text3
  1090  0005E8                     __ptext3:
  1091                           	opt stack 0
  1092  0005E8                     _EUSART1_Write:
  1093                           	opt stack 24
  1094                           
  1095                           ;incstack = 0
  1096                           ;EUSART1_Write@txData stored from wreg
  1097  0005E8  6E0F               	movwf	EUSART1_Write@txData,c
  1098  0005EA                     l328:
  1099  0005EA  A89E               	btfss	3998,4,c	;volatile
  1100  0005EC  D7FE               	goto	l328
  1101                           
  1102                           ;eusart1.c: 100: }
  1103                           ;eusart1.c: 102: TXREG1 = txData;
  1104  0005EE  C00F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1105  0005F2  0012               	return		;funcret
  1106  0005F4                     __end_of_EUSART1_Write:
  1107                           	opt stack 0
  1108                           tblptru	equ	0xFF8
  1109                           tblptrh	equ	0xFF7
  1110                           tblptrl	equ	0xFF6
  1111                           tablat	equ	0xFF5
  1112                           prodh	equ	0xFF4
  1113                           prodl	equ	0xFF3
  1114                           intcon	equ	0xFF2
  1115                           postinc0	equ	0xFEE
  1116                           wreg	equ	0xFE8
  1117                           postdec1	equ	0xFE5
  1118                           fsr1l	equ	0xFE1
  1119                           indf2	equ	0xFDF
  1120                           fsr2h	equ	0xFDA
  1121                           fsr2l	equ	0xFD9
  1122                           status	equ	0xFD8
  1123                           
  1124 ;; *************** function _EPWM2_LoadDutyValue *****************
  1125 ;; Defined at:
  1126 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;Total ram usage:        4 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    4
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_StateMEF_act
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text4
  1155  0003FA                     __ptext4:
  1156                           	opt stack 0
  1157  0003FA                     _EPWM2_LoadDutyValue:
  1158                           	opt stack 24
  1159                           
  1160                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  1161                           
  1162                           ;incstack = 0
  1163  0003FA  C00F  F011         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1164  0003FE  C010  F012         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  1165  000402  90D8               	bcf	status,0,c
  1166  000404  3212               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1167  000406  3211               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1168  000408  90D8               	bcf	status,0,c
  1169  00040A  3212               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1170  00040C  3211               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1171  00040E  5011               	movf	??_EPWM2_LoadDutyValue,w,c
  1172  000410  6E67               	movwf	3943,c	;volatile
  1173                           
  1174                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1175  000412  C00F  F011         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1176  000416  0E03               	movlw	3
  1177  000418  1611               	andwf	??_EPWM2_LoadDutyValue,f,c
  1178  00041A  3A11               	swapf	??_EPWM2_LoadDutyValue,f,c
  1179  00041C  0EF0               	movlw	240
  1180  00041E  1611               	andwf	??_EPWM2_LoadDutyValue,f,c
  1181  000420  5066               	movf	3942,w,c	;volatile
  1182  000422  0BCF               	andlw	207
  1183  000424  1011               	iorwf	??_EPWM2_LoadDutyValue,w,c
  1184  000426  6E66               	movwf	3942,c	;volatile
  1185  000428  0012               	return		;funcret
  1186  00042A                     __end_of_EPWM2_LoadDutyValue:
  1187                           	opt stack 0
  1188                           tblptru	equ	0xFF8
  1189                           tblptrh	equ	0xFF7
  1190                           tblptrl	equ	0xFF6
  1191                           tablat	equ	0xFF5
  1192                           prodh	equ	0xFF4
  1193                           prodl	equ	0xFF3
  1194                           intcon	equ	0xFF2
  1195                           postinc0	equ	0xFEE
  1196                           wreg	equ	0xFE8
  1197                           postdec1	equ	0xFE5
  1198                           fsr1l	equ	0xFE1
  1199                           indf2	equ	0xFDF
  1200                           fsr2h	equ	0xFDA
  1201                           fsr2l	equ	0xFD9
  1202                           status	equ	0xFD8
  1203                           
  1204 ;; *************** function _EPWM1_LoadDutyValue *****************
  1205 ;; Defined at:
  1206 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;Total ram usage:        4 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    4
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_StateMEF_act
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text5
  1235  00042A                     __ptext5:
  1236                           	opt stack 0
  1237  00042A                     _EPWM1_LoadDutyValue:
  1238                           	opt stack 24
  1239                           
  1240                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  1241                           
  1242                           ;incstack = 0
  1243  00042A  C00F  F011         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1244  00042E  C010  F012         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  1245  000432  90D8               	bcf	status,0,c
  1246  000434  3212               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1247  000436  3211               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1248  000438  90D8               	bcf	status,0,c
  1249  00043A  3212               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1250  00043C  3211               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1251  00043E  5011               	movf	??_EPWM1_LoadDutyValue,w,c
  1252  000440  6EBE               	movwf	4030,c	;volatile
  1253                           
  1254                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1255  000442  C00F  F011         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1256  000446  0E03               	movlw	3
  1257  000448  1611               	andwf	??_EPWM1_LoadDutyValue,f,c
  1258  00044A  3A11               	swapf	??_EPWM1_LoadDutyValue,f,c
  1259  00044C  0EF0               	movlw	240
  1260  00044E  1611               	andwf	??_EPWM1_LoadDutyValue,f,c
  1261  000450  50BD               	movf	4029,w,c	;volatile
  1262  000452  0BCF               	andlw	207
  1263  000454  1011               	iorwf	??_EPWM1_LoadDutyValue,w,c
  1264  000456  6EBD               	movwf	4029,c	;volatile
  1265  000458  0012               	return		;funcret
  1266  00045A                     __end_of_EPWM1_LoadDutyValue:
  1267                           	opt stack 0
  1268                           tblptru	equ	0xFF8
  1269                           tblptrh	equ	0xFF7
  1270                           tblptrl	equ	0xFF6
  1271                           tablat	equ	0xFF5
  1272                           prodh	equ	0xFF4
  1273                           prodl	equ	0xFF3
  1274                           intcon	equ	0xFF2
  1275                           postinc0	equ	0xFEE
  1276                           wreg	equ	0xFE8
  1277                           postdec1	equ	0xFE5
  1278                           fsr1l	equ	0xFE1
  1279                           indf2	equ	0xFDF
  1280                           fsr2h	equ	0xFDA
  1281                           fsr2l	equ	0xFD9
  1282                           status	equ	0xFD8
  1283                           
  1284 ;; *************** function _StateMEF_ini *****************
  1285 ;; Defined at:
  1286 ;;		line 32 in file "MotorDriver.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;Total ram usage:        0 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    4
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text6
  1315  0005F4                     __ptext6:
  1316                           	opt stack 0
  1317  0005F4                     _StateMEF_ini:
  1318                           	opt stack 26
  1319                           
  1320                           ;MotorDriver.c: 33: EstadoActual = STATE1;
  1321                           
  1322                           ;incstack = 0
  1323  0005F4  0E01               	movlw	1
  1324  0005F6  6E26               	movwf	_EstadoActual,c
  1325                           
  1326                           ;MotorDriver.c: 34: Microstep=0;
  1327  0005F8  0E00               	movlw	0
  1328  0005FA  6E20               	movwf	_Microstep,c
  1329  0005FC  0012               	return		;funcret
  1330  0005FE                     __end_of_StateMEF_ini:
  1331                           	opt stack 0
  1332                           tblptru	equ	0xFF8
  1333                           tblptrh	equ	0xFF7
  1334                           tblptrl	equ	0xFF6
  1335                           tablat	equ	0xFF5
  1336                           prodh	equ	0xFF4
  1337                           prodl	equ	0xFF3
  1338                           intcon	equ	0xFF2
  1339                           postinc0	equ	0xFEE
  1340                           wreg	equ	0xFE8
  1341                           postdec1	equ	0xFE5
  1342                           fsr1l	equ	0xFE1
  1343                           indf2	equ	0xFDF
  1344                           fsr2h	equ	0xFDA
  1345                           fsr2l	equ	0xFD9
  1346                           status	equ	0xFD8
  1347                           
  1348 ;; *************** function _SYSTEM_Initialize *****************
  1349 ;; Defined at:
  1350 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;Total ram usage:        0 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    6
  1371 ;; This function calls:
  1372 ;;		_ADC_Initialize
  1373 ;;		_CCP5_Initialize
  1374 ;;		_EPWM1_Initialize
  1375 ;;		_EPWM2_Initialize
  1376 ;;		_EUSART1_Initialize
  1377 ;;		_INTERRUPT_Initialize
  1378 ;;		_OSCILLATOR_Initialize
  1379 ;;		_PIN_MANAGER_Initialize
  1380 ;;		_TMR2_Initialize
  1381 ;;		_TMR6_Initialize
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text7
  1388  00045A                     __ptext7:
  1389                           	opt stack 0
  1390  00045A                     _SYSTEM_Initialize:
  1391                           	opt stack 24
  1392                           
  1393                           ;mcc.c: 114: INTERRUPT_Initialize();
  1394                           
  1395                           ;incstack = 0
  1396  00045A  EC0E  F003         	call	_INTERRUPT_Initialize	;wreg free
  1397                           
  1398                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1399  00045E  ECBA  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1400                           
  1401                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1402  000462  ECED  F002         	call	_OSCILLATOR_Initialize	;wreg free
  1403                           
  1404                           ;mcc.c: 117: TMR6_Initialize();
  1405  000466  EC42  F002         	call	_TMR6_Initialize	;wreg free
  1406                           
  1407                           ;mcc.c: 118: EPWM2_Initialize();
  1408  00046A  EC56  F002         	call	_EPWM2_Initialize	;wreg free
  1409                           
  1410                           ;mcc.c: 119: CCP5_Initialize();
  1411  00046E  ECE3  F002         	call	_CCP5_Initialize	;wreg free
  1412                           
  1413                           ;mcc.c: 120: ADC_Initialize();
  1414  000472  ECCC  F002         	call	_ADC_Initialize	;wreg free
  1415                           
  1416                           ;mcc.c: 121: EPWM1_Initialize();
  1417  000476  EC68  F002         	call	_EPWM1_Initialize	;wreg free
  1418                           
  1419                           ;mcc.c: 122: TMR2_Initialize();
  1420  00047A  EC8C  F002         	call	_TMR2_Initialize	;wreg free
  1421                           
  1422                           ;mcc.c: 123: EUSART1_Initialize();
  1423  00047E  ECD8  F002         	call	_EUSART1_Initialize	;wreg free
  1424  000482  0012               	return		;funcret
  1425  000484                     __end_of_SYSTEM_Initialize:
  1426                           	opt stack 0
  1427                           tblptru	equ	0xFF8
  1428                           tblptrh	equ	0xFF7
  1429                           tblptrl	equ	0xFF6
  1430                           tablat	equ	0xFF5
  1431                           prodh	equ	0xFF4
  1432                           prodl	equ	0xFF3
  1433                           intcon	equ	0xFF2
  1434                           postinc0	equ	0xFEE
  1435                           wreg	equ	0xFE8
  1436                           postdec1	equ	0xFE5
  1437                           fsr1l	equ	0xFE1
  1438                           indf2	equ	0xFDF
  1439                           fsr2h	equ	0xFDA
  1440                           fsr2l	equ	0xFD9
  1441                           status	equ	0xFD8
  1442                           
  1443 ;; *************** function _TMR6_Initialize *****************
  1444 ;; Defined at:
  1445 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2, status,0, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;Total ram usage:        0 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    5
  1466 ;; This function calls:
  1467 ;;		_TMR6_SetInterruptHandler
  1468 ;;		_TMR6_StartTimer
  1469 ;; This function is called by:
  1470 ;;		_SYSTEM_Initialize
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text8
  1475  000484                     __ptext8:
  1476                           	opt stack 0
  1477  000484                     _TMR6_Initialize:
  1478                           	opt stack 24
  1479                           
  1480                           ;tmr6.c: 68: T6CON = 0x01;
  1481                           
  1482                           ;incstack = 0
  1483  000484  0E01               	movlw	1
  1484  000486  010F               	movlb	15	; () banked
  1485  000488  6F4A               	movwf	74,b	;volatile
  1486                           
  1487                           ;tmr6.c: 71: PR6 = 0x3C;
  1488  00048A  0E3C               	movlw	60
  1489  00048C  010F               	movlb	15	; () banked
  1490  00048E  6F4B               	movwf	75,b	;volatile
  1491                           
  1492                           ;tmr6.c: 74: TMR6 = 0x00;
  1493  000490  0E00               	movlw	0
  1494  000492  010F               	movlb	15	; () banked
  1495  000494  6F4C               	movwf	76,b	;volatile
  1496                           
  1497                           ; BSR set to: 15
  1498                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
  1499  000496  947E               	bcf	3966,2,c	;volatile
  1500                           
  1501                           ; BSR set to: 15
  1502                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
  1503  000498  847D               	bsf	3965,2,c	;volatile
  1504                           
  1505                           ; BSR set to: 15
  1506                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  1507  00049A  0E24               	movlw	low _TMR6_DefaultInterruptHandler
  1508  00049C  6E0F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  1509  00049E  0E06               	movlw	high _TMR6_DefaultInterruptHandler
  1510  0004A0  6E10               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  1511  0004A2  ECFF  F002         	call	_TMR6_SetInterruptHandler	;wreg free
  1512                           
  1513                           ;tmr6.c: 86: TMR6_StartTimer();
  1514  0004A6  EC09  F003         	call	_TMR6_StartTimer	;wreg free
  1515  0004AA  0012               	return		;funcret
  1516  0004AC                     __end_of_TMR6_Initialize:
  1517                           	opt stack 0
  1518                           tblptru	equ	0xFF8
  1519                           tblptrh	equ	0xFF7
  1520                           tblptrl	equ	0xFF6
  1521                           tablat	equ	0xFF5
  1522                           prodh	equ	0xFF4
  1523                           prodl	equ	0xFF3
  1524                           intcon	equ	0xFF2
  1525                           postinc0	equ	0xFEE
  1526                           wreg	equ	0xFE8
  1527                           postdec1	equ	0xFE5
  1528                           fsr1l	equ	0xFE1
  1529                           indf2	equ	0xFDF
  1530                           fsr2h	equ	0xFDA
  1531                           fsr2l	equ	0xFD9
  1532                           status	equ	0xFD8
  1533                           
  1534 ;; *************** function _TMR6_StartTimer *****************
  1535 ;; Defined at:
  1536 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		None
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    4
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_TMR6_Initialize
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text9
  1565  000612                     __ptext9:
  1566                           	opt stack 0
  1567  000612                     _TMR6_StartTimer:
  1568                           	opt stack 24
  1569                           
  1570                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  1571                           
  1572                           ;incstack = 0
  1573  000612  010F               	movlb	15	; () banked
  1574  000614  854A               	bsf	74,2,b	;volatile
  1575                           
  1576                           ; BSR set to: 15
  1577  000616  0012               	return		;funcret
  1578  000618                     __end_of_TMR6_StartTimer:
  1579                           	opt stack 0
  1580                           tblptru	equ	0xFF8
  1581                           tblptrh	equ	0xFF7
  1582                           tblptrl	equ	0xFF6
  1583                           tablat	equ	0xFF5
  1584                           prodh	equ	0xFF4
  1585                           prodl	equ	0xFF3
  1586                           intcon	equ	0xFF2
  1587                           postinc0	equ	0xFEE
  1588                           wreg	equ	0xFE8
  1589                           postdec1	equ	0xFE5
  1590                           fsr1l	equ	0xFE1
  1591                           indf2	equ	0xFDF
  1592                           fsr2h	equ	0xFDA
  1593                           fsr2l	equ	0xFD9
  1594                           status	equ	0xFD8
  1595                           
  1596 ;; *************** function _TMR6_SetInterruptHandler *****************
  1597 ;; Defined at:
  1598 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1601 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, status,2, status,0
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;Total ram usage:        2 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    4
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_TMR6_Initialize
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text10
  1628  0005FE                     __ptext10:
  1629                           	opt stack 0
  1630  0005FE                     _TMR6_SetInterruptHandler:
  1631                           	opt stack 24
  1632                           
  1633                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  1634                           
  1635                           ; BSR set to: 15
  1636                           ;incstack = 0
  1637  0005FE  C00F  F024         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  1638  000602  C010  F025         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  1639  000606  0012               	return		;funcret
  1640  000608                     __end_of_TMR6_SetInterruptHandler:
  1641                           	opt stack 0
  1642                           tblptru	equ	0xFF8
  1643                           tblptrh	equ	0xFF7
  1644                           tblptrl	equ	0xFF6
  1645                           tablat	equ	0xFF5
  1646                           prodh	equ	0xFF4
  1647                           prodl	equ	0xFF3
  1648                           intcon	equ	0xFF2
  1649                           postinc0	equ	0xFEE
  1650                           wreg	equ	0xFE8
  1651                           postdec1	equ	0xFE5
  1652                           fsr1l	equ	0xFE1
  1653                           indf2	equ	0xFDF
  1654                           fsr2h	equ	0xFDA
  1655                           fsr2l	equ	0xFD9
  1656                           status	equ	0xFD8
  1657                           
  1658 ;; *************** function _TMR2_Initialize *****************
  1659 ;; Defined at:
  1660 ;;		line 18 in file "mcc_generated_files/tmr2.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;Total ram usage:        0 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    5
  1681 ;; This function calls:
  1682 ;;		_TMR2_SetInterruptHandler
  1683 ;;		_TMR2_StartTimer
  1684 ;; This function is called by:
  1685 ;;		_SYSTEM_Initialize
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text11
  1690  000518                     __ptext11:
  1691                           	opt stack 0
  1692  000518                     _TMR2_Initialize:
  1693                           	opt stack 24
  1694                           
  1695                           ;tmr2.c: 23: T2CON = 0x02;
  1696                           
  1697                           ;incstack = 0
  1698  000518  0E02               	movlw	2
  1699  00051A  6EBA               	movwf	4026,c	;volatile
  1700                           
  1701                           ;tmr2.c: 26: PR2 = 0x12;
  1702  00051C  0E12               	movlw	18
  1703  00051E  6EBB               	movwf	4027,c	;volatile
  1704                           
  1705                           ;tmr2.c: 29: TMR2 = 0x00;
  1706  000520  0E00               	movlw	0
  1707  000522  6EBC               	movwf	4028,c	;volatile
  1708                           
  1709                           ;tmr2.c: 32: PIR1bits.TMR2IF = 0;
  1710  000524  929E               	bcf	3998,1,c	;volatile
  1711                           
  1712                           ;tmr2.c: 35: PIE1bits.TMR2IE = 1;
  1713  000526  829D               	bsf	3997,1,c	;volatile
  1714                           
  1715                           ;tmr2.c: 38: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  1716  000528  0E26               	movlw	low _TMR2_DefaultInterruptHandler
  1717  00052A  6E0F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  1718  00052C  0E06               	movlw	high _TMR2_DefaultInterruptHandler
  1719  00052E  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  1720  000530  EC04  F003         	call	_TMR2_SetInterruptHandler	;wreg free
  1721                           
  1722                           ;tmr2.c: 41: TMR2_StartTimer();
  1723  000534  EC0C  F003         	call	_TMR2_StartTimer	;wreg free
  1724  000538  0012               	return		;funcret
  1725  00053A                     __end_of_TMR2_Initialize:
  1726                           	opt stack 0
  1727                           tblptru	equ	0xFF8
  1728                           tblptrh	equ	0xFF7
  1729                           tblptrl	equ	0xFF6
  1730                           tablat	equ	0xFF5
  1731                           prodh	equ	0xFF4
  1732                           prodl	equ	0xFF3
  1733                           intcon	equ	0xFF2
  1734                           postinc0	equ	0xFEE
  1735                           wreg	equ	0xFE8
  1736                           postdec1	equ	0xFE5
  1737                           fsr1l	equ	0xFE1
  1738                           indf2	equ	0xFDF
  1739                           fsr2h	equ	0xFDA
  1740                           fsr2l	equ	0xFD9
  1741                           status	equ	0xFD8
  1742                           
  1743 ;; *************** function _TMR2_StartTimer *****************
  1744 ;; Defined at:
  1745 ;;		line 44 in file "mcc_generated_files/tmr2.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;		None
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;		None
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		None
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;Total ram usage:        0 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    4
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_TMR2_Initialize
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text12
  1774  000618                     __ptext12:
  1775                           	opt stack 0
  1776  000618                     _TMR2_StartTimer:
  1777                           	opt stack 24
  1778                           
  1779                           ;tmr2.c: 47: T2CONbits.TMR2ON = 1;
  1780                           
  1781                           ;incstack = 0
  1782  000618  84BA               	bsf	4026,2,c	;volatile
  1783  00061A  0012               	return		;funcret
  1784  00061C                     __end_of_TMR2_StartTimer:
  1785                           	opt stack 0
  1786                           tblptru	equ	0xFF8
  1787                           tblptrh	equ	0xFF7
  1788                           tblptrl	equ	0xFF6
  1789                           tablat	equ	0xFF5
  1790                           prodh	equ	0xFF4
  1791                           prodl	equ	0xFF3
  1792                           intcon	equ	0xFF2
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           postdec1	equ	0xFE5
  1796                           fsr1l	equ	0xFE1
  1797                           indf2	equ	0xFDF
  1798                           fsr2h	equ	0xFDA
  1799                           fsr2l	equ	0xFD9
  1800                           status	equ	0xFD8
  1801                           
  1802 ;; *************** function _TMR2_SetInterruptHandler *****************
  1803 ;; Defined at:
  1804 ;;		line 105 in file "mcc_generated_files/tmr2.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1807 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;Total ram usage:        2 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    4
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_TMR2_Initialize
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text13
  1834  000608                     __ptext13:
  1835                           	opt stack 0
  1836  000608                     _TMR2_SetInterruptHandler:
  1837                           	opt stack 24
  1838                           
  1839                           ;tmr2.c: 106: TMR2_InterruptHandler = InterruptHandler;
  1840                           
  1841                           ;incstack = 0
  1842  000608  C00F  F022         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1843  00060C  C010  F023         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1844  000610  0012               	return		;funcret
  1845  000612                     __end_of_TMR2_SetInterruptHandler:
  1846                           	opt stack 0
  1847                           tblptru	equ	0xFF8
  1848                           tblptrh	equ	0xFF7
  1849                           tblptrl	equ	0xFF6
  1850                           tablat	equ	0xFF5
  1851                           prodh	equ	0xFF4
  1852                           prodl	equ	0xFF3
  1853                           intcon	equ	0xFF2
  1854                           postinc0	equ	0xFEE
  1855                           wreg	equ	0xFE8
  1856                           postdec1	equ	0xFE5
  1857                           fsr1l	equ	0xFE1
  1858                           indf2	equ	0xFDF
  1859                           fsr2h	equ	0xFDA
  1860                           fsr2l	equ	0xFD9
  1861                           status	equ	0xFD8
  1862                           
  1863 ;; *************** function _PIN_MANAGER_Initialize *****************
  1864 ;; Defined at:
  1865 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    4
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_SYSTEM_Initialize
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text14
  1894  000374                     __ptext14:
  1895                           	opt stack 0
  1896  000374                     _PIN_MANAGER_Initialize:
  1897                           	opt stack 25
  1898                           
  1899                           ;pin_manager.c: 56: LATE = 0x00;
  1900                           
  1901                           ;incstack = 0
  1902  000374  0E00               	movlw	0
  1903  000376  6E8D               	movwf	3981,c	;volatile
  1904                           
  1905                           ;pin_manager.c: 57: LATD = 0x00;
  1906  000378  0E00               	movlw	0
  1907  00037A  6E8C               	movwf	3980,c	;volatile
  1908                           
  1909                           ;pin_manager.c: 58: LATA = 0x00;
  1910  00037C  0E00               	movlw	0
  1911  00037E  6E89               	movwf	3977,c	;volatile
  1912                           
  1913                           ;pin_manager.c: 59: LATB = 0x00;
  1914  000380  0E00               	movlw	0
  1915  000382  6E8A               	movwf	3978,c	;volatile
  1916                           
  1917                           ;pin_manager.c: 60: LATC = 0x00;
  1918  000384  0E00               	movlw	0
  1919  000386  6E8B               	movwf	3979,c	;volatile
  1920                           
  1921                           ;pin_manager.c: 65: TRISE = 0x07;
  1922  000388  0E07               	movlw	7
  1923  00038A  6E96               	movwf	3990,c	;volatile
  1924                           
  1925                           ;pin_manager.c: 66: TRISA = 0xEB;
  1926  00038C  0EEB               	movlw	235
  1927  00038E  6E92               	movwf	3986,c	;volatile
  1928                           
  1929                           ;pin_manager.c: 67: TRISB = 0xBF;
  1930  000390  0EBF               	movlw	191
  1931  000392  6E93               	movwf	3987,c	;volatile
  1932                           
  1933                           ;pin_manager.c: 68: TRISC = 0xB8;
  1934  000394  0EB8               	movlw	184
  1935  000396  6E94               	movwf	3988,c	;volatile
  1936                           
  1937                           ;pin_manager.c: 69: TRISD = 0xDF;
  1938  000398  0EDF               	movlw	223
  1939  00039A  6E95               	movwf	3989,c	;volatile
  1940                           
  1941                           ;pin_manager.c: 74: ANSELC = 0x38;
  1942  00039C  0E38               	movlw	56
  1943  00039E  010F               	movlb	15	; () banked
  1944  0003A0  6F3A               	movwf	58,b	;volatile
  1945                           
  1946                           ;pin_manager.c: 75: ANSELB = 0x3E;
  1947  0003A2  0E3E               	movlw	62
  1948  0003A4  010F               	movlb	15	; () banked
  1949  0003A6  6F39               	movwf	57,b	;volatile
  1950                           
  1951                           ;pin_manager.c: 76: ANSELD = 0xDF;
  1952  0003A8  0EDF               	movlw	223
  1953  0003AA  010F               	movlb	15	; () banked
  1954  0003AC  6F3B               	movwf	59,b	;volatile
  1955                           
  1956                           ;pin_manager.c: 77: ANSELE = 0x03;
  1957  0003AE  0E03               	movlw	3
  1958  0003B0  010F               	movlb	15	; () banked
  1959  0003B2  6F3C               	movwf	60,b	;volatile
  1960                           
  1961                           ;pin_manager.c: 78: ANSELA = 0x2B;
  1962  0003B4  0E2B               	movlw	43
  1963  0003B6  010F               	movlb	15	; () banked
  1964  0003B8  6F38               	movwf	56,b	;volatile
  1965                           
  1966                           ; BSR set to: 15
  1967                           ;pin_manager.c: 83: WPUB = 0xFF;
  1968  0003BA  6861               	setf	3937,c	;volatile
  1969                           
  1970                           ; BSR set to: 15
  1971                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1972  0003BC  9EF1               	bcf	intcon2,7,c	;volatile
  1973                           
  1974                           ; BSR set to: 15
  1975  0003BE  0012               	return		;funcret
  1976  0003C0                     __end_of_PIN_MANAGER_Initialize:
  1977                           	opt stack 0
  1978                           tblptru	equ	0xFF8
  1979                           tblptrh	equ	0xFF7
  1980                           tblptrl	equ	0xFF6
  1981                           tablat	equ	0xFF5
  1982                           prodh	equ	0xFF4
  1983                           prodl	equ	0xFF3
  1984                           intcon	equ	0xFF2
  1985                           intcon2	equ	0xFF1
  1986                           postinc0	equ	0xFEE
  1987                           wreg	equ	0xFE8
  1988                           postdec1	equ	0xFE5
  1989                           fsr1l	equ	0xFE1
  1990                           indf2	equ	0xFDF
  1991                           fsr2h	equ	0xFDA
  1992                           fsr2l	equ	0xFD9
  1993                           status	equ	0xFD8
  1994                           
  1995 ;; *************** function _OSCILLATOR_Initialize *****************
  1996 ;; Defined at:
  1997 ;;		line 126 in file "mcc_generated_files/mcc.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    4
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_SYSTEM_Initialize
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text15
  2026  0005DA                     __ptext15:
  2027                           	opt stack 0
  2028  0005DA                     _OSCILLATOR_Initialize:
  2029                           	opt stack 25
  2030                           
  2031                           ;mcc.c: 129: OSCCON = 0x70;
  2032                           
  2033                           ; BSR set to: 15
  2034                           ;incstack = 0
  2035  0005DA  0E70               	movlw	112
  2036  0005DC  6ED3               	movwf	4051,c	;volatile
  2037                           
  2038                           ;mcc.c: 131: OSCCON2 = 0x04;
  2039  0005DE  0E04               	movlw	4
  2040  0005E0  6ED2               	movwf	4050,c	;volatile
  2041                           
  2042                           ;mcc.c: 133: OSCTUNE = 0x00;
  2043  0005E2  0E00               	movlw	0
  2044  0005E4  6E9B               	movwf	3995,c	;volatile
  2045  0005E6  0012               	return		;funcret
  2046  0005E8                     __end_of_OSCILLATOR_Initialize:
  2047                           	opt stack 0
  2048                           tblptru	equ	0xFF8
  2049                           tblptrh	equ	0xFF7
  2050                           tblptrl	equ	0xFF6
  2051                           tablat	equ	0xFF5
  2052                           prodh	equ	0xFF4
  2053                           prodl	equ	0xFF3
  2054                           intcon	equ	0xFF2
  2055                           intcon2	equ	0xFF1
  2056                           postinc0	equ	0xFEE
  2057                           wreg	equ	0xFE8
  2058                           postdec1	equ	0xFE5
  2059                           fsr1l	equ	0xFE1
  2060                           indf2	equ	0xFDF
  2061                           fsr2h	equ	0xFDA
  2062                           fsr2l	equ	0xFD9
  2063                           status	equ	0xFD8
  2064                           
  2065 ;; *************** function _INTERRUPT_Initialize *****************
  2066 ;; Defined at:
  2067 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		None
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;Total ram usage:        0 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    4
  2088 ;; This function calls:
  2089 ;;		Nothing
  2090 ;; This function is called by:
  2091 ;;		_SYSTEM_Initialize
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text16
  2096  00061C                     __ptext16:
  2097                           	opt stack 0
  2098  00061C                     _INTERRUPT_Initialize:
  2099                           	opt stack 25
  2100                           
  2101                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2102                           
  2103                           ;incstack = 0
  2104  00061C  9ED0               	bcf	4048,7,c	;volatile
  2105  00061E  0012               	return		;funcret
  2106  000620                     __end_of_INTERRUPT_Initialize:
  2107                           	opt stack 0
  2108                           tblptru	equ	0xFF8
  2109                           tblptrh	equ	0xFF7
  2110                           tblptrl	equ	0xFF6
  2111                           tablat	equ	0xFF5
  2112                           prodh	equ	0xFF4
  2113                           prodl	equ	0xFF3
  2114                           intcon	equ	0xFF2
  2115                           intcon2	equ	0xFF1
  2116                           postinc0	equ	0xFEE
  2117                           wreg	equ	0xFE8
  2118                           postdec1	equ	0xFE5
  2119                           fsr1l	equ	0xFE1
  2120                           indf2	equ	0xFDF
  2121                           fsr2h	equ	0xFDA
  2122                           fsr2l	equ	0xFD9
  2123                           status	equ	0xFD8
  2124                           
  2125 ;; *************** function _EUSART1_Initialize *****************
  2126 ;; Defined at:
  2127 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;Total ram usage:        0 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    4
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_SYSTEM_Initialize
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text17
  2156  0005B0                     __ptext17:
  2157                           	opt stack 0
  2158  0005B0                     _EUSART1_Initialize:
  2159                           	opt stack 25
  2160                           
  2161                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  2162                           
  2163                           ;incstack = 0
  2164  0005B0  0E08               	movlw	8
  2165  0005B2  6EB8               	movwf	4024,c	;volatile
  2166                           
  2167                           ;eusart1.c: 63: RCSTA1 = 0x90;
  2168  0005B4  0E90               	movlw	144
  2169  0005B6  6EAB               	movwf	4011,c	;volatile
  2170                           
  2171                           ;eusart1.c: 66: TXSTA1 = 0x24;
  2172  0005B8  0E24               	movlw	36
  2173  0005BA  6EAC               	movwf	4012,c	;volatile
  2174                           
  2175                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  2176  0005BC  0EA0               	movlw	160
  2177  0005BE  6EAF               	movwf	4015,c	;volatile
  2178                           
  2179                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  2180  0005C0  0E01               	movlw	1
  2181  0005C2  6EB0               	movwf	4016,c	;volatile
  2182  0005C4  0012               	return		;funcret
  2183  0005C6                     __end_of_EUSART1_Initialize:
  2184                           	opt stack 0
  2185                           tblptru	equ	0xFF8
  2186                           tblptrh	equ	0xFF7
  2187                           tblptrl	equ	0xFF6
  2188                           tablat	equ	0xFF5
  2189                           prodh	equ	0xFF4
  2190                           prodl	equ	0xFF3
  2191                           intcon	equ	0xFF2
  2192                           intcon2	equ	0xFF1
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           postdec1	equ	0xFE5
  2196                           fsr1l	equ	0xFE1
  2197                           indf2	equ	0xFDF
  2198                           fsr2h	equ	0xFDA
  2199                           fsr2l	equ	0xFD9
  2200                           status	equ	0xFD8
  2201                           
  2202 ;; *************** function _EPWM2_Initialize *****************
  2203 ;; Defined at:
  2204 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;Total ram usage:        0 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    4
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_SYSTEM_Initialize
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text18
  2233  0004AC                     __ptext18:
  2234                           	opt stack 0
  2235  0004AC                     _EPWM2_Initialize:
  2236                           	opt stack 25
  2237                           
  2238                           ;epwm2.c: 68: CCP2CON = 0x0C;
  2239                           
  2240                           ;incstack = 0
  2241  0004AC  0E0C               	movlw	12
  2242  0004AE  6E66               	movwf	3942,c	;volatile
  2243                           
  2244                           ;epwm2.c: 71: ECCP2AS = 0x00;
  2245  0004B0  0E00               	movlw	0
  2246  0004B2  6E64               	movwf	3940,c	;volatile
  2247                           
  2248                           ;epwm2.c: 74: PWM2CON = 0x80;
  2249  0004B4  0E80               	movlw	128
  2250  0004B6  6E65               	movwf	3941,c	;volatile
  2251                           
  2252                           ;epwm2.c: 77: PSTR2CON = 0x03;
  2253  0004B8  0E03               	movlw	3
  2254  0004BA  6E63               	movwf	3939,c	;volatile
  2255                           
  2256                           ;epwm2.c: 80: CCPR2L = 0x0C;
  2257  0004BC  0E0C               	movlw	12
  2258  0004BE  6E67               	movwf	3943,c	;volatile
  2259                           
  2260                           ;epwm2.c: 83: CCPR2H = 0x00;
  2261  0004C0  0E00               	movlw	0
  2262  0004C2  6E68               	movwf	3944,c	;volatile
  2263                           
  2264                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  2265  0004C4  010F               	movlb	15	; () banked
  2266  0004C6  5149               	movf	73,w,b	;volatile
  2267  0004C8  0BE7               	andlw	-25
  2268  0004CA  0910               	iorlw	16
  2269  0004CC  6F49               	movwf	73,b	;volatile
  2270                           
  2271                           ; BSR set to: 15
  2272  0004CE  0012               	return		;funcret
  2273  0004D0                     __end_of_EPWM2_Initialize:
  2274                           	opt stack 0
  2275                           tblptru	equ	0xFF8
  2276                           tblptrh	equ	0xFF7
  2277                           tblptrl	equ	0xFF6
  2278                           tablat	equ	0xFF5
  2279                           prodh	equ	0xFF4
  2280                           prodl	equ	0xFF3
  2281                           intcon	equ	0xFF2
  2282                           intcon2	equ	0xFF1
  2283                           postinc0	equ	0xFEE
  2284                           wreg	equ	0xFE8
  2285                           postdec1	equ	0xFE5
  2286                           fsr1l	equ	0xFE1
  2287                           indf2	equ	0xFDF
  2288                           fsr2h	equ	0xFDA
  2289                           fsr2l	equ	0xFD9
  2290                           status	equ	0xFD8
  2291                           
  2292 ;; *************** function _EPWM1_Initialize *****************
  2293 ;; Defined at:
  2294 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;Total ram usage:        0 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    4
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_SYSTEM_Initialize
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text19
  2323  0004D0                     __ptext19:
  2324                           	opt stack 0
  2325  0004D0                     _EPWM1_Initialize:
  2326                           	opt stack 25
  2327                           
  2328                           ;epwm1.c: 68: CCP1CON = 0x0C;
  2329                           
  2330                           ; BSR set to: 15
  2331                           ;incstack = 0
  2332  0004D0  0E0C               	movlw	12
  2333  0004D2  6EBD               	movwf	4029,c	;volatile
  2334                           
  2335                           ;epwm1.c: 71: ECCP1AS = 0x00;
  2336  0004D4  0E00               	movlw	0
  2337  0004D6  6EB6               	movwf	4022,c	;volatile
  2338                           
  2339                           ;epwm1.c: 74: PWM1CON = 0x80;
  2340  0004D8  0E80               	movlw	128
  2341  0004DA  6EB7               	movwf	4023,c	;volatile
  2342                           
  2343                           ;epwm1.c: 77: PSTR1CON = 0x03;
  2344  0004DC  0E03               	movlw	3
  2345  0004DE  6EB9               	movwf	4025,c	;volatile
  2346                           
  2347                           ;epwm1.c: 80: CCPR1L = 0x0C;
  2348  0004E0  0E0C               	movlw	12
  2349  0004E2  6EBE               	movwf	4030,c	;volatile
  2350                           
  2351                           ;epwm1.c: 83: CCPR1H = 0x00;
  2352  0004E4  0E00               	movlw	0
  2353  0004E6  6EBF               	movwf	4031,c	;volatile
  2354                           
  2355                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  2356  0004E8  010F               	movlb	15	; () banked
  2357  0004EA  5149               	movf	73,w,b	;volatile
  2358  0004EC  0BFC               	andlw	-4
  2359  0004EE  0902               	iorlw	2
  2360  0004F0  6F49               	movwf	73,b	;volatile
  2361                           
  2362                           ; BSR set to: 15
  2363  0004F2  0012               	return		;funcret
  2364  0004F4                     __end_of_EPWM1_Initialize:
  2365                           	opt stack 0
  2366                           tblptru	equ	0xFF8
  2367                           tblptrh	equ	0xFF7
  2368                           tblptrl	equ	0xFF6
  2369                           tablat	equ	0xFF5
  2370                           prodh	equ	0xFF4
  2371                           prodl	equ	0xFF3
  2372                           intcon	equ	0xFF2
  2373                           intcon2	equ	0xFF1
  2374                           postinc0	equ	0xFEE
  2375                           wreg	equ	0xFE8
  2376                           postdec1	equ	0xFE5
  2377                           fsr1l	equ	0xFE1
  2378                           indf2	equ	0xFDF
  2379                           fsr2h	equ	0xFDA
  2380                           fsr2l	equ	0xFD9
  2381                           status	equ	0xFD8
  2382                           
  2383 ;; *************** function _CCP5_Initialize *****************
  2384 ;; Defined at:
  2385 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;		None
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, status,2
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2403 ;;Total ram usage:        0 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; Hardware stack levels required when called:    4
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_SYSTEM_Initialize
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text20
  2414  0005C6                     __ptext20:
  2415                           	opt stack 0
  2416  0005C6                     _CCP5_Initialize:
  2417                           	opt stack 25
  2418                           
  2419                           ;ccp5.c: 60: CCP5CON = 0x00;
  2420                           
  2421                           ; BSR set to: 15
  2422                           ;incstack = 0
  2423  0005C6  0E00               	movlw	0
  2424  0005C8  010F               	movlb	15	; () banked
  2425  0005CA  6F54               	movwf	84,b	;volatile
  2426                           
  2427                           ;ccp5.c: 62: CCPR5L = 0x00;
  2428  0005CC  0E00               	movlw	0
  2429  0005CE  010F               	movlb	15	; () banked
  2430  0005D0  6F55               	movwf	85,b	;volatile
  2431                           
  2432                           ;ccp5.c: 64: CCPR5H = 0x00;
  2433  0005D2  0E00               	movlw	0
  2434  0005D4  010F               	movlb	15	; () banked
  2435  0005D6  6F56               	movwf	86,b	;volatile
  2436                           
  2437                           ; BSR set to: 15
  2438  0005D8  0012               	return		;funcret
  2439  0005DA                     __end_of_CCP5_Initialize:
  2440                           	opt stack 0
  2441                           tblptru	equ	0xFF8
  2442                           tblptrh	equ	0xFF7
  2443                           tblptrl	equ	0xFF6
  2444                           tablat	equ	0xFF5
  2445                           prodh	equ	0xFF4
  2446                           prodl	equ	0xFF3
  2447                           intcon	equ	0xFF2
  2448                           intcon2	equ	0xFF1
  2449                           postinc0	equ	0xFEE
  2450                           wreg	equ	0xFE8
  2451                           postdec1	equ	0xFE5
  2452                           fsr1l	equ	0xFE1
  2453                           indf2	equ	0xFDF
  2454                           fsr2h	equ	0xFDA
  2455                           fsr2l	equ	0xFD9
  2456                           status	equ	0xFD8
  2457                           
  2458 ;; *************** function _ADC_Initialize *****************
  2459 ;; Defined at:
  2460 ;;		line 58 in file "mcc_generated_files/adc.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    4
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_SYSTEM_Initialize
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text21
  2489  000598                     __ptext21:
  2490                           	opt stack 0
  2491  000598                     _ADC_Initialize:
  2492                           	opt stack 25
  2493                           
  2494                           ;adc.c: 63: ADCON0 = 0x01;
  2495                           
  2496                           ; BSR set to: 15
  2497                           ;incstack = 0
  2498  000598  0E01               	movlw	1
  2499  00059A  6EC2               	movwf	4034,c	;volatile
  2500                           
  2501                           ;adc.c: 66: ADCON1 = 0x00;
  2502  00059C  0E00               	movlw	0
  2503  00059E  6EC1               	movwf	4033,c	;volatile
  2504                           
  2505                           ;adc.c: 69: ADCON2 = 0x02;
  2506  0005A0  0E02               	movlw	2
  2507  0005A2  6EC0               	movwf	4032,c	;volatile
  2508                           
  2509                           ;adc.c: 72: ADRESL = 0x00;
  2510  0005A4  0E00               	movlw	0
  2511  0005A6  6EC3               	movwf	4035,c	;volatile
  2512                           
  2513                           ;adc.c: 75: ADRESH = 0x00;
  2514  0005A8  0E00               	movlw	0
  2515  0005AA  6EC4               	movwf	4036,c	;volatile
  2516                           
  2517                           ;adc.c: 78: PIE1bits.ADIE = 1;
  2518  0005AC  8C9D               	bsf	3997,6,c	;volatile
  2519  0005AE  0012               	return		;funcret
  2520  0005B0                     __end_of_ADC_Initialize:
  2521                           	opt stack 0
  2522                           tblptru	equ	0xFF8
  2523                           tblptrh	equ	0xFF7
  2524                           tblptrl	equ	0xFF6
  2525                           tablat	equ	0xFF5
  2526                           prodh	equ	0xFF4
  2527                           prodl	equ	0xFF3
  2528                           intcon	equ	0xFF2
  2529                           intcon2	equ	0xFF1
  2530                           postinc0	equ	0xFEE
  2531                           wreg	equ	0xFE8
  2532                           postdec1	equ	0xFE5
  2533                           fsr1l	equ	0xFE1
  2534                           indf2	equ	0xFDF
  2535                           fsr2h	equ	0xFDA
  2536                           fsr2l	equ	0xFD9
  2537                           status	equ	0xFD8
  2538                           
  2539 ;; *************** function _INTERRUPT_InterruptManager *****************
  2540 ;; Defined at:
  2541 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;Total ram usage:       14 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    3
  2562 ;; This function calls:
  2563 ;;		_ADC_ISR
  2564 ;;		_TMR2_ISR
  2565 ;;		_TMR6_ISR
  2566 ;; This function is called by:
  2567 ;;		Interrupt level 2
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	intcode
  2572  000008                     __pintcode:
  2573                           	opt stack 0
  2574  000008                     _INTERRUPT_InterruptManager:
  2575                           	opt stack 24
  2576                           
  2577                           ;incstack = 0
  2578  000008  8227               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2579  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  2580  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2581  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2582  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2583  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2584  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2585  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2586  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2587  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2588  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2589  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2590  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2591  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2592  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2593                           
  2594                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  2595  000042  BCF2               	btfsc	intcon,6,c	;volatile
  2596  000044  AC9D               	btfss	3997,6,c	;volatile
  2597  000046  D005               	goto	i2l259
  2598  000048  AC9E               	btfss	3998,6,c	;volatile
  2599  00004A  D003               	goto	i2l259
  2600                           
  2601                           ;interrupt_manager.c: 61: {
  2602                           ;interrupt_manager.c: 62: ADC_ISR();
  2603  00004C  EC10  F003         	call	_ADC_ISR	;wreg free
  2604                           
  2605                           ;interrupt_manager.c: 63: }
  2606  000050  D00E               	goto	i2l265
  2607  000052                     i2l259:
  2608                           
  2609                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  2610  000052  BCF2               	btfsc	intcon,6,c	;volatile
  2611  000054  A47D               	btfss	3965,2,c	;volatile
  2612  000056  D005               	goto	i2l261
  2613  000058  A47E               	btfss	3966,2,c	;volatile
  2614  00005A  D003               	goto	i2l261
  2615                           
  2616                           ;interrupt_manager.c: 65: {
  2617                           ;interrupt_manager.c: 66: TMR6_ISR();
  2618  00005C  EC9D  F002         	call	_TMR6_ISR	;wreg free
  2619                           
  2620                           ;interrupt_manager.c: 67: }
  2621  000060  D006               	goto	i2l265
  2622  000062                     i2l261:
  2623                           
  2624                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  2625  000062  BCF2               	btfsc	intcon,6,c	;volatile
  2626  000064  A29D               	btfss	3997,1,c	;volatile
  2627  000066  D003               	goto	i2l265
  2628  000068  B29E               	btfsc	3998,1,c	;volatile
  2629                           
  2630                           ;interrupt_manager.c: 69: {
  2631                           ;interrupt_manager.c: 70: TMR2_ISR();
  2632  00006A  ECBE  F002         	call	_TMR2_ISR	;wreg free
  2633  00006E                     i2l265:
  2634  00006E  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2635  000072  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2636  000076  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2637  00007A  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2638  00007E  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2639  000082  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2640  000086  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2641  00008A  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2642  00008E  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2643  000092  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2644  000096  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2645  00009A  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2646  00009E  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2647  0000A2  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2648  0000A6  9227               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2649  0000A8  0011               	retfie		f
  2650  0000AA                     __end_of_INTERRUPT_InterruptManager:
  2651                           	opt stack 0
  2652                           pclatu	equ	0xFFB
  2653                           pclath	equ	0xFFA
  2654                           tblptru	equ	0xFF8
  2655                           tblptrh	equ	0xFF7
  2656                           tblptrl	equ	0xFF6
  2657                           tablat	equ	0xFF5
  2658                           prodh	equ	0xFF4
  2659                           prodl	equ	0xFF3
  2660                           intcon	equ	0xFF2
  2661                           intcon2	equ	0xFF1
  2662                           postinc0	equ	0xFEE
  2663                           fsr0h	equ	0xFEA
  2664                           fsr0l	equ	0xFE9
  2665                           wreg	equ	0xFE8
  2666                           postdec1	equ	0xFE5
  2667                           fsr1h	equ	0xFE2
  2668                           fsr1l	equ	0xFE1
  2669                           indf2	equ	0xFDF
  2670                           fsr2h	equ	0xFDA
  2671                           fsr2l	equ	0xFD9
  2672                           status	equ	0xFD8
  2673                           
  2674 ;; *************** function _TMR6_ISR *****************
  2675 ;; Defined at:
  2676 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;Total ram usage:        0 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    1
  2697 ;; This function calls:
  2698 ;;		Absolute function
  2699 ;;		_TMR6_DefaultInterruptHandler
  2700 ;; This function is called by:
  2701 ;;		_INTERRUPT_InterruptManager
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text23
  2706  00053A                     __ptext23:
  2707                           	opt stack 0
  2708  00053A                     _TMR6_ISR:
  2709                           	opt stack 25
  2710                           
  2711                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  2712                           
  2713                           ;incstack = 0
  2714  00053A  947E               	bcf	3966,2,c	;volatile
  2715                           
  2716                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  2717  00053C  5024               	movf	_TMR6_InterruptHandler,w,c
  2718  00053E  1025               	iorwf	_TMR6_InterruptHandler+1,w,c
  2719  000540  B4D8               	btfsc	status,2,c
  2720  000542  0012               	return	
  2721                           
  2722                           ;tmr6.c: 128: {
  2723                           ;tmr6.c: 129: TMR6_InterruptHandler();
  2724  000544  D801               	call	i2u16_48
  2725  000546  0012               	return	
  2726  000548                     i2u16_48:
  2727  000548  0005               	push	
  2728  00054A  6EFA               	movwf	pclath,c
  2729  00054C  5024               	movf	_TMR6_InterruptHandler,w,c
  2730  00054E  6EFD               	movwf	tosl,c
  2731  000550  5025               	movf	_TMR6_InterruptHandler+1,w,c
  2732  000552  6EFE               	movwf	tosh,c
  2733  000554  50F8               	movf	tblptru,w,c
  2734  000556  6EFF               	movwf	tosu,c
  2735  000558  50FA               	movf	pclath,w,c
  2736  00055A  0012               	return		;indir
  2737  00055C                     __end_of_TMR6_ISR:
  2738                           	opt stack 0
  2739                           tosu	equ	0xFFF
  2740                           tosh	equ	0xFFE
  2741                           tosl	equ	0xFFD
  2742                           pclatu	equ	0xFFB
  2743                           pclath	equ	0xFFA
  2744                           tblptru	equ	0xFF8
  2745                           tblptrh	equ	0xFF7
  2746                           tblptrl	equ	0xFF6
  2747                           tablat	equ	0xFF5
  2748                           prodh	equ	0xFF4
  2749                           prodl	equ	0xFF3
  2750                           intcon	equ	0xFF2
  2751                           intcon2	equ	0xFF1
  2752                           postinc0	equ	0xFEE
  2753                           fsr0h	equ	0xFEA
  2754                           fsr0l	equ	0xFE9
  2755                           wreg	equ	0xFE8
  2756                           postdec1	equ	0xFE5
  2757                           fsr1h	equ	0xFE2
  2758                           fsr1l	equ	0xFE1
  2759                           indf2	equ	0xFDF
  2760                           fsr2h	equ	0xFDA
  2761                           fsr2l	equ	0xFD9
  2762                           status	equ	0xFD8
  2763                           
  2764 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  2765 ;; Defined at:
  2766 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		None
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;Total ram usage:        0 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_TMR6_Initialize
  2790 ;;		_TMR6_ISR
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text24
  2795  000624                     __ptext24:
  2796                           	opt stack 0
  2797  000624                     _TMR6_DefaultInterruptHandler:
  2798                           	opt stack 25
  2799                           
  2800                           ;incstack = 0
  2801  000624  0012               	return		;funcret
  2802  000626                     __end_of_TMR6_DefaultInterruptHandler:
  2803                           	opt stack 0
  2804                           tosu	equ	0xFFF
  2805                           tosh	equ	0xFFE
  2806                           tosl	equ	0xFFD
  2807                           pclatu	equ	0xFFB
  2808                           pclath	equ	0xFFA
  2809                           tblptru	equ	0xFF8
  2810                           tblptrh	equ	0xFF7
  2811                           tblptrl	equ	0xFF6
  2812                           tablat	equ	0xFF5
  2813                           prodh	equ	0xFF4
  2814                           prodl	equ	0xFF3
  2815                           intcon	equ	0xFF2
  2816                           intcon2	equ	0xFF1
  2817                           postinc0	equ	0xFEE
  2818                           fsr0h	equ	0xFEA
  2819                           fsr0l	equ	0xFE9
  2820                           wreg	equ	0xFE8
  2821                           postdec1	equ	0xFE5
  2822                           fsr1h	equ	0xFE2
  2823                           fsr1l	equ	0xFE1
  2824                           indf2	equ	0xFDF
  2825                           fsr2h	equ	0xFDA
  2826                           fsr2l	equ	0xFD9
  2827                           status	equ	0xFD8
  2828                           
  2829 ;; *************** function _TMR2_ISR *****************
  2830 ;; Defined at:
  2831 ;;		line 76 in file "mcc_generated_files/tmr2.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;Total ram usage:        0 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    2
  2852 ;; This function calls:
  2853 ;;		_TMR2_CallBack
  2854 ;; This function is called by:
  2855 ;;		_INTERRUPT_InterruptManager
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text25
  2860  00057C                     __ptext25:
  2861                           	opt stack 0
  2862  00057C                     _TMR2_ISR:
  2863                           	opt stack 24
  2864                           
  2865                           ;tmr2.c: 78: static volatile unsigned int CountCallBack = 0;
  2866                           ;tmr2.c: 81: PIR1bits.TMR2IF = 0;
  2867                           
  2868                           ;incstack = 0
  2869  00057C  929E               	bcf	3998,1,c	;volatile
  2870                           
  2871                           ;tmr2.c: 84: if (++CountCallBack >= 1)
  2872  00057E  4A1D               	infsnz	TMR2_ISR@CountCallBack,f,c	;volatile
  2873  000580  2A1E               	incf	TMR2_ISR@CountCallBack+1,f,c	;volatile
  2874  000582  501D               	movf	TMR2_ISR@CountCallBack,w,c	;volatile
  2875  000584  101E               	iorwf	TMR2_ISR@CountCallBack+1,w,c	;volatile
  2876  000586  B4D8               	btfsc	status,2,c
  2877  000588  0012               	return	
  2878                           
  2879                           ;tmr2.c: 85: {
  2880                           ;tmr2.c: 87: TMR2_CallBack();
  2881  00058A  EC7A  F002         	call	_TMR2_CallBack	;wreg free
  2882                           
  2883                           ;tmr2.c: 90: CountCallBack = 0;
  2884  00058E  0E00               	movlw	0
  2885  000590  6E1E               	movwf	TMR2_ISR@CountCallBack+1,c	;volatile
  2886  000592  0E00               	movlw	0
  2887  000594  6E1D               	movwf	TMR2_ISR@CountCallBack,c	;volatile
  2888  000596  0012               	return	
  2889  000598                     __end_of_TMR2_ISR:
  2890                           	opt stack 0
  2891                           tosu	equ	0xFFF
  2892                           tosh	equ	0xFFE
  2893                           tosl	equ	0xFFD
  2894                           pclatu	equ	0xFFB
  2895                           pclath	equ	0xFFA
  2896                           tblptru	equ	0xFF8
  2897                           tblptrh	equ	0xFF7
  2898                           tblptrl	equ	0xFF6
  2899                           tablat	equ	0xFF5
  2900                           prodh	equ	0xFF4
  2901                           prodl	equ	0xFF3
  2902                           intcon	equ	0xFF2
  2903                           intcon2	equ	0xFF1
  2904                           postinc0	equ	0xFEE
  2905                           fsr0h	equ	0xFEA
  2906                           fsr0l	equ	0xFE9
  2907                           wreg	equ	0xFE8
  2908                           postdec1	equ	0xFE5
  2909                           fsr1h	equ	0xFE2
  2910                           fsr1l	equ	0xFE1
  2911                           indf2	equ	0xFDF
  2912                           fsr2h	equ	0xFDA
  2913                           fsr2l	equ	0xFD9
  2914                           status	equ	0xFD8
  2915                           
  2916 ;; *************** function _TMR2_CallBack *****************
  2917 ;; Defined at:
  2918 ;;		line 94 in file "mcc_generated_files/tmr2.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;Total ram usage:        0 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    1
  2939 ;; This function calls:
  2940 ;;		Absolute function
  2941 ;;		_TMR2_DefaultInterruptHandler
  2942 ;; This function is called by:
  2943 ;;		_TMR2_ISR
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text26
  2948  0004F4                     __ptext26:
  2949                           	opt stack 0
  2950  0004F4                     _TMR2_CallBack:
  2951                           	opt stack 24
  2952                           
  2953                           ;tmr2.c: 98: Timer2Ticked = 1;
  2954                           
  2955                           ;incstack = 0
  2956  0004F4  0E01               	movlw	1
  2957  0004F6  6E21               	movwf	_Timer2Ticked,c	;volatile
  2958                           
  2959                           ;tmr2.c: 99: if(TMR2_InterruptHandler)
  2960  0004F8  5022               	movf	_TMR2_InterruptHandler,w,c
  2961  0004FA  1023               	iorwf	_TMR2_InterruptHandler+1,w,c
  2962  0004FC  B4D8               	btfsc	status,2,c
  2963  0004FE  0012               	return	
  2964                           
  2965                           ;tmr2.c: 100: {
  2966                           ;tmr2.c: 101: TMR2_InterruptHandler();
  2967  000500  D801               	call	i2u3_48
  2968  000502  0012               	return	
  2969  000504                     i2u3_48:
  2970  000504  0005               	push	
  2971  000506  6EFA               	movwf	pclath,c
  2972  000508  5022               	movf	_TMR2_InterruptHandler,w,c
  2973  00050A  6EFD               	movwf	tosl,c
  2974  00050C  5023               	movf	_TMR2_InterruptHandler+1,w,c
  2975  00050E  6EFE               	movwf	tosh,c
  2976  000510  50F8               	movf	tblptru,w,c
  2977  000512  6EFF               	movwf	tosu,c
  2978  000514  50FA               	movf	pclath,w,c
  2979  000516  0012               	return		;indir
  2980  000518                     __end_of_TMR2_CallBack:
  2981                           	opt stack 0
  2982                           tosu	equ	0xFFF
  2983                           tosh	equ	0xFFE
  2984                           tosl	equ	0xFFD
  2985                           pclatu	equ	0xFFB
  2986                           pclath	equ	0xFFA
  2987                           tblptru	equ	0xFF8
  2988                           tblptrh	equ	0xFF7
  2989                           tblptrl	equ	0xFF6
  2990                           tablat	equ	0xFF5
  2991                           prodh	equ	0xFF4
  2992                           prodl	equ	0xFF3
  2993                           intcon	equ	0xFF2
  2994                           intcon2	equ	0xFF1
  2995                           postinc0	equ	0xFEE
  2996                           fsr0h	equ	0xFEA
  2997                           fsr0l	equ	0xFE9
  2998                           wreg	equ	0xFE8
  2999                           postdec1	equ	0xFE5
  3000                           fsr1h	equ	0xFE2
  3001                           fsr1l	equ	0xFE1
  3002                           indf2	equ	0xFDF
  3003                           fsr2h	equ	0xFDA
  3004                           fsr2l	equ	0xFD9
  3005                           status	equ	0xFD8
  3006                           
  3007 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3008 ;; Defined at:
  3009 ;;		line 109 in file "mcc_generated_files/tmr2.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		None
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;Total ram usage:        0 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_TMR2_Initialize
  3033 ;;		_TMR2_CallBack
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text27
  3038  000626                     __ptext27:
  3039                           	opt stack 0
  3040  000626                     _TMR2_DefaultInterruptHandler:
  3041                           	opt stack 24
  3042                           
  3043                           ;incstack = 0
  3044  000626  0012               	return		;funcret
  3045  000628                     __end_of_TMR2_DefaultInterruptHandler:
  3046                           	opt stack 0
  3047                           tosu	equ	0xFFF
  3048                           tosh	equ	0xFFE
  3049                           tosl	equ	0xFFD
  3050                           pclatu	equ	0xFFB
  3051                           pclath	equ	0xFFA
  3052                           tblptru	equ	0xFF8
  3053                           tblptrh	equ	0xFF7
  3054                           tblptrl	equ	0xFF6
  3055                           tablat	equ	0xFF5
  3056                           prodh	equ	0xFF4
  3057                           prodl	equ	0xFF3
  3058                           intcon	equ	0xFF2
  3059                           intcon2	equ	0xFF1
  3060                           postinc0	equ	0xFEE
  3061                           fsr0h	equ	0xFEA
  3062                           fsr0l	equ	0xFE9
  3063                           wreg	equ	0xFE8
  3064                           postdec1	equ	0xFE5
  3065                           fsr1h	equ	0xFE2
  3066                           fsr1l	equ	0xFE1
  3067                           indf2	equ	0xFDF
  3068                           fsr2h	equ	0xFDA
  3069                           fsr2l	equ	0xFD9
  3070                           status	equ	0xFD8
  3071                           
  3072 ;; *************** function _ADC_ISR *****************
  3073 ;; Defined at:
  3074 ;;		line 129 in file "mcc_generated_files/adc.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;		None
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		None
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;Total ram usage:        0 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_INTERRUPT_InterruptManager
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text28
  3102  000620                     __ptext28:
  3103                           	opt stack 0
  3104  000620                     _ADC_ISR:
  3105                           	opt stack 26
  3106                           
  3107                           ;adc.c: 132: PIR1bits.ADIF = 0;
  3108                           
  3109                           ;incstack = 0
  3110  000620  9C9E               	bcf	3998,6,c	;volatile
  3111  000622  0012               	return		;funcret
  3112  000624                     __end_of_ADC_ISR:
  3113                           	opt stack 0
  3114  0000                     tosu	equ	0xFFF
  3115                           tosh	equ	0xFFE
  3116                           tosl	equ	0xFFD
  3117                           pclatu	equ	0xFFB
  3118                           pclath	equ	0xFFA
  3119                           tblptru	equ	0xFF8
  3120                           tblptrh	equ	0xFF7
  3121                           tblptrl	equ	0xFF6
  3122                           tablat	equ	0xFF5
  3123                           prodh	equ	0xFF4
  3124                           prodl	equ	0xFF3
  3125                           intcon	equ	0xFF2
  3126                           intcon2	equ	0xFF1
  3127                           postinc0	equ	0xFEE
  3128                           fsr0h	equ	0xFEA
  3129                           fsr0l	equ	0xFE9
  3130                           wreg	equ	0xFE8
  3131                           postdec1	equ	0xFE5
  3132                           fsr1h	equ	0xFE2
  3133                           fsr1l	equ	0xFE1
  3134                           indf2	equ	0xFDF
  3135                           fsr2h	equ	0xFDA
  3136                           fsr2l	equ	0xFD9
  3137                           status	equ	0xFD8
  3138                           tosu	equ	0xFFF
  3139                           tosh	equ	0xFFE
  3140                           tosl	equ	0xFFD
  3141                           pclatu	equ	0xFFB
  3142                           pclath	equ	0xFFA
  3143                           tblptru	equ	0xFF8
  3144                           tblptrh	equ	0xFF7
  3145                           tblptrl	equ	0xFF6
  3146                           tablat	equ	0xFF5
  3147                           prodh	equ	0xFF4
  3148                           prodl	equ	0xFF3
  3149                           intcon	equ	0xFF2
  3150                           intcon2	equ	0xFF1
  3151                           postinc0	equ	0xFEE
  3152                           fsr0h	equ	0xFEA
  3153                           fsr0l	equ	0xFE9
  3154                           wreg	equ	0xFE8
  3155                           postdec1	equ	0xFE5
  3156                           fsr1h	equ	0xFE2
  3157                           fsr1l	equ	0xFE1
  3158                           indf2	equ	0xFDF
  3159                           fsr2h	equ	0xFDA
  3160                           fsr2l	equ	0xFD9
  3161                           status	equ	0xFD8
  3162                           
  3163                           	psect	text29
  3164  000000                     __ptext29:
  3165                           	opt stack 0
  3166                           tosu	equ	0xFFF
  3167                           tosh	equ	0xFFE
  3168                           tosl	equ	0xFFD
  3169                           pclatu	equ	0xFFB
  3170                           pclath	equ	0xFFA
  3171                           tblptru	equ	0xFF8
  3172                           tblptrh	equ	0xFF7
  3173                           tblptrl	equ	0xFF6
  3174                           tablat	equ	0xFF5
  3175                           prodh	equ	0xFF4
  3176                           prodl	equ	0xFF3
  3177                           intcon	equ	0xFF2
  3178                           intcon2	equ	0xFF1
  3179                           postinc0	equ	0xFEE
  3180                           fsr0h	equ	0xFEA
  3181                           fsr0l	equ	0xFE9
  3182                           wreg	equ	0xFE8
  3183                           postdec1	equ	0xFE5
  3184                           fsr1h	equ	0xFE2
  3185                           fsr1l	equ	0xFE1
  3186                           indf2	equ	0xFDF
  3187                           fsr2h	equ	0xFDA
  3188                           fsr2l	equ	0xFD9
  3189                           status	equ	0xFD8
  3190                           
  3191                           	psect	rparam
  3192  0000                     tosu	equ	0xFFF
  3193                           tosh	equ	0xFFE
  3194                           tosl	equ	0xFFD
  3195                           pclatu	equ	0xFFB
  3196                           pclath	equ	0xFFA
  3197                           tblptru	equ	0xFF8
  3198                           tblptrh	equ	0xFF7
  3199                           tblptrl	equ	0xFF6
  3200                           tablat	equ	0xFF5
  3201                           prodh	equ	0xFF4
  3202                           prodl	equ	0xFF3
  3203                           intcon	equ	0xFF2
  3204                           intcon2	equ	0xFF1
  3205                           postinc0	equ	0xFEE
  3206                           fsr0h	equ	0xFEA
  3207                           fsr0l	equ	0xFE9
  3208                           wreg	equ	0xFE8
  3209                           postdec1	equ	0xFE5
  3210                           fsr1h	equ	0xFE2
  3211                           fsr1l	equ	0xFE1
  3212                           indf2	equ	0xFDF
  3213                           fsr2h	equ	0xFDA
  3214                           fsr2l	equ	0xFD9
  3215                           status	equ	0xFD8
  3216                           
  3217                           	psect	temp
  3218  000027                     btemp:
  3219                           	opt stack 0
  3220  000027                     	ds	1
  3221  0000                     int$flags	set	btemp
  3222                           tosu	equ	0xFFF
  3223                           tosh	equ	0xFFE
  3224                           tosl	equ	0xFFD
  3225                           pclatu	equ	0xFFB
  3226                           pclath	equ	0xFFA
  3227                           tblptru	equ	0xFF8
  3228                           tblptrh	equ	0xFF7
  3229                           tblptrl	equ	0xFF6
  3230                           tablat	equ	0xFF5
  3231                           prodh	equ	0xFF4
  3232                           prodl	equ	0xFF3
  3233                           intcon	equ	0xFF2
  3234                           intcon2	equ	0xFF1
  3235                           postinc0	equ	0xFEE
  3236                           fsr0h	equ	0xFEA
  3237                           fsr0l	equ	0xFE9
  3238                           wreg	equ	0xFE8
  3239                           postdec1	equ	0xFE5
  3240                           fsr1h	equ	0xFE2
  3241                           fsr1l	equ	0xFE1
  3242                           indf2	equ	0xFDF
  3243                           fsr2h	equ	0xFDA
  3244                           fsr2l	equ	0xFD9
  3245                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        128
    BSS         9
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      38
    BANK0           160      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StepMove
    _StepMove->_StateMEF_act
    _StateMEF_act->_EPWM1_LoadDutyValue
    _StateMEF_act->_EPWM2_LoadDutyValue
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     988
                  _SYSTEM_Initialize
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StepMove                                             5     2      3     816
                                             19 COMRAM     5     2      3
                       _StateMEF_act
 ---------------------------------------------------------------------------------
 (2) _StateMEF_act                                         1     1      0     622
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2     300
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     300
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_ini
   _StepMove
     _StateMEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     18      26       1       40.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A6      12        0.0%
DATA                 0      0      A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Jun 06 09:56:57 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 0612  
                       ??_TMR6_StartTimer 000F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l328 05EA                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _PR6 000F4B                           __end_of_ADC_ISR 0624  
                         _TMR2_Initialize 0518                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                __end_of_EPWM2_Initialize 04D0                           _CCP5_Initialize 05C6  
                                    l1412 012A                                      l1414 012E  
                                    l1434 019C                                      l1522 036E  
                                    l1436 01A0                                      l1534 056A  
                                    l1480 0282                                      l1456 020E  
                                    l1384 00B0                                      l1458 0212  
                                    l1394 00C6                                      l1484 0286  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _TMR2 000FBC  
                                    _TMR6 000F4C                                      _WPUB 000F61  
                           _EUSART1_Write 05E8                                      _main 055C  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0027  
                           __CFG_BORV$190 000000                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00AA  
                           __CFG_IESO$OFF 000000                     ??_EPWM1_LoadDutyValue 0011  
                            ___param_bank 000000            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 05E8                                     ?_main 0001  
                                   _T2CON 000FBA                                     _T6CON 000F4A  
                          __CFG_DEBUG$OFF 000000                                     i2l261 0062  
                                   i2l265 006E                                     i2l259 0052  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000         __size_of_TMR6_SetInterruptHandler 000A  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                 ?_TMR6_SetInterruptHandler 000F  
                        __end_of_TMR2_ISR 0598                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                        __end_of_TMR6_ISR 055C                            __CFG_EBTRB$OFF 000000  
                        _LookUP_TABLE_COS 00A0                          _LookUP_TABLE_SEN 0060  
                      __CFG_MCLRE$EXTMCLR 000000                        StepMove@StepNumber 0014  
                          ?_EUSART1_Write 0001                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 0618  
                          __CFG_PBADEN$ON 000000            ??_TMR6_DefaultInterruptHandler 0001  
                         __initialization 03C0                __end_of_EUSART1_Initialize 05C6  
                            __end_of_main 057C                   __end_of_TMR2_Initialize 053A  
                               ??_ADC_ISR 0001               ?_INTERRUPT_InterruptManager 0001  
                _TMR2_SetInterruptHandler 0608                                    ??_main 0019  
                 __end_of_CCP5_Initialize 05DA                             __activetblptr 000002  
                         _TMR6_Initialize 0484                          __end_of_StepMove 0374  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1H 000FBF  
                                  _CCPR2H 000F68                                    _CCPR1L 000FBE  
                                  _CCPR2L 000F67                                    _CCPR5H 000F56  
                                  _CCPR5L 000F55                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAE  
                                  _RCSTA1 000FAB                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                    i2u3_48 0504  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                          __CFG_XINST$OFF 000000                              _CCPTMRS0bits 000F49  
                          __CFG_STVREN$ON 000000                                    clear_0 03E6  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                           ??_EUSART1_Write 000F  
                     _EPWM2_LoadDutyValue 03FA                   __end_of_TMR2_StartTimer 061C  
TMR2_SetInterruptHandler@InterruptHandler 000F  TMR6_SetInterruptHandler@InterruptHandler 000F  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 045A  
                              __accesstop 0060                   __end_of__initialization 03EC  
                   __end_of_TMR2_CallBack 0518                        ?_SYSTEM_Initialize 0001  
                         _TMR6_StartTimer 0612                             ___rparam_used 000001  
                       ?_EPWM1_Initialize 0001                            __pcstackCOMRAM 0001  
                    ?_EPWM2_LoadDutyValue 000F                              __pidataBANK0 02A8  
                     ??_SYSTEM_Initialize 0011                                 ?_TMR2_ISR 0001  
                               ?_TMR6_ISR 0001                        ??_EPWM1_Initialize 000F  
                        ?_TMR2_Initialize 0001                   __end_of_TMR6_Initialize 04AC  
                        ?_CCP5_Initialize 0001                         ?_EPWM2_Initialize 0001  
               __end_of_SYSTEM_Initialize 0484                        ??_EPWM2_Initialize 000F  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 0022  
                      __CFG_CCP2MX$PORTC1 000000                     ??_EPWM2_LoadDutyValue 0011  
        __end_of_TMR6_SetInterruptHandler 0608                                ??_TMR2_ISR 0001  
                      __CFG_CCP3MX$PORTB5 000000                                 ?_StepMove 0014  
                              ??_TMR6_ISR 0001                                   _CCP1CON 000FBD  
                                 _CCP2CON 000F66                                   _CCP5CON 000F54  
                                 _ECCP1AS 000FB6                                   _ECCP2AS 000F64  
                                 _ADC_ISR 0620                   __size_of_ADC_Initialize 0018  
                                 _OSCCON2 000FD2                                   i2u16_48 0548  
                                 _OSCTUNE 000F9B                                   _PWM1CON 000FB7  
                                 _PWM2CON 000F65                                   _SPBRGH1 000FB0  
                        ?_TMR2_StartTimer 0001                   __end_of_TMR6_StartTimer 0618  
             __end_of_EPWM1_LoadDutyValue 045A                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 0011                                ??_StepMove 0017  
                                 __pcinit 03C0                          ?_TMR6_Initialize 0001  
                                 __ramtop 1000                                   __ptext0 055C  
                                 __ptext1 0328                                   __ptext2 00AE  
                                 __ptext3 05E8                                   __ptext4 03FA  
                                 __ptext5 042A                                   __ptext6 05F4  
                                 __ptext7 045A                                   __ptext8 0484  
                                 __ptext9 0612                             ?_StateMEF_act 0001  
                   _OSCILLATOR_Initialize 05DA                                 _T2CONbits 000FBA  
                           ?_StateMEF_ini 0001                        _EUSART1_Initialize 05B0  
                ??_PIN_MANAGER_Initialize 000F                                 _T6CONbits 000F4A  
              __size_of_SYSTEM_Initialize 002A                      end_of_initialization 03EC  
                     ?_EUSART1_Initialize 0001                             __Lmediumconst 0000  
                                 postdec1 000FE5                                   postinc0 000FEE  
                    ??_EUSART1_Initialize 000F                  _TMR6_SetInterruptHandler 05FE  
                          ??_StateMEF_act 0013                            ??_StateMEF_ini 000F  
                     EUSART1_Write@txData 000F                          ?_TMR6_StartTimer 0001  
                            _EstadoActual 0026              __end_of_INTERRUPT_Initialize 0620  
                               _Direccion 001F      __end_of_TMR2_DefaultInterruptHandler 0628  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 0626  
                       StepMove@Velocidad 0016                         __size_of_TMR2_ISR 001C  
                          _ADC_Initialize 0598                         __size_of_TMR6_ISR 0022  
                  ?_OSCILLATOR_Initialize 0001                       start_initialization 03C0  
               __size_of_EPWM1_Initialize 0024           __size_of_PIN_MANAGER_Initialize 004C  
                               _Microstep 0020              EPWM1_LoadDutyValue@dutyValue 000F  
                   __end_of_EUSART1_Write 05F4                 __size_of_EPWM2_Initialize 0024  
                  __end_of_ADC_Initialize 05B0                               __pdataBANK0 0060  
                                ?_ADC_ISR 0001                                 _StepCount 001B  
           ?_TMR2_DefaultInterruptHandler 0001                         __size_of_StepMove 004C  
                  __size_of_TMR2_CallBack 0024                               __pbssCOMRAM 0019  
                __size_of_TMR2_Initialize 0022                  __size_of_CCP5_Initialize 0014  
             __end_of_EPWM2_LoadDutyValue 042A                     _TMR6_InterruptHandler 0024  
                    __end_of_StateMEF_act 02A8                      __end_of_StateMEF_ini 05FE  
                  _PIN_MANAGER_Initialize 0374                                 __pintcode 0008  
                         ?_ADC_Initialize 0001              ??_INTERRUPT_InterruptManager 0001  
                        __CFG_PRICLKEN$ON 000000                                  _BAUDCON1 000FB8  
                    _INTERRUPT_Initialize 061C                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                           _TMR2_CallBack 04F4                                  _PIE1bits 000F9D  
                                _PIE5bits 000F7D                  __size_of_TMR2_StartTimer 0004  
     __size_of_INTERRUPT_InterruptManager 00A2                                  _PIR1bits 000F9E  
                                _PIR5bits 000F7E              __size_of_EPWM1_LoadDutyValue 0030  
              ??_TMR6_SetInterruptHandler 0011                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR2_ISR 057C  
                                _PSTR1CON 000FB9                                  _PSTR2CON 000F63  
                                _TMR6_ISR 053A                          _Timer2Tick_count 0019  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
          ??_TMR2_DefaultInterruptHandler 0001                          _EPWM1_Initialize 04D0  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 000F  
                __size_of_TMR6_Initialize 0028                               _INTCON2bits 000FF1  
                               copy_data0 03D4                     ?_INTERRUPT_Initialize 0001  
                       ??_TMR2_Initialize 0011                            ?_TMR2_CallBack 0001  
                       ??_CCP5_Initialize 000F                                  __Hrparam 0000  
                            _Timer2Ticked 0021                          _EPWM2_Initialize 04AC  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTC0 000000                                  _StepMove 0328  
                 ??_OSCILLATOR_Initialize 000F               __size_of_EUSART1_Initialize 0016  
                                __ptext10 05FE                                  __ptext11 0518  
                                __ptext20 05C6                                  __ptext12 0618  
                                __ptext21 0598                                  __ptext13 0608  
                                __ptext14 0374                                  __ptext23 053A  
                                __ptext15 05DA                                  __ptext24 0624  
                                __ptext16 061C                                  __ptext25 057C  
                                __ptext17 05B0                                  __ptext26 04F4  
                                __ptext18 04AC                                  __ptext27 0626  
                                __ptext19 04D0                                  __ptext28 0620  
                                __ptext29 0000                     __size_of_StateMEF_act 01FA  
                   __size_of_StateMEF_ini 000A                             __size_of_main 0020  
                __size_of_TMR6_StartTimer 0006                                  int$flags 0027  
                       ??_TMR2_StartTimer 000F        __end_of_INTERRUPT_InterruptManager 00AA  
              _INTERRUPT_InterruptManager 0008                              _StateMEF_act 00AE  
                              _INTCONbits 000FF2                              _StateMEF_ini 05F4  
                  ??_INTERRUPT_Initialize 000F      __end_of_TMR6_DefaultInterruptHandler 0626  
   __size_of_TMR6_DefaultInterruptHandler 0002              _TMR6_DefaultInterruptHandler 0624  
                                intlevel2 0000                           ??_TMR2_CallBack 0001  
            EPWM2_LoadDutyValue@dutyValue 000F                   ?_PIN_MANAGER_Initialize 0001  
                       ??_TMR6_Initialize 0011                                _RCSTA1bits 000FAB  
                        ??_ADC_Initialize 000F                    __size_of_EUSART1_Write 000C  
                   TMR2_ISR@CountCallBack 001D                         __CFG_T3CMX$PORTC0 000000  
                     _EPWM1_LoadDutyValue 042A            __end_of_PIN_MANAGER_Initialize 03C0  
           ?_TMR6_DefaultInterruptHandler 0001                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 0022                  __end_of_EPWM1_Initialize 04F4  
                    ?_EPWM1_LoadDutyValue 000F  
