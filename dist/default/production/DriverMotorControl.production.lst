

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Jun 13 11:44:28 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           ; Version 1.41
    52                           ; Generated 25/01/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F46K22 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMRAM
    87  000C22                     __pidataCOMRAM:
    88                           	opt stack 0
    89                           
    90                           ;initializer for _LookUP_TABLE_COS
    91  000C22  7D                 	db	125
    92  000C23  76                 	db	118
    93  000C24  6C                 	db	108
    94  000C25  5E                 	db	94
    95  000C26  4D                 	db	77
    96  000C27  39                 	db	57
    97  000C28  22                 	db	34
    98  000C29  0C                 	db	12
    99  000C2A  0C                 	db	12
   100  000C2B  22                 	db	34
   101  000C2C  39                 	db	57
   102  000C2D  4D                 	db	77
   103  000C2E  5E                 	db	94
   104  000C2F  6C                 	db	108
   105  000C30  76                 	db	118
   106  000C31  7D                 	db	125
   107  000C32  7D                 	db	125
   108  000C33  76                 	db	118
   109  000C34  6C                 	db	108
   110  000C35  5E                 	db	94
   111  000C36  4D                 	db	77
   112  000C37  39                 	db	57
   113  000C38  22                 	db	34
   114  000C39  0C                 	db	12
   115  000C3A  0C                 	db	12
   116  000C3B  22                 	db	34
   117  000C3C  39                 	db	57
   118  000C3D  4D                 	db	77
   119  000C3E  5E                 	db	94
   120  000C3F  6C                 	db	108
   121  000C40  76                 	db	118
   122  000C41  7D                 	db	125
   123                           
   124                           	psect	idataBANK0
   125  00088A                     __pidataBANK0:
   126                           	opt stack 0
   127                           
   128                           ;initializer for _LookUP_TABLE_SEN_16
   129  00088A  06                 	db	6
   130  00088B  12                 	db	18
   131  00088C  1D                 	db	29
   132  00088D  2A                 	db	42
   133  00088E  35                 	db	53
   134  00088F  3F                 	db	63
   135  000890  49                 	db	73
   136  000891  53                 	db	83
   137  000892  5B                 	db	91
   138  000893  63                 	db	99
   139  000894  6A                 	db	106
   140  000895  70                 	db	112
   141  000896  75                 	db	117
   142  000897  79                 	db	121
   143  000898  7C                 	db	124
   144  000899  7E                 	db	126
   145  00089A  7E                 	db	126
   146  00089B  7C                 	db	124
   147  00089C  79                 	db	121
   148  00089D  75                 	db	117
   149  00089E  70                 	db	112
   150  00089F  6A                 	db	106
   151  0008A0  63                 	db	99
   152  0008A1  5B                 	db	91
   153  0008A2  53                 	db	83
   154  0008A3  49                 	db	73
   155  0008A4  3F                 	db	63
   156  0008A5  35                 	db	53
   157  0008A6  2A                 	db	42
   158  0008A7  1D                 	db	29
   159  0008A8  12                 	db	18
   160  0008A9  06                 	db	6
   161  0008AA  06                 	db	6
   162  0008AB  12                 	db	18
   163  0008AC  1D                 	db	29
   164  0008AD  2A                 	db	42
   165  0008AE  35                 	db	53
   166  0008AF  3F                 	db	63
   167  0008B0  49                 	db	73
   168  0008B1  53                 	db	83
   169  0008B2  5B                 	db	91
   170  0008B3  63                 	db	99
   171  0008B4  6A                 	db	106
   172  0008B5  70                 	db	112
   173  0008B6  75                 	db	117
   174  0008B7  79                 	db	121
   175  0008B8  7C                 	db	124
   176  0008B9  7E                 	db	126
   177  0008BA  7E                 	db	126
   178  0008BB  7C                 	db	124
   179  0008BC  79                 	db	121
   180  0008BD  75                 	db	117
   181  0008BE  70                 	db	112
   182  0008BF  6A                 	db	106
   183  0008C0  63                 	db	99
   184  0008C1  5B                 	db	91
   185  0008C2  53                 	db	83
   186  0008C3  49                 	db	73
   187  0008C4  3F                 	db	63
   188  0008C5  35                 	db	53
   189  0008C6  2A                 	db	42
   190  0008C7  1D                 	db	29
   191  0008C8  12                 	db	18
   192  0008C9  06                 	db	6
   193                           
   194                           ;initializer for _LookUP_TABLE_COS_16
   195  0008CA  7E                 	db	126
   196  0008CB  7C                 	db	124
   197  0008CC  79                 	db	121
   198  0008CD  75                 	db	117
   199  0008CE  70                 	db	112
   200  0008CF  6A                 	db	106
   201  0008D0  63                 	db	99
   202  0008D1  5B                 	db	91
   203  0008D2  53                 	db	83
   204  0008D3  49                 	db	73
   205  0008D4  3F                 	db	63
   206  0008D5  35                 	db	53
   207  0008D6  2A                 	db	42
   208  0008D7  1D                 	db	29
   209  0008D8  12                 	db	18
   210  0008D9  06                 	db	6
   211  0008DA  06                 	db	6
   212  0008DB  12                 	db	18
   213  0008DC  1D                 	db	29
   214  0008DD  2A                 	db	42
   215  0008DE  35                 	db	53
   216  0008DF  3F                 	db	63
   217  0008E0  49                 	db	73
   218  0008E1  53                 	db	83
   219  0008E2  5B                 	db	91
   220  0008E3  63                 	db	99
   221  0008E4  6A                 	db	106
   222  0008E5  70                 	db	112
   223  0008E6  75                 	db	117
   224  0008E7  79                 	db	121
   225  0008E8  7C                 	db	124
   226  0008E9  7E                 	db	126
   227  0008EA  7E                 	db	126
   228  0008EB  7C                 	db	124
   229  0008EC  79                 	db	121
   230  0008ED  75                 	db	117
   231  0008EE  70                 	db	112
   232  0008EF  6A                 	db	106
   233  0008F0  63                 	db	99
   234  0008F1  5B                 	db	91
   235  0008F2  53                 	db	83
   236  0008F3  49                 	db	73
   237  0008F4  3F                 	db	63
   238  0008F5  35                 	db	53
   239  0008F6  2A                 	db	42
   240  0008F7  1D                 	db	29
   241  0008F8  12                 	db	18
   242  0008F9  06                 	db	6
   243  0008FA  06                 	db	6
   244  0008FB  12                 	db	18
   245  0008FC  1D                 	db	29
   246  0008FD  2A                 	db	42
   247  0008FE  35                 	db	53
   248  0008FF  3F                 	db	63
   249  000900  49                 	db	73
   250  000901  53                 	db	83
   251  000902  5B                 	db	91
   252  000903  63                 	db	99
   253  000904  6A                 	db	106
   254  000905  70                 	db	112
   255  000906  75                 	db	117
   256  000907  79                 	db	121
   257  000908  7C                 	db	124
   258  000909  7E                 	db	126
   259                           
   260                           ;initializer for _LookUP_TABLE_SEN
   261  00090A  0C                 	db	12
   262  00090B  22                 	db	34
   263  00090C  39                 	db	57
   264  00090D  4D                 	db	77
   265  00090E  5E                 	db	94
   266  00090F  6C                 	db	108
   267  000910  76                 	db	118
   268  000911  7D                 	db	125
   269  000912  7D                 	db	125
   270  000913  76                 	db	118
   271  000914  6C                 	db	108
   272  000915  5E                 	db	94
   273  000916  4D                 	db	77
   274  000917  39                 	db	57
   275  000918  22                 	db	34
   276  000919  0C                 	db	12
   277  00091A  0C                 	db	12
   278  00091B  22                 	db	34
   279  00091C  39                 	db	57
   280  00091D  4D                 	db	77
   281  00091E  5E                 	db	94
   282  00091F  6C                 	db	108
   283  000920  76                 	db	118
   284  000921  7D                 	db	125
   285  000922  7D                 	db	125
   286  000923  76                 	db	118
   287  000924  6C                 	db	108
   288  000925  5E                 	db	94
   289  000926  4D                 	db	77
   290  000927  39                 	db	57
   291  000928  22                 	db	34
   292  000929  0C                 	db	12
   293                           
   294                           	psect	nvCOMRAM
   295  000046                     __pnvCOMRAM:
   296                           	opt stack 0
   297  000046                     _TMR2_InterruptHandler:
   298                           	opt stack 0
   299  000046                     	ds	2
   300  000048                     _TMR6_InterruptHandler:
   301                           	opt stack 0
   302  000048                     	ds	2
   303  00004A                     _EstadoActual:
   304                           	opt stack 0
   305  00004A                     	ds	1
   306  0000                     _CCPTMRS0bits	set	3913
   307  0000                     _ANSELA	set	3896
   308  0000                     _ANSELE	set	3900
   309  0000                     _ANSELD	set	3899
   310  0000                     _ANSELB	set	3897
   311  0000                     _ANSELC	set	3898
   312  0000                     _CCPR5H	set	3926
   313  0000                     _CCPR5L	set	3925
   314  0000                     _CCP5CON	set	3924
   315  0000                     _T6CONbits	set	3914
   316  0000                     _TMR6	set	3916
   317  0000                     _PR6	set	3915
   318  0000                     _T6CON	set	3914
   319  0000                     _LATDbits	set	3980
   320  0000                     _LATCbits	set	3979
   321  0000                     _LATBbits	set	3978
   322  0000                     _TXREG1	set	4013
   323  0000                     _RCREG1	set	4014
   324  0000                     _RCSTA1bits	set	4011
   325  0000                     _SPBRGH1	set	4016
   326  0000                     _SPBRG1	set	4015
   327  0000                     _TXSTA1	set	4012
   328  0000                     _RCSTA1	set	4011
   329  0000                     _BAUDCON1	set	4024
   330  0000                     _OSCTUNE	set	3995
   331  0000                     _OSCCON2	set	4050
   332  0000                     _OSCCON	set	4051
   333  0000                     _INTCONbits	set	4082
   334  0000                     _RCONbits	set	4048
   335  0000                     _ADCON0bits	set	4034
   336  0000                     _ADRESH	set	4036
   337  0000                     _ADRESL	set	4035
   338  0000                     _ADCON2	set	4032
   339  0000                     _ADCON1	set	4033
   340  0000                     _ADCON0	set	4034
   341  0000                     _CCPR1H	set	4031
   342  0000                     _CCPR1L	set	4030
   343  0000                     _PSTR1CON	set	4025
   344  0000                     _PWM1CON	set	4023
   345  0000                     _ECCP1AS	set	4022
   346  0000                     _CCP1CON	set	4029
   347  0000                     _CCPR2H	set	3944
   348  0000                     _CCPR2L	set	3943
   349  0000                     _PSTR2CON	set	3939
   350  0000                     _PWM2CON	set	3941
   351  0000                     _ECCP2AS	set	3940
   352  0000                     _CCP2CON	set	3942
   353  0000                     _INTCON2bits	set	4081
   354  0000                     _WPUB	set	3937
   355  0000                     _TRISD	set	3989
   356  0000                     _TRISC	set	3988
   357  0000                     _TRISB	set	3987
   358  0000                     _TRISA	set	3986
   359  0000                     _TRISE	set	3990
   360  0000                     _LATC	set	3979
   361  0000                     _LATB	set	3978
   362  0000                     _LATA	set	3977
   363  0000                     _LATD	set	3980
   364  0000                     _LATE	set	3981
   365  0000                     _T2CONbits	set	4026
   366  0000                     _PIE1bits	set	3997
   367  0000                     _PIR1bits	set	3998
   368  0000                     _TMR2	set	4028
   369  0000                     _PR2	set	4027
   370  0000                     _T2CON	set	4026
   371  0000                     _PIE5bits	set	3965
   372  0000                     _PIR5bits	set	3966
   373                           
   374                           ; #config settings
   375  0000                     
   376                           	psect	cinit
   377  000998                     __pcinit:
   378                           	opt stack 0
   379  000998                     start_initialization:
   380                           	opt stack 0
   381  000998                     __initialization:
   382                           	opt stack 0
   383                           
   384                           ; Initialize objects allocated to BANK0 (160 bytes)
   385                           ; load TBLPTR registers with __pidataBANK0
   386  000998  0E8A               	movlw	low __pidataBANK0
   387  00099A  6EF6               	movwf	tblptrl,c
   388  00099C  0E08               	movlw	high __pidataBANK0
   389  00099E  6EF7               	movwf	tblptrh,c
   390  0009A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   391  0009A2  6EF8               	movwf	tblptru,c
   392  0009A4  EE00  F060         	lfsr	0,__pdataBANK0
   393  0009A8  EE10 F0A0          	lfsr	1,160
   394  0009AC                     copy_data0:
   395  0009AC  0009               	tblrd		*+
   396  0009AE  CFF5 FFEE          	movff	tablat,postinc0
   397  0009B2  50E5               	movf	postdec1,w,c
   398  0009B4  50E1               	movf	fsr1l,w,c
   399  0009B6  E1FA               	bnz	copy_data0
   400                           
   401                           ; Initialize objects allocated to COMRAM (32 bytes)
   402                           ; load TBLPTR registers with __pidataCOMRAM
   403  0009B8  0E22               	movlw	low __pidataCOMRAM
   404  0009BA  6EF6               	movwf	tblptrl,c
   405  0009BC  0E0C               	movlw	high __pidataCOMRAM
   406  0009BE  6EF7               	movwf	tblptrh,c
   407  0009C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   408  0009C2  6EF8               	movwf	tblptru,c
   409  0009C4  EE00  F001         	lfsr	0,__pdataCOMRAM
   410  0009C8  EE10 F020          	lfsr	1,32
   411  0009CC                     copy_data1:
   412  0009CC  0009               	tblrd		*+
   413  0009CE  CFF5 FFEE          	movff	tablat,postinc0
   414  0009D2  50E5               	movf	postdec1,w,c
   415  0009D4  50E1               	movf	fsr1l,w,c
   416  0009D6  E1FA               	bnz	copy_data1
   417                           
   418                           ; Clear objects allocated to COMRAM (11 bytes)
   419  0009D8  EE00  F03B         	lfsr	0,__pbssCOMRAM
   420  0009DC  0E0B               	movlw	11
   421  0009DE                     clear_0:
   422  0009DE  6AEE               	clrf	postinc0,c
   423  0009E0  06E8               	decf	wreg,f,c
   424  0009E2  E1FD               	bnz	clear_0
   425  0009E4                     end_of_initialization:
   426                           	opt stack 0
   427  0009E4                     __end_of__initialization:
   428                           	opt stack 0
   429  0009E4  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   430  0009E6  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   431  0009E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   432  0009EA  6EF8               	movwf	tblptru,c
   433  0009EC  0100               	movlb	0
   434  0009EE  EF7A  F005         	goto	_main	;jump to C main() function
   435                           tblptru	equ	0xFF8
   436                           tblptrh	equ	0xFF7
   437                           tblptrl	equ	0xFF6
   438                           tablat	equ	0xFF5
   439                           postinc0	equ	0xFEE
   440                           wreg	equ	0xFE8
   441                           postdec1	equ	0xFE5
   442                           fsr1l	equ	0xFE1
   443                           
   444                           	psect	bssCOMRAM
   445  00003B                     __pbssCOMRAM:
   446                           	opt stack 0
   447  00003B                     _Timer2Tick_count:
   448                           	opt stack 0
   449  00003B                     	ds	2
   450  00003D                     _StepCount:
   451                           	opt stack 0
   452  00003D                     	ds	2
   453  00003F                     _ANALOG_1:
   454                           	opt stack 0
   455  00003F                     	ds	2
   456  000041                     _ANALOG_0:
   457                           	opt stack 0
   458  000041                     	ds	2
   459  000043                     	ds	1
   460  000044                     _Microstep:
   461                           	opt stack 0
   462  000044                     	ds	1
   463  000045                     _Timer2Ticked:
   464                           	opt stack 0
   465  000045                     	ds	1
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           tblptrl	equ	0xFF6
   469                           tablat	equ	0xFF5
   470                           postinc0	equ	0xFEE
   471                           wreg	equ	0xFE8
   472                           postdec1	equ	0xFE5
   473                           fsr1l	equ	0xFE1
   474                           
   475                           	psect	dataCOMRAM
   476  000001                     __pdataCOMRAM:
   477                           	opt stack 0
   478  000001                     _LookUP_TABLE_COS:
   479                           	opt stack 0
   480  000001                     	ds	32
   481                           tblptru	equ	0xFF8
   482                           tblptrh	equ	0xFF7
   483                           tblptrl	equ	0xFF6
   484                           tablat	equ	0xFF5
   485                           postinc0	equ	0xFEE
   486                           wreg	equ	0xFE8
   487                           postdec1	equ	0xFE5
   488                           fsr1l	equ	0xFE1
   489                           
   490                           	psect	dataBANK0
   491  000060                     __pdataBANK0:
   492                           	opt stack 0
   493  000060                     _LookUP_TABLE_SEN_16:
   494                           	opt stack 0
   495  000060                     	ds	64
   496  0000A0                     _LookUP_TABLE_COS_16:
   497                           	opt stack 0
   498  0000A0                     	ds	64
   499  0000E0                     _LookUP_TABLE_SEN:
   500                           	opt stack 0
   501  0000E0                     	ds	32
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1l	equ	0xFE1
   510                           
   511                           	psect	cstackCOMRAM
   512  000021                     __pcstackCOMRAM:
   513                           	opt stack 0
   514  000021                     ??_INTERRUPT_InterruptManager:
   515  000021                     
   516                           ; 1 bytes @ 0x0
   517  000021                     	ds	14
   518  00002F                     EUSART1_Write@txData:
   519                           	opt stack 0
   520  00002F                     TMR6_SetInterruptHandler@InterruptHandler:
   521                           	opt stack 0
   522  00002F                     TMR2_SetInterruptHandler@InterruptHandler:
   523                           	opt stack 0
   524  00002F                     EPWM2_LoadDutyValue@dutyValue:
   525                           	opt stack 0
   526  00002F                     EPWM1_LoadDutyValue@dutyValue:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0xE
   530  00002F                     	ds	2
   531  000031                     ??_EPWM2_LoadDutyValue:
   532  000031                     ??_EPWM1_LoadDutyValue:
   533  000031                     
   534                           ; 1 bytes @ 0x10
   535  000031                     	ds	2
   536  000033                     ??_State8MEF_act:
   537  000033                     ??_State16MEF_act:
   538  000033                     ??_State16MEF_act_Backward:
   539  000033                     ??_State8MEF_act_Backward:
   540                           
   541                           ; 1 bytes @ 0x12
   542  000033                     	ds	1
   543  000034                     StepMove@StepNumber:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x13
   547  000034                     	ds	2
   548  000036                     StepMove@Velocidad:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x15
   552  000036                     	ds	1
   553  000037                     StepMove@microstep_number:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x16
   557  000037                     	ds	1
   558  000038                     StepMove@direccion:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x17
   562  000038                     	ds	1
   563  000039                     ??_StepMove:
   564                           
   565                           ; 1 bytes @ 0x18
   566  000039                     	ds	2
   567  00003B                     tblptru	equ	0xFF8
   568                           tblptrh	equ	0xFF7
   569                           tblptrl	equ	0xFF6
   570                           tablat	equ	0xFF5
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           postdec1	equ	0xFE5
   574                           fsr1l	equ	0xFE1
   575                           
   576                           ; 1 bytes @ 0x1A
   577 ;;
   578 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   579 ;;
   580 ;; *************** function _main *****************
   581 ;; Defined at:
   582 ;;		line 19 in file "main.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels required when called:    7
   602 ;; This function calls:
   603 ;;		_SYSTEM_Initialize
   604 ;;		_StateMEF_ini
   605 ;;		_StepMove
   606 ;; This function is called by:
   607 ;;		Startup code after reset
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text0
   612  000AF4                     __ptext0:
   613                           	opt stack 0
   614  000AF4                     _main:
   615                           	opt stack 24
   616                           
   617                           ;main.c: 22: SYSTEM_Initialize();
   618                           
   619                           ;incstack = 0
   620  000AF4  EC90  F005         	call	_SYSTEM_Initialize	;wreg free
   621                           
   622                           ;main.c: 23: StateMEF_ini();
   623  000AF8  EC4F  F006         	call	_StateMEF_ini	;wreg free
   624                           
   625                           ;main.c: 24: Timer2Ticked=0;
   626  000AFC  0E00               	movlw	0
   627  000AFE  6E45               	movwf	_Timer2Ticked,c	;volatile
   628                           
   629                           ;main.c: 25: do { LATBbits.LATB6 = 1; } while(0);
   630  000B00  8C8A               	bsf	3978,6,c	;volatile
   631                           
   632                           ;main.c: 28: (INTCONbits.GIE = 1);
   633  000B02  8EF2               	bsf	intcon,7,c	;volatile
   634                           
   635                           ;main.c: 31: (INTCONbits.PEIE = 1);
   636  000B04  8CF2               	bsf	intcon,6,c	;volatile
   637  000B06                     l2299:
   638                           
   639                           ;main.c: 33: {
   640                           ;main.c: 35: StepMove(3000,1,16,0);
   641  000B06  0E0B               	movlw	11
   642  000B08  6E35               	movwf	StepMove@StepNumber+1,c
   643  000B0A  0EB8               	movlw	184
   644  000B0C  6E34               	movwf	StepMove@StepNumber,c
   645  000B0E  0E01               	movlw	1
   646  000B10  6E36               	movwf	StepMove@Velocidad,c
   647  000B12  0E10               	movlw	16
   648  000B14  6E37               	movwf	StepMove@microstep_number,c
   649  000B16  0E00               	movlw	0
   650  000B18  6E38               	movwf	StepMove@direccion,c
   651  000B1A  EC95  F004         	call	_StepMove	;wreg free
   652  000B1E  D7F3               	goto	l2299
   653  000B20                     __end_of_main:
   654                           	opt stack 0
   655                           tblptru	equ	0xFF8
   656                           tblptrh	equ	0xFF7
   657                           tblptrl	equ	0xFF6
   658                           tablat	equ	0xFF5
   659                           intcon	equ	0xFF2
   660                           postinc0	equ	0xFEE
   661                           wreg	equ	0xFE8
   662                           postdec1	equ	0xFE5
   663                           fsr1l	equ	0xFE1
   664                           
   665 ;; *************** function _StepMove *****************
   666 ;; Defined at:
   667 ;;		line 328 in file "MotorDriver.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;  StepNumber      2   19[COMRAM] unsigned int 
   670 ;;  Velocidad       1   21[COMRAM] unsigned char 
   671 ;;  microstep_nu    1   22[COMRAM] unsigned char 
   672 ;;  direccion       1   23[COMRAM] unsigned char 
   673 ;; Auto vars:     Size  Location     Type
   674 ;;		None
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   684 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;Total ram usage:        7 bytes
   689 ;; Hardware stack levels used:    1
   690 ;; Hardware stack levels required when called:    6
   691 ;; This function calls:
   692 ;;		_State16MEF_act
   693 ;;		_State16MEF_act_Backward
   694 ;;		_State8MEF_act
   695 ;;		_State8MEF_act_Backward
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text1
   702  00092A                     __ptext1:
   703                           	opt stack 0
   704  00092A                     _StepMove:
   705                           	opt stack 24
   706                           
   707                           ;MotorDriver.c: 330: if ((StepCount<StepNumber))
   708                           
   709                           ;incstack = 0
   710  00092A  5034               	movf	StepMove@StepNumber,w,c
   711  00092C  5C3D               	subwf	_StepCount,w,c
   712  00092E  5035               	movf	StepMove@StepNumber+1,w,c
   713  000930  583E               	subwfb	_StepCount+1,w,c
   714  000932  B0D8               	btfsc	status,0,c
   715  000934  0012               	return	
   716                           
   717                           ;MotorDriver.c: 331: {
   718                           ;MotorDriver.c: 333: if (Timer2Ticked){
   719  000936  5045               	movf	_Timer2Ticked,w,c	;volatile
   720  000938  B4D8               	btfsc	status,2,c
   721  00093A  0012               	return	
   722                           
   723                           ;MotorDriver.c: 334: Timer2Tick_count++;
   724  00093C  4A3B               	infsnz	_Timer2Tick_count,f,c
   725  00093E  2A3C               	incf	_Timer2Tick_count+1,f,c
   726                           
   727                           ;MotorDriver.c: 335: if (Timer2Tick_count == Velocidad){
   728  000940  5036               	movf	StepMove@Velocidad,w,c
   729  000942  6E39               	movwf	??_StepMove& (0+255),c
   730  000944  6A3A               	clrf	(??_StepMove+1)& (0+255),c
   731  000946  503B               	movf	_Timer2Tick_count,w,c
   732  000948  1839               	xorwf	??_StepMove,w,c
   733  00094A  E123               	bnz	l2273
   734  00094C  503C               	movf	_Timer2Tick_count+1,w,c
   735  00094E  183A               	xorwf	??_StepMove+1,w,c
   736  000950  A4D8               	btfss	status,2,c
   737  000952  D01F               	goto	l2273
   738                           
   739                           ;MotorDriver.c: 336: if (direccion == 1){
   740  000954  0438               	decf	StepMove@direccion,w,c
   741  000956  A4D8               	btfss	status,2,c
   742  000958  D00A               	goto	l2261
   743                           
   744                           ;MotorDriver.c: 337: if (microstep_number==16){
   745  00095A  0E10               	movlw	16
   746  00095C  1837               	xorwf	StepMove@microstep_number,w,c
   747  00095E  A4D8               	btfss	status,2,c
   748  000960  D003               	goto	l2259
   749                           
   750                           ;MotorDriver.c: 338: State16MEF_act();
   751  000962  EC4E  F003         	call	_State16MEF_act	;wreg free
   752                           
   753                           ;MotorDriver.c: 339: }
   754  000966  D00F               	goto	l2269
   755  000968                     l2259:
   756                           
   757                           ;MotorDriver.c: 340: else{
   758                           ;MotorDriver.c: 341: State8MEF_act();
   759  000968  EC55  F002         	call	_State8MEF_act	;wreg free
   760                           
   761                           ;MotorDriver.c: 342: }
   762                           ;MotorDriver.c: 343: }
   763  00096C  D00C               	goto	l2269
   764  00096E                     l2261:
   765                           
   766                           ;MotorDriver.c: 344: else if (direccion == 0){
   767  00096E  5038               	movf	StepMove@direccion,w,c
   768  000970  A4D8               	btfss	status,2,c
   769  000972  D009               	goto	l2269
   770                           
   771                           ;MotorDriver.c: 345: if (microstep_number==16){
   772  000974  0E10               	movlw	16
   773  000976  1837               	xorwf	StepMove@microstep_number,w,c
   774  000978  A4D8               	btfss	status,2,c
   775  00097A  D003               	goto	l2267
   776                           
   777                           ;MotorDriver.c: 346: State16MEF_act_Backward();
   778  00097C  EC57  F000         	call	_State16MEF_act_Backward	;wreg free
   779                           
   780                           ;MotorDriver.c: 347: }
   781  000980  D002               	goto	l2269
   782  000982                     l2267:
   783                           
   784                           ;MotorDriver.c: 348: else{
   785                           ;MotorDriver.c: 349: State8MEF_act_Backward();
   786  000982  EC5C  F001         	call	_State8MEF_act_Backward	;wreg free
   787  000986                     l2269:
   788                           
   789                           ;MotorDriver.c: 350: }
   790                           ;MotorDriver.c: 351: }
   791                           ;MotorDriver.c: 353: StepCount++;
   792  000986  4A3D               	infsnz	_StepCount,f,c
   793  000988  2A3E               	incf	_StepCount+1,f,c
   794                           
   795                           ;MotorDriver.c: 354: Timer2Tick_count=0;
   796  00098A  0E00               	movlw	0
   797  00098C  6E3C               	movwf	_Timer2Tick_count+1,c
   798  00098E  0E00               	movlw	0
   799  000990  6E3B               	movwf	_Timer2Tick_count,c
   800  000992                     l2273:
   801                           
   802                           ;MotorDriver.c: 355: }
   803                           ;MotorDriver.c: 356: Timer2Ticked = 0;
   804  000992  0E00               	movlw	0
   805  000994  6E45               	movwf	_Timer2Ticked,c	;volatile
   806  000996  0012               	return	
   807  000998                     __end_of_StepMove:
   808                           	opt stack 0
   809                           tblptru	equ	0xFF8
   810                           tblptrh	equ	0xFF7
   811                           tblptrl	equ	0xFF6
   812                           tablat	equ	0xFF5
   813                           intcon	equ	0xFF2
   814                           postinc0	equ	0xFEE
   815                           wreg	equ	0xFE8
   816                           postdec1	equ	0xFE5
   817                           fsr1l	equ	0xFE1
   818                           status	equ	0xFD8
   819                           
   820 ;; *************** function _State8MEF_act_Backward *****************
   821 ;; Defined at:
   822 ;;		line 258 in file "MotorDriver.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;Total ram usage:        1 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    5
   843 ;; This function calls:
   844 ;;		_EPWM1_LoadDutyValue
   845 ;;		_EPWM2_LoadDutyValue
   846 ;;		_limitar_corriente
   847 ;; This function is called by:
   848 ;;		_StepMove
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text2
   853  0002B8                     __ptext2:
   854                           	opt stack 0
   855  0002B8                     _State8MEF_act_Backward:
   856                           	opt stack 24
   857                           
   858                           ;MotorDriver.c: 259: switch(EstadoActual){
   859                           
   860                           ;incstack = 0
   861  0002B8  D0E7               	goto	l2223
   862  0002BA                     l2137:
   863                           
   864                           ;MotorDriver.c: 261: PSTR1CON = 0x00; PSTR2CON = 0x00;
   865  0002BA  0E00               	movlw	0
   866  0002BC  6EB9               	movwf	4025,c	;volatile
   867  0002BE  0E00               	movlw	0
   868  0002C0  6E63               	movwf	3939,c	;volatile
   869                           
   870                           ;MotorDriver.c: 262: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
   871  0002C2  948B               	bcf	3979,2,c	;volatile
   872  0002C4  9A8C               	bcf	3980,5,c	;volatile
   873  0002C6  928B               	bcf	3979,1,c	;volatile
   874  0002C8  908B               	bcf	3979,0,c	;volatile
   875                           
   876                           ;MotorDriver.c: 263: EstadoActual = STATE1;
   877  0002CA  0E01               	movlw	1
   878  0002CC  6E4A               	movwf	_EstadoActual,c
   879                           
   880                           ;MotorDriver.c: 264: break;
   881  0002CE  0012               	return	
   882  0002D0                     l2147:
   883                           
   884                           ;MotorDriver.c: 266: PSTR1CON = 0x01; PSTR2CON = 0x01;
   885  0002D0  0E01               	movlw	1
   886  0002D2  6EB9               	movwf	4025,c	;volatile
   887  0002D4  0E01               	movlw	1
   888  0002D6  6E63               	movwf	3939,c	;volatile
   889                           
   890                           ;MotorDriver.c: 267: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
   891  0002D8  9A8C               	bcf	3980,5,c	;volatile
   892  0002DA  908B               	bcf	3979,0,c	;volatile
   893                           
   894                           ;MotorDriver.c: 268: if (Microstep<8){
   895  0002DC  5044               	movf	_Microstep,w,c
   896  0002DE  0A80               	xorlw	128
   897  0002E0  0F78               	addlw	-136
   898  0002E2  B0D8               	btfsc	status,0,c
   899  0002E4  0012               	return	
   900                           
   901                           ;MotorDriver.c: 270: limitar_corriente();
   902  0002E6  ECF9  F004         	call	_limitar_corriente	;wreg free
   903                           
   904                           ;MotorDriver.c: 271: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   905  0002EA  5044               	movf	_Microstep,w,c
   906  0002EC  0D01               	mullw	1
   907  0002EE  0E01               	movlw	low _LookUP_TABLE_COS
   908  0002F0  24F3               	addwf	prodl,w,c
   909  0002F2  6ED9               	movwf	fsr2l,c
   910  0002F4  0E00               	movlw	high _LookUP_TABLE_COS
   911  0002F6  20F4               	addwfc	prodh,w,c
   912  0002F8  6EDA               	movwf	fsr2h,c
   913  0002FA  50DF               	movf	indf2,w,c
   914  0002FC  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
   915  0002FE  5033               	movf	??_State8MEF_act_Backward,w,c
   916  000300  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   917  000302  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   918  000304  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
   919                           
   920                           ;MotorDriver.c: 272: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   921  000308  5044               	movf	_Microstep,w,c
   922  00030A  0D01               	mullw	1
   923  00030C  0EE0               	movlw	low _LookUP_TABLE_SEN
   924  00030E  24F3               	addwf	prodl,w,c
   925  000310  6ED9               	movwf	fsr2l,c
   926  000312  0E00               	movlw	high _LookUP_TABLE_SEN
   927  000314  20F4               	addwfc	prodh,w,c
   928  000316  6EDA               	movwf	fsr2h,c
   929  000318  50DF               	movf	indf2,w,c
   930  00031A  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
   931  00031C  5033               	movf	??_State8MEF_act_Backward,w,c
   932  00031E  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   933  000320  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   934  000322  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
   935                           
   936                           ;MotorDriver.c: 273: if (Microstep==0){
   937  000326  5044               	movf	_Microstep,w,c
   938  000328  A4D8               	btfss	status,2,c
   939  00032A  D004               	goto	l2161
   940                           
   941                           ;MotorDriver.c: 274: EstadoActual = STATE4;
   942  00032C  0E04               	movlw	4
   943  00032E  6E4A               	movwf	_EstadoActual,c
   944                           
   945                           ;MotorDriver.c: 275: Microstep=31;
   946  000330  0E1F               	movlw	31
   947  000332  6E44               	movwf	_Microstep,c
   948  000334                     l2161:
   949                           
   950                           ;MotorDriver.c: 276: }
   951                           ;MotorDriver.c: 277: Microstep--;
   952  000334  0644               	decf	_Microstep,f,c
   953                           
   954                           ;MotorDriver.c: 278: }
   955                           ;MotorDriver.c: 279: break;
   956  000336  0012               	return	
   957  000338                     l2163:
   958                           
   959                           ;MotorDriver.c: 281: PSTR1CON = 0x02; PSTR2CON = 0x01;
   960  000338  0E02               	movlw	2
   961  00033A  6EB9               	movwf	4025,c	;volatile
   962  00033C  0E01               	movlw	1
   963  00033E  6E63               	movwf	3939,c	;volatile
   964                           
   965                           ;MotorDriver.c: 282: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
   966  000340  948B               	bcf	3979,2,c	;volatile
   967  000342  908B               	bcf	3979,0,c	;volatile
   968                           
   969                           ;MotorDriver.c: 283: limitar_corriente();
   970  000344  ECF9  F004         	call	_limitar_corriente	;wreg free
   971                           
   972                           ;MotorDriver.c: 284: if ((Microstep<16)&&(Microstep>7)){
   973  000348  5044               	movf	_Microstep,w,c
   974  00034A  0A80               	xorlw	128
   975  00034C  0F70               	addlw	-144
   976  00034E  B0D8               	btfsc	status,0,c
   977  000350  0012               	return	
   978  000352  5044               	movf	_Microstep,w,c
   979  000354  0A80               	xorlw	128
   980  000356  0F78               	addlw	-136
   981  000358  A0D8               	btfss	status,0,c
   982  00035A  0012               	return	
   983                           
   984                           ;MotorDriver.c: 286: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   985  00035C  5044               	movf	_Microstep,w,c
   986  00035E  0D01               	mullw	1
   987  000360  0E01               	movlw	low _LookUP_TABLE_COS
   988  000362  24F3               	addwf	prodl,w,c
   989  000364  6ED9               	movwf	fsr2l,c
   990  000366  0E00               	movlw	high _LookUP_TABLE_COS
   991  000368  20F4               	addwfc	prodh,w,c
   992  00036A  6EDA               	movwf	fsr2h,c
   993  00036C  50DF               	movf	indf2,w,c
   994  00036E  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
   995  000370  5033               	movf	??_State8MEF_act_Backward,w,c
   996  000372  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   997  000374  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   998  000376  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
   999                           
  1000                           ;MotorDriver.c: 287: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1001  00037A  5044               	movf	_Microstep,w,c
  1002  00037C  0D01               	mullw	1
  1003  00037E  0EE0               	movlw	low _LookUP_TABLE_SEN
  1004  000380  24F3               	addwf	prodl,w,c
  1005  000382  6ED9               	movwf	fsr2l,c
  1006  000384  0E00               	movlw	high _LookUP_TABLE_SEN
  1007  000386  20F4               	addwfc	prodh,w,c
  1008  000388  6EDA               	movwf	fsr2h,c
  1009  00038A  50DF               	movf	indf2,w,c
  1010  00038C  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1011  00038E  5033               	movf	??_State8MEF_act_Backward,w,c
  1012  000390  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1013  000392  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1014  000394  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1015                           
  1016                           ;MotorDriver.c: 288: if (Microstep==8){
  1017  000398  0E08               	movlw	8
  1018  00039A  1844               	xorwf	_Microstep,w,c
  1019  00039C  A4D8               	btfss	status,2,c
  1020  00039E  D002               	goto	l2181
  1021                           
  1022                           ;MotorDriver.c: 289: EstadoActual = STATE1;
  1023  0003A0  0E01               	movlw	1
  1024  0003A2  6E4A               	movwf	_EstadoActual,c
  1025  0003A4                     l2181:
  1026                           
  1027                           ;MotorDriver.c: 290: }
  1028                           ;MotorDriver.c: 291: Microstep--;
  1029  0003A4  0644               	decf	_Microstep,f,c
  1030                           
  1031                           ;MotorDriver.c: 292: }
  1032                           ;MotorDriver.c: 293: break;
  1033  0003A6  0012               	return	
  1034  0003A8                     l2183:
  1035                           
  1036                           ;MotorDriver.c: 295: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1037  0003A8  0E02               	movlw	2
  1038  0003AA  6EB9               	movwf	4025,c	;volatile
  1039  0003AC  0E02               	movlw	2
  1040  0003AE  6E63               	movwf	3939,c	;volatile
  1041                           
  1042                           ;MotorDriver.c: 296: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1043  0003B0  948B               	bcf	3979,2,c	;volatile
  1044  0003B2  928B               	bcf	3979,1,c	;volatile
  1045                           
  1046                           ;MotorDriver.c: 297: limitar_corriente();
  1047  0003B4  ECF9  F004         	call	_limitar_corriente	;wreg free
  1048                           
  1049                           ;MotorDriver.c: 298: if ((Microstep<24)&&(Microstep>15)){
  1050  0003B8  5044               	movf	_Microstep,w,c
  1051  0003BA  0A80               	xorlw	128
  1052  0003BC  0F68               	addlw	-152
  1053  0003BE  B0D8               	btfsc	status,0,c
  1054  0003C0  0012               	return	
  1055  0003C2  5044               	movf	_Microstep,w,c
  1056  0003C4  0A80               	xorlw	128
  1057  0003C6  0F70               	addlw	-144
  1058  0003C8  A0D8               	btfss	status,0,c
  1059  0003CA  0012               	return	
  1060                           
  1061                           ;MotorDriver.c: 300: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1062  0003CC  5044               	movf	_Microstep,w,c
  1063  0003CE  0D01               	mullw	1
  1064  0003D0  0E01               	movlw	low _LookUP_TABLE_COS
  1065  0003D2  24F3               	addwf	prodl,w,c
  1066  0003D4  6ED9               	movwf	fsr2l,c
  1067  0003D6  0E00               	movlw	high _LookUP_TABLE_COS
  1068  0003D8  20F4               	addwfc	prodh,w,c
  1069  0003DA  6EDA               	movwf	fsr2h,c
  1070  0003DC  50DF               	movf	indf2,w,c
  1071  0003DE  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1072  0003E0  5033               	movf	??_State8MEF_act_Backward,w,c
  1073  0003E2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1074  0003E4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1075  0003E6  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1076                           
  1077                           ;MotorDriver.c: 301: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1078  0003EA  5044               	movf	_Microstep,w,c
  1079  0003EC  0D01               	mullw	1
  1080  0003EE  0EE0               	movlw	low _LookUP_TABLE_SEN
  1081  0003F0  24F3               	addwf	prodl,w,c
  1082  0003F2  6ED9               	movwf	fsr2l,c
  1083  0003F4  0E00               	movlw	high _LookUP_TABLE_SEN
  1084  0003F6  20F4               	addwfc	prodh,w,c
  1085  0003F8  6EDA               	movwf	fsr2h,c
  1086  0003FA  50DF               	movf	indf2,w,c
  1087  0003FC  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1088  0003FE  5033               	movf	??_State8MEF_act_Backward,w,c
  1089  000400  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1090  000402  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1091  000404  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1092                           
  1093                           ;MotorDriver.c: 302: if (Microstep==16){
  1094  000408  0E10               	movlw	16
  1095  00040A  1844               	xorwf	_Microstep,w,c
  1096  00040C  A4D8               	btfss	status,2,c
  1097  00040E  D002               	goto	l2201
  1098                           
  1099                           ;MotorDriver.c: 303: EstadoActual = STATE2;
  1100  000410  0E02               	movlw	2
  1101  000412  6E4A               	movwf	_EstadoActual,c
  1102  000414                     l2201:
  1103                           
  1104                           ;MotorDriver.c: 304: }
  1105                           ;MotorDriver.c: 305: Microstep--;
  1106  000414  0644               	decf	_Microstep,f,c
  1107                           
  1108                           ;MotorDriver.c: 306: }
  1109                           ;MotorDriver.c: 307: break;
  1110  000416  0012               	return	
  1111  000418                     l2203:
  1112                           
  1113                           ;MotorDriver.c: 309: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1114  000418  0E01               	movlw	1
  1115  00041A  6EB9               	movwf	4025,c	;volatile
  1116  00041C  0E02               	movlw	2
  1117  00041E  6E63               	movwf	3939,c	;volatile
  1118                           
  1119                           ;MotorDriver.c: 310: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1120  000420  9A8C               	bcf	3980,5,c	;volatile
  1121  000422  928B               	bcf	3979,1,c	;volatile
  1122                           
  1123                           ;MotorDriver.c: 311: if ((Microstep<32)&&(Microstep>23)){
  1124  000424  5044               	movf	_Microstep,w,c
  1125  000426  0A80               	xorlw	128
  1126  000428  0F60               	addlw	-160
  1127  00042A  B0D8               	btfsc	status,0,c
  1128  00042C  0012               	return	
  1129  00042E  5044               	movf	_Microstep,w,c
  1130  000430  0A80               	xorlw	128
  1131  000432  0F68               	addlw	-152
  1132  000434  A0D8               	btfss	status,0,c
  1133  000436  0012               	return	
  1134                           
  1135                           ;MotorDriver.c: 313: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1136  000438  5044               	movf	_Microstep,w,c
  1137  00043A  0D01               	mullw	1
  1138  00043C  0E01               	movlw	low _LookUP_TABLE_COS
  1139  00043E  24F3               	addwf	prodl,w,c
  1140  000440  6ED9               	movwf	fsr2l,c
  1141  000442  0E00               	movlw	high _LookUP_TABLE_COS
  1142  000444  20F4               	addwfc	prodh,w,c
  1143  000446  6EDA               	movwf	fsr2h,c
  1144  000448  50DF               	movf	indf2,w,c
  1145  00044A  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1146  00044C  5033               	movf	??_State8MEF_act_Backward,w,c
  1147  00044E  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1148  000450  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1149  000452  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1150                           
  1151                           ;MotorDriver.c: 314: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1152  000456  5044               	movf	_Microstep,w,c
  1153  000458  0D01               	mullw	1
  1154  00045A  0EE0               	movlw	low _LookUP_TABLE_SEN
  1155  00045C  24F3               	addwf	prodl,w,c
  1156  00045E  6ED9               	movwf	fsr2l,c
  1157  000460  0E00               	movlw	high _LookUP_TABLE_SEN
  1158  000462  20F4               	addwfc	prodh,w,c
  1159  000464  6EDA               	movwf	fsr2h,c
  1160  000466  50DF               	movf	indf2,w,c
  1161  000468  6E33               	movwf	??_State8MEF_act_Backward& (0+255),c
  1162  00046A  5033               	movf	??_State8MEF_act_Backward,w,c
  1163  00046C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1164  00046E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1165  000470  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1166                           
  1167                           ;MotorDriver.c: 315: if (Microstep==24){
  1168  000474  0E18               	movlw	24
  1169  000476  1844               	xorwf	_Microstep,w,c
  1170  000478  A4D8               	btfss	status,2,c
  1171  00047A  D004               	goto	l2219
  1172                           
  1173                           ;MotorDriver.c: 316: EstadoActual = STATE0;
  1174  00047C  0E00               	movlw	0
  1175  00047E  6E4A               	movwf	_EstadoActual,c
  1176                           
  1177                           ;MotorDriver.c: 317: EstadoActual = STATE3;
  1178  000480  0E03               	movlw	3
  1179  000482  6E4A               	movwf	_EstadoActual,c
  1180  000484                     l2219:
  1181                           
  1182                           ;MotorDriver.c: 318: }
  1183                           ;MotorDriver.c: 319: Microstep--;
  1184  000484  0644               	decf	_Microstep,f,c
  1185                           
  1186                           ;MotorDriver.c: 325: }
  1187                           
  1188                           ;MotorDriver.c: 324: break;
  1189                           
  1190                           ;MotorDriver.c: 322: default:
  1191                           
  1192                           ;MotorDriver.c: 320: }
  1193                           ;MotorDriver.c: 321: break;
  1194  000486  0012               	return	
  1195  000488                     l2223:
  1196  000488  504A               	movf	_EstadoActual,w,c
  1197                           
  1198                           ; Switch size 1, requested type "space"
  1199                           ; Number of cases is 5, Range of values is 0 to 4
  1200                           ; switch strategies available:
  1201                           ; Name         Instructions Cycles
  1202                           ; simple_byte           16     9 (average)
  1203                           ;	Chosen strategy is simple_byte
  1204  00048A  0A00               	xorlw	0	; case 0
  1205  00048C  B4D8               	btfsc	status,2,c
  1206  00048E  D715               	goto	l2137
  1207  000490  0A01               	xorlw	1	; case 1
  1208  000492  B4D8               	btfsc	status,2,c
  1209  000494  D71D               	goto	l2147
  1210  000496  0A03               	xorlw	3	; case 2
  1211  000498  B4D8               	btfsc	status,2,c
  1212  00049A  D74E               	goto	l2163
  1213  00049C  0A01               	xorlw	1	; case 3
  1214  00049E  B4D8               	btfsc	status,2,c
  1215  0004A0  D783               	goto	l2183
  1216  0004A2  0A07               	xorlw	7	; case 4
  1217  0004A4  A4D8               	btfss	status,2,c
  1218  0004A6  0012               	return	
  1219  0004A8  D7B7               	goto	l2203
  1220  0004AA                     __end_of_State8MEF_act_Backward:
  1221                           	opt stack 0
  1222                           tblptru	equ	0xFF8
  1223                           tblptrh	equ	0xFF7
  1224                           tblptrl	equ	0xFF6
  1225                           tablat	equ	0xFF5
  1226                           prodh	equ	0xFF4
  1227                           prodl	equ	0xFF3
  1228                           intcon	equ	0xFF2
  1229                           postinc0	equ	0xFEE
  1230                           wreg	equ	0xFE8
  1231                           postdec1	equ	0xFE5
  1232                           fsr1l	equ	0xFE1
  1233                           indf2	equ	0xFDF
  1234                           fsr2h	equ	0xFDA
  1235                           fsr2l	equ	0xFD9
  1236                           status	equ	0xFD8
  1237                           
  1238 ;; *************** function _State8MEF_act *****************
  1239 ;; Defined at:
  1240 ;;		line 40 in file "MotorDriver.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;Total ram usage:        1 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    5
  1261 ;; This function calls:
  1262 ;;		_EPWM1_LoadDutyValue
  1263 ;;		_EPWM2_LoadDutyValue
  1264 ;;		_limitar_corriente
  1265 ;; This function is called by:
  1266 ;;		_StepMove
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text3
  1271  0004AA                     __ptext3:
  1272                           	opt stack 0
  1273  0004AA                     _State8MEF_act:
  1274                           	opt stack 24
  1275                           
  1276                           ;MotorDriver.c: 42: switch(EstadoActual) {
  1277                           
  1278                           ;incstack = 0
  1279  0004AA  D0E7               	goto	l1933
  1280  0004AC                     l1849:
  1281                           
  1282                           ;MotorDriver.c: 44: PSTR1CON = 0x00; PSTR2CON = 0x00;
  1283  0004AC  0E00               	movlw	0
  1284  0004AE  6EB9               	movwf	4025,c	;volatile
  1285  0004B0  0E00               	movlw	0
  1286  0004B2  6E63               	movwf	3939,c	;volatile
  1287                           
  1288                           ;MotorDriver.c: 45: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whil
      +                          e(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  1289  0004B4  948B               	bcf	3979,2,c	;volatile
  1290  0004B6  9A8C               	bcf	3980,5,c	;volatile
  1291  0004B8  928B               	bcf	3979,1,c	;volatile
  1292  0004BA  908B               	bcf	3979,0,c	;volatile
  1293                           
  1294                           ;MotorDriver.c: 46: EstadoActual = STATE1;
  1295  0004BC  0E01               	movlw	1
  1296  0004BE  6E4A               	movwf	_EstadoActual,c
  1297                           
  1298                           ;MotorDriver.c: 47: break;
  1299  0004C0  0012               	return	
  1300  0004C2                     l1859:
  1301                           
  1302                           ;MotorDriver.c: 49: PSTR1CON = 0x01; PSTR2CON = 0x01;
  1303  0004C2  0E01               	movlw	1
  1304  0004C4  6EB9               	movwf	4025,c	;volatile
  1305  0004C6  0E01               	movlw	1
  1306  0004C8  6E63               	movwf	3939,c	;volatile
  1307                           
  1308                           ;MotorDriver.c: 50: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  1309  0004CA  9A8C               	bcf	3980,5,c	;volatile
  1310  0004CC  908B               	bcf	3979,0,c	;volatile
  1311                           
  1312                           ;MotorDriver.c: 51: if (Microstep<8){
  1313  0004CE  5044               	movf	_Microstep,w,c
  1314  0004D0  0A80               	xorlw	128
  1315  0004D2  0F78               	addlw	-136
  1316  0004D4  B0D8               	btfsc	status,0,c
  1317  0004D6  0012               	return	
  1318                           
  1319                           ;MotorDriver.c: 54: limitar_corriente();
  1320  0004D8  ECF9  F004         	call	_limitar_corriente	;wreg free
  1321                           
  1322                           ;MotorDriver.c: 55: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1323  0004DC  5044               	movf	_Microstep,w,c
  1324  0004DE  0D01               	mullw	1
  1325  0004E0  0E01               	movlw	low _LookUP_TABLE_COS
  1326  0004E2  24F3               	addwf	prodl,w,c
  1327  0004E4  6ED9               	movwf	fsr2l,c
  1328  0004E6  0E00               	movlw	high _LookUP_TABLE_COS
  1329  0004E8  20F4               	addwfc	prodh,w,c
  1330  0004EA  6EDA               	movwf	fsr2h,c
  1331  0004EC  50DF               	movf	indf2,w,c
  1332  0004EE  6E33               	movwf	??_State8MEF_act& (0+255),c
  1333  0004F0  5033               	movf	??_State8MEF_act,w,c
  1334  0004F2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1335  0004F4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1336  0004F6  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1337                           
  1338                           ;MotorDriver.c: 56: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1339  0004FA  5044               	movf	_Microstep,w,c
  1340  0004FC  0D01               	mullw	1
  1341  0004FE  0EE0               	movlw	low _LookUP_TABLE_SEN
  1342  000500  24F3               	addwf	prodl,w,c
  1343  000502  6ED9               	movwf	fsr2l,c
  1344  000504  0E00               	movlw	high _LookUP_TABLE_SEN
  1345  000506  20F4               	addwfc	prodh,w,c
  1346  000508  6EDA               	movwf	fsr2h,c
  1347  00050A  50DF               	movf	indf2,w,c
  1348  00050C  6E33               	movwf	??_State8MEF_act& (0+255),c
  1349  00050E  5033               	movf	??_State8MEF_act,w,c
  1350  000510  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1351  000512  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1352  000514  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1353                           
  1354                           ;MotorDriver.c: 57: if (Microstep==7){
  1355  000518  0E07               	movlw	7
  1356  00051A  1844               	xorwf	_Microstep,w,c
  1357  00051C  A4D8               	btfss	status,2,c
  1358  00051E  D002               	goto	l1873
  1359                           
  1360                           ;MotorDriver.c: 58: EstadoActual = STATE2;
  1361  000520  0E02               	movlw	2
  1362  000522  6E4A               	movwf	_EstadoActual,c
  1363  000524                     l1873:
  1364                           
  1365                           ;MotorDriver.c: 59: }
  1366                           ;MotorDriver.c: 60: Microstep++;
  1367  000524  2A44               	incf	_Microstep,f,c
  1368                           
  1369                           ;MotorDriver.c: 61: }
  1370                           ;MotorDriver.c: 62: break;
  1371  000526  0012               	return	
  1372  000528                     l1875:
  1373                           
  1374                           ;MotorDriver.c: 64: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1375  000528  0E02               	movlw	2
  1376  00052A  6EB9               	movwf	4025,c	;volatile
  1377  00052C  0E01               	movlw	1
  1378  00052E  6E63               	movwf	3939,c	;volatile
  1379                           
  1380                           ;MotorDriver.c: 65: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  1381  000530  948B               	bcf	3979,2,c	;volatile
  1382  000532  908B               	bcf	3979,0,c	;volatile
  1383                           
  1384                           ;MotorDriver.c: 66: if ((Microstep<16)&&(Microstep>7)){
  1385  000534  5044               	movf	_Microstep,w,c
  1386  000536  0A80               	xorlw	128
  1387  000538  0F70               	addlw	-144
  1388  00053A  B0D8               	btfsc	status,0,c
  1389  00053C  0012               	return	
  1390  00053E  5044               	movf	_Microstep,w,c
  1391  000540  0A80               	xorlw	128
  1392  000542  0F78               	addlw	-136
  1393  000544  A0D8               	btfss	status,0,c
  1394  000546  0012               	return	
  1395                           
  1396                           ;MotorDriver.c: 68: limitar_corriente();
  1397  000548  ECF9  F004         	call	_limitar_corriente	;wreg free
  1398                           
  1399                           ;MotorDriver.c: 69: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1400  00054C  5044               	movf	_Microstep,w,c
  1401  00054E  0D01               	mullw	1
  1402  000550  0E01               	movlw	low _LookUP_TABLE_COS
  1403  000552  24F3               	addwf	prodl,w,c
  1404  000554  6ED9               	movwf	fsr2l,c
  1405  000556  0E00               	movlw	high _LookUP_TABLE_COS
  1406  000558  20F4               	addwfc	prodh,w,c
  1407  00055A  6EDA               	movwf	fsr2h,c
  1408  00055C  50DF               	movf	indf2,w,c
  1409  00055E  6E33               	movwf	??_State8MEF_act& (0+255),c
  1410  000560  5033               	movf	??_State8MEF_act,w,c
  1411  000562  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1412  000564  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1413  000566  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1414                           
  1415                           ;MotorDriver.c: 70: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1416  00056A  5044               	movf	_Microstep,w,c
  1417  00056C  0D01               	mullw	1
  1418  00056E  0EE0               	movlw	low _LookUP_TABLE_SEN
  1419  000570  24F3               	addwf	prodl,w,c
  1420  000572  6ED9               	movwf	fsr2l,c
  1421  000574  0E00               	movlw	high _LookUP_TABLE_SEN
  1422  000576  20F4               	addwfc	prodh,w,c
  1423  000578  6EDA               	movwf	fsr2h,c
  1424  00057A  50DF               	movf	indf2,w,c
  1425  00057C  6E33               	movwf	??_State8MEF_act& (0+255),c
  1426  00057E  5033               	movf	??_State8MEF_act,w,c
  1427  000580  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1428  000582  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1429  000584  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1430                           
  1431                           ;MotorDriver.c: 72: if (Microstep==15){
  1432  000588  0E0F               	movlw	15
  1433  00058A  1844               	xorwf	_Microstep,w,c
  1434  00058C  A4D8               	btfss	status,2,c
  1435  00058E  D002               	goto	l1891
  1436                           
  1437                           ;MotorDriver.c: 73: EstadoActual = STATE3;
  1438  000590  0E03               	movlw	3
  1439  000592  6E4A               	movwf	_EstadoActual,c
  1440  000594                     l1891:
  1441                           
  1442                           ;MotorDriver.c: 74: }
  1443                           ;MotorDriver.c: 75: Microstep++;
  1444  000594  2A44               	incf	_Microstep,f,c
  1445                           
  1446                           ;MotorDriver.c: 76: }
  1447                           ;MotorDriver.c: 77: break;
  1448  000596  0012               	return	
  1449  000598                     l1893:
  1450                           
  1451                           ;MotorDriver.c: 79: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1452  000598  0E02               	movlw	2
  1453  00059A  6EB9               	movwf	4025,c	;volatile
  1454  00059C  0E02               	movlw	2
  1455  00059E  6E63               	movwf	3939,c	;volatile
  1456                           
  1457                           ;MotorDriver.c: 80: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
  1458  0005A0  948B               	bcf	3979,2,c	;volatile
  1459  0005A2  928B               	bcf	3979,1,c	;volatile
  1460                           
  1461                           ;MotorDriver.c: 81: if ((Microstep<24)&&(Microstep>15)){
  1462  0005A4  5044               	movf	_Microstep,w,c
  1463  0005A6  0A80               	xorlw	128
  1464  0005A8  0F68               	addlw	-152
  1465  0005AA  B0D8               	btfsc	status,0,c
  1466  0005AC  0012               	return	
  1467  0005AE  5044               	movf	_Microstep,w,c
  1468  0005B0  0A80               	xorlw	128
  1469  0005B2  0F70               	addlw	-144
  1470  0005B4  A0D8               	btfss	status,0,c
  1471  0005B6  0012               	return	
  1472                           
  1473                           ;MotorDriver.c: 84: limitar_corriente();
  1474  0005B8  ECF9  F004         	call	_limitar_corriente	;wreg free
  1475                           
  1476                           ;MotorDriver.c: 85: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1477  0005BC  5044               	movf	_Microstep,w,c
  1478  0005BE  0D01               	mullw	1
  1479  0005C0  0E01               	movlw	low _LookUP_TABLE_COS
  1480  0005C2  24F3               	addwf	prodl,w,c
  1481  0005C4  6ED9               	movwf	fsr2l,c
  1482  0005C6  0E00               	movlw	high _LookUP_TABLE_COS
  1483  0005C8  20F4               	addwfc	prodh,w,c
  1484  0005CA  6EDA               	movwf	fsr2h,c
  1485  0005CC  50DF               	movf	indf2,w,c
  1486  0005CE  6E33               	movwf	??_State8MEF_act& (0+255),c
  1487  0005D0  5033               	movf	??_State8MEF_act,w,c
  1488  0005D2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1489  0005D4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1490  0005D6  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1491                           
  1492                           ;MotorDriver.c: 86: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1493  0005DA  5044               	movf	_Microstep,w,c
  1494  0005DC  0D01               	mullw	1
  1495  0005DE  0EE0               	movlw	low _LookUP_TABLE_SEN
  1496  0005E0  24F3               	addwf	prodl,w,c
  1497  0005E2  6ED9               	movwf	fsr2l,c
  1498  0005E4  0E00               	movlw	high _LookUP_TABLE_SEN
  1499  0005E6  20F4               	addwfc	prodh,w,c
  1500  0005E8  6EDA               	movwf	fsr2h,c
  1501  0005EA  50DF               	movf	indf2,w,c
  1502  0005EC  6E33               	movwf	??_State8MEF_act& (0+255),c
  1503  0005EE  5033               	movf	??_State8MEF_act,w,c
  1504  0005F0  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1505  0005F2  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1506  0005F4  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1507                           
  1508                           ;MotorDriver.c: 88: if (Microstep==23){
  1509  0005F8  0E17               	movlw	23
  1510  0005FA  1844               	xorwf	_Microstep,w,c
  1511  0005FC  A4D8               	btfss	status,2,c
  1512  0005FE  D002               	goto	l1909
  1513                           
  1514                           ;MotorDriver.c: 89: EstadoActual = STATE4;
  1515  000600  0E04               	movlw	4
  1516  000602  6E4A               	movwf	_EstadoActual,c
  1517  000604                     l1909:
  1518                           
  1519                           ;MotorDriver.c: 90: }
  1520                           ;MotorDriver.c: 91: Microstep++;
  1521  000604  2A44               	incf	_Microstep,f,c
  1522                           
  1523                           ;MotorDriver.c: 92: }
  1524                           ;MotorDriver.c: 93: break;
  1525  000606  0012               	return	
  1526  000608                     l1911:
  1527                           
  1528                           ;MotorDriver.c: 95: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1529  000608  0E01               	movlw	1
  1530  00060A  6EB9               	movwf	4025,c	;volatile
  1531  00060C  0E02               	movlw	2
  1532  00060E  6E63               	movwf	3939,c	;volatile
  1533                           
  1534                           ;MotorDriver.c: 96: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
  1535  000610  9A8C               	bcf	3980,5,c	;volatile
  1536  000612  928B               	bcf	3979,1,c	;volatile
  1537                           
  1538                           ;MotorDriver.c: 97: if ((Microstep<32)&&(Microstep>23)){
  1539  000614  5044               	movf	_Microstep,w,c
  1540  000616  0A80               	xorlw	128
  1541  000618  0F60               	addlw	-160
  1542  00061A  B0D8               	btfsc	status,0,c
  1543  00061C  0012               	return	
  1544  00061E  5044               	movf	_Microstep,w,c
  1545  000620  0A80               	xorlw	128
  1546  000622  0F68               	addlw	-152
  1547  000624  A0D8               	btfss	status,0,c
  1548  000626  0012               	return	
  1549                           
  1550                           ;MotorDriver.c: 100: limitar_corriente();
  1551  000628  ECF9  F004         	call	_limitar_corriente	;wreg free
  1552                           
  1553                           ;MotorDriver.c: 101: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1554  00062C  5044               	movf	_Microstep,w,c
  1555  00062E  0D01               	mullw	1
  1556  000630  0E01               	movlw	low _LookUP_TABLE_COS
  1557  000632  24F3               	addwf	prodl,w,c
  1558  000634  6ED9               	movwf	fsr2l,c
  1559  000636  0E00               	movlw	high _LookUP_TABLE_COS
  1560  000638  20F4               	addwfc	prodh,w,c
  1561  00063A  6EDA               	movwf	fsr2h,c
  1562  00063C  50DF               	movf	indf2,w,c
  1563  00063E  6E33               	movwf	??_State8MEF_act& (0+255),c
  1564  000640  5033               	movf	??_State8MEF_act,w,c
  1565  000642  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1566  000644  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1567  000646  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1568                           
  1569                           ;MotorDriver.c: 102: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1570  00064A  5044               	movf	_Microstep,w,c
  1571  00064C  0D01               	mullw	1
  1572  00064E  0EE0               	movlw	low _LookUP_TABLE_SEN
  1573  000650  24F3               	addwf	prodl,w,c
  1574  000652  6ED9               	movwf	fsr2l,c
  1575  000654  0E00               	movlw	high _LookUP_TABLE_SEN
  1576  000656  20F4               	addwfc	prodh,w,c
  1577  000658  6EDA               	movwf	fsr2h,c
  1578  00065A  50DF               	movf	indf2,w,c
  1579  00065C  6E33               	movwf	??_State8MEF_act& (0+255),c
  1580  00065E  5033               	movf	??_State8MEF_act,w,c
  1581  000660  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1582  000662  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1583  000664  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1584                           
  1585                           ;MotorDriver.c: 104: if (Microstep==31){
  1586  000668  0E1F               	movlw	31
  1587  00066A  1844               	xorwf	_Microstep,w,c
  1588  00066C  A4D8               	btfss	status,2,c
  1589  00066E  D003               	goto	l1929
  1590                           
  1591                           ;MotorDriver.c: 106: EstadoActual = STATE1;
  1592  000670  0E01               	movlw	1
  1593  000672  6E4A               	movwf	_EstadoActual,c
  1594                           
  1595                           ;MotorDriver.c: 107: Microstep=-1;
  1596  000674  6844               	setf	_Microstep,c
  1597  000676                     l1929:
  1598                           
  1599                           ;MotorDriver.c: 108: }
  1600                           ;MotorDriver.c: 109: Microstep++;
  1601  000676  2A44               	incf	_Microstep,f,c
  1602                           
  1603                           ;MotorDriver.c: 115: }
  1604                           
  1605                           ;MotorDriver.c: 114: break;
  1606                           
  1607                           ;MotorDriver.c: 112: default:
  1608                           
  1609                           ;MotorDriver.c: 110: }
  1610                           ;MotorDriver.c: 111: break;
  1611  000678  0012               	return	
  1612  00067A                     l1933:
  1613  00067A  504A               	movf	_EstadoActual,w,c
  1614                           
  1615                           ; Switch size 1, requested type "space"
  1616                           ; Number of cases is 5, Range of values is 0 to 4
  1617                           ; switch strategies available:
  1618                           ; Name         Instructions Cycles
  1619                           ; simple_byte           16     9 (average)
  1620                           ;	Chosen strategy is simple_byte
  1621  00067C  0A00               	xorlw	0	; case 0
  1622  00067E  B4D8               	btfsc	status,2,c
  1623  000680  D715               	goto	l1849
  1624  000682  0A01               	xorlw	1	; case 1
  1625  000684  B4D8               	btfsc	status,2,c
  1626  000686  D71D               	goto	l1859
  1627  000688  0A03               	xorlw	3	; case 2
  1628  00068A  B4D8               	btfsc	status,2,c
  1629  00068C  D74D               	goto	l1875
  1630  00068E  0A01               	xorlw	1	; case 3
  1631  000690  B4D8               	btfsc	status,2,c
  1632  000692  D782               	goto	l1893
  1633  000694  0A07               	xorlw	7	; case 4
  1634  000696  A4D8               	btfss	status,2,c
  1635  000698  0012               	return	
  1636  00069A  D7B6               	goto	l1911
  1637  00069C                     __end_of_State8MEF_act:
  1638                           	opt stack 0
  1639                           tblptru	equ	0xFF8
  1640                           tblptrh	equ	0xFF7
  1641                           tblptrl	equ	0xFF6
  1642                           tablat	equ	0xFF5
  1643                           prodh	equ	0xFF4
  1644                           prodl	equ	0xFF3
  1645                           intcon	equ	0xFF2
  1646                           postinc0	equ	0xFEE
  1647                           wreg	equ	0xFE8
  1648                           postdec1	equ	0xFE5
  1649                           fsr1l	equ	0xFE1
  1650                           indf2	equ	0xFDF
  1651                           fsr2h	equ	0xFDA
  1652                           fsr2l	equ	0xFD9
  1653                           status	equ	0xFD8
  1654                           
  1655 ;; *************** function _State16MEF_act_Backward *****************
  1656 ;; Defined at:
  1657 ;;		line 188 in file "MotorDriver.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1674 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1675 ;;Total ram usage:        1 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    5
  1678 ;; This function calls:
  1679 ;;		_EPWM1_LoadDutyValue
  1680 ;;		_EPWM2_LoadDutyValue
  1681 ;;		_EUSART1_Write
  1682 ;;		_limitar_corriente
  1683 ;; This function is called by:
  1684 ;;		_StepMove
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text4
  1689  0000AE                     __ptext4:
  1690                           	opt stack 0
  1691  0000AE                     _State16MEF_act_Backward:
  1692                           	opt stack 24
  1693                           
  1694                           ;MotorDriver.c: 189: switch(EstadoActual){
  1695                           
  1696                           ;incstack = 0
  1697  0000AE  D0F3               	goto	l2133
  1698  0000B0                     l2029:
  1699                           
  1700                           ;MotorDriver.c: 191: PSTR1CON = 0x00; PSTR2CON = 0x00;
  1701  0000B0  0E00               	movlw	0
  1702  0000B2  6EB9               	movwf	4025,c	;volatile
  1703  0000B4  0E00               	movlw	0
  1704  0000B6  6E63               	movwf	3939,c	;volatile
  1705                           
  1706                           ;MotorDriver.c: 192: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  1707  0000B8  948B               	bcf	3979,2,c	;volatile
  1708  0000BA  9A8C               	bcf	3980,5,c	;volatile
  1709  0000BC  928B               	bcf	3979,1,c	;volatile
  1710  0000BE  908B               	bcf	3979,0,c	;volatile
  1711                           
  1712                           ;MotorDriver.c: 193: EstadoActual = STATE1;
  1713  0000C0  0E01               	movlw	1
  1714  0000C2  6E4A               	movwf	_EstadoActual,c
  1715                           
  1716                           ;MotorDriver.c: 194: break;
  1717  0000C4  0012               	return	
  1718  0000C6                     l2039:
  1719                           
  1720                           ;MotorDriver.c: 196: PSTR1CON = 0x01; PSTR2CON = 0x01;
  1721  0000C6  0E01               	movlw	1
  1722  0000C8  6EB9               	movwf	4025,c	;volatile
  1723  0000CA  0E01               	movlw	1
  1724  0000CC  6E63               	movwf	3939,c	;volatile
  1725                           
  1726                           ;MotorDriver.c: 197: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1727  0000CE  9A8C               	bcf	3980,5,c	;volatile
  1728  0000D0  908B               	bcf	3979,0,c	;volatile
  1729                           
  1730                           ;MotorDriver.c: 198: if (Microstep<16){
  1731  0000D2  5044               	movf	_Microstep,w,c
  1732  0000D4  0A80               	xorlw	128
  1733  0000D6  0F70               	addlw	-144
  1734  0000D8  B0D8               	btfsc	status,0,c
  1735  0000DA  0012               	return	
  1736                           
  1737                           ;MotorDriver.c: 199: EUSART1_Write(Microstep);
  1738  0000DC  5044               	movf	_Microstep,w,c
  1739  0000DE  EC49  F006         	call	_EUSART1_Write
  1740                           
  1741                           ;MotorDriver.c: 200: limitar_corriente();
  1742  0000E2  ECF9  F004         	call	_limitar_corriente	;wreg free
  1743                           
  1744                           ;MotorDriver.c: 201: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1745  0000E6  5044               	movf	_Microstep,w,c
  1746  0000E8  0D01               	mullw	1
  1747  0000EA  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1748  0000EC  24F3               	addwf	prodl,w,c
  1749  0000EE  6ED9               	movwf	fsr2l,c
  1750  0000F0  0E00               	movlw	high _LookUP_TABLE_COS_16
  1751  0000F2  20F4               	addwfc	prodh,w,c
  1752  0000F4  6EDA               	movwf	fsr2h,c
  1753  0000F6  50DF               	movf	indf2,w,c
  1754  0000F8  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1755  0000FA  5033               	movf	??_State16MEF_act_Backward,w,c
  1756  0000FC  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1757  0000FE  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1758  000100  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1759                           
  1760                           ;MotorDriver.c: 202: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1761  000104  5044               	movf	_Microstep,w,c
  1762  000106  0D01               	mullw	1
  1763  000108  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1764  00010A  24F3               	addwf	prodl,w,c
  1765  00010C  6ED9               	movwf	fsr2l,c
  1766  00010E  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1767  000110  20F4               	addwfc	prodh,w,c
  1768  000112  6EDA               	movwf	fsr2h,c
  1769  000114  50DF               	movf	indf2,w,c
  1770  000116  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1771  000118  5033               	movf	??_State16MEF_act_Backward,w,c
  1772  00011A  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1773  00011C  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1774  00011E  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1775                           
  1776                           ;MotorDriver.c: 203: if (Microstep==0){
  1777  000122  5044               	movf	_Microstep,w,c
  1778  000124  A4D8               	btfss	status,2,c
  1779  000126  D004               	goto	l2059
  1780                           
  1781                           ;MotorDriver.c: 204: EstadoActual = STATE4;
  1782  000128  0E04               	movlw	4
  1783  00012A  6E4A               	movwf	_EstadoActual,c
  1784                           
  1785                           ;MotorDriver.c: 205: Microstep=63;
  1786  00012C  0E3F               	movlw	63
  1787  00012E  6E44               	movwf	_Microstep,c
  1788  000130                     l2059:
  1789                           
  1790                           ;MotorDriver.c: 206: }
  1791                           ;MotorDriver.c: 207: Microstep--;
  1792  000130  0644               	decf	_Microstep,f,c
  1793                           
  1794                           ;MotorDriver.c: 208: }
  1795                           ;MotorDriver.c: 209: break;
  1796  000132  0012               	return	
  1797  000134                     l2061:
  1798                           
  1799                           ;MotorDriver.c: 211: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1800  000134  0E02               	movlw	2
  1801  000136  6EB9               	movwf	4025,c	;volatile
  1802  000138  0E01               	movlw	1
  1803  00013A  6E63               	movwf	3939,c	;volatile
  1804                           
  1805                           ;MotorDriver.c: 212: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1806  00013C  948B               	bcf	3979,2,c	;volatile
  1807  00013E  908B               	bcf	3979,0,c	;volatile
  1808                           
  1809                           ;MotorDriver.c: 213: limitar_corriente();
  1810  000140  ECF9  F004         	call	_limitar_corriente	;wreg free
  1811                           
  1812                           ;MotorDriver.c: 214: if ((Microstep<32)&&(Microstep>15)){
  1813  000144  5044               	movf	_Microstep,w,c
  1814  000146  0A80               	xorlw	128
  1815  000148  0F60               	addlw	-160
  1816  00014A  B0D8               	btfsc	status,0,c
  1817  00014C  0012               	return	
  1818  00014E  5044               	movf	_Microstep,w,c
  1819  000150  0A80               	xorlw	128
  1820  000152  0F70               	addlw	-144
  1821  000154  A0D8               	btfss	status,0,c
  1822  000156  0012               	return	
  1823                           
  1824                           ;MotorDriver.c: 215: EUSART1_Write(Microstep);
  1825  000158  5044               	movf	_Microstep,w,c
  1826  00015A  EC49  F006         	call	_EUSART1_Write
  1827                           
  1828                           ;MotorDriver.c: 216: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1829  00015E  5044               	movf	_Microstep,w,c
  1830  000160  0D01               	mullw	1
  1831  000162  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1832  000164  24F3               	addwf	prodl,w,c
  1833  000166  6ED9               	movwf	fsr2l,c
  1834  000168  0E00               	movlw	high _LookUP_TABLE_COS_16
  1835  00016A  20F4               	addwfc	prodh,w,c
  1836  00016C  6EDA               	movwf	fsr2h,c
  1837  00016E  50DF               	movf	indf2,w,c
  1838  000170  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1839  000172  5033               	movf	??_State16MEF_act_Backward,w,c
  1840  000174  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1841  000176  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1842  000178  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1843                           
  1844                           ;MotorDriver.c: 217: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1845  00017C  5044               	movf	_Microstep,w,c
  1846  00017E  0D01               	mullw	1
  1847  000180  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1848  000182  24F3               	addwf	prodl,w,c
  1849  000184  6ED9               	movwf	fsr2l,c
  1850  000186  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1851  000188  20F4               	addwfc	prodh,w,c
  1852  00018A  6EDA               	movwf	fsr2h,c
  1853  00018C  50DF               	movf	indf2,w,c
  1854  00018E  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1855  000190  5033               	movf	??_State16MEF_act_Backward,w,c
  1856  000192  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1857  000194  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1858  000196  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1859                           
  1860                           ;MotorDriver.c: 218: if (Microstep==16){
  1861  00019A  0E10               	movlw	16
  1862  00019C  1844               	xorwf	_Microstep,w,c
  1863  00019E  A4D8               	btfss	status,2,c
  1864  0001A0  D002               	goto	l2083
  1865                           
  1866                           ;MotorDriver.c: 219: EstadoActual = STATE1;
  1867  0001A2  0E01               	movlw	1
  1868  0001A4  6E4A               	movwf	_EstadoActual,c
  1869  0001A6                     l2083:
  1870                           
  1871                           ;MotorDriver.c: 220: }
  1872                           ;MotorDriver.c: 221: Microstep--;
  1873  0001A6  0644               	decf	_Microstep,f,c
  1874                           
  1875                           ;MotorDriver.c: 222: }
  1876                           ;MotorDriver.c: 223: break;
  1877  0001A8  0012               	return	
  1878  0001AA                     l2085:
  1879                           
  1880                           ;MotorDriver.c: 225: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1881  0001AA  0E02               	movlw	2
  1882  0001AC  6EB9               	movwf	4025,c	;volatile
  1883  0001AE  0E02               	movlw	2
  1884  0001B0  6E63               	movwf	3939,c	;volatile
  1885                           
  1886                           ;MotorDriver.c: 226: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1887  0001B2  948B               	bcf	3979,2,c	;volatile
  1888  0001B4  928B               	bcf	3979,1,c	;volatile
  1889                           
  1890                           ;MotorDriver.c: 227: limitar_corriente();
  1891  0001B6  ECF9  F004         	call	_limitar_corriente	;wreg free
  1892                           
  1893                           ;MotorDriver.c: 228: if ((Microstep<48)&&(Microstep>31)){
  1894  0001BA  5044               	movf	_Microstep,w,c
  1895  0001BC  0A80               	xorlw	128
  1896  0001BE  0F50               	addlw	-176
  1897  0001C0  B0D8               	btfsc	status,0,c
  1898  0001C2  0012               	return	
  1899  0001C4  5044               	movf	_Microstep,w,c
  1900  0001C6  0A80               	xorlw	128
  1901  0001C8  0F60               	addlw	-160
  1902  0001CA  A0D8               	btfss	status,0,c
  1903  0001CC  0012               	return	
  1904                           
  1905                           ;MotorDriver.c: 229: EUSART1_Write(Microstep);
  1906  0001CE  5044               	movf	_Microstep,w,c
  1907  0001D0  EC49  F006         	call	_EUSART1_Write
  1908                           
  1909                           ;MotorDriver.c: 230: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1910  0001D4  5044               	movf	_Microstep,w,c
  1911  0001D6  0D01               	mullw	1
  1912  0001D8  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1913  0001DA  24F3               	addwf	prodl,w,c
  1914  0001DC  6ED9               	movwf	fsr2l,c
  1915  0001DE  0E00               	movlw	high _LookUP_TABLE_COS_16
  1916  0001E0  20F4               	addwfc	prodh,w,c
  1917  0001E2  6EDA               	movwf	fsr2h,c
  1918  0001E4  50DF               	movf	indf2,w,c
  1919  0001E6  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1920  0001E8  5033               	movf	??_State16MEF_act_Backward,w,c
  1921  0001EA  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1922  0001EC  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1923  0001EE  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1924                           
  1925                           ;MotorDriver.c: 231: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1926  0001F2  5044               	movf	_Microstep,w,c
  1927  0001F4  0D01               	mullw	1
  1928  0001F6  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1929  0001F8  24F3               	addwf	prodl,w,c
  1930  0001FA  6ED9               	movwf	fsr2l,c
  1931  0001FC  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1932  0001FE  20F4               	addwfc	prodh,w,c
  1933  000200  6EDA               	movwf	fsr2h,c
  1934  000202  50DF               	movf	indf2,w,c
  1935  000204  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1936  000206  5033               	movf	??_State16MEF_act_Backward,w,c
  1937  000208  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1938  00020A  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1939  00020C  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  1940                           
  1941                           ;MotorDriver.c: 232: if (Microstep==32){
  1942  000210  0E20               	movlw	32
  1943  000212  1844               	xorwf	_Microstep,w,c
  1944  000214  A4D8               	btfss	status,2,c
  1945  000216  D002               	goto	l2107
  1946                           
  1947                           ;MotorDriver.c: 233: EstadoActual = STATE2;
  1948  000218  0E02               	movlw	2
  1949  00021A  6E4A               	movwf	_EstadoActual,c
  1950  00021C                     l2107:
  1951                           
  1952                           ;MotorDriver.c: 234: }
  1953                           ;MotorDriver.c: 235: Microstep--;
  1954  00021C  0644               	decf	_Microstep,f,c
  1955                           
  1956                           ;MotorDriver.c: 236: }
  1957                           ;MotorDriver.c: 237: break;
  1958  00021E  0012               	return	
  1959  000220                     l2109:
  1960                           
  1961                           ;MotorDriver.c: 239: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1962  000220  0E01               	movlw	1
  1963  000222  6EB9               	movwf	4025,c	;volatile
  1964  000224  0E02               	movlw	2
  1965  000226  6E63               	movwf	3939,c	;volatile
  1966                           
  1967                           ;MotorDriver.c: 240: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1968  000228  9A8C               	bcf	3980,5,c	;volatile
  1969  00022A  928B               	bcf	3979,1,c	;volatile
  1970                           
  1971                           ;MotorDriver.c: 241: if ((Microstep<64)&&(Microstep>47)){
  1972  00022C  5044               	movf	_Microstep,w,c
  1973  00022E  0A80               	xorlw	128
  1974  000230  0F40               	addlw	-192
  1975  000232  B0D8               	btfsc	status,0,c
  1976  000234  0012               	return	
  1977  000236  5044               	movf	_Microstep,w,c
  1978  000238  0A80               	xorlw	128
  1979  00023A  0F50               	addlw	-176
  1980  00023C  A0D8               	btfss	status,0,c
  1981  00023E  0012               	return	
  1982                           
  1983                           ;MotorDriver.c: 242: EUSART1_Write(Microstep);
  1984  000240  5044               	movf	_Microstep,w,c
  1985  000242  EC49  F006         	call	_EUSART1_Write
  1986                           
  1987                           ;MotorDriver.c: 243: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1988  000246  5044               	movf	_Microstep,w,c
  1989  000248  0D01               	mullw	1
  1990  00024A  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1991  00024C  24F3               	addwf	prodl,w,c
  1992  00024E  6ED9               	movwf	fsr2l,c
  1993  000250  0E00               	movlw	high _LookUP_TABLE_COS_16
  1994  000252  20F4               	addwfc	prodh,w,c
  1995  000254  6EDA               	movwf	fsr2h,c
  1996  000256  50DF               	movf	indf2,w,c
  1997  000258  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  1998  00025A  5033               	movf	??_State16MEF_act_Backward,w,c
  1999  00025C  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2000  00025E  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2001  000260  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2002                           
  2003                           ;MotorDriver.c: 244: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2004  000264  5044               	movf	_Microstep,w,c
  2005  000266  0D01               	mullw	1
  2006  000268  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2007  00026A  24F3               	addwf	prodl,w,c
  2008  00026C  6ED9               	movwf	fsr2l,c
  2009  00026E  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2010  000270  20F4               	addwfc	prodh,w,c
  2011  000272  6EDA               	movwf	fsr2h,c
  2012  000274  50DF               	movf	indf2,w,c
  2013  000276  6E33               	movwf	??_State16MEF_act_Backward& (0+255),c
  2014  000278  5033               	movf	??_State16MEF_act_Backward,w,c
  2015  00027A  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2016  00027C  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2017  00027E  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2018                           
  2019                           ;MotorDriver.c: 245: if (Microstep==48){
  2020  000282  0E30               	movlw	48
  2021  000284  1844               	xorwf	_Microstep,w,c
  2022  000286  A4D8               	btfss	status,2,c
  2023  000288  D004               	goto	l2129
  2024                           
  2025                           ;MotorDriver.c: 246: EstadoActual = STATE0;
  2026  00028A  0E00               	movlw	0
  2027  00028C  6E4A               	movwf	_EstadoActual,c
  2028                           
  2029                           ;MotorDriver.c: 247: EstadoActual = STATE3;
  2030  00028E  0E03               	movlw	3
  2031  000290  6E4A               	movwf	_EstadoActual,c
  2032  000292                     l2129:
  2033                           
  2034                           ;MotorDriver.c: 248: }
  2035                           ;MotorDriver.c: 249: Microstep--;
  2036  000292  0644               	decf	_Microstep,f,c
  2037                           
  2038                           ;MotorDriver.c: 255: }
  2039                           
  2040                           ;MotorDriver.c: 254: break;
  2041                           
  2042                           ;MotorDriver.c: 252: default:
  2043                           
  2044                           ;MotorDriver.c: 250: }
  2045                           ;MotorDriver.c: 251: break;
  2046  000294  0012               	return	
  2047  000296                     l2133:
  2048  000296  504A               	movf	_EstadoActual,w,c
  2049                           
  2050                           ; Switch size 1, requested type "space"
  2051                           ; Number of cases is 5, Range of values is 0 to 4
  2052                           ; switch strategies available:
  2053                           ; Name         Instructions Cycles
  2054                           ; simple_byte           16     9 (average)
  2055                           ;	Chosen strategy is simple_byte
  2056  000298  0A00               	xorlw	0	; case 0
  2057  00029A  B4D8               	btfsc	status,2,c
  2058  00029C  D709               	goto	l2029
  2059  00029E  0A01               	xorlw	1	; case 1
  2060  0002A0  B4D8               	btfsc	status,2,c
  2061  0002A2  D711               	goto	l2039
  2062  0002A4  0A03               	xorlw	3	; case 2
  2063  0002A6  B4D8               	btfsc	status,2,c
  2064  0002A8  D745               	goto	l2061
  2065  0002AA  0A01               	xorlw	1	; case 3
  2066  0002AC  B4D8               	btfsc	status,2,c
  2067  0002AE  D77D               	goto	l2085
  2068  0002B0  0A07               	xorlw	7	; case 4
  2069  0002B2  A4D8               	btfss	status,2,c
  2070  0002B4  0012               	return	
  2071  0002B6  D7B4               	goto	l2109
  2072  0002B8                     __end_of_State16MEF_act_Backward:
  2073                           	opt stack 0
  2074                           tblptru	equ	0xFF8
  2075                           tblptrh	equ	0xFF7
  2076                           tblptrl	equ	0xFF6
  2077                           tablat	equ	0xFF5
  2078                           prodh	equ	0xFF4
  2079                           prodl	equ	0xFF3
  2080                           intcon	equ	0xFF2
  2081                           postinc0	equ	0xFEE
  2082                           wreg	equ	0xFE8
  2083                           postdec1	equ	0xFE5
  2084                           fsr1l	equ	0xFE1
  2085                           indf2	equ	0xFDF
  2086                           fsr2h	equ	0xFDA
  2087                           fsr2l	equ	0xFD9
  2088                           status	equ	0xFD8
  2089                           
  2090 ;; *************** function _EUSART1_Write *****************
  2091 ;; Defined at:
  2092 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  txData          1    wreg     unsigned char 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  txData          1   14[COMRAM] unsigned char 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;Total ram usage:        1 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    4
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_State16MEF_act_Backward
  2117 ;;		_ADC_Conversion
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text5
  2122  000C92                     __ptext5:
  2123                           	opt stack 0
  2124  000C92                     _EUSART1_Write:
  2125                           	opt stack 24
  2126                           
  2127                           ;incstack = 0
  2128                           ;EUSART1_Write@txData stored from wreg
  2129  000C92  6E2F               	movwf	EUSART1_Write@txData,c
  2130  000C94                     l337:
  2131  000C94  A89E               	btfss	3998,4,c	;volatile
  2132  000C96  D7FE               	goto	l337
  2133                           
  2134                           ;eusart1.c: 100: }
  2135                           ;eusart1.c: 102: TXREG1 = txData;
  2136  000C98  C02F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2137  000C9C  0012               	return		;funcret
  2138  000C9E                     __end_of_EUSART1_Write:
  2139                           	opt stack 0
  2140                           tblptru	equ	0xFF8
  2141                           tblptrh	equ	0xFF7
  2142                           tblptrl	equ	0xFF6
  2143                           tablat	equ	0xFF5
  2144                           prodh	equ	0xFF4
  2145                           prodl	equ	0xFF3
  2146                           intcon	equ	0xFF2
  2147                           postinc0	equ	0xFEE
  2148                           wreg	equ	0xFE8
  2149                           postdec1	equ	0xFE5
  2150                           fsr1l	equ	0xFE1
  2151                           indf2	equ	0xFDF
  2152                           fsr2h	equ	0xFDA
  2153                           fsr2l	equ	0xFD9
  2154                           status	equ	0xFD8
  2155                           
  2156 ;; *************** function _State16MEF_act *****************
  2157 ;; Defined at:
  2158 ;;		line 118 in file "MotorDriver.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;Total ram usage:        1 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    5
  2179 ;; This function calls:
  2180 ;;		_EPWM1_LoadDutyValue
  2181 ;;		_EPWM2_LoadDutyValue
  2182 ;;		_limitar_corriente
  2183 ;; This function is called by:
  2184 ;;		_StepMove
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text6
  2189  00069C                     __ptext6:
  2190                           	opt stack 0
  2191  00069C                     _State16MEF_act:
  2192                           	opt stack 24
  2193                           
  2194                           ;MotorDriver.c: 119: switch(EstadoActual) {
  2195                           
  2196                           ;incstack = 0
  2197  00069C  D0E5               	goto	l2025
  2198  00069E                     l1937:
  2199                           
  2200                           ;MotorDriver.c: 121: PSTR1CON = 0x00; PSTR2CON = 0x00;
  2201  00069E  0E00               	movlw	0
  2202  0006A0  6EB9               	movwf	4025,c	;volatile
  2203  0006A2  0E00               	movlw	0
  2204  0006A4  6E63               	movwf	3939,c	;volatile
  2205                           
  2206                           ;MotorDriver.c: 122: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  2207  0006A6  948B               	bcf	3979,2,c	;volatile
  2208  0006A8  9A8C               	bcf	3980,5,c	;volatile
  2209  0006AA  928B               	bcf	3979,1,c	;volatile
  2210  0006AC  908B               	bcf	3979,0,c	;volatile
  2211                           
  2212                           ;MotorDriver.c: 123: EstadoActual = STATE1;
  2213  0006AE  0E01               	movlw	1
  2214  0006B0  6E4A               	movwf	_EstadoActual,c
  2215                           
  2216                           ;MotorDriver.c: 124: break;
  2217  0006B2  0012               	return	
  2218  0006B4                     l1947:
  2219                           
  2220                           ;MotorDriver.c: 126: PSTR1CON = 0x01; PSTR2CON = 0x01;
  2221  0006B4  0E01               	movlw	1
  2222  0006B6  6EB9               	movwf	4025,c	;volatile
  2223  0006B8  0E01               	movlw	1
  2224  0006BA  6E63               	movwf	3939,c	;volatile
  2225                           
  2226                           ;MotorDriver.c: 127: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2227  0006BC  9A8C               	bcf	3980,5,c	;volatile
  2228  0006BE  908B               	bcf	3979,0,c	;volatile
  2229                           
  2230                           ;MotorDriver.c: 128: if (Microstep<16){
  2231  0006C0  5044               	movf	_Microstep,w,c
  2232  0006C2  0A80               	xorlw	128
  2233  0006C4  0F70               	addlw	-144
  2234  0006C6  B0D8               	btfsc	status,0,c
  2235  0006C8  0012               	return	
  2236                           
  2237                           ;MotorDriver.c: 130: limitar_corriente();
  2238  0006CA  ECF9  F004         	call	_limitar_corriente	;wreg free
  2239                           
  2240                           ;MotorDriver.c: 131: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2241  0006CE  5044               	movf	_Microstep,w,c
  2242  0006D0  0D01               	mullw	1
  2243  0006D2  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2244  0006D4  24F3               	addwf	prodl,w,c
  2245  0006D6  6ED9               	movwf	fsr2l,c
  2246  0006D8  0E00               	movlw	high _LookUP_TABLE_COS_16
  2247  0006DA  20F4               	addwfc	prodh,w,c
  2248  0006DC  6EDA               	movwf	fsr2h,c
  2249  0006DE  50DF               	movf	indf2,w,c
  2250  0006E0  6E33               	movwf	??_State16MEF_act& (0+255),c
  2251  0006E2  5033               	movf	??_State16MEF_act,w,c
  2252  0006E4  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2253  0006E6  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2254  0006E8  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2255                           
  2256                           ;MotorDriver.c: 132: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2257  0006EC  5044               	movf	_Microstep,w,c
  2258  0006EE  0D01               	mullw	1
  2259  0006F0  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2260  0006F2  24F3               	addwf	prodl,w,c
  2261  0006F4  6ED9               	movwf	fsr2l,c
  2262  0006F6  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2263  0006F8  20F4               	addwfc	prodh,w,c
  2264  0006FA  6EDA               	movwf	fsr2h,c
  2265  0006FC  50DF               	movf	indf2,w,c
  2266  0006FE  6E33               	movwf	??_State16MEF_act& (0+255),c
  2267  000700  5033               	movf	??_State16MEF_act,w,c
  2268  000702  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2269  000704  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2270  000706  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2271                           
  2272                           ;MotorDriver.c: 133: if (Microstep==15){
  2273  00070A  0E0F               	movlw	15
  2274  00070C  1844               	xorwf	_Microstep,w,c
  2275  00070E  A4D8               	btfss	status,2,c
  2276  000710  D002               	goto	l1961
  2277                           
  2278                           ;MotorDriver.c: 134: EstadoActual = STATE2;
  2279  000712  0E02               	movlw	2
  2280  000714  6E4A               	movwf	_EstadoActual,c
  2281  000716                     l1961:
  2282                           
  2283                           ;MotorDriver.c: 135: }
  2284                           ;MotorDriver.c: 136: Microstep++;
  2285  000716  2A44               	incf	_Microstep,f,c
  2286                           
  2287                           ;MotorDriver.c: 137: }
  2288                           ;MotorDriver.c: 138: break;
  2289  000718  0012               	return	
  2290  00071A                     l1963:
  2291                           
  2292                           ;MotorDriver.c: 140: PSTR1CON = 0x02; PSTR2CON = 0x01;
  2293  00071A  0E02               	movlw	2
  2294  00071C  6EB9               	movwf	4025,c	;volatile
  2295  00071E  0E01               	movlw	1
  2296  000720  6E63               	movwf	3939,c	;volatile
  2297                           
  2298                           ;MotorDriver.c: 141: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2299  000722  948B               	bcf	3979,2,c	;volatile
  2300  000724  908B               	bcf	3979,0,c	;volatile
  2301                           
  2302                           ;MotorDriver.c: 142: limitar_corriente();
  2303  000726  ECF9  F004         	call	_limitar_corriente	;wreg free
  2304                           
  2305                           ;MotorDriver.c: 143: if ((Microstep<32)&&(Microstep>15)){
  2306  00072A  5044               	movf	_Microstep,w,c
  2307  00072C  0A80               	xorlw	128
  2308  00072E  0F60               	addlw	-160
  2309  000730  B0D8               	btfsc	status,0,c
  2310  000732  0012               	return	
  2311  000734  5044               	movf	_Microstep,w,c
  2312  000736  0A80               	xorlw	128
  2313  000738  0F70               	addlw	-144
  2314  00073A  A0D8               	btfss	status,0,c
  2315  00073C  0012               	return	
  2316                           
  2317                           ;MotorDriver.c: 145: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2318  00073E  5044               	movf	_Microstep,w,c
  2319  000740  0D01               	mullw	1
  2320  000742  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2321  000744  24F3               	addwf	prodl,w,c
  2322  000746  6ED9               	movwf	fsr2l,c
  2323  000748  0E00               	movlw	high _LookUP_TABLE_COS_16
  2324  00074A  20F4               	addwfc	prodh,w,c
  2325  00074C  6EDA               	movwf	fsr2h,c
  2326  00074E  50DF               	movf	indf2,w,c
  2327  000750  6E33               	movwf	??_State16MEF_act& (0+255),c
  2328  000752  5033               	movf	??_State16MEF_act,w,c
  2329  000754  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2330  000756  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2331  000758  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2332                           
  2333                           ;MotorDriver.c: 146: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2334  00075C  5044               	movf	_Microstep,w,c
  2335  00075E  0D01               	mullw	1
  2336  000760  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2337  000762  24F3               	addwf	prodl,w,c
  2338  000764  6ED9               	movwf	fsr2l,c
  2339  000766  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2340  000768  20F4               	addwfc	prodh,w,c
  2341  00076A  6EDA               	movwf	fsr2h,c
  2342  00076C  50DF               	movf	indf2,w,c
  2343  00076E  6E33               	movwf	??_State16MEF_act& (0+255),c
  2344  000770  5033               	movf	??_State16MEF_act,w,c
  2345  000772  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2346  000774  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2347  000776  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2348                           
  2349                           ;MotorDriver.c: 147: if (Microstep==31){
  2350  00077A  0E1F               	movlw	31
  2351  00077C  1844               	xorwf	_Microstep,w,c
  2352  00077E  A4D8               	btfss	status,2,c
  2353  000780  D002               	goto	l1981
  2354                           
  2355                           ;MotorDriver.c: 148: EstadoActual = STATE3;
  2356  000782  0E03               	movlw	3
  2357  000784  6E4A               	movwf	_EstadoActual,c
  2358  000786                     l1981:
  2359                           
  2360                           ;MotorDriver.c: 149: }
  2361                           ;MotorDriver.c: 150: Microstep++;
  2362  000786  2A44               	incf	_Microstep,f,c
  2363                           
  2364                           ;MotorDriver.c: 151: }
  2365                           ;MotorDriver.c: 152: break;
  2366  000788  0012               	return	
  2367  00078A                     l1983:
  2368                           
  2369                           ;MotorDriver.c: 154: PSTR1CON = 0x02; PSTR2CON = 0x02;
  2370  00078A  0E02               	movlw	2
  2371  00078C  6EB9               	movwf	4025,c	;volatile
  2372  00078E  0E02               	movlw	2
  2373  000790  6E63               	movwf	3939,c	;volatile
  2374                           
  2375                           ;MotorDriver.c: 155: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2376  000792  948B               	bcf	3979,2,c	;volatile
  2377  000794  928B               	bcf	3979,1,c	;volatile
  2378                           
  2379                           ;MotorDriver.c: 156: limitar_corriente();
  2380  000796  ECF9  F004         	call	_limitar_corriente	;wreg free
  2381                           
  2382                           ;MotorDriver.c: 157: if ((Microstep<48)&&(Microstep>31)){
  2383  00079A  5044               	movf	_Microstep,w,c
  2384  00079C  0A80               	xorlw	128
  2385  00079E  0F50               	addlw	-176
  2386  0007A0  B0D8               	btfsc	status,0,c
  2387  0007A2  0012               	return	
  2388  0007A4  5044               	movf	_Microstep,w,c
  2389  0007A6  0A80               	xorlw	128
  2390  0007A8  0F60               	addlw	-160
  2391  0007AA  A0D8               	btfss	status,0,c
  2392  0007AC  0012               	return	
  2393                           
  2394                           ;MotorDriver.c: 159: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2395  0007AE  5044               	movf	_Microstep,w,c
  2396  0007B0  0D01               	mullw	1
  2397  0007B2  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2398  0007B4  24F3               	addwf	prodl,w,c
  2399  0007B6  6ED9               	movwf	fsr2l,c
  2400  0007B8  0E00               	movlw	high _LookUP_TABLE_COS_16
  2401  0007BA  20F4               	addwfc	prodh,w,c
  2402  0007BC  6EDA               	movwf	fsr2h,c
  2403  0007BE  50DF               	movf	indf2,w,c
  2404  0007C0  6E33               	movwf	??_State16MEF_act& (0+255),c
  2405  0007C2  5033               	movf	??_State16MEF_act,w,c
  2406  0007C4  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2407  0007C6  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2408  0007C8  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2409                           
  2410                           ;MotorDriver.c: 160: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2411  0007CC  5044               	movf	_Microstep,w,c
  2412  0007CE  0D01               	mullw	1
  2413  0007D0  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2414  0007D2  24F3               	addwf	prodl,w,c
  2415  0007D4  6ED9               	movwf	fsr2l,c
  2416  0007D6  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2417  0007D8  20F4               	addwfc	prodh,w,c
  2418  0007DA  6EDA               	movwf	fsr2h,c
  2419  0007DC  50DF               	movf	indf2,w,c
  2420  0007DE  6E33               	movwf	??_State16MEF_act& (0+255),c
  2421  0007E0  5033               	movf	??_State16MEF_act,w,c
  2422  0007E2  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2423  0007E4  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2424  0007E6  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2425                           
  2426                           ;MotorDriver.c: 161: if (Microstep==47){
  2427  0007EA  0E2F               	movlw	47
  2428  0007EC  1844               	xorwf	_Microstep,w,c
  2429  0007EE  A4D8               	btfss	status,2,c
  2430  0007F0  D002               	goto	l2001
  2431                           
  2432                           ;MotorDriver.c: 162: EstadoActual = STATE4;
  2433  0007F2  0E04               	movlw	4
  2434  0007F4  6E4A               	movwf	_EstadoActual,c
  2435  0007F6                     l2001:
  2436                           
  2437                           ;MotorDriver.c: 163: }
  2438                           ;MotorDriver.c: 164: Microstep++;
  2439  0007F6  2A44               	incf	_Microstep,f,c
  2440                           
  2441                           ;MotorDriver.c: 165: }
  2442                           ;MotorDriver.c: 166: break;
  2443  0007F8  0012               	return	
  2444  0007FA                     l2003:
  2445                           
  2446                           ;MotorDriver.c: 168: PSTR1CON = 0x01; PSTR2CON = 0x02;
  2447  0007FA  0E01               	movlw	1
  2448  0007FC  6EB9               	movwf	4025,c	;volatile
  2449  0007FE  0E02               	movlw	2
  2450  000800  6E63               	movwf	3939,c	;volatile
  2451                           
  2452                           ;MotorDriver.c: 169: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2453  000802  9A8C               	bcf	3980,5,c	;volatile
  2454  000804  928B               	bcf	3979,1,c	;volatile
  2455                           
  2456                           ;MotorDriver.c: 170: if ((Microstep<64)&&(Microstep>47)){
  2457  000806  5044               	movf	_Microstep,w,c
  2458  000808  0A80               	xorlw	128
  2459  00080A  0F40               	addlw	-192
  2460  00080C  B0D8               	btfsc	status,0,c
  2461  00080E  0012               	return	
  2462  000810  5044               	movf	_Microstep,w,c
  2463  000812  0A80               	xorlw	128
  2464  000814  0F50               	addlw	-176
  2465  000816  A0D8               	btfss	status,0,c
  2466  000818  0012               	return	
  2467                           
  2468                           ;MotorDriver.c: 172: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2469  00081A  5044               	movf	_Microstep,w,c
  2470  00081C  0D01               	mullw	1
  2471  00081E  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2472  000820  24F3               	addwf	prodl,w,c
  2473  000822  6ED9               	movwf	fsr2l,c
  2474  000824  0E00               	movlw	high _LookUP_TABLE_COS_16
  2475  000826  20F4               	addwfc	prodh,w,c
  2476  000828  6EDA               	movwf	fsr2h,c
  2477  00082A  50DF               	movf	indf2,w,c
  2478  00082C  6E33               	movwf	??_State16MEF_act& (0+255),c
  2479  00082E  5033               	movf	??_State16MEF_act,w,c
  2480  000830  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2481  000832  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2482  000834  EC62  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  2483                           
  2484                           ;MotorDriver.c: 173: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2485  000838  5044               	movf	_Microstep,w,c
  2486  00083A  0D01               	mullw	1
  2487  00083C  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2488  00083E  24F3               	addwf	prodl,w,c
  2489  000840  6ED9               	movwf	fsr2l,c
  2490  000842  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2491  000844  20F4               	addwfc	prodh,w,c
  2492  000846  6EDA               	movwf	fsr2h,c
  2493  000848  50DF               	movf	indf2,w,c
  2494  00084A  6E33               	movwf	??_State16MEF_act& (0+255),c
  2495  00084C  5033               	movf	??_State16MEF_act,w,c
  2496  00084E  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2497  000850  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2498  000852  EC4A  F005         	call	_EPWM2_LoadDutyValue	;wreg free
  2499                           
  2500                           ;MotorDriver.c: 174: if (Microstep==63){
  2501  000856  0E3F               	movlw	63
  2502  000858  1844               	xorwf	_Microstep,w,c
  2503  00085A  A4D8               	btfss	status,2,c
  2504  00085C  D003               	goto	l2021
  2505                           
  2506                           ;MotorDriver.c: 176: EstadoActual = STATE1;
  2507  00085E  0E01               	movlw	1
  2508  000860  6E4A               	movwf	_EstadoActual,c
  2509                           
  2510                           ;MotorDriver.c: 177: Microstep=-1;
  2511  000862  6844               	setf	_Microstep,c
  2512  000864                     l2021:
  2513                           
  2514                           ;MotorDriver.c: 178: }
  2515                           ;MotorDriver.c: 179: Microstep++;
  2516  000864  2A44               	incf	_Microstep,f,c
  2517                           
  2518                           ;MotorDriver.c: 185: }
  2519                           
  2520                           ;MotorDriver.c: 184: break;
  2521                           
  2522                           ;MotorDriver.c: 182: default:
  2523                           
  2524                           ;MotorDriver.c: 180: }
  2525                           ;MotorDriver.c: 181: break;
  2526  000866  0012               	return	
  2527  000868                     l2025:
  2528  000868  504A               	movf	_EstadoActual,w,c
  2529                           
  2530                           ; Switch size 1, requested type "space"
  2531                           ; Number of cases is 5, Range of values is 0 to 4
  2532                           ; switch strategies available:
  2533                           ; Name         Instructions Cycles
  2534                           ; simple_byte           16     9 (average)
  2535                           ;	Chosen strategy is simple_byte
  2536  00086A  0A00               	xorlw	0	; case 0
  2537  00086C  B4D8               	btfsc	status,2,c
  2538  00086E  D717               	goto	l1937
  2539  000870  0A01               	xorlw	1	; case 1
  2540  000872  B4D8               	btfsc	status,2,c
  2541  000874  D71F               	goto	l1947
  2542  000876  0A03               	xorlw	3	; case 2
  2543  000878  B4D8               	btfsc	status,2,c
  2544  00087A  D74F               	goto	l1963
  2545  00087C  0A01               	xorlw	1	; case 3
  2546  00087E  B4D8               	btfsc	status,2,c
  2547  000880  D784               	goto	l1983
  2548  000882  0A07               	xorlw	7	; case 4
  2549  000884  A4D8               	btfss	status,2,c
  2550  000886  0012               	return	
  2551  000888  D7B8               	goto	l2003
  2552  00088A                     __end_of_State16MEF_act:
  2553                           	opt stack 0
  2554                           tblptru	equ	0xFF8
  2555                           tblptrh	equ	0xFF7
  2556                           tblptrl	equ	0xFF6
  2557                           tablat	equ	0xFF5
  2558                           prodh	equ	0xFF4
  2559                           prodl	equ	0xFF3
  2560                           intcon	equ	0xFF2
  2561                           postinc0	equ	0xFEE
  2562                           wreg	equ	0xFE8
  2563                           postdec1	equ	0xFE5
  2564                           fsr1l	equ	0xFE1
  2565                           indf2	equ	0xFDF
  2566                           fsr2h	equ	0xFDA
  2567                           fsr2l	equ	0xFD9
  2568                           status	equ	0xFD8
  2569                           
  2570 ;; *************** function _limitar_corriente *****************
  2571 ;; Defined at:
  2572 ;;		line 362 in file "MotorDriver.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;Total ram usage:        1 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    4
  2593 ;; This function calls:
  2594 ;;		Nothing
  2595 ;; This function is called by:
  2596 ;;		_State8MEF_act
  2597 ;;		_State16MEF_act
  2598 ;;		_State16MEF_act_Backward
  2599 ;;		_State8MEF_act_Backward
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text7
  2604  0009F2                     __ptext7:
  2605                           	opt stack 0
  2606  0009F2                     _limitar_corriente:
  2607                           	opt stack 24
  2608                           
  2609                           ;MotorDriver.c: 363: if ((LookUP_TABLE_COS[Microstep])>106){
  2610                           
  2611                           ;incstack = 0
  2612  0009F2  5044               	movf	_Microstep,w,c
  2613  0009F4  0D01               	mullw	1
  2614  0009F6  0E01               	movlw	low _LookUP_TABLE_COS
  2615  0009F8  24F3               	addwf	prodl,w,c
  2616  0009FA  6ED9               	movwf	fsr2l,c
  2617  0009FC  0E00               	movlw	high _LookUP_TABLE_COS
  2618  0009FE  20F4               	addwfc	prodh,w,c
  2619  000A00  6EDA               	movwf	fsr2h,c
  2620  000A02  0E6A               	movlw	106
  2621  000A04  64DF               	cpfsgt	indf2,c
  2622  000A06  D00A               	goto	l587
  2623                           
  2624                           ;MotorDriver.c: 364: LookUP_TABLE_COS[Microstep]=106;
  2625  000A08  5044               	movf	_Microstep,w,c
  2626  000A0A  0D01               	mullw	1
  2627  000A0C  0E01               	movlw	low _LookUP_TABLE_COS
  2628  000A0E  24F3               	addwf	prodl,w,c
  2629  000A10  6ED9               	movwf	fsr2l,c
  2630  000A12  0E00               	movlw	high _LookUP_TABLE_COS
  2631  000A14  20F4               	addwfc	prodh,w,c
  2632  000A16  6EDA               	movwf	fsr2h,c
  2633  000A18  0E6A               	movlw	106
  2634  000A1A  6EDF               	movwf	indf2,c
  2635  000A1C                     l587:
  2636                           
  2637                           ;MotorDriver.c: 365: }
  2638                           ;MotorDriver.c: 366: if ((LookUP_TABLE_SEN[Microstep])>106){
  2639  000A1C  5044               	movf	_Microstep,w,c
  2640  000A1E  0D01               	mullw	1
  2641  000A20  0EE0               	movlw	low _LookUP_TABLE_SEN
  2642  000A22  24F3               	addwf	prodl,w,c
  2643  000A24  6ED9               	movwf	fsr2l,c
  2644  000A26  0E00               	movlw	high _LookUP_TABLE_SEN
  2645  000A28  20F4               	addwfc	prodh,w,c
  2646  000A2A  6EDA               	movwf	fsr2h,c
  2647  000A2C  0E6A               	movlw	106
  2648  000A2E  64DF               	cpfsgt	indf2,c
  2649  000A30  0012               	return	
  2650                           
  2651                           ;MotorDriver.c: 367: LookUP_TABLE_SEN[Microstep]=106;
  2652  000A32  5044               	movf	_Microstep,w,c
  2653  000A34  0D01               	mullw	1
  2654  000A36  0EE0               	movlw	low _LookUP_TABLE_SEN
  2655  000A38  24F3               	addwf	prodl,w,c
  2656  000A3A  6ED9               	movwf	fsr2l,c
  2657  000A3C  0E00               	movlw	high _LookUP_TABLE_SEN
  2658  000A3E  20F4               	addwfc	prodh,w,c
  2659  000A40  6EDA               	movwf	fsr2h,c
  2660  000A42  0E6A               	movlw	106
  2661  000A44  6EDF               	movwf	indf2,c
  2662  000A46  0012               	return	
  2663  000A48                     __end_of_limitar_corriente:
  2664                           	opt stack 0
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           prodh	equ	0xFF4
  2670                           prodl	equ	0xFF3
  2671                           intcon	equ	0xFF2
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           postdec1	equ	0xFE5
  2675                           fsr1l	equ	0xFE1
  2676                           indf2	equ	0xFDF
  2677                           fsr2h	equ	0xFDA
  2678                           fsr2l	equ	0xFD9
  2679                           status	equ	0xFD8
  2680                           
  2681 ;; *************** function _EPWM2_LoadDutyValue *****************
  2682 ;; Defined at:
  2683 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  dutyValue       2   14[COMRAM] unsigned int 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;		None
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1    wreg      void 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;Total ram usage:        4 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    4
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_State8MEF_act
  2708 ;;		_State16MEF_act
  2709 ;;		_State16MEF_act_Backward
  2710 ;;		_State8MEF_act_Backward
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text8
  2715  000A94                     __ptext8:
  2716                           	opt stack 0
  2717  000A94                     _EPWM2_LoadDutyValue:
  2718                           	opt stack 24
  2719                           
  2720                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  2721                           
  2722                           ;incstack = 0
  2723  000A94  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  2724  000A98  C030  F032         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  2725  000A9C  90D8               	bcf	status,0,c
  2726  000A9E  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  2727  000AA0  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  2728  000AA2  90D8               	bcf	status,0,c
  2729  000AA4  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  2730  000AA6  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  2731  000AA8  5031               	movf	??_EPWM2_LoadDutyValue,w,c
  2732  000AAA  6E67               	movwf	3943,c	;volatile
  2733                           
  2734                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2735  000AAC  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  2736  000AB0  0E03               	movlw	3
  2737  000AB2  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  2738  000AB4  3A31               	swapf	??_EPWM2_LoadDutyValue,f,c
  2739  000AB6  0EF0               	movlw	240
  2740  000AB8  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  2741  000ABA  5066               	movf	3942,w,c	;volatile
  2742  000ABC  0BCF               	andlw	207
  2743  000ABE  1031               	iorwf	??_EPWM2_LoadDutyValue,w,c
  2744  000AC0  6E66               	movwf	3942,c	;volatile
  2745  000AC2  0012               	return		;funcret
  2746  000AC4                     __end_of_EPWM2_LoadDutyValue:
  2747                           	opt stack 0
  2748                           tblptru	equ	0xFF8
  2749                           tblptrh	equ	0xFF7
  2750                           tblptrl	equ	0xFF6
  2751                           tablat	equ	0xFF5
  2752                           prodh	equ	0xFF4
  2753                           prodl	equ	0xFF3
  2754                           intcon	equ	0xFF2
  2755                           postinc0	equ	0xFEE
  2756                           wreg	equ	0xFE8
  2757                           postdec1	equ	0xFE5
  2758                           fsr1l	equ	0xFE1
  2759                           indf2	equ	0xFDF
  2760                           fsr2h	equ	0xFDA
  2761                           fsr2l	equ	0xFD9
  2762                           status	equ	0xFD8
  2763                           
  2764 ;; *************** function _EPWM1_LoadDutyValue *****************
  2765 ;; Defined at:
  2766 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  dutyValue       2   14[COMRAM] unsigned int 
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		wreg, status,2, status,0
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;Total ram usage:        4 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    4
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_State8MEF_act
  2791 ;;		_State16MEF_act
  2792 ;;		_State16MEF_act_Backward
  2793 ;;		_State8MEF_act_Backward
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text9
  2798  000AC4                     __ptext9:
  2799                           	opt stack 0
  2800  000AC4                     _EPWM1_LoadDutyValue:
  2801                           	opt stack 24
  2802                           
  2803                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  2804                           
  2805                           ;incstack = 0
  2806  000AC4  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  2807  000AC8  C030  F032         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  2808  000ACC  90D8               	bcf	status,0,c
  2809  000ACE  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  2810  000AD0  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  2811  000AD2  90D8               	bcf	status,0,c
  2812  000AD4  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  2813  000AD6  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  2814  000AD8  5031               	movf	??_EPWM1_LoadDutyValue,w,c
  2815  000ADA  6EBE               	movwf	4030,c	;volatile
  2816                           
  2817                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2818  000ADC  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  2819  000AE0  0E03               	movlw	3
  2820  000AE2  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  2821  000AE4  3A31               	swapf	??_EPWM1_LoadDutyValue,f,c
  2822  000AE6  0EF0               	movlw	240
  2823  000AE8  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  2824  000AEA  50BD               	movf	4029,w,c	;volatile
  2825  000AEC  0BCF               	andlw	207
  2826  000AEE  1031               	iorwf	??_EPWM1_LoadDutyValue,w,c
  2827  000AF0  6EBD               	movwf	4029,c	;volatile
  2828  000AF2  0012               	return		;funcret
  2829  000AF4                     __end_of_EPWM1_LoadDutyValue:
  2830                           	opt stack 0
  2831                           tblptru	equ	0xFF8
  2832                           tblptrh	equ	0xFF7
  2833                           tblptrl	equ	0xFF6
  2834                           tablat	equ	0xFF5
  2835                           prodh	equ	0xFF4
  2836                           prodl	equ	0xFF3
  2837                           intcon	equ	0xFF2
  2838                           postinc0	equ	0xFEE
  2839                           wreg	equ	0xFE8
  2840                           postdec1	equ	0xFE5
  2841                           fsr1l	equ	0xFE1
  2842                           indf2	equ	0xFDF
  2843                           fsr2h	equ	0xFDA
  2844                           fsr2l	equ	0xFD9
  2845                           status	equ	0xFD8
  2846                           
  2847 ;; *************** function _StateMEF_ini *****************
  2848 ;; Defined at:
  2849 ;;		line 34 in file "MotorDriver.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;Total ram usage:        0 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    4
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text10
  2878  000C9E                     __ptext10:
  2879                           	opt stack 0
  2880  000C9E                     _StateMEF_ini:
  2881                           	opt stack 26
  2882                           
  2883                           ;MotorDriver.c: 36: EstadoActual = STATE1;
  2884                           
  2885                           ;incstack = 0
  2886  000C9E  0E01               	movlw	1
  2887  000CA0  6E4A               	movwf	_EstadoActual,c
  2888                           
  2889                           ;MotorDriver.c: 37: Microstep=0;
  2890  000CA2  0E00               	movlw	0
  2891  000CA4  6E44               	movwf	_Microstep,c
  2892  000CA6  0012               	return		;funcret
  2893  000CA8                     __end_of_StateMEF_ini:
  2894                           	opt stack 0
  2895                           tblptru	equ	0xFF8
  2896                           tblptrh	equ	0xFF7
  2897                           tblptrl	equ	0xFF6
  2898                           tablat	equ	0xFF5
  2899                           prodh	equ	0xFF4
  2900                           prodl	equ	0xFF3
  2901                           intcon	equ	0xFF2
  2902                           postinc0	equ	0xFEE
  2903                           wreg	equ	0xFE8
  2904                           postdec1	equ	0xFE5
  2905                           fsr1l	equ	0xFE1
  2906                           indf2	equ	0xFDF
  2907                           fsr2h	equ	0xFDA
  2908                           fsr2l	equ	0xFD9
  2909                           status	equ	0xFD8
  2910                           
  2911 ;; *************** function _SYSTEM_Initialize *****************
  2912 ;; Defined at:
  2913 ;;		line 111 in file "mcc_generated_files/mcc.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;Total ram usage:        0 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    6
  2934 ;; This function calls:
  2935 ;;		_ADC_Initialize
  2936 ;;		_CCP5_Initialize
  2937 ;;		_EPWM1_Initialize
  2938 ;;		_EPWM2_Initialize
  2939 ;;		_EUSART1_Initialize
  2940 ;;		_INTERRUPT_Initialize
  2941 ;;		_OSCILLATOR_Initialize
  2942 ;;		_PIN_MANAGER_Initialize
  2943 ;;		_TMR2_Initialize
  2944 ;;		_TMR6_Initialize
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text11
  2951  000B20                     __ptext11:
  2952                           	opt stack 0
  2953  000B20                     _SYSTEM_Initialize:
  2954                           	opt stack 24
  2955                           
  2956                           ;mcc.c: 114: INTERRUPT_Initialize();
  2957                           
  2958                           ;incstack = 0
  2959  000B20  EC67  F006         	call	_INTERRUPT_Initialize	;wreg free
  2960                           
  2961                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  2962  000B24  EC24  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  2963                           
  2964                           ;mcc.c: 116: OSCILLATOR_Initialize();
  2965  000B28  EC42  F006         	call	_OSCILLATOR_Initialize	;wreg free
  2966                           
  2967                           ;mcc.c: 117: TMR6_Initialize();
  2968  000B2C  ECA5  F005         	call	_TMR6_Initialize	;wreg free
  2969                           
  2970                           ;mcc.c: 118: EPWM2_Initialize();
  2971  000B30  ECB9  F005         	call	_EPWM2_Initialize	;wreg free
  2972                           
  2973                           ;mcc.c: 119: CCP5_Initialize();
  2974  000B34  EC38  F006         	call	_CCP5_Initialize	;wreg free
  2975                           
  2976                           ;mcc.c: 120: ADC_Initialize();
  2977  000B38  EC21  F006         	call	_ADC_Initialize	;wreg free
  2978                           
  2979                           ;mcc.c: 121: EPWM1_Initialize();
  2980  000B3C  ECCB  F005         	call	_EPWM1_Initialize	;wreg free
  2981                           
  2982                           ;mcc.c: 122: TMR2_Initialize();
  2983  000B40  ECEF  F005         	call	_TMR2_Initialize	;wreg free
  2984                           
  2985                           ;mcc.c: 123: EUSART1_Initialize();
  2986  000B44  EC2D  F006         	call	_EUSART1_Initialize	;wreg free
  2987  000B48  0012               	return		;funcret
  2988  000B4A                     __end_of_SYSTEM_Initialize:
  2989                           	opt stack 0
  2990                           tblptru	equ	0xFF8
  2991                           tblptrh	equ	0xFF7
  2992                           tblptrl	equ	0xFF6
  2993                           tablat	equ	0xFF5
  2994                           prodh	equ	0xFF4
  2995                           prodl	equ	0xFF3
  2996                           intcon	equ	0xFF2
  2997                           postinc0	equ	0xFEE
  2998                           wreg	equ	0xFE8
  2999                           postdec1	equ	0xFE5
  3000                           fsr1l	equ	0xFE1
  3001                           indf2	equ	0xFDF
  3002                           fsr2h	equ	0xFDA
  3003                           fsr2l	equ	0xFD9
  3004                           status	equ	0xFD8
  3005                           
  3006 ;; *************** function _TMR6_Initialize *****************
  3007 ;; Defined at:
  3008 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2, status,0, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;Total ram usage:        0 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    5
  3029 ;; This function calls:
  3030 ;;		_TMR6_SetInterruptHandler
  3031 ;;		_TMR6_StartTimer
  3032 ;; This function is called by:
  3033 ;;		_SYSTEM_Initialize
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text12
  3038  000B4A                     __ptext12:
  3039                           	opt stack 0
  3040  000B4A                     _TMR6_Initialize:
  3041                           	opt stack 24
  3042                           
  3043                           ;tmr6.c: 68: T6CON = 0x01;
  3044                           
  3045                           ;incstack = 0
  3046  000B4A  0E01               	movlw	1
  3047  000B4C  010F               	movlb	15	; () banked
  3048  000B4E  6F4A               	movwf	74,b	;volatile
  3049                           
  3050                           ;tmr6.c: 71: PR6 = 0x45;
  3051  000B50  0E45               	movlw	69
  3052  000B52  010F               	movlb	15	; () banked
  3053  000B54  6F4B               	movwf	75,b	;volatile
  3054                           
  3055                           ;tmr6.c: 74: TMR6 = 0x00;
  3056  000B56  0E00               	movlw	0
  3057  000B58  010F               	movlb	15	; () banked
  3058  000B5A  6F4C               	movwf	76,b	;volatile
  3059                           
  3060                           ; BSR set to: 15
  3061                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
  3062  000B5C  947E               	bcf	3966,2,c	;volatile
  3063                           
  3064                           ; BSR set to: 15
  3065                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
  3066  000B5E  847D               	bsf	3965,2,c	;volatile
  3067                           
  3068                           ; BSR set to: 15
  3069                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  3070  000B60  0ED6               	movlw	low _TMR6_DefaultInterruptHandler
  3071  000B62  6E2F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  3072  000B64  0E0C               	movlw	high _TMR6_DefaultInterruptHandler
  3073  000B66  6E30               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  3074  000B68  EC54  F006         	call	_TMR6_SetInterruptHandler	;wreg free
  3075                           
  3076                           ;tmr6.c: 86: TMR6_StartTimer();
  3077  000B6C  EC62  F006         	call	_TMR6_StartTimer	;wreg free
  3078  000B70  0012               	return		;funcret
  3079  000B72                     __end_of_TMR6_Initialize:
  3080                           	opt stack 0
  3081                           tblptru	equ	0xFF8
  3082                           tblptrh	equ	0xFF7
  3083                           tblptrl	equ	0xFF6
  3084                           tablat	equ	0xFF5
  3085                           prodh	equ	0xFF4
  3086                           prodl	equ	0xFF3
  3087                           intcon	equ	0xFF2
  3088                           postinc0	equ	0xFEE
  3089                           wreg	equ	0xFE8
  3090                           postdec1	equ	0xFE5
  3091                           fsr1l	equ	0xFE1
  3092                           indf2	equ	0xFDF
  3093                           fsr2h	equ	0xFDA
  3094                           fsr2l	equ	0xFD9
  3095                           status	equ	0xFD8
  3096                           
  3097 ;; *************** function _TMR6_StartTimer *****************
  3098 ;; Defined at:
  3099 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;		None
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;		None
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		None
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;Total ram usage:        0 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    4
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_TMR6_Initialize
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           	psect	text13
  3128  000CC4                     __ptext13:
  3129                           	opt stack 0
  3130  000CC4                     _TMR6_StartTimer:
  3131                           	opt stack 24
  3132                           
  3133                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  3134                           
  3135                           ;incstack = 0
  3136  000CC4  010F               	movlb	15	; () banked
  3137  000CC6  854A               	bsf	74,2,b	;volatile
  3138                           
  3139                           ; BSR set to: 15
  3140  000CC8  0012               	return		;funcret
  3141  000CCA                     __end_of_TMR6_StartTimer:
  3142                           	opt stack 0
  3143                           tblptru	equ	0xFF8
  3144                           tblptrh	equ	0xFF7
  3145                           tblptrl	equ	0xFF6
  3146                           tablat	equ	0xFF5
  3147                           prodh	equ	0xFF4
  3148                           prodl	equ	0xFF3
  3149                           intcon	equ	0xFF2
  3150                           postinc0	equ	0xFEE
  3151                           wreg	equ	0xFE8
  3152                           postdec1	equ	0xFE5
  3153                           fsr1l	equ	0xFE1
  3154                           indf2	equ	0xFDF
  3155                           fsr2h	equ	0xFDA
  3156                           fsr2l	equ	0xFD9
  3157                           status	equ	0xFD8
  3158                           
  3159 ;; *************** function _TMR6_SetInterruptHandler *****************
  3160 ;; Defined at:
  3161 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;  InterruptHan    2   14[COMRAM] PTR void 
  3164 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;Total ram usage:        2 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:    4
  3183 ;; This function calls:
  3184 ;;		Nothing
  3185 ;; This function is called by:
  3186 ;;		_TMR6_Initialize
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text14
  3191  000CA8                     __ptext14:
  3192                           	opt stack 0
  3193  000CA8                     _TMR6_SetInterruptHandler:
  3194                           	opt stack 24
  3195                           
  3196                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  3197                           
  3198                           ; BSR set to: 15
  3199                           ;incstack = 0
  3200  000CA8  C02F  F048         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  3201  000CAC  C030  F049         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  3202  000CB0  0012               	return		;funcret
  3203  000CB2                     __end_of_TMR6_SetInterruptHandler:
  3204                           	opt stack 0
  3205                           tblptru	equ	0xFF8
  3206                           tblptrh	equ	0xFF7
  3207                           tblptrl	equ	0xFF6
  3208                           tablat	equ	0xFF5
  3209                           prodh	equ	0xFF4
  3210                           prodl	equ	0xFF3
  3211                           intcon	equ	0xFF2
  3212                           postinc0	equ	0xFEE
  3213                           wreg	equ	0xFE8
  3214                           postdec1	equ	0xFE5
  3215                           fsr1l	equ	0xFE1
  3216                           indf2	equ	0xFDF
  3217                           fsr2h	equ	0xFDA
  3218                           fsr2l	equ	0xFD9
  3219                           status	equ	0xFD8
  3220                           
  3221 ;; *************** function _TMR2_Initialize *****************
  3222 ;; Defined at:
  3223 ;;		line 65 in file "mcc_generated_files/tmr2.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;		None
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;Total ram usage:        0 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    5
  3244 ;; This function calls:
  3245 ;;		_TMR2_SetInterruptHandler
  3246 ;;		_TMR2_StartTimer
  3247 ;; This function is called by:
  3248 ;;		_SYSTEM_Initialize
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text15
  3253  000BDE                     __ptext15:
  3254                           	opt stack 0
  3255  000BDE                     _TMR2_Initialize:
  3256                           	opt stack 24
  3257                           
  3258                           ;tmr2.c: 70: T2CON = 0x02;
  3259                           
  3260                           ;incstack = 0
  3261  000BDE  0E02               	movlw	2
  3262  000BE0  6EBA               	movwf	4026,c	;volatile
  3263                           
  3264                           ;tmr2.c: 73: PR2 = 0x0C;
  3265  000BE2  0E0C               	movlw	12
  3266  000BE4  6EBB               	movwf	4027,c	;volatile
  3267                           
  3268                           ;tmr2.c: 76: TMR2 = 0x00;
  3269  000BE6  0E00               	movlw	0
  3270  000BE8  6EBC               	movwf	4028,c	;volatile
  3271                           
  3272                           ;tmr2.c: 79: PIR1bits.TMR2IF = 0;
  3273  000BEA  929E               	bcf	3998,1,c	;volatile
  3274                           
  3275                           ;tmr2.c: 82: PIE1bits.TMR2IE = 1;
  3276  000BEC  829D               	bsf	3997,1,c	;volatile
  3277                           
  3278                           ;tmr2.c: 85: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  3279  000BEE  0ED8               	movlw	low _TMR2_DefaultInterruptHandler
  3280  000BF0  6E2F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  3281  000BF2  0E0C               	movlw	high _TMR2_DefaultInterruptHandler
  3282  000BF4  6E30               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  3283  000BF6  EC59  F006         	call	_TMR2_SetInterruptHandler	;wreg free
  3284                           
  3285                           ;tmr2.c: 88: TMR2_StartTimer();
  3286  000BFA  EC65  F006         	call	_TMR2_StartTimer	;wreg free
  3287  000BFE  0012               	return		;funcret
  3288  000C00                     __end_of_TMR2_Initialize:
  3289                           	opt stack 0
  3290                           tblptru	equ	0xFF8
  3291                           tblptrh	equ	0xFF7
  3292                           tblptrl	equ	0xFF6
  3293                           tablat	equ	0xFF5
  3294                           prodh	equ	0xFF4
  3295                           prodl	equ	0xFF3
  3296                           intcon	equ	0xFF2
  3297                           postinc0	equ	0xFEE
  3298                           wreg	equ	0xFE8
  3299                           postdec1	equ	0xFE5
  3300                           fsr1l	equ	0xFE1
  3301                           indf2	equ	0xFDF
  3302                           fsr2h	equ	0xFDA
  3303                           fsr2l	equ	0xFD9
  3304                           status	equ	0xFD8
  3305                           
  3306 ;; *************** function _TMR2_StartTimer *****************
  3307 ;; Defined at:
  3308 ;;		line 91 in file "mcc_generated_files/tmr2.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		None
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;Total ram usage:        0 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    4
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_TMR2_Initialize
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text16
  3337  000CCA                     __ptext16:
  3338                           	opt stack 0
  3339  000CCA                     _TMR2_StartTimer:
  3340                           	opt stack 24
  3341                           
  3342                           ;tmr2.c: 94: T2CONbits.TMR2ON = 1;
  3343                           
  3344                           ;incstack = 0
  3345  000CCA  84BA               	bsf	4026,2,c	;volatile
  3346  000CCC  0012               	return		;funcret
  3347  000CCE                     __end_of_TMR2_StartTimer:
  3348                           	opt stack 0
  3349                           tblptru	equ	0xFF8
  3350                           tblptrh	equ	0xFF7
  3351                           tblptrl	equ	0xFF6
  3352                           tablat	equ	0xFF5
  3353                           prodh	equ	0xFF4
  3354                           prodl	equ	0xFF3
  3355                           intcon	equ	0xFF2
  3356                           postinc0	equ	0xFEE
  3357                           wreg	equ	0xFE8
  3358                           postdec1	equ	0xFE5
  3359                           fsr1l	equ	0xFE1
  3360                           indf2	equ	0xFDF
  3361                           fsr2h	equ	0xFDA
  3362                           fsr2l	equ	0xFD9
  3363                           status	equ	0xFD8
  3364                           
  3365 ;; *************** function _TMR2_SetInterruptHandler *****************
  3366 ;; Defined at:
  3367 ;;		line 145 in file "mcc_generated_files/tmr2.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  InterruptHan    2   14[COMRAM] PTR void 
  3370 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;Total ram usage:        2 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    4
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_TMR2_Initialize
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text17
  3397  000CB2                     __ptext17:
  3398                           	opt stack 0
  3399  000CB2                     _TMR2_SetInterruptHandler:
  3400                           	opt stack 24
  3401                           
  3402                           ;tmr2.c: 146: TMR2_InterruptHandler = InterruptHandler;
  3403                           
  3404                           ;incstack = 0
  3405  000CB2  C02F  F046         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  3406  000CB6  C030  F047         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  3407  000CBA  0012               	return		;funcret
  3408  000CBC                     __end_of_TMR2_SetInterruptHandler:
  3409                           	opt stack 0
  3410                           tblptru	equ	0xFF8
  3411                           tblptrh	equ	0xFF7
  3412                           tblptrl	equ	0xFF6
  3413                           tablat	equ	0xFF5
  3414                           prodh	equ	0xFF4
  3415                           prodl	equ	0xFF3
  3416                           intcon	equ	0xFF2
  3417                           postinc0	equ	0xFEE
  3418                           wreg	equ	0xFE8
  3419                           postdec1	equ	0xFE5
  3420                           fsr1l	equ	0xFE1
  3421                           indf2	equ	0xFDF
  3422                           fsr2h	equ	0xFDA
  3423                           fsr2l	equ	0xFD9
  3424                           status	equ	0xFD8
  3425                           
  3426 ;; *************** function _PIN_MANAGER_Initialize *****************
  3427 ;; Defined at:
  3428 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;Total ram usage:        0 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    4
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_SYSTEM_Initialize
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text18
  3457  000A48                     __ptext18:
  3458                           	opt stack 0
  3459  000A48                     _PIN_MANAGER_Initialize:
  3460                           	opt stack 25
  3461                           
  3462                           ;pin_manager.c: 56: LATE = 0x00;
  3463                           
  3464                           ;incstack = 0
  3465  000A48  0E00               	movlw	0
  3466  000A4A  6E8D               	movwf	3981,c	;volatile
  3467                           
  3468                           ;pin_manager.c: 57: LATD = 0x00;
  3469  000A4C  0E00               	movlw	0
  3470  000A4E  6E8C               	movwf	3980,c	;volatile
  3471                           
  3472                           ;pin_manager.c: 58: LATA = 0x00;
  3473  000A50  0E00               	movlw	0
  3474  000A52  6E89               	movwf	3977,c	;volatile
  3475                           
  3476                           ;pin_manager.c: 59: LATB = 0x00;
  3477  000A54  0E00               	movlw	0
  3478  000A56  6E8A               	movwf	3978,c	;volatile
  3479                           
  3480                           ;pin_manager.c: 60: LATC = 0x00;
  3481  000A58  0E00               	movlw	0
  3482  000A5A  6E8B               	movwf	3979,c	;volatile
  3483                           
  3484                           ;pin_manager.c: 65: TRISE = 0x07;
  3485  000A5C  0E07               	movlw	7
  3486  000A5E  6E96               	movwf	3990,c	;volatile
  3487                           
  3488                           ;pin_manager.c: 66: TRISA = 0xEB;
  3489  000A60  0EEB               	movlw	235
  3490  000A62  6E92               	movwf	3986,c	;volatile
  3491                           
  3492                           ;pin_manager.c: 67: TRISB = 0xBF;
  3493  000A64  0EBF               	movlw	191
  3494  000A66  6E93               	movwf	3987,c	;volatile
  3495                           
  3496                           ;pin_manager.c: 68: TRISC = 0xB8;
  3497  000A68  0EB8               	movlw	184
  3498  000A6A  6E94               	movwf	3988,c	;volatile
  3499                           
  3500                           ;pin_manager.c: 69: TRISD = 0xDF;
  3501  000A6C  0EDF               	movlw	223
  3502  000A6E  6E95               	movwf	3989,c	;volatile
  3503                           
  3504                           ;pin_manager.c: 74: ANSELC = 0x38;
  3505  000A70  0E38               	movlw	56
  3506  000A72  010F               	movlb	15	; () banked
  3507  000A74  6F3A               	movwf	58,b	;volatile
  3508                           
  3509                           ;pin_manager.c: 75: ANSELB = 0x3E;
  3510  000A76  0E3E               	movlw	62
  3511  000A78  010F               	movlb	15	; () banked
  3512  000A7A  6F39               	movwf	57,b	;volatile
  3513                           
  3514                           ;pin_manager.c: 76: ANSELD = 0xDF;
  3515  000A7C  0EDF               	movlw	223
  3516  000A7E  010F               	movlb	15	; () banked
  3517  000A80  6F3B               	movwf	59,b	;volatile
  3518                           
  3519                           ;pin_manager.c: 77: ANSELE = 0x03;
  3520  000A82  0E03               	movlw	3
  3521  000A84  010F               	movlb	15	; () banked
  3522  000A86  6F3C               	movwf	60,b	;volatile
  3523                           
  3524                           ;pin_manager.c: 78: ANSELA = 0x2B;
  3525  000A88  0E2B               	movlw	43
  3526  000A8A  010F               	movlb	15	; () banked
  3527  000A8C  6F38               	movwf	56,b	;volatile
  3528                           
  3529                           ; BSR set to: 15
  3530                           ;pin_manager.c: 83: WPUB = 0xFF;
  3531  000A8E  6861               	setf	3937,c	;volatile
  3532                           
  3533                           ; BSR set to: 15
  3534                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  3535  000A90  9EF1               	bcf	intcon2,7,c	;volatile
  3536                           
  3537                           ; BSR set to: 15
  3538  000A92  0012               	return		;funcret
  3539  000A94                     __end_of_PIN_MANAGER_Initialize:
  3540                           	opt stack 0
  3541                           tblptru	equ	0xFF8
  3542                           tblptrh	equ	0xFF7
  3543                           tblptrl	equ	0xFF6
  3544                           tablat	equ	0xFF5
  3545                           prodh	equ	0xFF4
  3546                           prodl	equ	0xFF3
  3547                           intcon	equ	0xFF2
  3548                           intcon2	equ	0xFF1
  3549                           postinc0	equ	0xFEE
  3550                           wreg	equ	0xFE8
  3551                           postdec1	equ	0xFE5
  3552                           fsr1l	equ	0xFE1
  3553                           indf2	equ	0xFDF
  3554                           fsr2h	equ	0xFDA
  3555                           fsr2l	equ	0xFD9
  3556                           status	equ	0xFD8
  3557                           
  3558 ;; *************** function _OSCILLATOR_Initialize *****************
  3559 ;; Defined at:
  3560 ;;		line 126 in file "mcc_generated_files/mcc.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;		None
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;		None
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;Total ram usage:        0 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    4
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_SYSTEM_Initialize
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text19
  3589  000C84                     __ptext19:
  3590                           	opt stack 0
  3591  000C84                     _OSCILLATOR_Initialize:
  3592                           	opt stack 25
  3593                           
  3594                           ;mcc.c: 129: OSCCON = 0x70;
  3595                           
  3596                           ; BSR set to: 15
  3597                           ;incstack = 0
  3598  000C84  0E70               	movlw	112
  3599  000C86  6ED3               	movwf	4051,c	;volatile
  3600                           
  3601                           ;mcc.c: 131: OSCCON2 = 0x04;
  3602  000C88  0E04               	movlw	4
  3603  000C8A  6ED2               	movwf	4050,c	;volatile
  3604                           
  3605                           ;mcc.c: 133: OSCTUNE = 0x00;
  3606  000C8C  0E00               	movlw	0
  3607  000C8E  6E9B               	movwf	3995,c	;volatile
  3608  000C90  0012               	return		;funcret
  3609  000C92                     __end_of_OSCILLATOR_Initialize:
  3610                           	opt stack 0
  3611                           tblptru	equ	0xFF8
  3612                           tblptrh	equ	0xFF7
  3613                           tblptrl	equ	0xFF6
  3614                           tablat	equ	0xFF5
  3615                           prodh	equ	0xFF4
  3616                           prodl	equ	0xFF3
  3617                           intcon	equ	0xFF2
  3618                           intcon2	equ	0xFF1
  3619                           postinc0	equ	0xFEE
  3620                           wreg	equ	0xFE8
  3621                           postdec1	equ	0xFE5
  3622                           fsr1l	equ	0xFE1
  3623                           indf2	equ	0xFDF
  3624                           fsr2h	equ	0xFDA
  3625                           fsr2l	equ	0xFD9
  3626                           status	equ	0xFD8
  3627                           
  3628 ;; *************** function _INTERRUPT_Initialize *****************
  3629 ;; Defined at:
  3630 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		None
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;Total ram usage:        0 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    4
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_SYSTEM_Initialize
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text20
  3659  000CCE                     __ptext20:
  3660                           	opt stack 0
  3661  000CCE                     _INTERRUPT_Initialize:
  3662                           	opt stack 25
  3663                           
  3664                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  3665                           
  3666                           ;incstack = 0
  3667  000CCE  9ED0               	bcf	4048,7,c	;volatile
  3668  000CD0  0012               	return		;funcret
  3669  000CD2                     __end_of_INTERRUPT_Initialize:
  3670                           	opt stack 0
  3671                           tblptru	equ	0xFF8
  3672                           tblptrh	equ	0xFF7
  3673                           tblptrl	equ	0xFF6
  3674                           tablat	equ	0xFF5
  3675                           prodh	equ	0xFF4
  3676                           prodl	equ	0xFF3
  3677                           intcon	equ	0xFF2
  3678                           intcon2	equ	0xFF1
  3679                           postinc0	equ	0xFEE
  3680                           wreg	equ	0xFE8
  3681                           postdec1	equ	0xFE5
  3682                           fsr1l	equ	0xFE1
  3683                           indf2	equ	0xFDF
  3684                           fsr2h	equ	0xFDA
  3685                           fsr2l	equ	0xFD9
  3686                           status	equ	0xFD8
  3687                           
  3688 ;; *************** function _EUSART1_Initialize *****************
  3689 ;; Defined at:
  3690 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;		None
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3708 ;;Total ram usage:        0 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; Hardware stack levels required when called:    4
  3711 ;; This function calls:
  3712 ;;		Nothing
  3713 ;; This function is called by:
  3714 ;;		_SYSTEM_Initialize
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text21
  3719  000C5A                     __ptext21:
  3720                           	opt stack 0
  3721  000C5A                     _EUSART1_Initialize:
  3722                           	opt stack 25
  3723                           
  3724                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  3725                           
  3726                           ;incstack = 0
  3727  000C5A  0E08               	movlw	8
  3728  000C5C  6EB8               	movwf	4024,c	;volatile
  3729                           
  3730                           ;eusart1.c: 63: RCSTA1 = 0x90;
  3731  000C5E  0E90               	movlw	144
  3732  000C60  6EAB               	movwf	4011,c	;volatile
  3733                           
  3734                           ;eusart1.c: 66: TXSTA1 = 0x24;
  3735  000C62  0E24               	movlw	36
  3736  000C64  6EAC               	movwf	4012,c	;volatile
  3737                           
  3738                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  3739  000C66  0EA0               	movlw	160
  3740  000C68  6EAF               	movwf	4015,c	;volatile
  3741                           
  3742                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  3743  000C6A  0E01               	movlw	1
  3744  000C6C  6EB0               	movwf	4016,c	;volatile
  3745  000C6E  0012               	return		;funcret
  3746  000C70                     __end_of_EUSART1_Initialize:
  3747                           	opt stack 0
  3748                           tblptru	equ	0xFF8
  3749                           tblptrh	equ	0xFF7
  3750                           tblptrl	equ	0xFF6
  3751                           tablat	equ	0xFF5
  3752                           prodh	equ	0xFF4
  3753                           prodl	equ	0xFF3
  3754                           intcon	equ	0xFF2
  3755                           intcon2	equ	0xFF1
  3756                           postinc0	equ	0xFEE
  3757                           wreg	equ	0xFE8
  3758                           postdec1	equ	0xFE5
  3759                           fsr1l	equ	0xFE1
  3760                           indf2	equ	0xFDF
  3761                           fsr2h	equ	0xFDA
  3762                           fsr2l	equ	0xFD9
  3763                           status	equ	0xFD8
  3764                           
  3765 ;; *************** function _EPWM2_Initialize *****************
  3766 ;; Defined at:
  3767 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, status,2
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;Total ram usage:        0 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; Hardware stack levels required when called:    4
  3788 ;; This function calls:
  3789 ;;		Nothing
  3790 ;; This function is called by:
  3791 ;;		_SYSTEM_Initialize
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text22
  3796  000B72                     __ptext22:
  3797                           	opt stack 0
  3798  000B72                     _EPWM2_Initialize:
  3799                           	opt stack 25
  3800                           
  3801                           ;epwm2.c: 68: CCP2CON = 0x3C;
  3802                           
  3803                           ;incstack = 0
  3804  000B72  0E3C               	movlw	60
  3805  000B74  6E66               	movwf	3942,c	;volatile
  3806                           
  3807                           ;epwm2.c: 71: ECCP2AS = 0x00;
  3808  000B76  0E00               	movlw	0
  3809  000B78  6E64               	movwf	3940,c	;volatile
  3810                           
  3811                           ;epwm2.c: 74: PWM2CON = 0x80;
  3812  000B7A  0E80               	movlw	128
  3813  000B7C  6E65               	movwf	3941,c	;volatile
  3814                           
  3815                           ;epwm2.c: 77: PSTR2CON = 0x03;
  3816  000B7E  0E03               	movlw	3
  3817  000B80  6E63               	movwf	3939,c	;volatile
  3818                           
  3819                           ;epwm2.c: 80: CCPR2L = 0x14;
  3820  000B82  0E14               	movlw	20
  3821  000B84  6E67               	movwf	3943,c	;volatile
  3822                           
  3823                           ;epwm2.c: 83: CCPR2H = 0x00;
  3824  000B86  0E00               	movlw	0
  3825  000B88  6E68               	movwf	3944,c	;volatile
  3826                           
  3827                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  3828  000B8A  010F               	movlb	15	; () banked
  3829  000B8C  5149               	movf	73,w,b	;volatile
  3830  000B8E  0BE7               	andlw	-25
  3831  000B90  0910               	iorlw	16
  3832  000B92  6F49               	movwf	73,b	;volatile
  3833                           
  3834                           ; BSR set to: 15
  3835  000B94  0012               	return		;funcret
  3836  000B96                     __end_of_EPWM2_Initialize:
  3837                           	opt stack 0
  3838                           tblptru	equ	0xFF8
  3839                           tblptrh	equ	0xFF7
  3840                           tblptrl	equ	0xFF6
  3841                           tablat	equ	0xFF5
  3842                           prodh	equ	0xFF4
  3843                           prodl	equ	0xFF3
  3844                           intcon	equ	0xFF2
  3845                           intcon2	equ	0xFF1
  3846                           postinc0	equ	0xFEE
  3847                           wreg	equ	0xFE8
  3848                           postdec1	equ	0xFE5
  3849                           fsr1l	equ	0xFE1
  3850                           indf2	equ	0xFDF
  3851                           fsr2h	equ	0xFDA
  3852                           fsr2l	equ	0xFD9
  3853                           status	equ	0xFD8
  3854                           
  3855 ;; *************** function _EPWM1_Initialize *****************
  3856 ;; Defined at:
  3857 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      void 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;Total ram usage:        0 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    4
  3878 ;; This function calls:
  3879 ;;		Nothing
  3880 ;; This function is called by:
  3881 ;;		_SYSTEM_Initialize
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           	psect	text23
  3886  000B96                     __ptext23:
  3887                           	opt stack 0
  3888  000B96                     _EPWM1_Initialize:
  3889                           	opt stack 25
  3890                           
  3891                           ;epwm1.c: 68: CCP1CON = 0x3C;
  3892                           
  3893                           ; BSR set to: 15
  3894                           ;incstack = 0
  3895  000B96  0E3C               	movlw	60
  3896  000B98  6EBD               	movwf	4029,c	;volatile
  3897                           
  3898                           ;epwm1.c: 71: ECCP1AS = 0x00;
  3899  000B9A  0E00               	movlw	0
  3900  000B9C  6EB6               	movwf	4022,c	;volatile
  3901                           
  3902                           ;epwm1.c: 74: PWM1CON = 0x80;
  3903  000B9E  0E80               	movlw	128
  3904  000BA0  6EB7               	movwf	4023,c	;volatile
  3905                           
  3906                           ;epwm1.c: 77: PSTR1CON = 0x03;
  3907  000BA2  0E03               	movlw	3
  3908  000BA4  6EB9               	movwf	4025,c	;volatile
  3909                           
  3910                           ;epwm1.c: 80: CCPR1L = 0x14;
  3911  000BA6  0E14               	movlw	20
  3912  000BA8  6EBE               	movwf	4030,c	;volatile
  3913                           
  3914                           ;epwm1.c: 83: CCPR1H = 0x00;
  3915  000BAA  0E00               	movlw	0
  3916  000BAC  6EBF               	movwf	4031,c	;volatile
  3917                           
  3918                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  3919  000BAE  010F               	movlb	15	; () banked
  3920  000BB0  5149               	movf	73,w,b	;volatile
  3921  000BB2  0BFC               	andlw	-4
  3922  000BB4  0902               	iorlw	2
  3923  000BB6  6F49               	movwf	73,b	;volatile
  3924                           
  3925                           ; BSR set to: 15
  3926  000BB8  0012               	return		;funcret
  3927  000BBA                     __end_of_EPWM1_Initialize:
  3928                           	opt stack 0
  3929                           tblptru	equ	0xFF8
  3930                           tblptrh	equ	0xFF7
  3931                           tblptrl	equ	0xFF6
  3932                           tablat	equ	0xFF5
  3933                           prodh	equ	0xFF4
  3934                           prodl	equ	0xFF3
  3935                           intcon	equ	0xFF2
  3936                           intcon2	equ	0xFF1
  3937                           postinc0	equ	0xFEE
  3938                           wreg	equ	0xFE8
  3939                           postdec1	equ	0xFE5
  3940                           fsr1l	equ	0xFE1
  3941                           indf2	equ	0xFDF
  3942                           fsr2h	equ	0xFDA
  3943                           fsr2l	equ	0xFD9
  3944                           status	equ	0xFD8
  3945                           
  3946 ;; *************** function _CCP5_Initialize *****************
  3947 ;; Defined at:
  3948 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;		None
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;		None
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  1    wreg      void 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;Total ram usage:        0 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:    4
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_SYSTEM_Initialize
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text24
  3977  000C70                     __ptext24:
  3978                           	opt stack 0
  3979  000C70                     _CCP5_Initialize:
  3980                           	opt stack 25
  3981                           
  3982                           ;ccp5.c: 60: CCP5CON = 0x00;
  3983                           
  3984                           ; BSR set to: 15
  3985                           ;incstack = 0
  3986  000C70  0E00               	movlw	0
  3987  000C72  010F               	movlb	15	; () banked
  3988  000C74  6F54               	movwf	84,b	;volatile
  3989                           
  3990                           ;ccp5.c: 62: CCPR5L = 0x00;
  3991  000C76  0E00               	movlw	0
  3992  000C78  010F               	movlb	15	; () banked
  3993  000C7A  6F55               	movwf	85,b	;volatile
  3994                           
  3995                           ;ccp5.c: 64: CCPR5H = 0x00;
  3996  000C7C  0E00               	movlw	0
  3997  000C7E  010F               	movlb	15	; () banked
  3998  000C80  6F56               	movwf	86,b	;volatile
  3999                           
  4000                           ; BSR set to: 15
  4001  000C82  0012               	return		;funcret
  4002  000C84                     __end_of_CCP5_Initialize:
  4003                           	opt stack 0
  4004                           tblptru	equ	0xFF8
  4005                           tblptrh	equ	0xFF7
  4006                           tblptrl	equ	0xFF6
  4007                           tablat	equ	0xFF5
  4008                           prodh	equ	0xFF4
  4009                           prodl	equ	0xFF3
  4010                           intcon	equ	0xFF2
  4011                           intcon2	equ	0xFF1
  4012                           postinc0	equ	0xFEE
  4013                           wreg	equ	0xFE8
  4014                           postdec1	equ	0xFE5
  4015                           fsr1l	equ	0xFE1
  4016                           indf2	equ	0xFDF
  4017                           fsr2h	equ	0xFDA
  4018                           fsr2l	equ	0xFD9
  4019                           status	equ	0xFD8
  4020                           
  4021 ;; *************** function _ADC_Initialize *****************
  4022 ;; Defined at:
  4023 ;;		line 61 in file "mcc_generated_files/adc.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4041 ;;Total ram usage:        0 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    4
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_SYSTEM_Initialize
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text25
  4052  000C42                     __ptext25:
  4053                           	opt stack 0
  4054  000C42                     _ADC_Initialize:
  4055                           	opt stack 25
  4056                           
  4057                           ;adc.c: 66: ADCON0 = 0x01;
  4058                           
  4059                           ; BSR set to: 15
  4060                           ;incstack = 0
  4061  000C42  0E01               	movlw	1
  4062  000C44  6EC2               	movwf	4034,c	;volatile
  4063                           
  4064                           ;adc.c: 69: ADCON1 = 0x00;
  4065  000C46  0E00               	movlw	0
  4066  000C48  6EC1               	movwf	4033,c	;volatile
  4067                           
  4068                           ;adc.c: 72: ADCON2 = 0x05;
  4069  000C4A  0E05               	movlw	5
  4070  000C4C  6EC0               	movwf	4032,c	;volatile
  4071                           
  4072                           ;adc.c: 75: ADRESL = 0x00;
  4073  000C4E  0E00               	movlw	0
  4074  000C50  6EC3               	movwf	4035,c	;volatile
  4075                           
  4076                           ;adc.c: 78: ADRESH = 0x00;
  4077  000C52  0E00               	movlw	0
  4078  000C54  6EC4               	movwf	4036,c	;volatile
  4079                           
  4080                           ;adc.c: 81: PIE1bits.ADIE = 1;
  4081  000C56  8C9D               	bsf	3997,6,c	;volatile
  4082  000C58  0012               	return		;funcret
  4083  000C5A                     __end_of_ADC_Initialize:
  4084                           	opt stack 0
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           prodh	equ	0xFF4
  4090                           prodl	equ	0xFF3
  4091                           intcon	equ	0xFF2
  4092                           intcon2	equ	0xFF1
  4093                           postinc0	equ	0xFEE
  4094                           wreg	equ	0xFE8
  4095                           postdec1	equ	0xFE5
  4096                           fsr1l	equ	0xFE1
  4097                           indf2	equ	0xFDF
  4098                           fsr2h	equ	0xFDA
  4099                           fsr2l	equ	0xFD9
  4100                           status	equ	0xFD8
  4101                           
  4102 ;; *************** function _INTERRUPT_InterruptManager *****************
  4103 ;; Defined at:
  4104 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      void 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;Total ram usage:       14 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    3
  4125 ;; This function calls:
  4126 ;;		_ADC_ISR
  4127 ;;		_TMR2_ISR
  4128 ;;		_TMR6_ISR
  4129 ;; This function is called by:
  4130 ;;		Interrupt level 2
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	intcode
  4135  000008                     __pintcode:
  4136                           	opt stack 0
  4137  000008                     _INTERRUPT_InterruptManager:
  4138                           	opt stack 24
  4139                           
  4140                           ;incstack = 0
  4141  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4142  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  4143  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4144  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4145  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4146  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4147  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4148  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4149  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4150  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4151  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4152  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4153  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4154  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4155  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4156                           
  4157                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  4158  000042  BCF2               	btfsc	intcon,6,c	;volatile
  4159  000044  AC9D               	btfss	3997,6,c	;volatile
  4160  000046  D005               	goto	i2l268
  4161  000048  AC9E               	btfss	3998,6,c	;volatile
  4162  00004A  D003               	goto	i2l268
  4163                           
  4164                           ;interrupt_manager.c: 61: {
  4165                           ;interrupt_manager.c: 62: ADC_ISR();
  4166  00004C  EC69  F006         	call	_ADC_ISR	;wreg free
  4167                           
  4168                           ;interrupt_manager.c: 63: }
  4169  000050  D00E               	goto	i2l274
  4170  000052                     i2l268:
  4171                           
  4172                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  4173  000052  BCF2               	btfsc	intcon,6,c	;volatile
  4174  000054  A47D               	btfss	3965,2,c	;volatile
  4175  000056  D005               	goto	i2l270
  4176  000058  A47E               	btfss	3966,2,c	;volatile
  4177  00005A  D003               	goto	i2l270
  4178                           
  4179                           ;interrupt_manager.c: 65: {
  4180                           ;interrupt_manager.c: 66: TMR6_ISR();
  4181  00005C  EC00  F006         	call	_TMR6_ISR	;wreg free
  4182                           
  4183                           ;interrupt_manager.c: 67: }
  4184  000060  D006               	goto	i2l274
  4185  000062                     i2l270:
  4186                           
  4187                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  4188  000062  BCF2               	btfsc	intcon,6,c	;volatile
  4189  000064  A29D               	btfss	3997,1,c	;volatile
  4190  000066  D003               	goto	i2l274
  4191  000068  B29E               	btfsc	3998,1,c	;volatile
  4192                           
  4193                           ;interrupt_manager.c: 69: {
  4194                           ;interrupt_manager.c: 70: TMR2_ISR();
  4195  00006A  EC5E  F006         	call	_TMR2_ISR	;wreg free
  4196  00006E                     i2l274:
  4197  00006E  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4198  000072  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4199  000076  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4200  00007A  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4201  00007E  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4202  000082  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4203  000086  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4204  00008A  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4205  00008E  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4206  000092  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4207  000096  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4208  00009A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4209  00009E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4210  0000A2  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4211  0000A6  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4212  0000A8  0011               	retfie		f
  4213  0000AA                     __end_of_INTERRUPT_InterruptManager:
  4214                           	opt stack 0
  4215                           pclatu	equ	0xFFB
  4216                           pclath	equ	0xFFA
  4217                           tblptru	equ	0xFF8
  4218                           tblptrh	equ	0xFF7
  4219                           tblptrl	equ	0xFF6
  4220                           tablat	equ	0xFF5
  4221                           prodh	equ	0xFF4
  4222                           prodl	equ	0xFF3
  4223                           intcon	equ	0xFF2
  4224                           intcon2	equ	0xFF1
  4225                           postinc0	equ	0xFEE
  4226                           fsr0h	equ	0xFEA
  4227                           fsr0l	equ	0xFE9
  4228                           wreg	equ	0xFE8
  4229                           postdec1	equ	0xFE5
  4230                           fsr1h	equ	0xFE2
  4231                           fsr1l	equ	0xFE1
  4232                           indf2	equ	0xFDF
  4233                           fsr2h	equ	0xFDA
  4234                           fsr2l	equ	0xFD9
  4235                           status	equ	0xFD8
  4236                           
  4237 ;; *************** function _TMR6_ISR *****************
  4238 ;; Defined at:
  4239 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;		None
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;		None
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  1    wreg      void 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;Total ram usage:        0 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    1
  4260 ;; This function calls:
  4261 ;;		Absolute function
  4262 ;;		_TMR6_DefaultInterruptHandler
  4263 ;; This function is called by:
  4264 ;;		_INTERRUPT_InterruptManager
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text27
  4269  000C00                     __ptext27:
  4270                           	opt stack 0
  4271  000C00                     _TMR6_ISR:
  4272                           	opt stack 25
  4273                           
  4274                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  4275                           
  4276                           ;incstack = 0
  4277  000C00  947E               	bcf	3966,2,c	;volatile
  4278                           
  4279                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  4280  000C02  5048               	movf	_TMR6_InterruptHandler,w,c
  4281  000C04  1049               	iorwf	_TMR6_InterruptHandler+1,w,c
  4282  000C06  B4D8               	btfsc	status,2,c
  4283  000C08  0012               	return	
  4284                           
  4285                           ;tmr6.c: 128: {
  4286                           ;tmr6.c: 129: TMR6_InterruptHandler();
  4287  000C0A  D801               	call	i2u51_48
  4288  000C0C  0012               	return	
  4289  000C0E                     i2u51_48:
  4290  000C0E  0005               	push	
  4291  000C10  6EFA               	movwf	pclath,c
  4292  000C12  5048               	movf	_TMR6_InterruptHandler,w,c
  4293  000C14  6EFD               	movwf	tosl,c
  4294  000C16  5049               	movf	_TMR6_InterruptHandler+1,w,c
  4295  000C18  6EFE               	movwf	tosh,c
  4296  000C1A  50F8               	movf	tblptru,w,c
  4297  000C1C  6EFF               	movwf	tosu,c
  4298  000C1E  50FA               	movf	pclath,w,c
  4299  000C20  0012               	return		;indir
  4300  000C22                     __end_of_TMR6_ISR:
  4301                           	opt stack 0
  4302                           tosu	equ	0xFFF
  4303                           tosh	equ	0xFFE
  4304                           tosl	equ	0xFFD
  4305                           pclatu	equ	0xFFB
  4306                           pclath	equ	0xFFA
  4307                           tblptru	equ	0xFF8
  4308                           tblptrh	equ	0xFF7
  4309                           tblptrl	equ	0xFF6
  4310                           tablat	equ	0xFF5
  4311                           prodh	equ	0xFF4
  4312                           prodl	equ	0xFF3
  4313                           intcon	equ	0xFF2
  4314                           intcon2	equ	0xFF1
  4315                           postinc0	equ	0xFEE
  4316                           fsr0h	equ	0xFEA
  4317                           fsr0l	equ	0xFE9
  4318                           wreg	equ	0xFE8
  4319                           postdec1	equ	0xFE5
  4320                           fsr1h	equ	0xFE2
  4321                           fsr1l	equ	0xFE1
  4322                           indf2	equ	0xFDF
  4323                           fsr2h	equ	0xFDA
  4324                           fsr2l	equ	0xFD9
  4325                           status	equ	0xFD8
  4326                           
  4327 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  4328 ;; Defined at:
  4329 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;		None
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		None
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;Total ram usage:        0 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_TMR6_Initialize
  4353 ;;		_TMR6_ISR
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text28
  4358  000CD6                     __ptext28:
  4359                           	opt stack 0
  4360  000CD6                     _TMR6_DefaultInterruptHandler:
  4361                           	opt stack 25
  4362                           
  4363                           ;incstack = 0
  4364  000CD6  0012               	return		;funcret
  4365  000CD8                     __end_of_TMR6_DefaultInterruptHandler:
  4366                           	opt stack 0
  4367                           tosu	equ	0xFFF
  4368                           tosh	equ	0xFFE
  4369                           tosl	equ	0xFFD
  4370                           pclatu	equ	0xFFB
  4371                           pclath	equ	0xFFA
  4372                           tblptru	equ	0xFF8
  4373                           tblptrh	equ	0xFF7
  4374                           tblptrl	equ	0xFF6
  4375                           tablat	equ	0xFF5
  4376                           prodh	equ	0xFF4
  4377                           prodl	equ	0xFF3
  4378                           intcon	equ	0xFF2
  4379                           intcon2	equ	0xFF1
  4380                           postinc0	equ	0xFEE
  4381                           fsr0h	equ	0xFEA
  4382                           fsr0l	equ	0xFE9
  4383                           wreg	equ	0xFE8
  4384                           postdec1	equ	0xFE5
  4385                           fsr1h	equ	0xFE2
  4386                           fsr1l	equ	0xFE1
  4387                           indf2	equ	0xFDF
  4388                           fsr2h	equ	0xFDA
  4389                           fsr2l	equ	0xFD9
  4390                           status	equ	0xFD8
  4391                           
  4392 ;; *************** function _TMR2_ISR *****************
  4393 ;; Defined at:
  4394 ;;		line 123 in file "mcc_generated_files/tmr2.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;		None
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;Total ram usage:        0 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; Hardware stack levels required when called:    2
  4415 ;; This function calls:
  4416 ;;		_TMR2_CallBack
  4417 ;; This function is called by:
  4418 ;;		_INTERRUPT_InterruptManager
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text29
  4423  000CBC                     __ptext29:
  4424                           	opt stack 0
  4425  000CBC                     _TMR2_ISR:
  4426                           	opt stack 24
  4427                           
  4428                           ;tmr2.c: 127: PIR1bits.TMR2IF = 0;
  4429                           
  4430                           ;incstack = 0
  4431  000CBC  929E               	bcf	3998,1,c	;volatile
  4432                           
  4433                           ;tmr2.c: 131: TMR2_CallBack();
  4434  000CBE  ECDD  F005         	call	_TMR2_CallBack	;wreg free
  4435  000CC2  0012               	return		;funcret
  4436  000CC4                     __end_of_TMR2_ISR:
  4437                           	opt stack 0
  4438                           tosu	equ	0xFFF
  4439                           tosh	equ	0xFFE
  4440                           tosl	equ	0xFFD
  4441                           pclatu	equ	0xFFB
  4442                           pclath	equ	0xFFA
  4443                           tblptru	equ	0xFF8
  4444                           tblptrh	equ	0xFF7
  4445                           tblptrl	equ	0xFF6
  4446                           tablat	equ	0xFF5
  4447                           prodh	equ	0xFF4
  4448                           prodl	equ	0xFF3
  4449                           intcon	equ	0xFF2
  4450                           intcon2	equ	0xFF1
  4451                           postinc0	equ	0xFEE
  4452                           fsr0h	equ	0xFEA
  4453                           fsr0l	equ	0xFE9
  4454                           wreg	equ	0xFE8
  4455                           postdec1	equ	0xFE5
  4456                           fsr1h	equ	0xFE2
  4457                           fsr1l	equ	0xFE1
  4458                           indf2	equ	0xFDF
  4459                           fsr2h	equ	0xFDA
  4460                           fsr2l	equ	0xFD9
  4461                           status	equ	0xFD8
  4462                           
  4463 ;; *************** function _TMR2_CallBack *****************
  4464 ;; Defined at:
  4465 ;;		line 134 in file "mcc_generated_files/tmr2.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;		None
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      void 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;Total ram usage:        0 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    1
  4486 ;; This function calls:
  4487 ;;		Absolute function
  4488 ;;		_TMR2_DefaultInterruptHandler
  4489 ;; This function is called by:
  4490 ;;		_TMR2_ISR
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text30
  4495  000BBA                     __ptext30:
  4496                           	opt stack 0
  4497  000BBA                     _TMR2_CallBack:
  4498                           	opt stack 24
  4499                           
  4500                           ;tmr2.c: 137: Timer2Ticked=1;
  4501                           
  4502                           ;incstack = 0
  4503  000BBA  0E01               	movlw	1
  4504  000BBC  6E45               	movwf	_Timer2Ticked,c	;volatile
  4505                           
  4506                           ;tmr2.c: 139: if(TMR2_InterruptHandler)
  4507  000BBE  5046               	movf	_TMR2_InterruptHandler,w,c
  4508  000BC0  1047               	iorwf	_TMR2_InterruptHandler+1,w,c
  4509  000BC2  B4D8               	btfsc	status,2,c
  4510  000BC4  0012               	return	
  4511                           
  4512                           ;tmr2.c: 140: {
  4513                           ;tmr2.c: 141: TMR2_InterruptHandler();
  4514  000BC6  D801               	call	i2u5_48
  4515  000BC8  0012               	return	
  4516  000BCA                     i2u5_48:
  4517  000BCA  0005               	push	
  4518  000BCC  6EFA               	movwf	pclath,c
  4519  000BCE  5046               	movf	_TMR2_InterruptHandler,w,c
  4520  000BD0  6EFD               	movwf	tosl,c
  4521  000BD2  5047               	movf	_TMR2_InterruptHandler+1,w,c
  4522  000BD4  6EFE               	movwf	tosh,c
  4523  000BD6  50F8               	movf	tblptru,w,c
  4524  000BD8  6EFF               	movwf	tosu,c
  4525  000BDA  50FA               	movf	pclath,w,c
  4526  000BDC  0012               	return		;indir
  4527  000BDE                     __end_of_TMR2_CallBack:
  4528                           	opt stack 0
  4529                           tosu	equ	0xFFF
  4530                           tosh	equ	0xFFE
  4531                           tosl	equ	0xFFD
  4532                           pclatu	equ	0xFFB
  4533                           pclath	equ	0xFFA
  4534                           tblptru	equ	0xFF8
  4535                           tblptrh	equ	0xFF7
  4536                           tblptrl	equ	0xFF6
  4537                           tablat	equ	0xFF5
  4538                           prodh	equ	0xFF4
  4539                           prodl	equ	0xFF3
  4540                           intcon	equ	0xFF2
  4541                           intcon2	equ	0xFF1
  4542                           postinc0	equ	0xFEE
  4543                           fsr0h	equ	0xFEA
  4544                           fsr0l	equ	0xFE9
  4545                           wreg	equ	0xFE8
  4546                           postdec1	equ	0xFE5
  4547                           fsr1h	equ	0xFE2
  4548                           fsr1l	equ	0xFE1
  4549                           indf2	equ	0xFDF
  4550                           fsr2h	equ	0xFDA
  4551                           fsr2l	equ	0xFD9
  4552                           status	equ	0xFD8
  4553                           
  4554 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4555 ;; Defined at:
  4556 ;;		line 149 in file "mcc_generated_files/tmr2.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		None
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;Total ram usage:        0 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_TMR2_Initialize
  4580 ;;		_TMR2_CallBack
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text31
  4585  000CD8                     __ptext31:
  4586                           	opt stack 0
  4587  000CD8                     _TMR2_DefaultInterruptHandler:
  4588                           	opt stack 24
  4589                           
  4590                           ;incstack = 0
  4591  000CD8  0012               	return		;funcret
  4592  000CDA                     __end_of_TMR2_DefaultInterruptHandler:
  4593                           	opt stack 0
  4594                           tosu	equ	0xFFF
  4595                           tosh	equ	0xFFE
  4596                           tosl	equ	0xFFD
  4597                           pclatu	equ	0xFFB
  4598                           pclath	equ	0xFFA
  4599                           tblptru	equ	0xFF8
  4600                           tblptrh	equ	0xFF7
  4601                           tblptrl	equ	0xFF6
  4602                           tablat	equ	0xFF5
  4603                           prodh	equ	0xFF4
  4604                           prodl	equ	0xFF3
  4605                           intcon	equ	0xFF2
  4606                           intcon2	equ	0xFF1
  4607                           postinc0	equ	0xFEE
  4608                           fsr0h	equ	0xFEA
  4609                           fsr0l	equ	0xFE9
  4610                           wreg	equ	0xFE8
  4611                           postdec1	equ	0xFE5
  4612                           fsr1h	equ	0xFE2
  4613                           fsr1l	equ	0xFE1
  4614                           indf2	equ	0xFDF
  4615                           fsr2h	equ	0xFDA
  4616                           fsr2l	equ	0xFD9
  4617                           status	equ	0xFD8
  4618                           
  4619 ;; *************** function _ADC_ISR *****************
  4620 ;; Defined at:
  4621 ;;		line 144 in file "mcc_generated_files/adc.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;		None
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		None
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;Total ram usage:        0 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; This function calls:
  4642 ;;		Nothing
  4643 ;; This function is called by:
  4644 ;;		_INTERRUPT_InterruptManager
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text32
  4649  000CD2                     __ptext32:
  4650                           	opt stack 0
  4651  000CD2                     _ADC_ISR:
  4652                           	opt stack 26
  4653                           
  4654                           ;adc.c: 149: PIR1bits.ADIF = 0;
  4655                           
  4656                           ;incstack = 0
  4657  000CD2  9C9E               	bcf	3998,6,c	;volatile
  4658  000CD4  0012               	return		;funcret
  4659  000CD6                     __end_of_ADC_ISR:
  4660                           	opt stack 0
  4661  0000                     tosu	equ	0xFFF
  4662                           tosh	equ	0xFFE
  4663                           tosl	equ	0xFFD
  4664                           pclatu	equ	0xFFB
  4665                           pclath	equ	0xFFA
  4666                           tblptru	equ	0xFF8
  4667                           tblptrh	equ	0xFF7
  4668                           tblptrl	equ	0xFF6
  4669                           tablat	equ	0xFF5
  4670                           prodh	equ	0xFF4
  4671                           prodl	equ	0xFF3
  4672                           intcon	equ	0xFF2
  4673                           intcon2	equ	0xFF1
  4674                           postinc0	equ	0xFEE
  4675                           fsr0h	equ	0xFEA
  4676                           fsr0l	equ	0xFE9
  4677                           wreg	equ	0xFE8
  4678                           postdec1	equ	0xFE5
  4679                           fsr1h	equ	0xFE2
  4680                           fsr1l	equ	0xFE1
  4681                           indf2	equ	0xFDF
  4682                           fsr2h	equ	0xFDA
  4683                           fsr2l	equ	0xFD9
  4684                           status	equ	0xFD8
  4685                           tosu	equ	0xFFF
  4686                           tosh	equ	0xFFE
  4687                           tosl	equ	0xFFD
  4688                           pclatu	equ	0xFFB
  4689                           pclath	equ	0xFFA
  4690                           tblptru	equ	0xFF8
  4691                           tblptrh	equ	0xFF7
  4692                           tblptrl	equ	0xFF6
  4693                           tablat	equ	0xFF5
  4694                           prodh	equ	0xFF4
  4695                           prodl	equ	0xFF3
  4696                           intcon	equ	0xFF2
  4697                           intcon2	equ	0xFF1
  4698                           postinc0	equ	0xFEE
  4699                           fsr0h	equ	0xFEA
  4700                           fsr0l	equ	0xFE9
  4701                           wreg	equ	0xFE8
  4702                           postdec1	equ	0xFE5
  4703                           fsr1h	equ	0xFE2
  4704                           fsr1l	equ	0xFE1
  4705                           indf2	equ	0xFDF
  4706                           fsr2h	equ	0xFDA
  4707                           fsr2l	equ	0xFD9
  4708                           status	equ	0xFD8
  4709                           
  4710                           	psect	text33
  4711  000000                     __ptext33:
  4712                           	opt stack 0
  4713                           tosu	equ	0xFFF
  4714                           tosh	equ	0xFFE
  4715                           tosl	equ	0xFFD
  4716                           pclatu	equ	0xFFB
  4717                           pclath	equ	0xFFA
  4718                           tblptru	equ	0xFF8
  4719                           tblptrh	equ	0xFF7
  4720                           tblptrl	equ	0xFF6
  4721                           tablat	equ	0xFF5
  4722                           prodh	equ	0xFF4
  4723                           prodl	equ	0xFF3
  4724                           intcon	equ	0xFF2
  4725                           intcon2	equ	0xFF1
  4726                           postinc0	equ	0xFEE
  4727                           fsr0h	equ	0xFEA
  4728                           fsr0l	equ	0xFE9
  4729                           wreg	equ	0xFE8
  4730                           postdec1	equ	0xFE5
  4731                           fsr1h	equ	0xFE2
  4732                           fsr1l	equ	0xFE1
  4733                           indf2	equ	0xFDF
  4734                           fsr2h	equ	0xFDA
  4735                           fsr2l	equ	0xFD9
  4736                           status	equ	0xFD8
  4737                           
  4738                           	psect	rparam
  4739  0000                     tosu	equ	0xFFF
  4740                           tosh	equ	0xFFE
  4741                           tosl	equ	0xFFD
  4742                           pclatu	equ	0xFFB
  4743                           pclath	equ	0xFFA
  4744                           tblptru	equ	0xFF8
  4745                           tblptrh	equ	0xFF7
  4746                           tblptrl	equ	0xFF6
  4747                           tablat	equ	0xFF5
  4748                           prodh	equ	0xFF4
  4749                           prodl	equ	0xFF3
  4750                           intcon	equ	0xFF2
  4751                           intcon2	equ	0xFF1
  4752                           postinc0	equ	0xFEE
  4753                           fsr0h	equ	0xFEA
  4754                           fsr0l	equ	0xFE9
  4755                           wreg	equ	0xFE8
  4756                           postdec1	equ	0xFE5
  4757                           fsr1h	equ	0xFE2
  4758                           fsr1l	equ	0xFE1
  4759                           indf2	equ	0xFDF
  4760                           fsr2h	equ	0xFDA
  4761                           fsr2l	equ	0xFD9
  4762                           status	equ	0xFD8
  4763                           
  4764                           	psect	temp
  4765  00004B                     btemp:
  4766                           	opt stack 0
  4767  00004B                     	ds	1
  4768  0000                     int$flags	set	btemp
  4769                           tosu	equ	0xFFF
  4770                           tosh	equ	0xFFE
  4771                           tosl	equ	0xFFD
  4772                           pclatu	equ	0xFFB
  4773                           pclath	equ	0xFFA
  4774                           tblptru	equ	0xFF8
  4775                           tblptrh	equ	0xFF7
  4776                           tblptrl	equ	0xFF6
  4777                           tablat	equ	0xFF5
  4778                           prodh	equ	0xFF4
  4779                           prodl	equ	0xFF3
  4780                           intcon	equ	0xFF2
  4781                           intcon2	equ	0xFF1
  4782                           postinc0	equ	0xFEE
  4783                           fsr0h	equ	0xFEA
  4784                           fsr0l	equ	0xFE9
  4785                           wreg	equ	0xFE8
  4786                           postdec1	equ	0xFE5
  4787                           fsr1h	equ	0xFE2
  4788                           fsr1l	equ	0xFE1
  4789                           indf2	equ	0xFDF
  4790                           fsr2h	equ	0xFDA
  4791                           fsr2l	equ	0xFD9
  4792                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        192
    BSS         11
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      74
    BANK0           160      0     160
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StepMove
    _StepMove->_State16MEF_act
    _StepMove->_State16MEF_act_Backward
    _StepMove->_State8MEF_act
    _StepMove->_State8MEF_act_Backward
    _State8MEF_act_Backward->_EPWM1_LoadDutyValue
    _State8MEF_act_Backward->_EPWM2_LoadDutyValue
    _State8MEF_act->_EPWM1_LoadDutyValue
    _State8MEF_act->_EPWM2_LoadDutyValue
    _State16MEF_act_Backward->_EPWM1_LoadDutyValue
    _State16MEF_act_Backward->_EPWM2_LoadDutyValue
    _State16MEF_act->_EPWM1_LoadDutyValue
    _State16MEF_act->_EPWM2_LoadDutyValue
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9126
                  _SYSTEM_Initialize
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StepMove                                             7     2      5    8954
                                             19 COMRAM     7     2      5
                     _State16MEF_act
            _State16MEF_act_Backward
                      _State8MEF_act
             _State8MEF_act_Backward
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act_Backward                               1     1      0    2136
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                  _limitar_corriente
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act                                        1     1      0    2136
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                  _limitar_corriente
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act_Backward                              1     1      0    2158
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                      _EUSART1_Write
                  _limitar_corriente
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act                                       1     1      0    2136
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                  _limitar_corriente
 ---------------------------------------------------------------------------------
 (3) _limitar_corriente                                    1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2    1068
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2    1068
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_ini
   _StepMove
     _State16MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _limitar_corriente
     _State16MEF_act_Backward
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _EUSART1_Write
       _limitar_corriente
     _State8MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _limitar_corriente
     _State8MEF_act_Backward
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _limitar_corriente

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      4A       1       78.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EA      12        0.0%
DATA                 0      0      EA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Jun 13 11:44:28 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 0CBC  
                       ??_TMR6_StartTimer 002F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l337 0C94                                       l587 0A1C  
                            __CFG_CPB$OFF 000000                                       _PR2 000FBB  
                            __CFG_CPD$OFF 000000                                       _PR6 000F4B  
                         __end_of_ADC_ISR 0CD6                           _TMR2_Initialize 0BDE  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8                  __end_of_EPWM2_Initialize 0B96  
                         _CCP5_Initialize 0C70                                      l2001 07F6  
                                    l2003 07FA                                      l2021 0864  
                                    l2025 0868                                      l2201 0414  
                                    l2107 021C                                      l2203 0418  
                                    l2109 0220                                      l2061 0134  
                                    l2029 00B0                                      l2133 0296  
                                    l2039 00C6                                      l2223 0488  
                                    l2129 0292                                      l2161 0334  
                                    l2137 02BA                                      l2083 01A6  
                                    l2059 0130                                      l2219 0484  
                                    l2163 0338                                      l2147 02D0  
                                    l2085 01AA                                      l2181 03A4  
                                    l2261 096E                                      l2183 03A8  
                                    l2273 0992                                      l2267 0982  
                                    l2259 0968                                      l2269 0986  
                                    l1911 0608                                      l2299 0B06  
                                    l1909 0604                                      l1933 067A  
                                    l1961 0716                                      l1937 069E  
                                    l1929 0676                                      l1873 0524  
                                    l1849 04AC                                      l1963 071A  
                                    l1947 06B4                                      l1891 0594  
                                    l1875 0528                                      l1859 04C2  
                                    l1981 0786                                      l1893 0598  
                                    l1983 078A                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    _TMR2 000FBC                                      _TMR6 000F4C  
                                    _WPUB 000F61                             _EUSART1_Write 0C92  
                                    _main 0AF4                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 004B                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00AA                             __CFG_IESO$OFF 000000  
                   ??_EPWM1_LoadDutyValue 0031                              ___param_bank 000000  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 0C92  
                                   ?_main 0021                                     _T2CON 000FBA  
                                   _T6CON 000F4A                            __CFG_DEBUG$OFF 000000  
                                   i2l270 0062                                     i2l274 006E  
                                   i2l268 0052                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
       __size_of_TMR6_SetInterruptHandler 000A                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
               ?_TMR6_SetInterruptHandler 002F                          __end_of_TMR2_ISR 0CC4  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                          __end_of_TMR6_ISR 0C22  
                          __CFG_EBTRB$OFF 000000                   _State16MEF_act_Backward 00AE  
                        _LookUP_TABLE_COS 0001                          _LookUP_TABLE_SEN 00E0  
                      __CFG_MCLRE$EXTMCLR 000000                        StepMove@StepNumber 0034  
                          ?_EUSART1_Write 0021                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 0CCA  
                          __CFG_PBADEN$ON 000000            ??_TMR6_DefaultInterruptHandler 0021  
                         __initialization 0998                __end_of_EUSART1_Initialize 0C70  
                            __end_of_main 0B20                   ?_State8MEF_act_Backward 0021  
                 __end_of_TMR2_Initialize 0C00                                 ??_ADC_ISR 0021  
             ?_INTERRUPT_InterruptManager 0021                  _TMR2_SetInterruptHandler 0CB2  
                                  ??_main 003B                   __end_of_CCP5_Initialize 0C84  
                           __activetblptr 000002                           _TMR6_Initialize 0B4A  
                        __end_of_StepMove 0998                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR1H 000FBF                                    _CCPR2H 000F68  
                                  _CCPR1L 000FBE                                    _CCPR2L 000F67  
                                  _CCPR5H 000F56                                    _CCPR5L 000F55  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  i2u5_48 0BCA                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                            __CFG_XINST$OFF 000000  
                            _CCPTMRS0bits 000F49            __end_of_State8MEF_act_Backward 04AA  
                          __CFG_STVREN$ON 000000                   __size_of_State16MEF_act 01EE  
                                  clear_0 09DE                         _limitar_corriente 09F2  
                            __pdataCOMRAM 0001                  StepMove@microstep_number 0037  
               ??_State16MEF_act_Backward 0033                        ?_limitar_corriente 0021  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                           ??_EUSART1_Write 002F  
                     _EPWM2_LoadDutyValue 0A94                   __end_of_TMR2_StartTimer 0CCE  
TMR2_SetInterruptHandler@InterruptHandler 002F  TMR6_SetInterruptHandler@InterruptHandler 002F  
           __size_of_INTERRUPT_Initialize 0004                       ??_limitar_corriente 002F  
                       _SYSTEM_Initialize 0B20                                __accesstop 0060  
                 __end_of__initialization 09E4                     __end_of_TMR2_CallBack 0BDE  
                      ?_SYSTEM_Initialize 0021                           _TMR6_StartTimer 0CC4  
                           ___rparam_used 000001                         ?_EPWM1_Initialize 0021  
                          __pcstackCOMRAM 0021                      ?_EPWM2_LoadDutyValue 002F  
                            __pidataBANK0 088A                       ??_SYSTEM_Initialize 0031  
                   __end_of_State8MEF_act 069C                                 ?_TMR2_ISR 0021  
                               ?_TMR6_ISR 0021                        ??_EPWM1_Initialize 002F  
                        ?_TMR2_Initialize 0021                 __end_of_limitar_corriente 0A48  
                 __end_of_TMR6_Initialize 0B72                          ?_CCP5_Initialize 0021  
                       ?_EPWM2_Initialize 0021                 __end_of_SYSTEM_Initialize 0B4A  
                      ??_EPWM2_Initialize 002F                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 0046                        __CFG_CCP2MX$PORTC1 000000  
                   ??_EPWM2_LoadDutyValue 0031          __end_of_TMR6_SetInterruptHandler 0CB2  
                              ??_TMR2_ISR 0021                        __CFG_CCP3MX$PORTB5 000000  
                               ?_StepMove 0034                                ??_TMR6_ISR 0021  
                                 _CCP1CON 000FBD                                   _CCP2CON 000F66  
                                 _CCP5CON 000F54                                   _ECCP1AS 000FB6  
                                 _ECCP2AS 000F64                                   _ADC_ISR 0CD2  
                 __size_of_ADC_Initialize 0018                                   _OSCCON2 000FD2  
                                 i2u51_48 0C0E                                   _OSCTUNE 000F9B  
                                 _PWM1CON 000FB7                                   _PWM2CON 000F65  
                                 _SPBRGH1 000FB0                          ?_TMR2_StartTimer 0021  
                 __end_of_TMR6_StartTimer 0CCA               __end_of_EPWM1_LoadDutyValue 0AF4  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0031  
                              ??_StepMove 0039                            _State16MEF_act 069C  
              __size_of_limitar_corriente 0056                                   __pcinit 0998  
                        ?_TMR6_Initialize 0021                                   __ramtop 1000  
                                 __ptext0 0AF4                                   __ptext1 092A  
                                 __ptext2 02B8                                   __ptext3 04AA  
                                 __ptext4 00AE                                   __ptext5 0C92  
                                 __ptext6 069C                                   __ptext7 09F2  
                                 __ptext8 0A94                                   __ptext9 0AC4  
                   _OSCILLATOR_Initialize 0C84                                 _T2CONbits 000FBA  
                           ?_StateMEF_ini 0021                        _EUSART1_Initialize 0C5A  
                ??_PIN_MANAGER_Initialize 002F                                 _T6CONbits 000F4A  
              __size_of_SYSTEM_Initialize 002A                      end_of_initialization 09E4  
                     ?_EUSART1_Initialize 0021                             __Lmediumconst 0000  
                  __end_of_State16MEF_act 088A                                   postdec1 000FE5  
                                 postinc0 000FEE                      ??_EUSART1_Initialize 002F  
                _TMR6_SetInterruptHandler 0CA8                            ??_StateMEF_ini 002F  
                     EUSART1_Write@txData 002F                          ?_TMR6_StartTimer 0021  
                            _EstadoActual 004A                           ?_State16MEF_act 0021  
            __end_of_INTERRUPT_Initialize 0CD2      __end_of_TMR2_DefaultInterruptHandler 0CDA  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 0CD8  
                       StepMove@Velocidad 0036                             __pidataCOMRAM 0C22  
                       __size_of_TMR2_ISR 0008                            _ADC_Initialize 0C42  
                       __size_of_TMR6_ISR 0022                    ?_OSCILLATOR_Initialize 0021  
                     start_initialization 0998                 __size_of_EPWM1_Initialize 0024  
         __size_of_PIN_MANAGER_Initialize 004C                                 _Microstep 0044  
            EPWM1_LoadDutyValue@dutyValue 002F                     __end_of_EUSART1_Write 0C9E  
               __size_of_EPWM2_Initialize 0024                    __end_of_ADC_Initialize 0C5A  
                             __pdataBANK0 0060                                  ?_ADC_ISR 0021  
                               _StepCount 003D                         StepMove@direccion 0038  
           ?_TMR2_DefaultInterruptHandler 0021                  ?_State16MEF_act_Backward 0021  
                       __size_of_StepMove 006E                    __size_of_TMR2_CallBack 0024  
                             __pbssCOMRAM 003B                  __size_of_TMR2_Initialize 0022  
                __size_of_CCP5_Initialize 0014                    __size_of_State8MEF_act 01F2  
             __end_of_EPWM2_LoadDutyValue 0AC4                  ??_State8MEF_act_Backward 0033  
                   _TMR6_InterruptHandler 0048                      __end_of_StateMEF_ini 0CA8  
                  _PIN_MANAGER_Initialize 0A48                                 __pintcode 0008  
                         ?_ADC_Initialize 0021              ??_INTERRUPT_InterruptManager 0021  
                        __CFG_PRICLKEN$ON 000000                                  _BAUDCON1 000FB8  
                                _ANALOG_0 0041                                  _ANALOG_1 003F  
                    _INTERRUPT_Initialize 0CCE                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                           _TMR2_CallBack 0BBA                                  _PIE1bits 000F9D  
                                _PIE5bits 000F7D                  __size_of_TMR2_StartTimer 0004  
     __size_of_INTERRUPT_InterruptManager 00A2                                  _PIR1bits 000F9E  
                                _PIR5bits 000F7E              __size_of_EPWM1_LoadDutyValue 0030  
              ??_TMR6_SetInterruptHandler 0031                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000           __end_of_State16MEF_act_Backward 02B8  
                                _TMR2_ISR 0CBC                                  _PSTR1CON 000FB9  
                                _PSTR2CON 000F63                                  _TMR6_ISR 0C00  
                           _State8MEF_act 04AA                          _Timer2Tick_count 003B  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
          ??_TMR2_DefaultInterruptHandler 0021                          _EPWM1_Initialize 0B96  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 002F  
                __size_of_TMR6_Initialize 0028                               _INTCON2bits 000FF1  
                               copy_data0 09AC                                 copy_data1 09CC  
                   ?_INTERRUPT_Initialize 0021                         ??_TMR2_Initialize 0031  
                          ?_TMR2_CallBack 0021                          ??_State16MEF_act 0033  
         __size_of_State8MEF_act_Backward 01F2                         ??_CCP5_Initialize 002F  
                                _MoveDone 0043                                  __Hrparam 0000  
                            _Timer2Ticked 0045                          _EPWM2_Initialize 0B72  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTC0 000000                            ?_State8MEF_act 0021  
                                _StepMove 092A                   ??_OSCILLATOR_Initialize 002F  
             __size_of_EUSART1_Initialize 0016                                  __ptext10 0C9E  
                                __ptext11 0B20                                  __ptext20 0CCE  
                                __ptext12 0B4A                                  __ptext21 0C5A  
                                __ptext13 0CC4                                  __ptext30 0BBA  
                                __ptext22 0B72                                  __ptext14 0CA8  
                                __ptext31 0CD8                                  __ptext23 0B96  
                                __ptext15 0BDE                                  __ptext32 0CD2  
                                __ptext24 0C70                                  __ptext16 0CCA  
                                __ptext33 0000                                  __ptext25 0C42  
                                __ptext17 0CB2                                  __ptext18 0A48  
                                __ptext27 0C00                                  __ptext19 0C84  
                                __ptext28 0CD6                                  __ptext29 0CBC  
                   __size_of_StateMEF_ini 000A                             __size_of_main 002C  
                     _LookUP_TABLE_COS_16 00A0                       _LookUP_TABLE_SEN_16 0060  
                __size_of_TMR6_StartTimer 0006                                  int$flags 004B  
                       ??_TMR2_StartTimer 002F        __end_of_INTERRUPT_InterruptManager 00AA  
              _INTERRUPT_InterruptManager 0008                    _State8MEF_act_Backward 02B8  
                              _INTCONbits 000FF2                              _StateMEF_ini 0C9E  
                  ??_INTERRUPT_Initialize 002F      __end_of_TMR6_DefaultInterruptHandler 0CD8  
   __size_of_TMR6_DefaultInterruptHandler 0002              _TMR6_DefaultInterruptHandler 0CD6  
        __size_of_State16MEF_act_Backward 020A                                  intlevel2 0000  
                         ??_TMR2_CallBack 0021              EPWM2_LoadDutyValue@dutyValue 002F  
                 ?_PIN_MANAGER_Initialize 0021                         ??_TMR6_Initialize 0031  
                              _RCSTA1bits 000FAB                          ??_ADC_Initialize 002F  
                         ??_State8MEF_act 0033                    __size_of_EUSART1_Write 000C  
                       __CFG_T3CMX$PORTC0 000000                       _EPWM1_LoadDutyValue 0AC4  
          __end_of_PIN_MANAGER_Initialize 0A94             ?_TMR6_DefaultInterruptHandler 0021  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 0046  
                __end_of_EPWM1_Initialize 0BBA                      ?_EPWM1_LoadDutyValue 002F  
