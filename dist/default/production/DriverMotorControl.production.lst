

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Jun 28 10:27:30 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           ; Version 1.41
    51                           ; Generated 25/01/2017 GMT
    52                           ; 
    53                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F46K22 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	idataCOMRAM
    86  00097A                     __pidataCOMRAM:
    87                           	opt stack 0
    88                           
    89                           ;initializer for _LookUP_TABLE_COS
    90  00097A  7D                 	db	125
    91  00097B  76                 	db	118
    92  00097C  6C                 	db	108
    93  00097D  5E                 	db	94
    94  00097E  4D                 	db	77
    95  00097F  39                 	db	57
    96  000980  22                 	db	34
    97  000981  0C                 	db	12
    98  000982  0C                 	db	12
    99  000983  22                 	db	34
   100  000984  39                 	db	57
   101  000985  4D                 	db	77
   102  000986  5E                 	db	94
   103  000987  6C                 	db	108
   104  000988  76                 	db	118
   105  000989  7D                 	db	125
   106  00098A  7D                 	db	125
   107  00098B  76                 	db	118
   108  00098C  6C                 	db	108
   109  00098D  5E                 	db	94
   110  00098E  4D                 	db	77
   111  00098F  39                 	db	57
   112  000990  22                 	db	34
   113  000991  0C                 	db	12
   114  000992  0C                 	db	12
   115  000993  22                 	db	34
   116  000994  39                 	db	57
   117  000995  4D                 	db	77
   118  000996  5E                 	db	94
   119  000997  6C                 	db	108
   120  000998  76                 	db	118
   121  000999  7D                 	db	125
   122                           
   123                           	psect	idataBANK0
   124  000566                     __pidataBANK0:
   125                           	opt stack 0
   126                           
   127                           ;initializer for _LookUP_TABLE_SEN_16
   128  000566  06                 	db	6
   129  000567  12                 	db	18
   130  000568  1D                 	db	29
   131  000569  2A                 	db	42
   132  00056A  35                 	db	53
   133  00056B  3F                 	db	63
   134  00056C  49                 	db	73
   135  00056D  53                 	db	83
   136  00056E  5B                 	db	91
   137  00056F  63                 	db	99
   138  000570  6A                 	db	106
   139  000571  70                 	db	112
   140  000572  75                 	db	117
   141  000573  79                 	db	121
   142  000574  7C                 	db	124
   143  000575  7E                 	db	126
   144  000576  7E                 	db	126
   145  000577  7C                 	db	124
   146  000578  79                 	db	121
   147  000579  75                 	db	117
   148  00057A  70                 	db	112
   149  00057B  6A                 	db	106
   150  00057C  63                 	db	99
   151  00057D  5B                 	db	91
   152  00057E  53                 	db	83
   153  00057F  49                 	db	73
   154  000580  3F                 	db	63
   155  000581  35                 	db	53
   156  000582  2A                 	db	42
   157  000583  1D                 	db	29
   158  000584  12                 	db	18
   159  000585  06                 	db	6
   160  000586  06                 	db	6
   161  000587  12                 	db	18
   162  000588  1D                 	db	29
   163  000589  2A                 	db	42
   164  00058A  35                 	db	53
   165  00058B  3F                 	db	63
   166  00058C  49                 	db	73
   167  00058D  53                 	db	83
   168  00058E  5B                 	db	91
   169  00058F  63                 	db	99
   170  000590  6A                 	db	106
   171  000591  70                 	db	112
   172  000592  75                 	db	117
   173  000593  79                 	db	121
   174  000594  7C                 	db	124
   175  000595  7E                 	db	126
   176  000596  7E                 	db	126
   177  000597  7C                 	db	124
   178  000598  79                 	db	121
   179  000599  75                 	db	117
   180  00059A  70                 	db	112
   181  00059B  6A                 	db	106
   182  00059C  63                 	db	99
   183  00059D  5B                 	db	91
   184  00059E  53                 	db	83
   185  00059F  49                 	db	73
   186  0005A0  3F                 	db	63
   187  0005A1  35                 	db	53
   188  0005A2  2A                 	db	42
   189  0005A3  1D                 	db	29
   190  0005A4  12                 	db	18
   191  0005A5  06                 	db	6
   192                           
   193                           ;initializer for _LookUP_TABLE_COS_16
   194  0005A6  7E                 	db	126
   195  0005A7  7C                 	db	124
   196  0005A8  79                 	db	121
   197  0005A9  75                 	db	117
   198  0005AA  70                 	db	112
   199  0005AB  6A                 	db	106
   200  0005AC  63                 	db	99
   201  0005AD  5B                 	db	91
   202  0005AE  53                 	db	83
   203  0005AF  49                 	db	73
   204  0005B0  3F                 	db	63
   205  0005B1  35                 	db	53
   206  0005B2  2A                 	db	42
   207  0005B3  1D                 	db	29
   208  0005B4  12                 	db	18
   209  0005B5  06                 	db	6
   210  0005B6  06                 	db	6
   211  0005B7  12                 	db	18
   212  0005B8  1D                 	db	29
   213  0005B9  2A                 	db	42
   214  0005BA  35                 	db	53
   215  0005BB  3F                 	db	63
   216  0005BC  49                 	db	73
   217  0005BD  53                 	db	83
   218  0005BE  5B                 	db	91
   219  0005BF  63                 	db	99
   220  0005C0  6A                 	db	106
   221  0005C1  70                 	db	112
   222  0005C2  75                 	db	117
   223  0005C3  79                 	db	121
   224  0005C4  7C                 	db	124
   225  0005C5  7E                 	db	126
   226  0005C6  7E                 	db	126
   227  0005C7  7C                 	db	124
   228  0005C8  79                 	db	121
   229  0005C9  75                 	db	117
   230  0005CA  70                 	db	112
   231  0005CB  6A                 	db	106
   232  0005CC  63                 	db	99
   233  0005CD  5B                 	db	91
   234  0005CE  53                 	db	83
   235  0005CF  49                 	db	73
   236  0005D0  3F                 	db	63
   237  0005D1  35                 	db	53
   238  0005D2  2A                 	db	42
   239  0005D3  1D                 	db	29
   240  0005D4  12                 	db	18
   241  0005D5  06                 	db	6
   242  0005D6  06                 	db	6
   243  0005D7  12                 	db	18
   244  0005D8  1D                 	db	29
   245  0005D9  2A                 	db	42
   246  0005DA  35                 	db	53
   247  0005DB  3F                 	db	63
   248  0005DC  49                 	db	73
   249  0005DD  53                 	db	83
   250  0005DE  5B                 	db	91
   251  0005DF  63                 	db	99
   252  0005E0  6A                 	db	106
   253  0005E1  70                 	db	112
   254  0005E2  75                 	db	117
   255  0005E3  79                 	db	121
   256  0005E4  7C                 	db	124
   257  0005E5  7E                 	db	126
   258                           
   259                           ;initializer for _LookUP_TABLE_SEN
   260  0005E6  0C                 	db	12
   261  0005E7  22                 	db	34
   262  0005E8  39                 	db	57
   263  0005E9  4D                 	db	77
   264  0005EA  5E                 	db	94
   265  0005EB  6C                 	db	108
   266  0005EC  76                 	db	118
   267  0005ED  7D                 	db	125
   268  0005EE  7D                 	db	125
   269  0005EF  76                 	db	118
   270  0005F0  6C                 	db	108
   271  0005F1  5E                 	db	94
   272  0005F2  4D                 	db	77
   273  0005F3  39                 	db	57
   274  0005F4  22                 	db	34
   275  0005F5  0C                 	db	12
   276  0005F6  0C                 	db	12
   277  0005F7  22                 	db	34
   278  0005F8  39                 	db	57
   279  0005F9  4D                 	db	77
   280  0005FA  5E                 	db	94
   281  0005FB  6C                 	db	108
   282  0005FC  76                 	db	118
   283  0005FD  7D                 	db	125
   284  0005FE  7D                 	db	125
   285  0005FF  76                 	db	118
   286  000600  6C                 	db	108
   287  000601  5E                 	db	94
   288  000602  4D                 	db	77
   289  000603  39                 	db	57
   290  000604  22                 	db	34
   291  000605  0C                 	db	12
   292                           
   293                           	psect	nvCOMRAM
   294  00004B                     __pnvCOMRAM:
   295                           	opt stack 0
   296  00004B                     _TMR2_InterruptHandler:
   297                           	opt stack 0
   298  00004B                     	ds	2
   299  00004D                     _TMR6_InterruptHandler:
   300                           	opt stack 0
   301  00004D                     	ds	2
   302  00004F                     _EstadoActual:
   303                           	opt stack 0
   304  00004F                     	ds	1
   305  0000                     _CCPTMRS0bits	set	3913
   306  0000                     _ANSELA	set	3896
   307  0000                     _ANSELE	set	3900
   308  0000                     _ANSELD	set	3899
   309  0000                     _ANSELB	set	3897
   310  0000                     _ANSELC	set	3898
   311  0000                     _CCPR5H	set	3926
   312  0000                     _CCPR5L	set	3925
   313  0000                     _CCP5CON	set	3924
   314  0000                     _T6CONbits	set	3914
   315  0000                     _TMR6	set	3916
   316  0000                     _PR6	set	3915
   317  0000                     _T6CON	set	3914
   318  0000                     _LATCbits	set	3979
   319  0000                     _LATDbits	set	3980
   320  0000                     _LATBbits	set	3978
   321  0000                     _TXREG1	set	4013
   322  0000                     _RCREG1	set	4014
   323  0000                     _RCSTA1bits	set	4011
   324  0000                     _SPBRGH1	set	4016
   325  0000                     _SPBRG1	set	4015
   326  0000                     _TXSTA1	set	4012
   327  0000                     _RCSTA1	set	4011
   328  0000                     _BAUDCON1	set	4024
   329  0000                     _OSCTUNE	set	3995
   330  0000                     _OSCCON2	set	4050
   331  0000                     _OSCCON	set	4051
   332  0000                     _INTCONbits	set	4082
   333  0000                     _RCONbits	set	4048
   334  0000                     _ADCON0bits	set	4034
   335  0000                     _ADRESH	set	4036
   336  0000                     _ADRESL	set	4035
   337  0000                     _ADCON2	set	4032
   338  0000                     _ADCON1	set	4033
   339  0000                     _ADCON0	set	4034
   340  0000                     _CCPR1H	set	4031
   341  0000                     _CCPR1L	set	4030
   342  0000                     _PSTR1CON	set	4025
   343  0000                     _PWM1CON	set	4023
   344  0000                     _ECCP1AS	set	4022
   345  0000                     _CCP1CON	set	4029
   346  0000                     _CCPR2H	set	3944
   347  0000                     _CCPR2L	set	3943
   348  0000                     _PSTR2CON	set	3939
   349  0000                     _PWM2CON	set	3941
   350  0000                     _ECCP2AS	set	3940
   351  0000                     _CCP2CON	set	3942
   352  0000                     _INTCON2bits	set	4081
   353  0000                     _WPUB	set	3937
   354  0000                     _TRISD	set	3989
   355  0000                     _TRISC	set	3988
   356  0000                     _TRISB	set	3987
   357  0000                     _TRISA	set	3986
   358  0000                     _TRISE	set	3990
   359  0000                     _LATC	set	3979
   360  0000                     _LATB	set	3978
   361  0000                     _LATA	set	3977
   362  0000                     _LATD	set	3980
   363  0000                     _LATE	set	3981
   364  0000                     _T2CONbits	set	4026
   365  0000                     _PIE1bits	set	3997
   366  0000                     _PIR1bits	set	3998
   367  0000                     _TMR2	set	4028
   368  0000                     _PR2	set	4027
   369  0000                     _T2CON	set	4026
   370  0000                     _PIE5bits	set	3965
   371  0000                     _PIR5bits	set	3966
   372                           
   373                           ; #config settings
   374  0000                     
   375                           	psect	cinit
   376  00076E                     __pcinit:
   377                           	opt stack 0
   378  00076E                     start_initialization:
   379                           	opt stack 0
   380  00076E                     __initialization:
   381                           	opt stack 0
   382                           
   383                           ; Initialize objects allocated to BANK0 (160 bytes)
   384                           ; load TBLPTR registers with __pidataBANK0
   385  00076E  0E66               	movlw	low __pidataBANK0
   386  000770  6EF6               	movwf	tblptrl,c
   387  000772  0E05               	movlw	high __pidataBANK0
   388  000774  6EF7               	movwf	tblptrh,c
   389  000776  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   390  000778  6EF8               	movwf	tblptru,c
   391  00077A  EE00  F060         	lfsr	0,__pdataBANK0
   392  00077E  EE10 F0A0          	lfsr	1,160
   393  000782                     copy_data0:
   394  000782  0009               	tblrd		*+
   395  000784  CFF5 FFEE          	movff	tablat,postinc0
   396  000788  50E5               	movf	postdec1,w,c
   397  00078A  50E1               	movf	fsr1l,w,c
   398  00078C  E1FA               	bnz	copy_data0
   399                           
   400                           ; Initialize objects allocated to COMRAM (32 bytes)
   401                           ; load TBLPTR registers with __pidataCOMRAM
   402  00078E  0E7A               	movlw	low __pidataCOMRAM
   403  000790  6EF6               	movwf	tblptrl,c
   404  000792  0E09               	movlw	high __pidataCOMRAM
   405  000794  6EF7               	movwf	tblptrh,c
   406  000796  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   407  000798  6EF8               	movwf	tblptru,c
   408  00079A  EE00  F001         	lfsr	0,__pdataCOMRAM
   409  00079E  EE10 F020          	lfsr	1,32
   410  0007A2                     copy_data1:
   411  0007A2  0009               	tblrd		*+
   412  0007A4  CFF5 FFEE          	movff	tablat,postinc0
   413  0007A8  50E5               	movf	postdec1,w,c
   414  0007AA  50E1               	movf	fsr1l,w,c
   415  0007AC  E1FA               	bnz	copy_data1
   416                           
   417                           ; Clear objects allocated to COMRAM (20 bytes)
   418  0007AE  EE00  F037         	lfsr	0,__pbssCOMRAM
   419  0007B2  0E14               	movlw	20
   420  0007B4                     clear_0:
   421  0007B4  6AEE               	clrf	postinc0,c
   422  0007B6  06E8               	decf	wreg,f,c
   423  0007B8  E1FD               	bnz	clear_0
   424  0007BA                     end_of_initialization:
   425                           	opt stack 0
   426  0007BA                     __end_of__initialization:
   427                           	opt stack 0
   428  0007BA  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   429  0007BC  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   430  0007BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   431  0007C0  6EF8               	movwf	tblptru,c
   432  0007C2  0100               	movlb	0
   433  0007C4  EF84  F003         	goto	_main	;jump to C main() function
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           wreg	equ	0xFE8
   440                           postdec1	equ	0xFE5
   441                           fsr1l	equ	0xFE1
   442                           
   443                           	psect	bssCOMRAM
   444  000037                     __pbssCOMRAM:
   445                           	opt stack 0
   446  000037                     _StepperMotor:
   447                           	opt stack 0
   448  000037                     	ds	5
   449  00003C                     _Timer2Tick_count:
   450                           	opt stack 0
   451  00003C                     	ds	2
   452  00003E                     _StepCount:
   453                           	opt stack 0
   454  00003E                     	ds	2
   455  000040                     _Microstep:
   456                           	opt stack 0
   457  000040                     	ds	2
   458  000042                     _ANALOG_1:
   459                           	opt stack 0
   460  000042                     	ds	2
   461  000044                     _ANALOG_0:
   462                           	opt stack 0
   463  000044                     	ds	2
   464  000046                     	ds	1
   465  000047                     _parar:
   466                           	opt stack 0
   467  000047                     	ds	1
   468  000048                     _StepsComplete:
   469                           	opt stack 0
   470  000048                     	ds	1
   471  000049                     _DelayTimerTicked:
   472                           	opt stack 0
   473  000049                     	ds	1
   474  00004A                     _Timer2Ticked:
   475                           	opt stack 0
   476  00004A                     	ds	1
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	dataCOMRAM
   487  000001                     __pdataCOMRAM:
   488                           	opt stack 0
   489  000001                     _LookUP_TABLE_COS:
   490                           	opt stack 0
   491  000001                     	ds	32
   492                           tblptru	equ	0xFF8
   493                           tblptrh	equ	0xFF7
   494                           tblptrl	equ	0xFF6
   495                           tablat	equ	0xFF5
   496                           postinc0	equ	0xFEE
   497                           wreg	equ	0xFE8
   498                           postdec1	equ	0xFE5
   499                           fsr1l	equ	0xFE1
   500                           
   501                           	psect	dataBANK0
   502  000060                     __pdataBANK0:
   503                           	opt stack 0
   504  000060                     _LookUP_TABLE_SEN_16:
   505                           	opt stack 0
   506  000060                     	ds	64
   507  0000A0                     _LookUP_TABLE_COS_16:
   508                           	opt stack 0
   509  0000A0                     	ds	64
   510  0000E0                     _LookUP_TABLE_SEN:
   511                           	opt stack 0
   512  0000E0                     	ds	32
   513                           tblptru	equ	0xFF8
   514                           tblptrh	equ	0xFF7
   515                           tblptrl	equ	0xFF6
   516                           tablat	equ	0xFF5
   517                           postinc0	equ	0xFEE
   518                           wreg	equ	0xFE8
   519                           postdec1	equ	0xFE5
   520                           fsr1l	equ	0xFE1
   521                           
   522                           	psect	cstackBANK1
   523  000100                     __pcstackBANK1:
   524                           	opt stack 0
   525  000100                     StepMove@StepNumber:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x0
   529  000100                     	ds	2
   530  000102                     StepMove@Velocidad:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x2
   534  000102                     	ds	1
   535  000103                     StepMove@microstep_number:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x3
   539  000103                     	ds	1
   540  000104                     StepMove@direccion:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x4
   544  000104                     	ds	1
   545  000105                     RectaAceleracion@microstep_number:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x5
   549  000105                     	ds	1
   550  000106                     RectaAceleracion@direccion:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x6
   554  000106                     	ds	1
   555  000107                     RectaAceleracion@velocidad:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x7
   559  000107                     	ds	1
   560  000108                     RectaAceleracion@i:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x8
   564  000108                     	ds	1
   565                           tblptru	equ	0xFF8
   566                           tblptrh	equ	0xFF7
   567                           tblptrl	equ	0xFF6
   568                           tablat	equ	0xFF5
   569                           postinc0	equ	0xFEE
   570                           wreg	equ	0xFE8
   571                           postdec1	equ	0xFE5
   572                           fsr1l	equ	0xFE1
   573                           
   574                           	psect	cstackCOMRAM
   575  000021                     __pcstackCOMRAM:
   576                           	opt stack 0
   577  000021                     ??_INTERRUPT_InterruptManager:
   578  000021                     
   579                           ; 1 bytes @ 0x0
   580  000021                     	ds	14
   581  00002F                     TMR6_SetInterruptHandler@InterruptHandler:
   582                           	opt stack 0
   583  00002F                     TMR2_SetInterruptHandler@InterruptHandler:
   584                           	opt stack 0
   585  00002F                     EPWM2_LoadDutyValue@dutyValue:
   586                           	opt stack 0
   587  00002F                     EPWM1_LoadDutyValue@dutyValue:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0xE
   591  00002F                     	ds	2
   592  000031                     ??_EPWM2_LoadDutyValue:
   593  000031                     ??_EPWM1_LoadDutyValue:
   594  000031                     
   595                           ; 1 bytes @ 0x10
   596  000031                     	ds	2
   597  000033                     ??_State8MEF_act:
   598  000033                     ??_State16MEF_act:
   599                           
   600                           ; 1 bytes @ 0x12
   601  000033                     	ds	1
   602  000034                     State8MEF_act@direccion:
   603                           	opt stack 0
   604  000034                     State16MEF_act@direccion:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x13
   608  000034                     	ds	1
   609  000035                     ??_StepMove:
   610                           
   611                           ; 1 bytes @ 0x14
   612  000035                     	ds	2
   613  000037                     tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           postinc0	equ	0xFEE
   618                           wreg	equ	0xFE8
   619                           postdec1	equ	0xFE5
   620                           fsr1l	equ	0xFE1
   621                           
   622                           ; 1 bytes @ 0x16
   623 ;;
   624 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   625 ;;
   626 ;; *************** function _main *****************
   627 ;; Defined at:
   628 ;;		line 23 in file "main.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels required when called:    8
   648 ;; This function calls:
   649 ;;		_Motor_Stop
   650 ;;		_RectaAceleracion
   651 ;;		_SYSTEM_Initialize
   652 ;;		_StateMEF_ini
   653 ;;		_StepMove
   654 ;; This function is called by:
   655 ;;		Startup code after reset
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text0
   660  000708                     __ptext0:
   661                           	opt stack 0
   662  000708                     _main:
   663                           	opt stack 23
   664                           
   665                           ;main.c: 26: SYSTEM_Initialize();
   666                           
   667                           ;incstack = 0
   668  000708  EC3A  F004         	call	_SYSTEM_Initialize	;wreg free
   669                           
   670                           ;main.c: 27: StateMEF_ini();
   671  00070C  ECF7  F004         	call	_StateMEF_ini	;wreg free
   672                           
   673                           ;main.c: 28: Timer2Ticked=0;
   674  000710  0E00               	movlw	0
   675  000712  6E4A               	movwf	_Timer2Ticked,c	;volatile
   676                           
   677                           ;main.c: 29: DelayTimerTicked=0;
   678  000714  0E00               	movlw	0
   679  000716  6E49               	movwf	_DelayTimerTicked,c	;volatile
   680                           
   681                           ;main.c: 30: do { LATBbits.LATB6 = 1; } while(0);
   682  000718  8C8A               	bsf	3978,6,c	;volatile
   683                           
   684                           ;main.c: 33: StepperMotor.Velocidad = 15;
   685  00071A  0E0F               	movlw	15
   686  00071C  6E37               	movwf	_StepperMotor,c
   687                           
   688                           ;main.c: 34: StepperMotor.StepsNumber = 2*(3200);
   689  00071E  0E19               	movlw	25
   690  000720  6E3B               	movwf	_StepperMotor+4,c
   691  000722  0E00               	movlw	0
   692  000724  6E3A               	movwf	_StepperMotor+3,c
   693                           
   694                           ;main.c: 35: StepperMotor.MicroStepNumber = 16;
   695  000726  0E10               	movlw	16
   696  000728  6E38               	movwf	_StepperMotor+1,c
   697                           
   698                           ;main.c: 36: StepperMotor.Direccion = 1;
   699  00072A  0E01               	movlw	1
   700  00072C  6E39               	movwf	_StepperMotor+2,c
   701                           
   702                           ;main.c: 39: (INTCONbits.GIE = 1);
   703  00072E  8EF2               	bsf	intcon,7,c	;volatile
   704                           
   705                           ;main.c: 42: (INTCONbits.PEIE = 1);
   706  000730  8CF2               	bsf	intcon,6,c	;volatile
   707  000732                     l2404:
   708                           
   709                           ;main.c: 44: {
   710                           ;main.c: 58: if (parar==0){
   711  000732  5047               	movf	_parar,w,c
   712  000734  A4D8               	btfss	status,2,c
   713  000736  D7FD               	goto	l2404
   714                           
   715                           ;main.c: 59: parar=1;
   716  000738  0E01               	movlw	1
   717  00073A  6E47               	movwf	_parar,c
   718                           
   719                           ;main.c: 60: RectaAceleracion( StepperMotor.Velocidad , StepperMotor.MicroStepNumber , S
      +                          tepperMotor.Direccion );
   720  00073C  C038  F105         	movff	_StepperMotor+1,RectaAceleracion@microstep_number
   721  000740  C039  F106         	movff	_StepperMotor+2,RectaAceleracion@direccion
   722  000744  5037               	movf	_StepperMotor,w,c
   723  000746  EC03  F003         	call	_RectaAceleracion
   724  00074A                     l2410:
   725  00074A  C03A  F100         	movff	_StepperMotor+3,StepMove@StepNumber
   726  00074E  C03B  F101         	movff	_StepperMotor+4,StepMove@StepNumber+1
   727  000752  C037  F102         	movff	_StepperMotor,StepMove@Velocidad
   728  000756  C038  F103         	movff	_StepperMotor+1,StepMove@microstep_number
   729  00075A  C039  F104         	movff	_StepperMotor+2,StepMove@direccion
   730  00075E  EC4B  F003         	call	_StepMove	;wreg free
   731  000762  0900               	iorlw	0
   732  000764  B4D8               	btfsc	status,2,c
   733  000766  D7F1               	goto	l2410
   734                           
   735                           ;main.c: 62: Motor_Stop();
   736  000768  ECEE  F004         	call	_Motor_Stop	;wreg free
   737  00076C  D7E2               	goto	l2404
   738  00076E                     __end_of_main:
   739                           	opt stack 0
   740                           tblptru	equ	0xFF8
   741                           tblptrh	equ	0xFF7
   742                           tblptrl	equ	0xFF6
   743                           tablat	equ	0xFF5
   744                           intcon	equ	0xFF2
   745                           postinc0	equ	0xFEE
   746                           wreg	equ	0xFE8
   747                           postdec1	equ	0xFE5
   748                           fsr1l	equ	0xFE1
   749                           status	equ	0xFD8
   750                           
   751 ;; *************** function _StateMEF_ini *****************
   752 ;; Defined at:
   753 ;;		line 62 in file "MotorDriver.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   771 ;;Total ram usage:        0 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; Hardware stack levels required when called:    4
   774 ;; This function calls:
   775 ;;		Nothing
   776 ;; This function is called by:
   777 ;;		_main
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           	psect	text1
   782  0009EE                     __ptext1:
   783                           	opt stack 0
   784  0009EE                     _StateMEF_ini:
   785                           	opt stack 26
   786                           
   787                           ;MotorDriver.c: 64: EstadoActual = STATE1;
   788                           
   789                           ;incstack = 0
   790  0009EE  0E01               	movlw	1
   791  0009F0  6E4F               	movwf	_EstadoActual,c
   792                           
   793                           ;MotorDriver.c: 65: Microstep=0;
   794  0009F2  0E00               	movlw	0
   795  0009F4  6E41               	movwf	_Microstep+1,c
   796  0009F6  0E00               	movlw	0
   797  0009F8  6E40               	movwf	_Microstep,c
   798  0009FA  0012               	return		;funcret
   799  0009FC                     __end_of_StateMEF_ini:
   800                           	opt stack 0
   801                           tblptru	equ	0xFF8
   802                           tblptrh	equ	0xFF7
   803                           tblptrl	equ	0xFF6
   804                           tablat	equ	0xFF5
   805                           intcon	equ	0xFF2
   806                           postinc0	equ	0xFEE
   807                           wreg	equ	0xFE8
   808                           postdec1	equ	0xFE5
   809                           fsr1l	equ	0xFE1
   810                           status	equ	0xFD8
   811                           
   812 ;; *************** function _SYSTEM_Initialize *****************
   813 ;; Defined at:
   814 ;;		line 111 in file "mcc_generated_files/mcc.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    6
   835 ;; This function calls:
   836 ;;		_ADC_Initialize
   837 ;;		_CCP5_Initialize
   838 ;;		_EPWM1_Initialize
   839 ;;		_EPWM2_Initialize
   840 ;;		_EUSART1_Initialize
   841 ;;		_INTERRUPT_Initialize
   842 ;;		_OSCILLATOR_Initialize
   843 ;;		_PIN_MANAGER_Initialize
   844 ;;		_TMR2_Initialize
   845 ;;		_TMR6_Initialize
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           	psect	text2
   852  000874                     __ptext2:
   853                           	opt stack 0
   854  000874                     _SYSTEM_Initialize:
   855                           	opt stack 24
   856                           
   857                           ;mcc.c: 114: INTERRUPT_Initialize();
   858                           
   859                           ;incstack = 0
   860  000874  EC18  F005         	call	_INTERRUPT_Initialize	;wreg free
   861                           
   862                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   863  000878  ECE4  F003         	call	_PIN_MANAGER_Initialize	;wreg free
   864                           
   865                           ;mcc.c: 116: OSCILLATOR_Initialize();
   866  00087C  ECFE  F004         	call	_OSCILLATOR_Initialize	;wreg free
   867                           
   868                           ;mcc.c: 117: TMR6_Initialize();
   869  000880  EC4F  F004         	call	_TMR6_Initialize	;wreg free
   870                           
   871                           ;mcc.c: 118: EPWM2_Initialize();
   872  000884  EC77  F004         	call	_EPWM2_Initialize	;wreg free
   873                           
   874                           ;mcc.c: 119: CCP5_Initialize();
   875  000888  ECE4  F004         	call	_CCP5_Initialize	;wreg free
   876                           
   877                           ;mcc.c: 120: ADC_Initialize();
   878  00088C  ECCD  F004         	call	_ADC_Initialize	;wreg free
   879                           
   880                           ;mcc.c: 121: EPWM1_Initialize();
   881  000890  EC89  F004         	call	_EPWM1_Initialize	;wreg free
   882                           
   883                           ;mcc.c: 122: TMR2_Initialize();
   884  000894  EC9B  F004         	call	_TMR2_Initialize	;wreg free
   885                           
   886                           ;mcc.c: 123: EUSART1_Initialize();
   887  000898  ECD9  F004         	call	_EUSART1_Initialize	;wreg free
   888  00089C  0012               	return		;funcret
   889  00089E                     __end_of_SYSTEM_Initialize:
   890                           	opt stack 0
   891                           tblptru	equ	0xFF8
   892                           tblptrh	equ	0xFF7
   893                           tblptrl	equ	0xFF6
   894                           tablat	equ	0xFF5
   895                           intcon	equ	0xFF2
   896                           postinc0	equ	0xFEE
   897                           wreg	equ	0xFE8
   898                           postdec1	equ	0xFE5
   899                           fsr1l	equ	0xFE1
   900                           status	equ	0xFD8
   901                           
   902 ;; *************** function _TMR6_Initialize *****************
   903 ;; Defined at:
   904 ;;		line 63 in file "mcc_generated_files/tmr6.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;Total ram usage:        0 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; Hardware stack levels required when called:    5
   925 ;; This function calls:
   926 ;;		_TMR6_SetInterruptHandler
   927 ;;		_TMR6_StartTimer
   928 ;; This function is called by:
   929 ;;		_SYSTEM_Initialize
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text3
   934  00089E                     __ptext3:
   935                           	opt stack 0
   936  00089E                     _TMR6_Initialize:
   937                           	opt stack 24
   938                           
   939                           ;tmr6.c: 68: T6CON = 0x01;
   940                           
   941                           ;incstack = 0
   942  00089E  0E01               	movlw	1
   943  0008A0  010F               	movlb	15	; () banked
   944  0008A2  6F4A               	movwf	74,b	;volatile
   945                           
   946                           ;tmr6.c: 71: PR6 = 0x45;
   947  0008A4  0E45               	movlw	69
   948  0008A6  010F               	movlb	15	; () banked
   949  0008A8  6F4B               	movwf	75,b	;volatile
   950                           
   951                           ;tmr6.c: 74: TMR6 = 0x00;
   952  0008AA  0E00               	movlw	0
   953  0008AC  010F               	movlb	15	; () banked
   954  0008AE  6F4C               	movwf	76,b	;volatile
   955                           
   956                           ; BSR set to: 15
   957                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
   958  0008B0  947E               	bcf	3966,2,c	;volatile
   959                           
   960                           ; BSR set to: 15
   961                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
   962  0008B2  847D               	bsf	3965,2,c	;volatile
   963                           
   964                           ; BSR set to: 15
   965                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
   966  0008B4  0E38               	movlw	low _TMR6_DefaultInterruptHandler
   967  0008B6  6E2F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
   968  0008B8  0E0A               	movlw	high _TMR6_DefaultInterruptHandler
   969  0008BA  6E30               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
   970  0008BC  EC05  F005         	call	_TMR6_SetInterruptHandler	;wreg free
   971                           
   972                           ;tmr6.c: 86: TMR6_StartTimer();
   973  0008C0  EC13  F005         	call	_TMR6_StartTimer	;wreg free
   974  0008C4  0012               	return		;funcret
   975  0008C6                     __end_of_TMR6_Initialize:
   976                           	opt stack 0
   977                           tblptru	equ	0xFF8
   978                           tblptrh	equ	0xFF7
   979                           tblptrl	equ	0xFF6
   980                           tablat	equ	0xFF5
   981                           intcon	equ	0xFF2
   982                           postinc0	equ	0xFEE
   983                           wreg	equ	0xFE8
   984                           postdec1	equ	0xFE5
   985                           fsr1l	equ	0xFE1
   986                           status	equ	0xFD8
   987                           
   988 ;; *************** function _TMR6_StartTimer *****************
   989 ;; Defined at:
   990 ;;		line 89 in file "mcc_generated_files/tmr6.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		None
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;Total ram usage:        0 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; Hardware stack levels required when called:    4
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		_TMR6_Initialize
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text4
  1019  000A26                     __ptext4:
  1020                           	opt stack 0
  1021  000A26                     _TMR6_StartTimer:
  1022                           	opt stack 24
  1023                           
  1024                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  1025                           
  1026                           ;incstack = 0
  1027  000A26  010F               	movlb	15	; () banked
  1028  000A28  854A               	bsf	74,2,b	;volatile
  1029                           
  1030                           ; BSR set to: 15
  1031  000A2A  0012               	return		;funcret
  1032  000A2C                     __end_of_TMR6_StartTimer:
  1033                           	opt stack 0
  1034                           tblptru	equ	0xFF8
  1035                           tblptrh	equ	0xFF7
  1036                           tblptrl	equ	0xFF6
  1037                           tablat	equ	0xFF5
  1038                           intcon	equ	0xFF2
  1039                           postinc0	equ	0xFEE
  1040                           wreg	equ	0xFE8
  1041                           postdec1	equ	0xFE5
  1042                           fsr1l	equ	0xFE1
  1043                           status	equ	0xFD8
  1044                           
  1045 ;; *************** function _TMR6_SetInterruptHandler *****************
  1046 ;; Defined at:
  1047 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1050 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;Total ram usage:        2 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    4
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_TMR6_Initialize
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text5
  1077  000A0A                     __ptext5:
  1078                           	opt stack 0
  1079  000A0A                     _TMR6_SetInterruptHandler:
  1080                           	opt stack 24
  1081                           
  1082                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  1083                           
  1084                           ; BSR set to: 15
  1085                           ;incstack = 0
  1086  000A0A  C02F  F04D         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  1087  000A0E  C030  F04E         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  1088  000A12  0012               	return		;funcret
  1089  000A14                     __end_of_TMR6_SetInterruptHandler:
  1090                           	opt stack 0
  1091                           tblptru	equ	0xFF8
  1092                           tblptrh	equ	0xFF7
  1093                           tblptrl	equ	0xFF6
  1094                           tablat	equ	0xFF5
  1095                           intcon	equ	0xFF2
  1096                           postinc0	equ	0xFEE
  1097                           wreg	equ	0xFE8
  1098                           postdec1	equ	0xFE5
  1099                           fsr1l	equ	0xFE1
  1100                           status	equ	0xFD8
  1101                           
  1102 ;; *************** function _TMR2_Initialize *****************
  1103 ;; Defined at:
  1104 ;;		line 68 in file "mcc_generated_files/tmr2.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, status,2, status,0, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;Total ram usage:        0 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    5
  1125 ;; This function calls:
  1126 ;;		_TMR2_SetInterruptHandler
  1127 ;;		_TMR2_StartTimer
  1128 ;; This function is called by:
  1129 ;;		_SYSTEM_Initialize
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text6
  1134  000936                     __ptext6:
  1135                           	opt stack 0
  1136  000936                     _TMR2_Initialize:
  1137                           	opt stack 24
  1138                           
  1139                           ;tmr2.c: 73: T2CON = 0x02;
  1140                           
  1141                           ;incstack = 0
  1142  000936  0E02               	movlw	2
  1143  000938  6EBA               	movwf	4026,c	;volatile
  1144                           
  1145                           ;tmr2.c: 76: PR2 = 0x0C;
  1146  00093A  0E0C               	movlw	12
  1147  00093C  6EBB               	movwf	4027,c	;volatile
  1148                           
  1149                           ;tmr2.c: 79: TMR2 = 0x00;
  1150  00093E  0E00               	movlw	0
  1151  000940  6EBC               	movwf	4028,c	;volatile
  1152                           
  1153                           ;tmr2.c: 82: PIR1bits.TMR2IF = 0;
  1154  000942  929E               	bcf	3998,1,c	;volatile
  1155                           
  1156                           ;tmr2.c: 85: PIE1bits.TMR2IE = 1;
  1157  000944  829D               	bsf	3997,1,c	;volatile
  1158                           
  1159                           ;tmr2.c: 88: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  1160  000946  0E3A               	movlw	low _TMR2_DefaultInterruptHandler
  1161  000948  6E2F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  1162  00094A  0E0A               	movlw	high _TMR2_DefaultInterruptHandler
  1163  00094C  6E30               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  1164  00094E  EC0A  F005         	call	_TMR2_SetInterruptHandler	;wreg free
  1165                           
  1166                           ;tmr2.c: 91: TMR2_StartTimer();
  1167  000952  EC16  F005         	call	_TMR2_StartTimer	;wreg free
  1168  000956  0012               	return		;funcret
  1169  000958                     __end_of_TMR2_Initialize:
  1170                           	opt stack 0
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           intcon	equ	0xFF2
  1176                           postinc0	equ	0xFEE
  1177                           wreg	equ	0xFE8
  1178                           postdec1	equ	0xFE5
  1179                           fsr1l	equ	0xFE1
  1180                           status	equ	0xFD8
  1181                           
  1182 ;; *************** function _TMR2_StartTimer *****************
  1183 ;; Defined at:
  1184 ;;		line 94 in file "mcc_generated_files/tmr2.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		None
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;Total ram usage:        0 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    4
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_TMR2_Initialize
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text7
  1213  000A2C                     __ptext7:
  1214                           	opt stack 0
  1215  000A2C                     _TMR2_StartTimer:
  1216                           	opt stack 24
  1217                           
  1218                           ;tmr2.c: 97: T2CONbits.TMR2ON = 1;
  1219                           
  1220                           ;incstack = 0
  1221  000A2C  84BA               	bsf	4026,2,c	;volatile
  1222  000A2E  0012               	return		;funcret
  1223  000A30                     __end_of_TMR2_StartTimer:
  1224                           	opt stack 0
  1225                           tblptru	equ	0xFF8
  1226                           tblptrh	equ	0xFF7
  1227                           tblptrl	equ	0xFF6
  1228                           tablat	equ	0xFF5
  1229                           intcon	equ	0xFF2
  1230                           postinc0	equ	0xFEE
  1231                           wreg	equ	0xFE8
  1232                           postdec1	equ	0xFE5
  1233                           fsr1l	equ	0xFE1
  1234                           status	equ	0xFD8
  1235                           
  1236 ;; *************** function _TMR2_SetInterruptHandler *****************
  1237 ;; Defined at:
  1238 ;;		line 150 in file "mcc_generated_files/tmr2.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1241 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;Total ram usage:        2 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    4
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		_TMR2_Initialize
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text8
  1268  000A14                     __ptext8:
  1269                           	opt stack 0
  1270  000A14                     _TMR2_SetInterruptHandler:
  1271                           	opt stack 24
  1272                           
  1273                           ;tmr2.c: 151: TMR2_InterruptHandler = InterruptHandler;
  1274                           
  1275                           ;incstack = 0
  1276  000A14  C02F  F04B         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1277  000A18  C030  F04C         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1278  000A1C  0012               	return		;funcret
  1279  000A1E                     __end_of_TMR2_SetInterruptHandler:
  1280                           	opt stack 0
  1281                           tblptru	equ	0xFF8
  1282                           tblptrh	equ	0xFF7
  1283                           tblptrl	equ	0xFF6
  1284                           tablat	equ	0xFF5
  1285                           intcon	equ	0xFF2
  1286                           postinc0	equ	0xFEE
  1287                           wreg	equ	0xFE8
  1288                           postdec1	equ	0xFE5
  1289                           fsr1l	equ	0xFE1
  1290                           status	equ	0xFD8
  1291                           
  1292 ;; *************** function _PIN_MANAGER_Initialize *****************
  1293 ;; Defined at:
  1294 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;Total ram usage:        0 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    4
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_SYSTEM_Initialize
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text9
  1323  0007C8                     __ptext9:
  1324                           	opt stack 0
  1325  0007C8                     _PIN_MANAGER_Initialize:
  1326                           	opt stack 25
  1327                           
  1328                           ;pin_manager.c: 56: LATE = 0x00;
  1329                           
  1330                           ;incstack = 0
  1331  0007C8  0E00               	movlw	0
  1332  0007CA  6E8D               	movwf	3981,c	;volatile
  1333                           
  1334                           ;pin_manager.c: 57: LATD = 0x00;
  1335  0007CC  0E00               	movlw	0
  1336  0007CE  6E8C               	movwf	3980,c	;volatile
  1337                           
  1338                           ;pin_manager.c: 58: LATA = 0x00;
  1339  0007D0  0E00               	movlw	0
  1340  0007D2  6E89               	movwf	3977,c	;volatile
  1341                           
  1342                           ;pin_manager.c: 59: LATB = 0x00;
  1343  0007D4  0E00               	movlw	0
  1344  0007D6  6E8A               	movwf	3978,c	;volatile
  1345                           
  1346                           ;pin_manager.c: 60: LATC = 0x00;
  1347  0007D8  0E00               	movlw	0
  1348  0007DA  6E8B               	movwf	3979,c	;volatile
  1349                           
  1350                           ;pin_manager.c: 65: TRISE = 0x07;
  1351  0007DC  0E07               	movlw	7
  1352  0007DE  6E96               	movwf	3990,c	;volatile
  1353                           
  1354                           ;pin_manager.c: 66: TRISA = 0xEB;
  1355  0007E0  0EEB               	movlw	235
  1356  0007E2  6E92               	movwf	3986,c	;volatile
  1357                           
  1358                           ;pin_manager.c: 67: TRISB = 0xBF;
  1359  0007E4  0EBF               	movlw	191
  1360  0007E6  6E93               	movwf	3987,c	;volatile
  1361                           
  1362                           ;pin_manager.c: 68: TRISC = 0xB8;
  1363  0007E8  0EB8               	movlw	184
  1364  0007EA  6E94               	movwf	3988,c	;volatile
  1365                           
  1366                           ;pin_manager.c: 69: TRISD = 0xDF;
  1367  0007EC  0EDF               	movlw	223
  1368  0007EE  6E95               	movwf	3989,c	;volatile
  1369                           
  1370                           ;pin_manager.c: 74: ANSELC = 0x38;
  1371  0007F0  0E38               	movlw	56
  1372  0007F2  010F               	movlb	15	; () banked
  1373  0007F4  6F3A               	movwf	58,b	;volatile
  1374                           
  1375                           ;pin_manager.c: 75: ANSELB = 0x3E;
  1376  0007F6  0E3E               	movlw	62
  1377  0007F8  010F               	movlb	15	; () banked
  1378  0007FA  6F39               	movwf	57,b	;volatile
  1379                           
  1380                           ;pin_manager.c: 76: ANSELD = 0xDF;
  1381  0007FC  0EDF               	movlw	223
  1382  0007FE  010F               	movlb	15	; () banked
  1383  000800  6F3B               	movwf	59,b	;volatile
  1384                           
  1385                           ;pin_manager.c: 77: ANSELE = 0x03;
  1386  000802  0E03               	movlw	3
  1387  000804  010F               	movlb	15	; () banked
  1388  000806  6F3C               	movwf	60,b	;volatile
  1389                           
  1390                           ;pin_manager.c: 78: ANSELA = 0x2B;
  1391  000808  0E2B               	movlw	43
  1392  00080A  010F               	movlb	15	; () banked
  1393  00080C  6F38               	movwf	56,b	;volatile
  1394                           
  1395                           ; BSR set to: 15
  1396                           ;pin_manager.c: 83: WPUB = 0xFF;
  1397  00080E  6861               	setf	3937,c	;volatile
  1398                           
  1399                           ; BSR set to: 15
  1400                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1401  000810  9EF1               	bcf	intcon2,7,c	;volatile
  1402                           
  1403                           ; BSR set to: 15
  1404  000812  0012               	return		;funcret
  1405  000814                     __end_of_PIN_MANAGER_Initialize:
  1406                           	opt stack 0
  1407                           tblptru	equ	0xFF8
  1408                           tblptrh	equ	0xFF7
  1409                           tblptrl	equ	0xFF6
  1410                           tablat	equ	0xFF5
  1411                           intcon	equ	0xFF2
  1412                           intcon2	equ	0xFF1
  1413                           postinc0	equ	0xFEE
  1414                           wreg	equ	0xFE8
  1415                           postdec1	equ	0xFE5
  1416                           fsr1l	equ	0xFE1
  1417                           status	equ	0xFD8
  1418                           
  1419 ;; *************** function _OSCILLATOR_Initialize *****************
  1420 ;; Defined at:
  1421 ;;		line 126 in file "mcc_generated_files/mcc.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;Total ram usage:        0 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    4
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_SYSTEM_Initialize
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text10
  1450  0009FC                     __ptext10:
  1451                           	opt stack 0
  1452  0009FC                     _OSCILLATOR_Initialize:
  1453                           	opt stack 25
  1454                           
  1455                           ;mcc.c: 129: OSCCON = 0x70;
  1456                           
  1457                           ; BSR set to: 15
  1458                           ;incstack = 0
  1459  0009FC  0E70               	movlw	112
  1460  0009FE  6ED3               	movwf	4051,c	;volatile
  1461                           
  1462                           ;mcc.c: 131: OSCCON2 = 0x04;
  1463  000A00  0E04               	movlw	4
  1464  000A02  6ED2               	movwf	4050,c	;volatile
  1465                           
  1466                           ;mcc.c: 133: OSCTUNE = 0x00;
  1467  000A04  0E00               	movlw	0
  1468  000A06  6E9B               	movwf	3995,c	;volatile
  1469  000A08  0012               	return		;funcret
  1470  000A0A                     __end_of_OSCILLATOR_Initialize:
  1471                           	opt stack 0
  1472                           tblptru	equ	0xFF8
  1473                           tblptrh	equ	0xFF7
  1474                           tblptrl	equ	0xFF6
  1475                           tablat	equ	0xFF5
  1476                           intcon	equ	0xFF2
  1477                           intcon2	equ	0xFF1
  1478                           postinc0	equ	0xFEE
  1479                           wreg	equ	0xFE8
  1480                           postdec1	equ	0xFE5
  1481                           fsr1l	equ	0xFE1
  1482                           status	equ	0xFD8
  1483                           
  1484 ;; *************** function _INTERRUPT_Initialize *****************
  1485 ;; Defined at:
  1486 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		None
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:    4
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_SYSTEM_Initialize
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text11
  1515  000A30                     __ptext11:
  1516                           	opt stack 0
  1517  000A30                     _INTERRUPT_Initialize:
  1518                           	opt stack 25
  1519                           
  1520                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1521                           
  1522                           ;incstack = 0
  1523  000A30  9ED0               	bcf	4048,7,c	;volatile
  1524  000A32  0012               	return		;funcret
  1525  000A34                     __end_of_INTERRUPT_Initialize:
  1526                           	opt stack 0
  1527                           tblptru	equ	0xFF8
  1528                           tblptrh	equ	0xFF7
  1529                           tblptrl	equ	0xFF6
  1530                           tablat	equ	0xFF5
  1531                           intcon	equ	0xFF2
  1532                           intcon2	equ	0xFF1
  1533                           postinc0	equ	0xFEE
  1534                           wreg	equ	0xFE8
  1535                           postdec1	equ	0xFE5
  1536                           fsr1l	equ	0xFE1
  1537                           status	equ	0xFD8
  1538                           
  1539 ;; *************** function _EUSART1_Initialize *****************
  1540 ;; Defined at:
  1541 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;Total ram usage:        0 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    4
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_SYSTEM_Initialize
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text12
  1570  0009B2                     __ptext12:
  1571                           	opt stack 0
  1572  0009B2                     _EUSART1_Initialize:
  1573                           	opt stack 25
  1574                           
  1575                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1576                           
  1577                           ;incstack = 0
  1578  0009B2  0E08               	movlw	8
  1579  0009B4  6EB8               	movwf	4024,c	;volatile
  1580                           
  1581                           ;eusart1.c: 63: RCSTA1 = 0x90;
  1582  0009B6  0E90               	movlw	144
  1583  0009B8  6EAB               	movwf	4011,c	;volatile
  1584                           
  1585                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1586  0009BA  0E24               	movlw	36
  1587  0009BC  6EAC               	movwf	4012,c	;volatile
  1588                           
  1589                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  1590  0009BE  0EA0               	movlw	160
  1591  0009C0  6EAF               	movwf	4015,c	;volatile
  1592                           
  1593                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  1594  0009C2  0E01               	movlw	1
  1595  0009C4  6EB0               	movwf	4016,c	;volatile
  1596  0009C6  0012               	return		;funcret
  1597  0009C8                     __end_of_EUSART1_Initialize:
  1598                           	opt stack 0
  1599                           tblptru	equ	0xFF8
  1600                           tblptrh	equ	0xFF7
  1601                           tblptrl	equ	0xFF6
  1602                           tablat	equ	0xFF5
  1603                           intcon	equ	0xFF2
  1604                           intcon2	equ	0xFF1
  1605                           postinc0	equ	0xFEE
  1606                           wreg	equ	0xFE8
  1607                           postdec1	equ	0xFE5
  1608                           fsr1l	equ	0xFE1
  1609                           status	equ	0xFD8
  1610                           
  1611 ;; *************** function _EPWM2_Initialize *****************
  1612 ;; Defined at:
  1613 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;Total ram usage:        0 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    4
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_SYSTEM_Initialize
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text13
  1642  0008EE                     __ptext13:
  1643                           	opt stack 0
  1644  0008EE                     _EPWM2_Initialize:
  1645                           	opt stack 25
  1646                           
  1647                           ;epwm2.c: 68: CCP2CON = 0x3C;
  1648                           
  1649                           ;incstack = 0
  1650  0008EE  0E3C               	movlw	60
  1651  0008F0  6E66               	movwf	3942,c	;volatile
  1652                           
  1653                           ;epwm2.c: 71: ECCP2AS = 0x00;
  1654  0008F2  0E00               	movlw	0
  1655  0008F4  6E64               	movwf	3940,c	;volatile
  1656                           
  1657                           ;epwm2.c: 74: PWM2CON = 0x80;
  1658  0008F6  0E80               	movlw	128
  1659  0008F8  6E65               	movwf	3941,c	;volatile
  1660                           
  1661                           ;epwm2.c: 77: PSTR2CON = 0x03;
  1662  0008FA  0E03               	movlw	3
  1663  0008FC  6E63               	movwf	3939,c	;volatile
  1664                           
  1665                           ;epwm2.c: 80: CCPR2L = 0x14;
  1666  0008FE  0E14               	movlw	20
  1667  000900  6E67               	movwf	3943,c	;volatile
  1668                           
  1669                           ;epwm2.c: 83: CCPR2H = 0x00;
  1670  000902  0E00               	movlw	0
  1671  000904  6E68               	movwf	3944,c	;volatile
  1672                           
  1673                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  1674  000906  010F               	movlb	15	; () banked
  1675  000908  5149               	movf	73,w,b	;volatile
  1676  00090A  0BE7               	andlw	-25
  1677  00090C  0910               	iorlw	16
  1678  00090E  6F49               	movwf	73,b	;volatile
  1679                           
  1680                           ; BSR set to: 15
  1681  000910  0012               	return		;funcret
  1682  000912                     __end_of_EPWM2_Initialize:
  1683                           	opt stack 0
  1684                           tblptru	equ	0xFF8
  1685                           tblptrh	equ	0xFF7
  1686                           tblptrl	equ	0xFF6
  1687                           tablat	equ	0xFF5
  1688                           intcon	equ	0xFF2
  1689                           intcon2	equ	0xFF1
  1690                           postinc0	equ	0xFEE
  1691                           wreg	equ	0xFE8
  1692                           postdec1	equ	0xFE5
  1693                           fsr1l	equ	0xFE1
  1694                           status	equ	0xFD8
  1695                           
  1696 ;; *************** function _EPWM1_Initialize *****************
  1697 ;; Defined at:
  1698 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    4
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_SYSTEM_Initialize
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text14
  1727  000912                     __ptext14:
  1728                           	opt stack 0
  1729  000912                     _EPWM1_Initialize:
  1730                           	opt stack 25
  1731                           
  1732                           ;epwm1.c: 68: CCP1CON = 0x3C;
  1733                           
  1734                           ; BSR set to: 15
  1735                           ;incstack = 0
  1736  000912  0E3C               	movlw	60
  1737  000914  6EBD               	movwf	4029,c	;volatile
  1738                           
  1739                           ;epwm1.c: 71: ECCP1AS = 0x00;
  1740  000916  0E00               	movlw	0
  1741  000918  6EB6               	movwf	4022,c	;volatile
  1742                           
  1743                           ;epwm1.c: 74: PWM1CON = 0x80;
  1744  00091A  0E80               	movlw	128
  1745  00091C  6EB7               	movwf	4023,c	;volatile
  1746                           
  1747                           ;epwm1.c: 77: PSTR1CON = 0x03;
  1748  00091E  0E03               	movlw	3
  1749  000920  6EB9               	movwf	4025,c	;volatile
  1750                           
  1751                           ;epwm1.c: 80: CCPR1L = 0x14;
  1752  000922  0E14               	movlw	20
  1753  000924  6EBE               	movwf	4030,c	;volatile
  1754                           
  1755                           ;epwm1.c: 83: CCPR1H = 0x00;
  1756  000926  0E00               	movlw	0
  1757  000928  6EBF               	movwf	4031,c	;volatile
  1758                           
  1759                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  1760  00092A  010F               	movlb	15	; () banked
  1761  00092C  5149               	movf	73,w,b	;volatile
  1762  00092E  0BFC               	andlw	-4
  1763  000930  0902               	iorlw	2
  1764  000932  6F49               	movwf	73,b	;volatile
  1765                           
  1766                           ; BSR set to: 15
  1767  000934  0012               	return		;funcret
  1768  000936                     __end_of_EPWM1_Initialize:
  1769                           	opt stack 0
  1770                           tblptru	equ	0xFF8
  1771                           tblptrh	equ	0xFF7
  1772                           tblptrl	equ	0xFF6
  1773                           tablat	equ	0xFF5
  1774                           intcon	equ	0xFF2
  1775                           intcon2	equ	0xFF1
  1776                           postinc0	equ	0xFEE
  1777                           wreg	equ	0xFE8
  1778                           postdec1	equ	0xFE5
  1779                           fsr1l	equ	0xFE1
  1780                           status	equ	0xFD8
  1781                           
  1782 ;; *************** function _CCP5_Initialize *****************
  1783 ;; Defined at:
  1784 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    4
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_SYSTEM_Initialize
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text15
  1813  0009C8                     __ptext15:
  1814                           	opt stack 0
  1815  0009C8                     _CCP5_Initialize:
  1816                           	opt stack 25
  1817                           
  1818                           ;ccp5.c: 60: CCP5CON = 0x00;
  1819                           
  1820                           ; BSR set to: 15
  1821                           ;incstack = 0
  1822  0009C8  0E00               	movlw	0
  1823  0009CA  010F               	movlb	15	; () banked
  1824  0009CC  6F54               	movwf	84,b	;volatile
  1825                           
  1826                           ;ccp5.c: 62: CCPR5L = 0x00;
  1827  0009CE  0E00               	movlw	0
  1828  0009D0  010F               	movlb	15	; () banked
  1829  0009D2  6F55               	movwf	85,b	;volatile
  1830                           
  1831                           ;ccp5.c: 64: CCPR5H = 0x00;
  1832  0009D4  0E00               	movlw	0
  1833  0009D6  010F               	movlb	15	; () banked
  1834  0009D8  6F56               	movwf	86,b	;volatile
  1835                           
  1836                           ; BSR set to: 15
  1837  0009DA  0012               	return		;funcret
  1838  0009DC                     __end_of_CCP5_Initialize:
  1839                           	opt stack 0
  1840                           tblptru	equ	0xFF8
  1841                           tblptrh	equ	0xFF7
  1842                           tblptrl	equ	0xFF6
  1843                           tablat	equ	0xFF5
  1844                           intcon	equ	0xFF2
  1845                           intcon2	equ	0xFF1
  1846                           postinc0	equ	0xFEE
  1847                           wreg	equ	0xFE8
  1848                           postdec1	equ	0xFE5
  1849                           fsr1l	equ	0xFE1
  1850                           status	equ	0xFD8
  1851                           
  1852 ;; *************** function _ADC_Initialize *****************
  1853 ;; Defined at:
  1854 ;;		line 61 in file "mcc_generated_files/adc.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;Total ram usage:        0 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    4
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_SYSTEM_Initialize
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text16
  1883  00099A                     __ptext16:
  1884                           	opt stack 0
  1885  00099A                     _ADC_Initialize:
  1886                           	opt stack 25
  1887                           
  1888                           ;adc.c: 66: ADCON0 = 0x01;
  1889                           
  1890                           ; BSR set to: 15
  1891                           ;incstack = 0
  1892  00099A  0E01               	movlw	1
  1893  00099C  6EC2               	movwf	4034,c	;volatile
  1894                           
  1895                           ;adc.c: 69: ADCON1 = 0x00;
  1896  00099E  0E00               	movlw	0
  1897  0009A0  6EC1               	movwf	4033,c	;volatile
  1898                           
  1899                           ;adc.c: 72: ADCON2 = 0x05;
  1900  0009A2  0E05               	movlw	5
  1901  0009A4  6EC0               	movwf	4032,c	;volatile
  1902                           
  1903                           ;adc.c: 75: ADRESL = 0x00;
  1904  0009A6  0E00               	movlw	0
  1905  0009A8  6EC3               	movwf	4035,c	;volatile
  1906                           
  1907                           ;adc.c: 78: ADRESH = 0x00;
  1908  0009AA  0E00               	movlw	0
  1909  0009AC  6EC4               	movwf	4036,c	;volatile
  1910                           
  1911                           ;adc.c: 81: PIE1bits.ADIE = 1;
  1912  0009AE  8C9D               	bsf	3997,6,c	;volatile
  1913  0009B0  0012               	return		;funcret
  1914  0009B2                     __end_of_ADC_Initialize:
  1915                           	opt stack 0
  1916                           tblptru	equ	0xFF8
  1917                           tblptrh	equ	0xFF7
  1918                           tblptrl	equ	0xFF6
  1919                           tablat	equ	0xFF5
  1920                           intcon	equ	0xFF2
  1921                           intcon2	equ	0xFF1
  1922                           postinc0	equ	0xFEE
  1923                           wreg	equ	0xFE8
  1924                           postdec1	equ	0xFE5
  1925                           fsr1l	equ	0xFE1
  1926                           status	equ	0xFD8
  1927                           
  1928 ;; *************** function _RectaAceleracion *****************
  1929 ;; Defined at:
  1930 ;;		line 330 in file "MotorDriver.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  velocidad       1    wreg     unsigned char 
  1933 ;;  microstep_nu    1    5[BANK1 ] unsigned char 
  1934 ;;  direccion       1    6[BANK1 ] unsigned char 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  velocidad       1    7[BANK1 ] unsigned char 
  1937 ;;  i               1    8[BANK1 ] unsigned char 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1947 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1950 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1951 ;;Total ram usage:        4 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    7
  1954 ;; This function calls:
  1955 ;;		_StepMove
  1956 ;; This function is called by:
  1957 ;;		_main
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text17
  1962  000606                     __ptext17:
  1963                           	opt stack 0
  1964  000606                     _RectaAceleracion:
  1965                           	opt stack 23
  1966                           
  1967                           ;incstack = 0
  1968                           ;RectaAceleracion@velocidad stored from wreg
  1969  000606  0101               	movlb	1	; () banked
  1970  000608  6F07               	movwf	RectaAceleracion@velocidad& (0+255),b
  1971                           
  1972                           ;MotorDriver.c: 331: uint8_t i;
  1973                           ;MotorDriver.c: 332: if (microstep_number == 8){
  1974  00060A  0E08               	movlw	8
  1975  00060C  0101               	movlb	1	; () banked
  1976  00060E  1905               	xorwf	RectaAceleracion@microstep_number& (0+255),w,b
  1977  000610  A4D8               	btfss	status,2,c
  1978  000612  D01E               	goto	l2372
  1979                           
  1980                           ; BSR set to: 1
  1981                           ;MotorDriver.c: 333: for (i=30;i>velocidad;i--){
  1982  000614  0E1E               	movlw	30
  1983  000616  0101               	movlb	1	; () banked
  1984  000618  6F08               	movwf	RectaAceleracion@i& (0+255),b
  1985  00061A  D013               	goto	l2370
  1986  00061C                     l2366:
  1987  00061C  0E00               	movlw	0
  1988  00061E  0101               	movlb	1	; () banked
  1989  000620  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
  1990  000622  0E01               	movlw	1
  1991  000624  6F00               	movwf	StepMove@StepNumber& (0+255),b
  1992  000626  C108  F102         	movff	RectaAceleracion@i,StepMove@Velocidad
  1993  00062A  0E08               	movlw	8
  1994  00062C  0101               	movlb	1	; () banked
  1995  00062E  6F03               	movwf	StepMove@microstep_number& (0+255),b
  1996  000630  C106  F104         	movff	RectaAceleracion@direccion,StepMove@direccion
  1997  000634  EC4B  F003         	call	_StepMove	;wreg free
  1998  000638  0900               	iorlw	0
  1999  00063A  B4D8               	btfsc	status,2,c
  2000  00063C  D7EF               	goto	l2366
  2001  00063E  0101               	movlb	1	; () banked
  2002  000640  0708               	decf	RectaAceleracion@i& (0+255),f,b
  2003  000642                     l2370:
  2004                           
  2005                           ; BSR set to: 1
  2006  000642  0101               	movlb	1	; () banked
  2007  000644  5108               	movf	RectaAceleracion@i& (0+255),w,b
  2008  000646  0101               	movlb	1	; () banked
  2009  000648  5D07               	subwf	RectaAceleracion@velocidad& (0+255),w,b
  2010  00064A  B0D8               	btfsc	status,0,c
  2011  00064C  0012               	return	
  2012  00064E  D7E6               	goto	l2366
  2013  000650                     l2372:
  2014                           
  2015                           ; BSR set to: 1
  2016                           ;MotorDriver.c: 337: else if (microstep_number == 16){
  2017  000650  0E10               	movlw	16
  2018  000652  0101               	movlb	1	; () banked
  2019  000654  1905               	xorwf	RectaAceleracion@microstep_number& (0+255),w,b
  2020  000656  A4D8               	btfss	status,2,c
  2021  000658  0012               	return	
  2022                           
  2023                           ; BSR set to: 1
  2024                           ;MotorDriver.c: 338: for (i=30;i>velocidad;i--){
  2025  00065A  0E1E               	movlw	30
  2026  00065C  0101               	movlb	1	; () banked
  2027  00065E  6F08               	movwf	RectaAceleracion@i& (0+255),b
  2028  000660  D013               	goto	l2380
  2029  000662                     l2376:
  2030  000662  0E00               	movlw	0
  2031  000664  0101               	movlb	1	; () banked
  2032  000666  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
  2033  000668  0E01               	movlw	1
  2034  00066A  6F00               	movwf	StepMove@StepNumber& (0+255),b
  2035  00066C  C108  F102         	movff	RectaAceleracion@i,StepMove@Velocidad
  2036  000670  0E10               	movlw	16
  2037  000672  0101               	movlb	1	; () banked
  2038  000674  6F03               	movwf	StepMove@microstep_number& (0+255),b
  2039  000676  C106  F104         	movff	RectaAceleracion@direccion,StepMove@direccion
  2040  00067A  EC4B  F003         	call	_StepMove	;wreg free
  2041  00067E  0900               	iorlw	0
  2042  000680  B4D8               	btfsc	status,2,c
  2043  000682  D7EF               	goto	l2376
  2044  000684  0101               	movlb	1	; () banked
  2045  000686  0708               	decf	RectaAceleracion@i& (0+255),f,b
  2046  000688                     l2380:
  2047                           
  2048                           ; BSR set to: 1
  2049  000688  0101               	movlb	1	; () banked
  2050  00068A  5108               	movf	RectaAceleracion@i& (0+255),w,b
  2051  00068C  0101               	movlb	1	; () banked
  2052  00068E  5D07               	subwf	RectaAceleracion@velocidad& (0+255),w,b
  2053  000690  B0D8               	btfsc	status,0,c
  2054  000692  0012               	return	
  2055  000694  D7E6               	goto	l2376
  2056  000696                     __end_of_RectaAceleracion:
  2057                           	opt stack 0
  2058                           tblptru	equ	0xFF8
  2059                           tblptrh	equ	0xFF7
  2060                           tblptrl	equ	0xFF6
  2061                           tablat	equ	0xFF5
  2062                           intcon	equ	0xFF2
  2063                           intcon2	equ	0xFF1
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           postdec1	equ	0xFE5
  2067                           fsr1l	equ	0xFE1
  2068                           status	equ	0xFD8
  2069                           
  2070 ;; *************** function _StepMove *****************
  2071 ;; Defined at:
  2072 ;;		line 288 in file "MotorDriver.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  StepNumber      2    0[BANK1 ] unsigned int 
  2075 ;;  Velocidad       1    2[BANK1 ] unsigned char 
  2076 ;;  microstep_nu    1    3[BANK1 ] unsigned char 
  2077 ;;  direccion       1    4[BANK1 ] unsigned char 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      unsigned char 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2089 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Totals:         2       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;Total ram usage:        7 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    6
  2096 ;; This function calls:
  2097 ;;		_State16MEF_act
  2098 ;;		_State8MEF_act
  2099 ;; This function is called by:
  2100 ;;		_main
  2101 ;;		_RectaAceleracion
  2102 ;;		_RectaFrenado
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text18
  2107  000696                     __ptext18:
  2108                           	opt stack 0
  2109  000696                     _StepMove:
  2110                           	opt stack 24
  2111                           
  2112                           ;MotorDriver.c: 290: if ((StepCount<StepNumber)){
  2113                           
  2114                           ; BSR set to: 1
  2115                           ;incstack = 0
  2116  000696  0101               	movlb	1	; () banked
  2117  000698  5100               	movf	StepMove@StepNumber& (0+255),w,b
  2118  00069A  5C3E               	subwf	_StepCount,w,c
  2119  00069C  0101               	movlb	1	; () banked
  2120  00069E  5101               	movf	(StepMove@StepNumber+1)& (0+255),w,b
  2121  0006A0  583F               	subwfb	_StepCount+1,w,c
  2122  0006A2  B0D8               	btfsc	status,0,c
  2123  0006A4  D029               	goto	l2358
  2124                           
  2125                           ; BSR set to: 1
  2126                           ;MotorDriver.c: 291: if (Timer2Ticked){
  2127  0006A6  504A               	movf	_Timer2Ticked,w,c	;volatile
  2128  0006A8  B4D8               	btfsc	status,2,c
  2129  0006AA  D023               	goto	l2356
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;MotorDriver.c: 292: Timer2Tick_count++;
  2133  0006AC  4A3C               	infsnz	_Timer2Tick_count,f,c
  2134  0006AE  2A3D               	incf	_Timer2Tick_count+1,f,c
  2135                           
  2136                           ; BSR set to: 1
  2137                           ;MotorDriver.c: 293: if (Timer2Tick_count == Velocidad){
  2138  0006B0  0101               	movlb	1	; () banked
  2139  0006B2  5102               	movf	StepMove@Velocidad& (0+255),w,b
  2140  0006B4  6E35               	movwf	??_StepMove& (0+255),c
  2141  0006B6  6A36               	clrf	(??_StepMove+1)& (0+255),c
  2142  0006B8  503C               	movf	_Timer2Tick_count,w,c
  2143  0006BA  1835               	xorwf	??_StepMove,w,c
  2144  0006BC  E118               	bnz	l2354
  2145  0006BE  503D               	movf	_Timer2Tick_count+1,w,c
  2146  0006C0  1836               	xorwf	??_StepMove+1,w,c
  2147  0006C2  A4D8               	btfss	status,2,c
  2148  0006C4  D014               	goto	l2354
  2149                           
  2150                           ; BSR set to: 1
  2151                           ;MotorDriver.c: 294: if (microstep_number==16){
  2152  0006C6  0E10               	movlw	16
  2153  0006C8  0101               	movlb	1	; () banked
  2154  0006CA  1903               	xorwf	StepMove@microstep_number& (0+255),w,b
  2155  0006CC  A4D8               	btfss	status,2,c
  2156  0006CE  D005               	goto	l2348
  2157                           
  2158                           ; BSR set to: 1
  2159                           ;MotorDriver.c: 295: State16MEF_act( direccion );
  2160  0006D0  0101               	movlb	1	; () banked
  2161  0006D2  5104               	movf	StepMove@direccion& (0+255),w,b
  2162  0006D4  EC85  F001         	call	_State16MEF_act
  2163                           
  2164                           ;MotorDriver.c: 296: }
  2165  0006D8  D004               	goto	l2350
  2166  0006DA                     l2348:
  2167                           
  2168                           ;MotorDriver.c: 297: else{
  2169                           ;MotorDriver.c: 298: State8MEF_act( direccion );
  2170  0006DA  0101               	movlb	1	; () banked
  2171  0006DC  5104               	movf	StepMove@direccion& (0+255),w,b
  2172  0006DE  EC57  F000         	call	_State8MEF_act
  2173  0006E2                     l2350:
  2174                           
  2175                           ;MotorDriver.c: 299: }
  2176                           ;MotorDriver.c: 300: StepCount++;
  2177  0006E2  4A3E               	infsnz	_StepCount,f,c
  2178  0006E4  2A3F               	incf	_StepCount+1,f,c
  2179                           
  2180                           ;MotorDriver.c: 301: Timer2Tick_count=0;
  2181  0006E6  0E00               	movlw	0
  2182  0006E8  6E3D               	movwf	_Timer2Tick_count+1,c
  2183  0006EA  0E00               	movlw	0
  2184  0006EC  6E3C               	movwf	_Timer2Tick_count,c
  2185  0006EE                     l2354:
  2186                           
  2187                           ;MotorDriver.c: 302: }
  2188                           ;MotorDriver.c: 303: Timer2Ticked = 0;
  2189  0006EE  0E00               	movlw	0
  2190  0006F0  6E4A               	movwf	_Timer2Ticked,c	;volatile
  2191  0006F2                     l2356:
  2192                           
  2193                           ;MotorDriver.c: 304: }
  2194                           ;MotorDriver.c: 305: StepsComplete=0;
  2195  0006F2  0E00               	movlw	0
  2196  0006F4  6E48               	movwf	_StepsComplete,c
  2197                           
  2198                           ;MotorDriver.c: 306: }
  2199  0006F6  D006               	goto	l521
  2200  0006F8                     l2358:
  2201                           
  2202                           ;MotorDriver.c: 307: else{
  2203                           ;MotorDriver.c: 308: StepsComplete=1;
  2204  0006F8  0E01               	movlw	1
  2205  0006FA  6E48               	movwf	_StepsComplete,c
  2206                           
  2207                           ;MotorDriver.c: 309: StepCount=0;
  2208  0006FC  0E00               	movlw	0
  2209  0006FE  6E3F               	movwf	_StepCount+1,c
  2210  000700  0E00               	movlw	0
  2211  000702  6E3E               	movwf	_StepCount,c
  2212  000704                     l521:
  2213                           
  2214                           ;MotorDriver.c: 311: }
  2215                           ;MotorDriver.c: 312: return(StepsComplete);
  2216  000704  5048               	movf	_StepsComplete,w,c
  2217  000706  0012               	return	
  2218  000708                     __end_of_StepMove:
  2219                           	opt stack 0
  2220                           tblptru	equ	0xFF8
  2221                           tblptrh	equ	0xFF7
  2222                           tblptrl	equ	0xFF6
  2223                           tablat	equ	0xFF5
  2224                           intcon	equ	0xFF2
  2225                           intcon2	equ	0xFF1
  2226                           postinc0	equ	0xFEE
  2227                           wreg	equ	0xFE8
  2228                           postdec1	equ	0xFE5
  2229                           fsr1l	equ	0xFE1
  2230                           status	equ	0xFD8
  2231                           
  2232 ;; *************** function _State8MEF_act *****************
  2233 ;; Defined at:
  2234 ;;		line 68 in file "MotorDriver.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  direccion       1    wreg     unsigned char 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  direccion       1   19[COMRAM] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;Total ram usage:        2 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    5
  2255 ;; This function calls:
  2256 ;;		_EPWM1_LoadDutyValue
  2257 ;;		_EPWM2_LoadDutyValue
  2258 ;; This function is called by:
  2259 ;;		_StepMove
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text19
  2264  0000AE                     __ptext19:
  2265                           	opt stack 0
  2266  0000AE                     _State8MEF_act:
  2267                           	opt stack 24
  2268                           
  2269                           ;incstack = 0
  2270                           ;State8MEF_act@direccion stored from wreg
  2271  0000AE  6E34               	movwf	State8MEF_act@direccion,c
  2272                           
  2273                           ;MotorDriver.c: 70: switch(EstadoActual) {
  2274  0000B0  D11D               	goto	l2224
  2275  0000B2                     l2118:
  2276                           
  2277                           ;MotorDriver.c: 72: PSTR1CON = 0x01; PSTR2CON = 0x01;
  2278  0000B2  0E01               	movlw	1
  2279  0000B4  6EB9               	movwf	4025,c	;volatile
  2280  0000B6  0E01               	movlw	1
  2281  0000B8  6E63               	movwf	3939,c	;volatile
  2282                           
  2283                           ;MotorDriver.c: 73: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  2284  0000BA  9A8C               	bcf	3980,5,c	;volatile
  2285  0000BC  908B               	bcf	3979,0,c	;volatile
  2286                           
  2287                           ;MotorDriver.c: 74: if (Microstep<8){
  2288  0000BE  BE41               	btfsc	_Microstep+1,7,c
  2289  0000C0  D006               	goto	l2126
  2290  0000C2  5041               	movf	_Microstep+1,w,c
  2291  0000C4  E103               	bnz	u1451
  2292  0000C6  0E08               	movlw	8
  2293  0000C8  5C40               	subwf	_Microstep,w,c
  2294  0000CA  B0D8               	btfsc	status,0,c
  2295  0000CC                     u1451:
  2296  0000CC  0012               	return	
  2297  0000CE                     l2126:
  2298                           
  2299                           ;MotorDriver.c: 78: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2300  0000CE  0E01               	movlw	low _LookUP_TABLE_COS
  2301  0000D0  2440               	addwf	_Microstep,w,c
  2302  0000D2  6ED9               	movwf	fsr2l,c
  2303  0000D4  0E00               	movlw	high _LookUP_TABLE_COS
  2304  0000D6  2041               	addwfc	_Microstep+1,w,c
  2305  0000D8  6EDA               	movwf	fsr2h,c
  2306  0000DA  50DF               	movf	indf2,w,c
  2307  0000DC  6E33               	movwf	??_State8MEF_act& (0+255),c
  2308  0000DE  5033               	movf	??_State8MEF_act,w,c
  2309  0000E0  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2310  0000E2  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2311  0000E4  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2312                           
  2313                           ;MotorDriver.c: 79: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2314  0000E8  0EE0               	movlw	low _LookUP_TABLE_SEN
  2315  0000EA  2440               	addwf	_Microstep,w,c
  2316  0000EC  6ED9               	movwf	fsr2l,c
  2317  0000EE  0E00               	movlw	high _LookUP_TABLE_SEN
  2318  0000F0  2041               	addwfc	_Microstep+1,w,c
  2319  0000F2  6EDA               	movwf	fsr2h,c
  2320  0000F4  50DF               	movf	indf2,w,c
  2321  0000F6  6E33               	movwf	??_State8MEF_act& (0+255),c
  2322  0000F8  5033               	movf	??_State8MEF_act,w,c
  2323  0000FA  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2324  0000FC  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2325  0000FE  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2326                           
  2327                           ;MotorDriver.c: 81: if (direccion == 1){
  2328  000102  0434               	decf	State8MEF_act@direccion,w,c
  2329  000104  A4D8               	btfss	status,2,c
  2330  000106  D00A               	goto	l2136
  2331                           
  2332                           ;MotorDriver.c: 82: if (Microstep==7){
  2333  000108  0E07               	movlw	7
  2334  00010A  1840               	xorwf	_Microstep,w,c
  2335  00010C  1041               	iorwf	_Microstep+1,w,c
  2336  00010E  A4D8               	btfss	status,2,c
  2337  000110  D002               	goto	l2134
  2338                           
  2339                           ;MotorDriver.c: 83: EstadoActual = STATE2;
  2340  000112  0E02               	movlw	2
  2341  000114  6E4F               	movwf	_EstadoActual,c
  2342  000116                     l2134:
  2343                           
  2344                           ;MotorDriver.c: 84: }
  2345                           ;MotorDriver.c: 85: Microstep++;
  2346  000116  4A40               	infsnz	_Microstep,f,c
  2347  000118  2A41               	incf	_Microstep+1,f,c
  2348                           
  2349                           ;MotorDriver.c: 86: }
  2350  00011A  0012               	return	
  2351  00011C                     l2136:
  2352                           
  2353                           ;MotorDriver.c: 87: else{
  2354                           ;MotorDriver.c: 88: if (Microstep==0){
  2355  00011C  5040               	movf	_Microstep,w,c
  2356  00011E  1041               	iorwf	_Microstep+1,w,c
  2357  000120  A4D8               	btfss	status,2,c
  2358  000122  D006               	goto	l2140
  2359                           
  2360                           ;MotorDriver.c: 89: EstadoActual = STATE4;
  2361  000124  0E04               	movlw	4
  2362  000126  6E4F               	movwf	_EstadoActual,c
  2363                           
  2364                           ;MotorDriver.c: 90: Microstep=31;
  2365  000128  0E00               	movlw	0
  2366  00012A  6E41               	movwf	_Microstep+1,c
  2367  00012C  0E1F               	movlw	31
  2368  00012E  6E40               	movwf	_Microstep,c
  2369  000130                     l2140:
  2370                           
  2371                           ;MotorDriver.c: 91: }
  2372                           ;MotorDriver.c: 92: Microstep--;
  2373  000130  0640               	decf	_Microstep,f,c
  2374  000132  A0D8               	btfss	status,0,c
  2375  000134  0641               	decf	_Microstep+1,f,c
  2376                           
  2377                           ;MotorDriver.c: 93: }
  2378                           ;MotorDriver.c: 94: }
  2379                           ;MotorDriver.c: 95: break;
  2380  000136  0012               	return	
  2381  000138                     l2142:
  2382                           
  2383                           ;MotorDriver.c: 97: PSTR1CON = 0x02; PSTR2CON = 0x01;
  2384  000138  0E02               	movlw	2
  2385  00013A  6EB9               	movwf	4025,c	;volatile
  2386  00013C  0E01               	movlw	1
  2387  00013E  6E63               	movwf	3939,c	;volatile
  2388                           
  2389                           ;MotorDriver.c: 98: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  2390  000140  948B               	bcf	3979,2,c	;volatile
  2391  000142  908B               	bcf	3979,0,c	;volatile
  2392                           
  2393                           ;MotorDriver.c: 99: if ((Microstep<16)&&(Microstep>7)){
  2394  000144  BE41               	btfsc	_Microstep+1,7,c
  2395  000146  D006               	goto	l2150
  2396  000148  5041               	movf	_Microstep+1,w,c
  2397  00014A  E103               	bnz	u1491
  2398  00014C  0E10               	movlw	16
  2399  00014E  5C40               	subwf	_Microstep,w,c
  2400  000150  B0D8               	btfsc	status,0,c
  2401  000152                     u1491:
  2402  000152  0012               	return	
  2403  000154                     l2150:
  2404  000154  BE41               	btfsc	_Microstep+1,7,c
  2405  000156  0012               	return	
  2406  000158  5041               	movf	_Microstep+1,w,c
  2407  00015A  E104               	bnz	u1500
  2408  00015C  0E08               	movlw	8
  2409  00015E  5C40               	subwf	_Microstep,w,c
  2410  000160  A0D8               	btfss	status,0,c
  2411  000162  0012               	return	
  2412  000164                     u1500:
  2413                           
  2414                           ;MotorDriver.c: 104: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2415  000164  0E01               	movlw	low _LookUP_TABLE_COS
  2416  000166  2440               	addwf	_Microstep,w,c
  2417  000168  6ED9               	movwf	fsr2l,c
  2418  00016A  0E00               	movlw	high _LookUP_TABLE_COS
  2419  00016C  2041               	addwfc	_Microstep+1,w,c
  2420  00016E  6EDA               	movwf	fsr2h,c
  2421  000170  50DF               	movf	indf2,w,c
  2422  000172  6E33               	movwf	??_State8MEF_act& (0+255),c
  2423  000174  5033               	movf	??_State8MEF_act,w,c
  2424  000176  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2425  000178  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2426  00017A  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2427                           
  2428                           ;MotorDriver.c: 105: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2429  00017E  0EE0               	movlw	low _LookUP_TABLE_SEN
  2430  000180  2440               	addwf	_Microstep,w,c
  2431  000182  6ED9               	movwf	fsr2l,c
  2432  000184  0E00               	movlw	high _LookUP_TABLE_SEN
  2433  000186  2041               	addwfc	_Microstep+1,w,c
  2434  000188  6EDA               	movwf	fsr2h,c
  2435  00018A  50DF               	movf	indf2,w,c
  2436  00018C  6E33               	movwf	??_State8MEF_act& (0+255),c
  2437  00018E  5033               	movf	??_State8MEF_act,w,c
  2438  000190  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2439  000192  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2440  000194  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2441                           
  2442                           ;MotorDriver.c: 107: if (direccion == 1){
  2443  000198  0434               	decf	State8MEF_act@direccion,w,c
  2444  00019A  A4D8               	btfss	status,2,c
  2445  00019C  D00A               	goto	l2162
  2446                           
  2447                           ;MotorDriver.c: 108: if (Microstep==15){
  2448  00019E  0E0F               	movlw	15
  2449  0001A0  1840               	xorwf	_Microstep,w,c
  2450  0001A2  1041               	iorwf	_Microstep+1,w,c
  2451  0001A4  A4D8               	btfss	status,2,c
  2452  0001A6  D002               	goto	l2160
  2453                           
  2454                           ;MotorDriver.c: 109: EstadoActual = STATE3;
  2455  0001A8  0E03               	movlw	3
  2456  0001AA  6E4F               	movwf	_EstadoActual,c
  2457  0001AC                     l2160:
  2458                           
  2459                           ;MotorDriver.c: 110: }
  2460                           ;MotorDriver.c: 111: Microstep++;
  2461  0001AC  4A40               	infsnz	_Microstep,f,c
  2462  0001AE  2A41               	incf	_Microstep+1,f,c
  2463                           
  2464                           ;MotorDriver.c: 112: }
  2465  0001B0  0012               	return	
  2466  0001B2                     l2162:
  2467                           
  2468                           ;MotorDriver.c: 113: else{
  2469                           ;MotorDriver.c: 114: if (Microstep==8){
  2470  0001B2  0E08               	movlw	8
  2471  0001B4  1840               	xorwf	_Microstep,w,c
  2472  0001B6  1041               	iorwf	_Microstep+1,w,c
  2473  0001B8  A4D8               	btfss	status,2,c
  2474  0001BA  D002               	goto	l2166
  2475                           
  2476                           ;MotorDriver.c: 115: EstadoActual = STATE1;
  2477  0001BC  0E01               	movlw	1
  2478  0001BE  6E4F               	movwf	_EstadoActual,c
  2479  0001C0                     l2166:
  2480                           
  2481                           ;MotorDriver.c: 116: }
  2482                           ;MotorDriver.c: 117: Microstep--;
  2483  0001C0  0640               	decf	_Microstep,f,c
  2484  0001C2  A0D8               	btfss	status,0,c
  2485  0001C4  0641               	decf	_Microstep+1,f,c
  2486                           
  2487                           ;MotorDriver.c: 118: }
  2488                           ;MotorDriver.c: 119: }
  2489                           ;MotorDriver.c: 120: break;
  2490  0001C6  0012               	return	
  2491  0001C8                     l2168:
  2492                           
  2493                           ;MotorDriver.c: 122: PSTR1CON = 0x02; PSTR2CON = 0x02;
  2494  0001C8  0E02               	movlw	2
  2495  0001CA  6EB9               	movwf	4025,c	;volatile
  2496  0001CC  0E02               	movlw	2
  2497  0001CE  6E63               	movwf	3939,c	;volatile
  2498                           
  2499                           ;MotorDriver.c: 123: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2500  0001D0  948B               	bcf	3979,2,c	;volatile
  2501  0001D2  928B               	bcf	3979,1,c	;volatile
  2502                           
  2503                           ;MotorDriver.c: 124: if ((Microstep<24)&&(Microstep>15)){
  2504  0001D4  BE41               	btfsc	_Microstep+1,7,c
  2505  0001D6  D006               	goto	l2176
  2506  0001D8  5041               	movf	_Microstep+1,w,c
  2507  0001DA  E103               	bnz	u1541
  2508  0001DC  0E18               	movlw	24
  2509  0001DE  5C40               	subwf	_Microstep,w,c
  2510  0001E0  B0D8               	btfsc	status,0,c
  2511  0001E2                     u1541:
  2512  0001E2  0012               	return	
  2513  0001E4                     l2176:
  2514  0001E4  BE41               	btfsc	_Microstep+1,7,c
  2515  0001E6  0012               	return	
  2516  0001E8  5041               	movf	_Microstep+1,w,c
  2517  0001EA  E104               	bnz	u1550
  2518  0001EC  0E10               	movlw	16
  2519  0001EE  5C40               	subwf	_Microstep,w,c
  2520  0001F0  A0D8               	btfss	status,0,c
  2521  0001F2  0012               	return	
  2522  0001F4                     u1550:
  2523                           
  2524                           ;MotorDriver.c: 129: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2525  0001F4  0E01               	movlw	low _LookUP_TABLE_COS
  2526  0001F6  2440               	addwf	_Microstep,w,c
  2527  0001F8  6ED9               	movwf	fsr2l,c
  2528  0001FA  0E00               	movlw	high _LookUP_TABLE_COS
  2529  0001FC  2041               	addwfc	_Microstep+1,w,c
  2530  0001FE  6EDA               	movwf	fsr2h,c
  2531  000200  50DF               	movf	indf2,w,c
  2532  000202  6E33               	movwf	??_State8MEF_act& (0+255),c
  2533  000204  5033               	movf	??_State8MEF_act,w,c
  2534  000206  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2535  000208  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2536  00020A  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2537                           
  2538                           ;MotorDriver.c: 130: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2539  00020E  0EE0               	movlw	low _LookUP_TABLE_SEN
  2540  000210  2440               	addwf	_Microstep,w,c
  2541  000212  6ED9               	movwf	fsr2l,c
  2542  000214  0E00               	movlw	high _LookUP_TABLE_SEN
  2543  000216  2041               	addwfc	_Microstep+1,w,c
  2544  000218  6EDA               	movwf	fsr2h,c
  2545  00021A  50DF               	movf	indf2,w,c
  2546  00021C  6E33               	movwf	??_State8MEF_act& (0+255),c
  2547  00021E  5033               	movf	??_State8MEF_act,w,c
  2548  000220  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2549  000222  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2550  000224  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2551                           
  2552                           ;MotorDriver.c: 132: if (direccion == 1){
  2553  000228  0434               	decf	State8MEF_act@direccion,w,c
  2554  00022A  A4D8               	btfss	status,2,c
  2555  00022C  D00A               	goto	l2188
  2556                           
  2557                           ;MotorDriver.c: 133: if (Microstep==23){
  2558  00022E  0E17               	movlw	23
  2559  000230  1840               	xorwf	_Microstep,w,c
  2560  000232  1041               	iorwf	_Microstep+1,w,c
  2561  000234  A4D8               	btfss	status,2,c
  2562  000236  D002               	goto	l2186
  2563                           
  2564                           ;MotorDriver.c: 134: EstadoActual = STATE4;
  2565  000238  0E04               	movlw	4
  2566  00023A  6E4F               	movwf	_EstadoActual,c
  2567  00023C                     l2186:
  2568                           
  2569                           ;MotorDriver.c: 135: }
  2570                           ;MotorDriver.c: 136: Microstep++;
  2571  00023C  4A40               	infsnz	_Microstep,f,c
  2572  00023E  2A41               	incf	_Microstep+1,f,c
  2573                           
  2574                           ;MotorDriver.c: 137: }
  2575  000240  0012               	return	
  2576  000242                     l2188:
  2577                           
  2578                           ;MotorDriver.c: 138: else{
  2579                           ;MotorDriver.c: 139: if (Microstep==16){
  2580  000242  0E10               	movlw	16
  2581  000244  1840               	xorwf	_Microstep,w,c
  2582  000246  1041               	iorwf	_Microstep+1,w,c
  2583  000248  A4D8               	btfss	status,2,c
  2584  00024A  D002               	goto	l2192
  2585                           
  2586                           ;MotorDriver.c: 140: EstadoActual = STATE2;
  2587  00024C  0E02               	movlw	2
  2588  00024E  6E4F               	movwf	_EstadoActual,c
  2589  000250                     l2192:
  2590                           
  2591                           ;MotorDriver.c: 141: }
  2592                           ;MotorDriver.c: 142: Microstep--;
  2593  000250  0640               	decf	_Microstep,f,c
  2594  000252  A0D8               	btfss	status,0,c
  2595  000254  0641               	decf	_Microstep+1,f,c
  2596                           
  2597                           ;MotorDriver.c: 143: }
  2598                           ;MotorDriver.c: 144: }
  2599                           ;MotorDriver.c: 145: break;
  2600  000256  0012               	return	
  2601  000258                     l2194:
  2602                           
  2603                           ;MotorDriver.c: 147: PSTR1CON = 0x01; PSTR2CON = 0x02;
  2604  000258  0E01               	movlw	1
  2605  00025A  6EB9               	movwf	4025,c	;volatile
  2606  00025C  0E02               	movlw	2
  2607  00025E  6E63               	movwf	3939,c	;volatile
  2608                           
  2609                           ;MotorDriver.c: 148: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  2610  000260  9A8C               	bcf	3980,5,c	;volatile
  2611  000262  928B               	bcf	3979,1,c	;volatile
  2612                           
  2613                           ;MotorDriver.c: 149: if ((Microstep<32)&&(Microstep>23)){
  2614  000264  BE41               	btfsc	_Microstep+1,7,c
  2615  000266  D006               	goto	l2202
  2616  000268  5041               	movf	_Microstep+1,w,c
  2617  00026A  E14E               	bnz	l467
  2618  00026C  0E20               	movlw	32
  2619  00026E  5C40               	subwf	_Microstep,w,c
  2620  000270  B0D8               	btfsc	status,0,c
  2621  000272  0012               	return	
  2622  000274                     l2202:
  2623  000274  BE41               	btfsc	_Microstep+1,7,c
  2624  000276  0012               	return	
  2625  000278  5041               	movf	_Microstep+1,w,c
  2626  00027A  E104               	bnz	u1600
  2627  00027C  0E18               	movlw	24
  2628  00027E  5C40               	subwf	_Microstep,w,c
  2629  000280  A0D8               	btfss	status,0,c
  2630  000282  0012               	return	
  2631  000284                     u1600:
  2632                           
  2633                           ;MotorDriver.c: 154: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2634  000284  0E01               	movlw	low _LookUP_TABLE_COS
  2635  000286  2440               	addwf	_Microstep,w,c
  2636  000288  6ED9               	movwf	fsr2l,c
  2637  00028A  0E00               	movlw	high _LookUP_TABLE_COS
  2638  00028C  2041               	addwfc	_Microstep+1,w,c
  2639  00028E  6EDA               	movwf	fsr2h,c
  2640  000290  50DF               	movf	indf2,w,c
  2641  000292  6E33               	movwf	??_State8MEF_act& (0+255),c
  2642  000294  5033               	movf	??_State8MEF_act,w,c
  2643  000296  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2644  000298  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2645  00029A  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2646                           
  2647                           ;MotorDriver.c: 155: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2648  00029E  0EE0               	movlw	low _LookUP_TABLE_SEN
  2649  0002A0  2440               	addwf	_Microstep,w,c
  2650  0002A2  6ED9               	movwf	fsr2l,c
  2651  0002A4  0E00               	movlw	high _LookUP_TABLE_SEN
  2652  0002A6  2041               	addwfc	_Microstep+1,w,c
  2653  0002A8  6EDA               	movwf	fsr2h,c
  2654  0002AA  50DF               	movf	indf2,w,c
  2655  0002AC  6E33               	movwf	??_State8MEF_act& (0+255),c
  2656  0002AE  5033               	movf	??_State8MEF_act,w,c
  2657  0002B0  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2658  0002B2  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2659  0002B4  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2660                           
  2661                           ;MotorDriver.c: 157: if (direccion == 1){
  2662  0002B8  0434               	decf	State8MEF_act@direccion,w,c
  2663  0002BA  A4D8               	btfss	status,2,c
  2664  0002BC  D00C               	goto	l2216
  2665                           
  2666                           ;MotorDriver.c: 158: if (Microstep==31){
  2667  0002BE  0E1F               	movlw	31
  2668  0002C0  1840               	xorwf	_Microstep,w,c
  2669  0002C2  1041               	iorwf	_Microstep+1,w,c
  2670  0002C4  A4D8               	btfss	status,2,c
  2671  0002C6  D004               	goto	l2214
  2672                           
  2673                           ;MotorDriver.c: 159: EstadoActual = STATE1;
  2674  0002C8  0E01               	movlw	1
  2675  0002CA  6E4F               	movwf	_EstadoActual,c
  2676                           
  2677                           ;MotorDriver.c: 160: Microstep=-1;
  2678  0002CC  6840               	setf	_Microstep,c
  2679  0002CE  6841               	setf	_Microstep+1,c
  2680  0002D0                     l2214:
  2681                           
  2682                           ;MotorDriver.c: 161: }
  2683                           ;MotorDriver.c: 162: Microstep++;
  2684  0002D0  4A40               	infsnz	_Microstep,f,c
  2685  0002D2  2A41               	incf	_Microstep+1,f,c
  2686                           
  2687                           ;MotorDriver.c: 163: }
  2688  0002D4  0012               	return	
  2689  0002D6                     l2216:
  2690                           
  2691                           ;MotorDriver.c: 164: else{
  2692                           ;MotorDriver.c: 165: if (Microstep==24){
  2693  0002D6  0E18               	movlw	24
  2694  0002D8  1840               	xorwf	_Microstep,w,c
  2695  0002DA  1041               	iorwf	_Microstep+1,w,c
  2696  0002DC  A4D8               	btfss	status,2,c
  2697  0002DE  D002               	goto	l2220
  2698                           
  2699                           ;MotorDriver.c: 166: EstadoActual = STATE3;
  2700  0002E0  0E03               	movlw	3
  2701  0002E2  6E4F               	movwf	_EstadoActual,c
  2702  0002E4                     l2220:
  2703                           
  2704                           ;MotorDriver.c: 167: }
  2705                           ;MotorDriver.c: 168: Microstep--;
  2706  0002E4  0640               	decf	_Microstep,f,c
  2707  0002E6  A0D8               	btfss	status,0,c
  2708  0002E8  0641               	decf	_Microstep+1,f,c
  2709                           
  2710                           ;MotorDriver.c: 175: }
  2711                           
  2712                           ;MotorDriver.c: 174: break;
  2713                           
  2714                           ;MotorDriver.c: 172: default:
  2715                           
  2716                           ;MotorDriver.c: 169: }
  2717                           ;MotorDriver.c: 170: }
  2718                           ;MotorDriver.c: 171: break;
  2719  0002EA  0012               	return	
  2720  0002EC                     l2224:
  2721  0002EC  504F               	movf	_EstadoActual,w,c
  2722                           
  2723                           ; Switch size 1, requested type "space"
  2724                           ; Number of cases is 4, Range of values is 1 to 4
  2725                           ; switch strategies available:
  2726                           ; Name         Instructions Cycles
  2727                           ; simple_byte           13     7 (average)
  2728                           ;	Chosen strategy is simple_byte
  2729  0002EE  0A01               	xorlw	1	; case 1
  2730  0002F0  B4D8               	btfsc	status,2,c
  2731  0002F2  D6DF               	goto	l2118
  2732  0002F4  0A03               	xorlw	3	; case 2
  2733  0002F6  B4D8               	btfsc	status,2,c
  2734  0002F8  D71F               	goto	l2142
  2735  0002FA  0A01               	xorlw	1	; case 3
  2736  0002FC  B4D8               	btfsc	status,2,c
  2737  0002FE  D764               	goto	l2168
  2738  000300  0A07               	xorlw	7	; case 4
  2739  000302  A4D8               	btfss	status,2,c
  2740  000304  0012               	return	
  2741  000306  D7A8               	goto	l2194
  2742  000308                     l467:
  2743  000308  0012               	return		;funcret
  2744  00030A                     __end_of_State8MEF_act:
  2745                           	opt stack 0
  2746                           tblptru	equ	0xFF8
  2747                           tblptrh	equ	0xFF7
  2748                           tblptrl	equ	0xFF6
  2749                           tablat	equ	0xFF5
  2750                           intcon	equ	0xFF2
  2751                           intcon2	equ	0xFF1
  2752                           postinc0	equ	0xFEE
  2753                           wreg	equ	0xFE8
  2754                           postdec1	equ	0xFE5
  2755                           fsr1l	equ	0xFE1
  2756                           indf2	equ	0xFDF
  2757                           fsr2h	equ	0xFDA
  2758                           fsr2l	equ	0xFD9
  2759                           status	equ	0xFD8
  2760                           
  2761 ;; *************** function _State16MEF_act *****************
  2762 ;; Defined at:
  2763 ;;		line 178 in file "MotorDriver.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  direccion       1    wreg     unsigned char 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  direccion       1   19[COMRAM] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:        2 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    5
  2784 ;; This function calls:
  2785 ;;		_EPWM1_LoadDutyValue
  2786 ;;		_EPWM2_LoadDutyValue
  2787 ;; This function is called by:
  2788 ;;		_StepMove
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text20
  2793  00030A                     __ptext20:
  2794                           	opt stack 0
  2795  00030A                     _State16MEF_act:
  2796                           	opt stack 24
  2797                           
  2798                           ;incstack = 0
  2799                           ;State16MEF_act@direccion stored from wreg
  2800  00030A  6E34               	movwf	State16MEF_act@direccion,c
  2801                           
  2802                           ;MotorDriver.c: 180: switch(EstadoActual) {
  2803  00030C  D11D               	goto	l2334
  2804  00030E                     l2228:
  2805                           
  2806                           ;MotorDriver.c: 182: PSTR1CON = 0x01; PSTR2CON = 0x01;
  2807  00030E  0E01               	movlw	1
  2808  000310  6EB9               	movwf	4025,c	;volatile
  2809  000312  0E01               	movlw	1
  2810  000314  6E63               	movwf	3939,c	;volatile
  2811                           
  2812                           ;MotorDriver.c: 183: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2813  000316  9A8C               	bcf	3980,5,c	;volatile
  2814  000318  908B               	bcf	3979,0,c	;volatile
  2815                           
  2816                           ;MotorDriver.c: 184: if (Microstep<16){
  2817  00031A  BE41               	btfsc	_Microstep+1,7,c
  2818  00031C  D006               	goto	l2236
  2819  00031E  5041               	movf	_Microstep+1,w,c
  2820  000320  E103               	bnz	u1641
  2821  000322  0E10               	movlw	16
  2822  000324  5C40               	subwf	_Microstep,w,c
  2823  000326  B0D8               	btfsc	status,0,c
  2824  000328                     u1641:
  2825  000328  0012               	return	
  2826  00032A                     l2236:
  2827                           
  2828                           ;MotorDriver.c: 188: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2829  00032A  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2830  00032C  2440               	addwf	_Microstep,w,c
  2831  00032E  6ED9               	movwf	fsr2l,c
  2832  000330  0E00               	movlw	high _LookUP_TABLE_COS_16
  2833  000332  2041               	addwfc	_Microstep+1,w,c
  2834  000334  6EDA               	movwf	fsr2h,c
  2835  000336  50DF               	movf	indf2,w,c
  2836  000338  6E33               	movwf	??_State16MEF_act& (0+255),c
  2837  00033A  5033               	movf	??_State16MEF_act,w,c
  2838  00033C  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2839  00033E  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2840  000340  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2841                           
  2842                           ;MotorDriver.c: 189: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2843  000344  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2844  000346  2440               	addwf	_Microstep,w,c
  2845  000348  6ED9               	movwf	fsr2l,c
  2846  00034A  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2847  00034C  2041               	addwfc	_Microstep+1,w,c
  2848  00034E  6EDA               	movwf	fsr2h,c
  2849  000350  50DF               	movf	indf2,w,c
  2850  000352  6E33               	movwf	??_State16MEF_act& (0+255),c
  2851  000354  5033               	movf	??_State16MEF_act,w,c
  2852  000356  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2853  000358  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2854  00035A  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2855                           
  2856                           ;MotorDriver.c: 191: if (direccion == 1){
  2857  00035E  0434               	decf	State16MEF_act@direccion,w,c
  2858  000360  A4D8               	btfss	status,2,c
  2859  000362  D00A               	goto	l2246
  2860                           
  2861                           ;MotorDriver.c: 192: if (Microstep==15){
  2862  000364  0E0F               	movlw	15
  2863  000366  1840               	xorwf	_Microstep,w,c
  2864  000368  1041               	iorwf	_Microstep+1,w,c
  2865  00036A  A4D8               	btfss	status,2,c
  2866  00036C  D002               	goto	l2244
  2867                           
  2868                           ;MotorDriver.c: 193: EstadoActual = STATE2;
  2869  00036E  0E02               	movlw	2
  2870  000370  6E4F               	movwf	_EstadoActual,c
  2871  000372                     l2244:
  2872                           
  2873                           ;MotorDriver.c: 194: }
  2874                           ;MotorDriver.c: 195: Microstep++;
  2875  000372  4A40               	infsnz	_Microstep,f,c
  2876  000374  2A41               	incf	_Microstep+1,f,c
  2877                           
  2878                           ;MotorDriver.c: 196: }
  2879  000376  0012               	return	
  2880  000378                     l2246:
  2881                           
  2882                           ;MotorDriver.c: 197: else{
  2883                           ;MotorDriver.c: 198: if (Microstep==0){
  2884  000378  5040               	movf	_Microstep,w,c
  2885  00037A  1041               	iorwf	_Microstep+1,w,c
  2886  00037C  A4D8               	btfss	status,2,c
  2887  00037E  D006               	goto	l2250
  2888                           
  2889                           ;MotorDriver.c: 199: EstadoActual = STATE4;
  2890  000380  0E04               	movlw	4
  2891  000382  6E4F               	movwf	_EstadoActual,c
  2892                           
  2893                           ;MotorDriver.c: 200: Microstep=63;
  2894  000384  0E00               	movlw	0
  2895  000386  6E41               	movwf	_Microstep+1,c
  2896  000388  0E3F               	movlw	63
  2897  00038A  6E40               	movwf	_Microstep,c
  2898  00038C                     l2250:
  2899                           
  2900                           ;MotorDriver.c: 201: }
  2901                           ;MotorDriver.c: 202: Microstep--;
  2902  00038C  0640               	decf	_Microstep,f,c
  2903  00038E  A0D8               	btfss	status,0,c
  2904  000390  0641               	decf	_Microstep+1,f,c
  2905                           
  2906                           ;MotorDriver.c: 203: }
  2907                           ;MotorDriver.c: 204: }
  2908                           ;MotorDriver.c: 205: break;
  2909  000392  0012               	return	
  2910  000394                     l2252:
  2911                           
  2912                           ;MotorDriver.c: 207: PSTR1CON = 0x02; PSTR2CON = 0x01;
  2913  000394  0E02               	movlw	2
  2914  000396  6EB9               	movwf	4025,c	;volatile
  2915  000398  0E01               	movlw	1
  2916  00039A  6E63               	movwf	3939,c	;volatile
  2917                           
  2918                           ;MotorDriver.c: 208: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  2919  00039C  948B               	bcf	3979,2,c	;volatile
  2920  00039E  908B               	bcf	3979,0,c	;volatile
  2921                           
  2922                           ;MotorDriver.c: 209: if ((Microstep<32)&&(Microstep>15)){
  2923  0003A0  BE41               	btfsc	_Microstep+1,7,c
  2924  0003A2  D006               	goto	l2260
  2925  0003A4  5041               	movf	_Microstep+1,w,c
  2926  0003A6  E103               	bnz	u1681
  2927  0003A8  0E20               	movlw	32
  2928  0003AA  5C40               	subwf	_Microstep,w,c
  2929  0003AC  B0D8               	btfsc	status,0,c
  2930  0003AE                     u1681:
  2931  0003AE  0012               	return	
  2932  0003B0                     l2260:
  2933  0003B0  BE41               	btfsc	_Microstep+1,7,c
  2934  0003B2  0012               	return	
  2935  0003B4  5041               	movf	_Microstep+1,w,c
  2936  0003B6  E104               	bnz	u1690
  2937  0003B8  0E10               	movlw	16
  2938  0003BA  5C40               	subwf	_Microstep,w,c
  2939  0003BC  A0D8               	btfss	status,0,c
  2940  0003BE  0012               	return	
  2941  0003C0                     u1690:
  2942                           
  2943                           ;MotorDriver.c: 214: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  2944  0003C0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  2945  0003C2  2440               	addwf	_Microstep,w,c
  2946  0003C4  6ED9               	movwf	fsr2l,c
  2947  0003C6  0E00               	movlw	high _LookUP_TABLE_COS_16
  2948  0003C8  2041               	addwfc	_Microstep+1,w,c
  2949  0003CA  6EDA               	movwf	fsr2h,c
  2950  0003CC  50DF               	movf	indf2,w,c
  2951  0003CE  6E33               	movwf	??_State16MEF_act& (0+255),c
  2952  0003D0  5033               	movf	??_State16MEF_act,w,c
  2953  0003D2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2954  0003D4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2955  0003D6  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2956                           
  2957                           ;MotorDriver.c: 215: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  2958  0003DA  0E60               	movlw	low _LookUP_TABLE_SEN_16
  2959  0003DC  2440               	addwf	_Microstep,w,c
  2960  0003DE  6ED9               	movwf	fsr2l,c
  2961  0003E0  0E00               	movlw	high _LookUP_TABLE_SEN_16
  2962  0003E2  2041               	addwfc	_Microstep+1,w,c
  2963  0003E4  6EDA               	movwf	fsr2h,c
  2964  0003E6  50DF               	movf	indf2,w,c
  2965  0003E8  6E33               	movwf	??_State16MEF_act& (0+255),c
  2966  0003EA  5033               	movf	??_State16MEF_act,w,c
  2967  0003EC  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2968  0003EE  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2969  0003F0  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2970                           
  2971                           ;MotorDriver.c: 217: if (direccion == 1){
  2972  0003F4  0434               	decf	State16MEF_act@direccion,w,c
  2973  0003F6  A4D8               	btfss	status,2,c
  2974  0003F8  D00A               	goto	l2272
  2975                           
  2976                           ;MotorDriver.c: 218: if (Microstep==31){
  2977  0003FA  0E1F               	movlw	31
  2978  0003FC  1840               	xorwf	_Microstep,w,c
  2979  0003FE  1041               	iorwf	_Microstep+1,w,c
  2980  000400  A4D8               	btfss	status,2,c
  2981  000402  D002               	goto	l2270
  2982                           
  2983                           ;MotorDriver.c: 219: EstadoActual = STATE3;
  2984  000404  0E03               	movlw	3
  2985  000406  6E4F               	movwf	_EstadoActual,c
  2986  000408                     l2270:
  2987                           
  2988                           ;MotorDriver.c: 220: }
  2989                           ;MotorDriver.c: 221: Microstep++;
  2990  000408  4A40               	infsnz	_Microstep,f,c
  2991  00040A  2A41               	incf	_Microstep+1,f,c
  2992                           
  2993                           ;MotorDriver.c: 222: }
  2994  00040C  0012               	return	
  2995  00040E                     l2272:
  2996                           
  2997                           ;MotorDriver.c: 223: else{
  2998                           ;MotorDriver.c: 224: if (Microstep==16){
  2999  00040E  0E10               	movlw	16
  3000  000410  1840               	xorwf	_Microstep,w,c
  3001  000412  1041               	iorwf	_Microstep+1,w,c
  3002  000414  A4D8               	btfss	status,2,c
  3003  000416  D002               	goto	l2276
  3004                           
  3005                           ;MotorDriver.c: 225: EstadoActual = STATE1;
  3006  000418  0E01               	movlw	1
  3007  00041A  6E4F               	movwf	_EstadoActual,c
  3008  00041C                     l2276:
  3009                           
  3010                           ;MotorDriver.c: 226: }
  3011                           ;MotorDriver.c: 227: Microstep--;
  3012  00041C  0640               	decf	_Microstep,f,c
  3013  00041E  A0D8               	btfss	status,0,c
  3014  000420  0641               	decf	_Microstep+1,f,c
  3015                           
  3016                           ;MotorDriver.c: 228: }
  3017                           ;MotorDriver.c: 229: }
  3018                           ;MotorDriver.c: 230: break;
  3019  000422  0012               	return	
  3020  000424                     l2278:
  3021                           
  3022                           ;MotorDriver.c: 232: PSTR1CON = 0x02; PSTR2CON = 0x02;
  3023  000424  0E02               	movlw	2
  3024  000426  6EB9               	movwf	4025,c	;volatile
  3025  000428  0E02               	movlw	2
  3026  00042A  6E63               	movwf	3939,c	;volatile
  3027                           
  3028                           ;MotorDriver.c: 233: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  3029  00042C  948B               	bcf	3979,2,c	;volatile
  3030  00042E  928B               	bcf	3979,1,c	;volatile
  3031                           
  3032                           ;MotorDriver.c: 234: if ((Microstep<48)&&(Microstep>31)){
  3033  000430  BE41               	btfsc	_Microstep+1,7,c
  3034  000432  D006               	goto	l2286
  3035  000434  5041               	movf	_Microstep+1,w,c
  3036  000436  E103               	bnz	u1731
  3037  000438  0E30               	movlw	48
  3038  00043A  5C40               	subwf	_Microstep,w,c
  3039  00043C  B0D8               	btfsc	status,0,c
  3040  00043E                     u1731:
  3041  00043E  0012               	return	
  3042  000440                     l2286:
  3043  000440  BE41               	btfsc	_Microstep+1,7,c
  3044  000442  0012               	return	
  3045  000444  5041               	movf	_Microstep+1,w,c
  3046  000446  E104               	bnz	u1740
  3047  000448  0E20               	movlw	32
  3048  00044A  5C40               	subwf	_Microstep,w,c
  3049  00044C  A0D8               	btfss	status,0,c
  3050  00044E  0012               	return	
  3051  000450                     u1740:
  3052                           
  3053                           ;MotorDriver.c: 239: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  3054  000450  0EA0               	movlw	low _LookUP_TABLE_COS_16
  3055  000452  2440               	addwf	_Microstep,w,c
  3056  000454  6ED9               	movwf	fsr2l,c
  3057  000456  0E00               	movlw	high _LookUP_TABLE_COS_16
  3058  000458  2041               	addwfc	_Microstep+1,w,c
  3059  00045A  6EDA               	movwf	fsr2h,c
  3060  00045C  50DF               	movf	indf2,w,c
  3061  00045E  6E33               	movwf	??_State16MEF_act& (0+255),c
  3062  000460  5033               	movf	??_State16MEF_act,w,c
  3063  000462  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3064  000464  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3065  000466  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3066                           
  3067                           ;MotorDriver.c: 240: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  3068  00046A  0E60               	movlw	low _LookUP_TABLE_SEN_16
  3069  00046C  2440               	addwf	_Microstep,w,c
  3070  00046E  6ED9               	movwf	fsr2l,c
  3071  000470  0E00               	movlw	high _LookUP_TABLE_SEN_16
  3072  000472  2041               	addwfc	_Microstep+1,w,c
  3073  000474  6EDA               	movwf	fsr2h,c
  3074  000476  50DF               	movf	indf2,w,c
  3075  000478  6E33               	movwf	??_State16MEF_act& (0+255),c
  3076  00047A  5033               	movf	??_State16MEF_act,w,c
  3077  00047C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3078  00047E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3079  000480  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3080                           
  3081                           ;MotorDriver.c: 242: if (direccion == 1){
  3082  000484  0434               	decf	State16MEF_act@direccion,w,c
  3083  000486  A4D8               	btfss	status,2,c
  3084  000488  D00A               	goto	l2298
  3085                           
  3086                           ;MotorDriver.c: 243: if (Microstep==47){
  3087  00048A  0E2F               	movlw	47
  3088  00048C  1840               	xorwf	_Microstep,w,c
  3089  00048E  1041               	iorwf	_Microstep+1,w,c
  3090  000490  A4D8               	btfss	status,2,c
  3091  000492  D002               	goto	l2296
  3092                           
  3093                           ;MotorDriver.c: 244: EstadoActual = STATE4;
  3094  000494  0E04               	movlw	4
  3095  000496  6E4F               	movwf	_EstadoActual,c
  3096  000498                     l2296:
  3097                           
  3098                           ;MotorDriver.c: 245: }
  3099                           ;MotorDriver.c: 246: Microstep++;
  3100  000498  4A40               	infsnz	_Microstep,f,c
  3101  00049A  2A41               	incf	_Microstep+1,f,c
  3102                           
  3103                           ;MotorDriver.c: 247: }
  3104  00049C  0012               	return	
  3105  00049E                     l2298:
  3106                           
  3107                           ;MotorDriver.c: 248: else{
  3108                           ;MotorDriver.c: 249: if (Microstep==32){
  3109  00049E  0E20               	movlw	32
  3110  0004A0  1840               	xorwf	_Microstep,w,c
  3111  0004A2  1041               	iorwf	_Microstep+1,w,c
  3112  0004A4  A4D8               	btfss	status,2,c
  3113  0004A6  D002               	goto	l2302
  3114                           
  3115                           ;MotorDriver.c: 250: EstadoActual = STATE2;
  3116  0004A8  0E02               	movlw	2
  3117  0004AA  6E4F               	movwf	_EstadoActual,c
  3118  0004AC                     l2302:
  3119                           
  3120                           ;MotorDriver.c: 251: }
  3121                           ;MotorDriver.c: 252: Microstep--;
  3122  0004AC  0640               	decf	_Microstep,f,c
  3123  0004AE  A0D8               	btfss	status,0,c
  3124  0004B0  0641               	decf	_Microstep+1,f,c
  3125                           
  3126                           ;MotorDriver.c: 253: }
  3127                           ;MotorDriver.c: 254: }
  3128                           ;MotorDriver.c: 255: break;
  3129  0004B2  0012               	return	
  3130  0004B4                     l2304:
  3131                           
  3132                           ;MotorDriver.c: 257: PSTR1CON = 0x01; PSTR2CON = 0x02;
  3133  0004B4  0E01               	movlw	1
  3134  0004B6  6EB9               	movwf	4025,c	;volatile
  3135  0004B8  0E02               	movlw	2
  3136  0004BA  6E63               	movwf	3939,c	;volatile
  3137                           
  3138                           ;MotorDriver.c: 258: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  3139  0004BC  9A8C               	bcf	3980,5,c	;volatile
  3140  0004BE  928B               	bcf	3979,1,c	;volatile
  3141                           
  3142                           ;MotorDriver.c: 259: if ((Microstep<64)&&(Microstep>47)){
  3143  0004C0  BE41               	btfsc	_Microstep+1,7,c
  3144  0004C2  D006               	goto	l2312
  3145  0004C4  5041               	movf	_Microstep+1,w,c
  3146  0004C6  E14E               	bnz	l513
  3147  0004C8  0E40               	movlw	64
  3148  0004CA  5C40               	subwf	_Microstep,w,c
  3149  0004CC  B0D8               	btfsc	status,0,c
  3150  0004CE  0012               	return	
  3151  0004D0                     l2312:
  3152  0004D0  BE41               	btfsc	_Microstep+1,7,c
  3153  0004D2  0012               	return	
  3154  0004D4  5041               	movf	_Microstep+1,w,c
  3155  0004D6  E104               	bnz	u1790
  3156  0004D8  0E30               	movlw	48
  3157  0004DA  5C40               	subwf	_Microstep,w,c
  3158  0004DC  A0D8               	btfss	status,0,c
  3159  0004DE  0012               	return	
  3160  0004E0                     u1790:
  3161                           
  3162                           ;MotorDriver.c: 264: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  3163  0004E0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  3164  0004E2  2440               	addwf	_Microstep,w,c
  3165  0004E4  6ED9               	movwf	fsr2l,c
  3166  0004E6  0E00               	movlw	high _LookUP_TABLE_COS_16
  3167  0004E8  2041               	addwfc	_Microstep+1,w,c
  3168  0004EA  6EDA               	movwf	fsr2h,c
  3169  0004EC  50DF               	movf	indf2,w,c
  3170  0004EE  6E33               	movwf	??_State16MEF_act& (0+255),c
  3171  0004F0  5033               	movf	??_State16MEF_act,w,c
  3172  0004F2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3173  0004F4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3174  0004F6  EC22  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3175                           
  3176                           ;MotorDriver.c: 265: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  3177  0004FA  0E60               	movlw	low _LookUP_TABLE_SEN_16
  3178  0004FC  2440               	addwf	_Microstep,w,c
  3179  0004FE  6ED9               	movwf	fsr2l,c
  3180  000500  0E00               	movlw	high _LookUP_TABLE_SEN_16
  3181  000502  2041               	addwfc	_Microstep+1,w,c
  3182  000504  6EDA               	movwf	fsr2h,c
  3183  000506  50DF               	movf	indf2,w,c
  3184  000508  6E33               	movwf	??_State16MEF_act& (0+255),c
  3185  00050A  5033               	movf	??_State16MEF_act,w,c
  3186  00050C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3187  00050E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3188  000510  EC0A  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3189                           
  3190                           ;MotorDriver.c: 267: if (direccion == 1){
  3191  000514  0434               	decf	State16MEF_act@direccion,w,c
  3192  000516  A4D8               	btfss	status,2,c
  3193  000518  D00C               	goto	l2326
  3194                           
  3195                           ;MotorDriver.c: 268: if (Microstep==63){
  3196  00051A  0E3F               	movlw	63
  3197  00051C  1840               	xorwf	_Microstep,w,c
  3198  00051E  1041               	iorwf	_Microstep+1,w,c
  3199  000520  A4D8               	btfss	status,2,c
  3200  000522  D004               	goto	l2324
  3201                           
  3202                           ;MotorDriver.c: 269: EstadoActual = STATE1;
  3203  000524  0E01               	movlw	1
  3204  000526  6E4F               	movwf	_EstadoActual,c
  3205                           
  3206                           ;MotorDriver.c: 270: Microstep=-1;
  3207  000528  6840               	setf	_Microstep,c
  3208  00052A  6841               	setf	_Microstep+1,c
  3209  00052C                     l2324:
  3210                           
  3211                           ;MotorDriver.c: 271: }
  3212                           ;MotorDriver.c: 272: Microstep++;
  3213  00052C  4A40               	infsnz	_Microstep,f,c
  3214  00052E  2A41               	incf	_Microstep+1,f,c
  3215                           
  3216                           ;MotorDriver.c: 273: }
  3217  000530  0012               	return	
  3218  000532                     l2326:
  3219                           
  3220                           ;MotorDriver.c: 274: else{
  3221                           ;MotorDriver.c: 275: if (Microstep==48){
  3222  000532  0E30               	movlw	48
  3223  000534  1840               	xorwf	_Microstep,w,c
  3224  000536  1041               	iorwf	_Microstep+1,w,c
  3225  000538  A4D8               	btfss	status,2,c
  3226  00053A  D002               	goto	l2330
  3227                           
  3228                           ;MotorDriver.c: 276: EstadoActual = STATE3;
  3229  00053C  0E03               	movlw	3
  3230  00053E  6E4F               	movwf	_EstadoActual,c
  3231  000540                     l2330:
  3232                           
  3233                           ;MotorDriver.c: 277: }
  3234                           ;MotorDriver.c: 278: Microstep--;
  3235  000540  0640               	decf	_Microstep,f,c
  3236  000542  A0D8               	btfss	status,0,c
  3237  000544  0641               	decf	_Microstep+1,f,c
  3238                           
  3239                           ;MotorDriver.c: 285: }
  3240                           
  3241                           ;MotorDriver.c: 284: break;
  3242                           
  3243                           ;MotorDriver.c: 282: default:
  3244                           
  3245                           ;MotorDriver.c: 279: }
  3246                           ;MotorDriver.c: 280: }
  3247                           ;MotorDriver.c: 281: break;
  3248  000546  0012               	return	
  3249  000548                     l2334:
  3250  000548  504F               	movf	_EstadoActual,w,c
  3251                           
  3252                           ; Switch size 1, requested type "space"
  3253                           ; Number of cases is 4, Range of values is 1 to 4
  3254                           ; switch strategies available:
  3255                           ; Name         Instructions Cycles
  3256                           ; simple_byte           13     7 (average)
  3257                           ;	Chosen strategy is simple_byte
  3258  00054A  0A01               	xorlw	1	; case 1
  3259  00054C  B4D8               	btfsc	status,2,c
  3260  00054E  D6DF               	goto	l2228
  3261  000550  0A03               	xorlw	3	; case 2
  3262  000552  B4D8               	btfsc	status,2,c
  3263  000554  D71F               	goto	l2252
  3264  000556  0A01               	xorlw	1	; case 3
  3265  000558  B4D8               	btfsc	status,2,c
  3266  00055A  D764               	goto	l2278
  3267  00055C  0A07               	xorlw	7	; case 4
  3268  00055E  A4D8               	btfss	status,2,c
  3269  000560  0012               	return	
  3270  000562  D7A8               	goto	l2304
  3271  000564                     l513:
  3272  000564  0012               	return		;funcret
  3273  000566                     __end_of_State16MEF_act:
  3274                           	opt stack 0
  3275                           tblptru	equ	0xFF8
  3276                           tblptrh	equ	0xFF7
  3277                           tblptrl	equ	0xFF6
  3278                           tablat	equ	0xFF5
  3279                           intcon	equ	0xFF2
  3280                           intcon2	equ	0xFF1
  3281                           postinc0	equ	0xFEE
  3282                           wreg	equ	0xFE8
  3283                           postdec1	equ	0xFE5
  3284                           fsr1l	equ	0xFE1
  3285                           indf2	equ	0xFDF
  3286                           fsr2h	equ	0xFDA
  3287                           fsr2l	equ	0xFD9
  3288                           status	equ	0xFD8
  3289                           
  3290 ;; *************** function _EPWM2_LoadDutyValue *****************
  3291 ;; Defined at:
  3292 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  dutyValue       2   14[COMRAM] unsigned int 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;Total ram usage:        4 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    4
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_State8MEF_act
  3317 ;;		_State16MEF_act
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text21
  3322  000814                     __ptext21:
  3323                           	opt stack 0
  3324  000814                     _EPWM2_LoadDutyValue:
  3325                           	opt stack 24
  3326                           
  3327                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  3328                           
  3329                           ;incstack = 0
  3330  000814  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3331  000818  C030  F032         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  3332  00081C  90D8               	bcf	status,0,c
  3333  00081E  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  3334  000820  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  3335  000822  90D8               	bcf	status,0,c
  3336  000824  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  3337  000826  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  3338  000828  5031               	movf	??_EPWM2_LoadDutyValue,w,c
  3339  00082A  6E67               	movwf	3943,c	;volatile
  3340                           
  3341                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3342  00082C  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3343  000830  0E03               	movlw	3
  3344  000832  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  3345  000834  3A31               	swapf	??_EPWM2_LoadDutyValue,f,c
  3346  000836  0EF0               	movlw	240
  3347  000838  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  3348  00083A  5066               	movf	3942,w,c	;volatile
  3349  00083C  0BCF               	andlw	207
  3350  00083E  1031               	iorwf	??_EPWM2_LoadDutyValue,w,c
  3351  000840  6E66               	movwf	3942,c	;volatile
  3352  000842  0012               	return		;funcret
  3353  000844                     __end_of_EPWM2_LoadDutyValue:
  3354                           	opt stack 0
  3355                           tblptru	equ	0xFF8
  3356                           tblptrh	equ	0xFF7
  3357                           tblptrl	equ	0xFF6
  3358                           tablat	equ	0xFF5
  3359                           intcon	equ	0xFF2
  3360                           intcon2	equ	0xFF1
  3361                           postinc0	equ	0xFEE
  3362                           wreg	equ	0xFE8
  3363                           postdec1	equ	0xFE5
  3364                           fsr1l	equ	0xFE1
  3365                           indf2	equ	0xFDF
  3366                           fsr2h	equ	0xFDA
  3367                           fsr2l	equ	0xFD9
  3368                           status	equ	0xFD8
  3369                           
  3370 ;; *************** function _EPWM1_LoadDutyValue *****************
  3371 ;; Defined at:
  3372 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  dutyValue       2   14[COMRAM] unsigned int 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;Total ram usage:        4 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    4
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_State8MEF_act
  3397 ;;		_State16MEF_act
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text22
  3402  000844                     __ptext22:
  3403                           	opt stack 0
  3404  000844                     _EPWM1_LoadDutyValue:
  3405                           	opt stack 24
  3406                           
  3407                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  3408                           
  3409                           ;incstack = 0
  3410  000844  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3411  000848  C030  F032         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  3412  00084C  90D8               	bcf	status,0,c
  3413  00084E  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3414  000850  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3415  000852  90D8               	bcf	status,0,c
  3416  000854  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3417  000856  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3418  000858  5031               	movf	??_EPWM1_LoadDutyValue,w,c
  3419  00085A  6EBE               	movwf	4030,c	;volatile
  3420                           
  3421                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3422  00085C  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3423  000860  0E03               	movlw	3
  3424  000862  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  3425  000864  3A31               	swapf	??_EPWM1_LoadDutyValue,f,c
  3426  000866  0EF0               	movlw	240
  3427  000868  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  3428  00086A  50BD               	movf	4029,w,c	;volatile
  3429  00086C  0BCF               	andlw	207
  3430  00086E  1031               	iorwf	??_EPWM1_LoadDutyValue,w,c
  3431  000870  6EBD               	movwf	4029,c	;volatile
  3432  000872  0012               	return		;funcret
  3433  000874                     __end_of_EPWM1_LoadDutyValue:
  3434                           	opt stack 0
  3435                           tblptru	equ	0xFF8
  3436                           tblptrh	equ	0xFF7
  3437                           tblptrl	equ	0xFF6
  3438                           tablat	equ	0xFF5
  3439                           intcon	equ	0xFF2
  3440                           intcon2	equ	0xFF1
  3441                           postinc0	equ	0xFEE
  3442                           wreg	equ	0xFE8
  3443                           postdec1	equ	0xFE5
  3444                           fsr1l	equ	0xFE1
  3445                           indf2	equ	0xFDF
  3446                           fsr2h	equ	0xFDA
  3447                           fsr2l	equ	0xFD9
  3448                           status	equ	0xFD8
  3449                           
  3450 ;; *************** function _Motor_Stop *****************
  3451 ;; Defined at:
  3452 ;;		line 325 in file "MotorDriver.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;		None
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;Total ram usage:        0 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    4
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_main
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text23
  3481  0009DC                     __ptext23:
  3482                           	opt stack 0
  3483  0009DC                     _Motor_Stop:
  3484                           	opt stack 26
  3485                           
  3486                           ;MotorDriver.c: 326: PSTR1CON = 0x00; PSTR2CON = 0x00;
  3487                           
  3488                           ;incstack = 0
  3489  0009DC  0E00               	movlw	0
  3490  0009DE  6EB9               	movwf	4025,c	;volatile
  3491  0009E0  0E00               	movlw	0
  3492  0009E2  6E63               	movwf	3939,c	;volatile
  3493                           
  3494                           ;MotorDriver.c: 327: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  3495  0009E4  948B               	bcf	3979,2,c	;volatile
  3496  0009E6  9A8C               	bcf	3980,5,c	;volatile
  3497  0009E8  928B               	bcf	3979,1,c	;volatile
  3498  0009EA  908B               	bcf	3979,0,c	;volatile
  3499  0009EC  0012               	return	
  3500  0009EE                     __end_of_Motor_Stop:
  3501                           	opt stack 0
  3502                           tblptru	equ	0xFF8
  3503                           tblptrh	equ	0xFF7
  3504                           tblptrl	equ	0xFF6
  3505                           tablat	equ	0xFF5
  3506                           intcon	equ	0xFF2
  3507                           intcon2	equ	0xFF1
  3508                           postinc0	equ	0xFEE
  3509                           wreg	equ	0xFE8
  3510                           postdec1	equ	0xFE5
  3511                           fsr1l	equ	0xFE1
  3512                           indf2	equ	0xFDF
  3513                           fsr2h	equ	0xFDA
  3514                           fsr2l	equ	0xFD9
  3515                           status	equ	0xFD8
  3516                           
  3517 ;; *************** function _INTERRUPT_InterruptManager *****************
  3518 ;; Defined at:
  3519 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;Total ram usage:       14 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    3
  3540 ;; This function calls:
  3541 ;;		_ADC_ISR
  3542 ;;		_TMR2_ISR
  3543 ;;		_TMR6_ISR
  3544 ;; This function is called by:
  3545 ;;		Interrupt level 2
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	intcode
  3550  000008                     __pintcode:
  3551                           	opt stack 0
  3552  000008                     _INTERRUPT_InterruptManager:
  3553                           	opt stack 23
  3554                           
  3555                           ;incstack = 0
  3556  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3557  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  3558  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3559  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3560  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3561  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3562  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3563  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3564  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3565  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3566  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3567  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3568  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3569  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3570  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3571                           
  3572                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  3573  000042  BCF2               	btfsc	intcon,6,c	;volatile
  3574  000044  AC9D               	btfss	3997,6,c	;volatile
  3575  000046  D005               	goto	i2l270
  3576  000048  AC9E               	btfss	3998,6,c	;volatile
  3577  00004A  D003               	goto	i2l270
  3578                           
  3579                           ;interrupt_manager.c: 61: {
  3580                           ;interrupt_manager.c: 62: ADC_ISR();
  3581  00004C  EC1A  F005         	call	_ADC_ISR	;wreg free
  3582                           
  3583                           ;interrupt_manager.c: 63: }
  3584  000050  D00E               	goto	i2l276
  3585  000052                     i2l270:
  3586                           
  3587                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  3588  000052  BCF2               	btfsc	intcon,6,c	;volatile
  3589  000054  A47D               	btfss	3965,2,c	;volatile
  3590  000056  D005               	goto	i2l272
  3591  000058  A47E               	btfss	3966,2,c	;volatile
  3592  00005A  D003               	goto	i2l272
  3593                           
  3594                           ;interrupt_manager.c: 65: {
  3595                           ;interrupt_manager.c: 66: TMR6_ISR();
  3596  00005C  ECAC  F004         	call	_TMR6_ISR	;wreg free
  3597                           
  3598                           ;interrupt_manager.c: 67: }
  3599  000060  D006               	goto	i2l276
  3600  000062                     i2l272:
  3601                           
  3602                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  3603  000062  BCF2               	btfsc	intcon,6,c	;volatile
  3604  000064  A29D               	btfss	3997,1,c	;volatile
  3605  000066  D003               	goto	i2l276
  3606  000068  B29E               	btfsc	3998,1,c	;volatile
  3607                           
  3608                           ;interrupt_manager.c: 69: {
  3609                           ;interrupt_manager.c: 70: TMR2_ISR();
  3610  00006A  EC0F  F005         	call	_TMR2_ISR	;wreg free
  3611  00006E                     i2l276:
  3612  00006E  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3613  000072  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3614  000076  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3615  00007A  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3616  00007E  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3617  000082  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3618  000086  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3619  00008A  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3620  00008E  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3621  000092  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3622  000096  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3623  00009A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3624  00009E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3625  0000A2  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3626  0000A6  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3627  0000A8  0011               	retfie		f
  3628  0000AA                     __end_of_INTERRUPT_InterruptManager:
  3629                           	opt stack 0
  3630                           pclatu	equ	0xFFB
  3631                           pclath	equ	0xFFA
  3632                           tblptru	equ	0xFF8
  3633                           tblptrh	equ	0xFF7
  3634                           tblptrl	equ	0xFF6
  3635                           tablat	equ	0xFF5
  3636                           prodh	equ	0xFF4
  3637                           prodl	equ	0xFF3
  3638                           intcon	equ	0xFF2
  3639                           intcon2	equ	0xFF1
  3640                           postinc0	equ	0xFEE
  3641                           fsr0h	equ	0xFEA
  3642                           fsr0l	equ	0xFE9
  3643                           wreg	equ	0xFE8
  3644                           postdec1	equ	0xFE5
  3645                           fsr1h	equ	0xFE2
  3646                           fsr1l	equ	0xFE1
  3647                           indf2	equ	0xFDF
  3648                           fsr2h	equ	0xFDA
  3649                           fsr2l	equ	0xFD9
  3650                           status	equ	0xFD8
  3651                           
  3652 ;; *************** function _TMR6_ISR *****************
  3653 ;; Defined at:
  3654 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;		None
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;Total ram usage:        0 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    1
  3675 ;; This function calls:
  3676 ;;		Absolute function
  3677 ;;		_TMR6_DefaultInterruptHandler
  3678 ;; This function is called by:
  3679 ;;		_INTERRUPT_InterruptManager
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text25
  3684  000958                     __ptext25:
  3685                           	opt stack 0
  3686  000958                     _TMR6_ISR:
  3687                           	opt stack 24
  3688                           
  3689                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  3690                           
  3691                           ;incstack = 0
  3692  000958  947E               	bcf	3966,2,c	;volatile
  3693                           
  3694                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  3695  00095A  504D               	movf	_TMR6_InterruptHandler,w,c
  3696  00095C  104E               	iorwf	_TMR6_InterruptHandler+1,w,c
  3697  00095E  B4D8               	btfsc	status,2,c
  3698  000960  0012               	return	
  3699                           
  3700                           ;tmr6.c: 128: {
  3701                           ;tmr6.c: 129: TMR6_InterruptHandler();
  3702  000962  D801               	call	i2u46_48
  3703  000964  0012               	return	
  3704  000966                     i2u46_48:
  3705  000966  0005               	push	
  3706  000968  6EFA               	movwf	pclath,c
  3707  00096A  504D               	movf	_TMR6_InterruptHandler,w,c
  3708  00096C  6EFD               	movwf	tosl,c
  3709  00096E  504E               	movf	_TMR6_InterruptHandler+1,w,c
  3710  000970  6EFE               	movwf	tosh,c
  3711  000972  50F8               	movf	tblptru,w,c
  3712  000974  6EFF               	movwf	tosu,c
  3713  000976  50FA               	movf	pclath,w,c
  3714  000978  0012               	return		;indir
  3715  00097A                     __end_of_TMR6_ISR:
  3716                           	opt stack 0
  3717                           tosu	equ	0xFFF
  3718                           tosh	equ	0xFFE
  3719                           tosl	equ	0xFFD
  3720                           pclatu	equ	0xFFB
  3721                           pclath	equ	0xFFA
  3722                           tblptru	equ	0xFF8
  3723                           tblptrh	equ	0xFF7
  3724                           tblptrl	equ	0xFF6
  3725                           tablat	equ	0xFF5
  3726                           prodh	equ	0xFF4
  3727                           prodl	equ	0xFF3
  3728                           intcon	equ	0xFF2
  3729                           intcon2	equ	0xFF1
  3730                           postinc0	equ	0xFEE
  3731                           fsr0h	equ	0xFEA
  3732                           fsr0l	equ	0xFE9
  3733                           wreg	equ	0xFE8
  3734                           postdec1	equ	0xFE5
  3735                           fsr1h	equ	0xFE2
  3736                           fsr1l	equ	0xFE1
  3737                           indf2	equ	0xFDF
  3738                           fsr2h	equ	0xFDA
  3739                           fsr2l	equ	0xFD9
  3740                           status	equ	0xFD8
  3741                           
  3742 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  3743 ;; Defined at:
  3744 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		None
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;Total ram usage:        0 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		_TMR6_Initialize
  3768 ;;		_TMR6_ISR
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text26
  3773  000A38                     __ptext26:
  3774                           	opt stack 0
  3775  000A38                     _TMR6_DefaultInterruptHandler:
  3776                           	opt stack 24
  3777                           
  3778                           ;incstack = 0
  3779  000A38  0012               	return		;funcret
  3780  000A3A                     __end_of_TMR6_DefaultInterruptHandler:
  3781                           	opt stack 0
  3782                           tosu	equ	0xFFF
  3783                           tosh	equ	0xFFE
  3784                           tosl	equ	0xFFD
  3785                           pclatu	equ	0xFFB
  3786                           pclath	equ	0xFFA
  3787                           tblptru	equ	0xFF8
  3788                           tblptrh	equ	0xFF7
  3789                           tblptrl	equ	0xFF6
  3790                           tablat	equ	0xFF5
  3791                           prodh	equ	0xFF4
  3792                           prodl	equ	0xFF3
  3793                           intcon	equ	0xFF2
  3794                           intcon2	equ	0xFF1
  3795                           postinc0	equ	0xFEE
  3796                           fsr0h	equ	0xFEA
  3797                           fsr0l	equ	0xFE9
  3798                           wreg	equ	0xFE8
  3799                           postdec1	equ	0xFE5
  3800                           fsr1h	equ	0xFE2
  3801                           fsr1l	equ	0xFE1
  3802                           indf2	equ	0xFDF
  3803                           fsr2h	equ	0xFDA
  3804                           fsr2l	equ	0xFD9
  3805                           status	equ	0xFD8
  3806                           
  3807 ;; *************** function _TMR2_ISR *****************
  3808 ;; Defined at:
  3809 ;;		line 126 in file "mcc_generated_files/tmr2.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;		None
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;		None
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      void 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;Total ram usage:        0 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:    2
  3830 ;; This function calls:
  3831 ;;		_TMR2_CallBack
  3832 ;; This function is called by:
  3833 ;;		_INTERRUPT_InterruptManager
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text27
  3838  000A1E                     __ptext27:
  3839                           	opt stack 0
  3840  000A1E                     _TMR2_ISR:
  3841                           	opt stack 23
  3842                           
  3843                           ;tmr2.c: 130: PIR1bits.TMR2IF = 0;
  3844                           
  3845                           ;incstack = 0
  3846  000A1E  929E               	bcf	3998,1,c	;volatile
  3847                           
  3848                           ;tmr2.c: 134: TMR2_CallBack();
  3849  000A20  EC63  F004         	call	_TMR2_CallBack	;wreg free
  3850  000A24  0012               	return		;funcret
  3851  000A26                     __end_of_TMR2_ISR:
  3852                           	opt stack 0
  3853                           tosu	equ	0xFFF
  3854                           tosh	equ	0xFFE
  3855                           tosl	equ	0xFFD
  3856                           pclatu	equ	0xFFB
  3857                           pclath	equ	0xFFA
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           prodh	equ	0xFF4
  3863                           prodl	equ	0xFF3
  3864                           intcon	equ	0xFF2
  3865                           intcon2	equ	0xFF1
  3866                           postinc0	equ	0xFEE
  3867                           fsr0h	equ	0xFEA
  3868                           fsr0l	equ	0xFE9
  3869                           wreg	equ	0xFE8
  3870                           postdec1	equ	0xFE5
  3871                           fsr1h	equ	0xFE2
  3872                           fsr1l	equ	0xFE1
  3873                           indf2	equ	0xFDF
  3874                           fsr2h	equ	0xFDA
  3875                           fsr2l	equ	0xFD9
  3876                           status	equ	0xFD8
  3877                           
  3878 ;; *************** function _TMR2_CallBack *****************
  3879 ;; Defined at:
  3880 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;Total ram usage:        0 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    1
  3901 ;; This function calls:
  3902 ;;		Absolute function
  3903 ;;		_TMR2_DefaultInterruptHandler
  3904 ;; This function is called by:
  3905 ;;		_TMR2_ISR
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text28
  3910  0008C6                     __ptext28:
  3911                           	opt stack 0
  3912  0008C6                     _TMR2_CallBack:
  3913                           	opt stack 23
  3914                           
  3915                           ;tmr2.c: 140: Timer2Ticked = 1;
  3916                           
  3917                           ;incstack = 0
  3918  0008C6  0E01               	movlw	1
  3919  0008C8  6E4A               	movwf	_Timer2Ticked,c	;volatile
  3920                           
  3921                           ;tmr2.c: 141: DelayTimerTicked = 1;
  3922  0008CA  0E01               	movlw	1
  3923  0008CC  6E49               	movwf	_DelayTimerTicked,c	;volatile
  3924                           
  3925                           ;tmr2.c: 144: if(TMR2_InterruptHandler)
  3926  0008CE  504B               	movf	_TMR2_InterruptHandler,w,c
  3927  0008D0  104C               	iorwf	_TMR2_InterruptHandler+1,w,c
  3928  0008D2  B4D8               	btfsc	status,2,c
  3929  0008D4  0012               	return	
  3930                           
  3931                           ;tmr2.c: 145: {
  3932                           ;tmr2.c: 146: TMR2_InterruptHandler();
  3933  0008D6  D801               	call	i2u40_48
  3934  0008D8  0012               	return	
  3935  0008DA                     i2u40_48:
  3936  0008DA  0005               	push	
  3937  0008DC  6EFA               	movwf	pclath,c
  3938  0008DE  504B               	movf	_TMR2_InterruptHandler,w,c
  3939  0008E0  6EFD               	movwf	tosl,c
  3940  0008E2  504C               	movf	_TMR2_InterruptHandler+1,w,c
  3941  0008E4  6EFE               	movwf	tosh,c
  3942  0008E6  50F8               	movf	tblptru,w,c
  3943  0008E8  6EFF               	movwf	tosu,c
  3944  0008EA  50FA               	movf	pclath,w,c
  3945  0008EC  0012               	return		;indir
  3946  0008EE                     __end_of_TMR2_CallBack:
  3947                           	opt stack 0
  3948                           tosu	equ	0xFFF
  3949                           tosh	equ	0xFFE
  3950                           tosl	equ	0xFFD
  3951                           pclatu	equ	0xFFB
  3952                           pclath	equ	0xFFA
  3953                           tblptru	equ	0xFF8
  3954                           tblptrh	equ	0xFF7
  3955                           tblptrl	equ	0xFF6
  3956                           tablat	equ	0xFF5
  3957                           prodh	equ	0xFF4
  3958                           prodl	equ	0xFF3
  3959                           intcon	equ	0xFF2
  3960                           intcon2	equ	0xFF1
  3961                           postinc0	equ	0xFEE
  3962                           fsr0h	equ	0xFEA
  3963                           fsr0l	equ	0xFE9
  3964                           wreg	equ	0xFE8
  3965                           postdec1	equ	0xFE5
  3966                           fsr1h	equ	0xFE2
  3967                           fsr1l	equ	0xFE1
  3968                           indf2	equ	0xFDF
  3969                           fsr2h	equ	0xFDA
  3970                           fsr2l	equ	0xFD9
  3971                           status	equ	0xFD8
  3972                           
  3973 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3974 ;; Defined at:
  3975 ;;		line 154 in file "mcc_generated_files/tmr2.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;		None
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		None
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;Total ram usage:        0 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; This function calls:
  3996 ;;		Nothing
  3997 ;; This function is called by:
  3998 ;;		_TMR2_Initialize
  3999 ;;		_TMR2_CallBack
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text29
  4004  000A3A                     __ptext29:
  4005                           	opt stack 0
  4006  000A3A                     _TMR2_DefaultInterruptHandler:
  4007                           	opt stack 23
  4008                           
  4009                           ;incstack = 0
  4010  000A3A  0012               	return		;funcret
  4011  000A3C                     __end_of_TMR2_DefaultInterruptHandler:
  4012                           	opt stack 0
  4013                           tosu	equ	0xFFF
  4014                           tosh	equ	0xFFE
  4015                           tosl	equ	0xFFD
  4016                           pclatu	equ	0xFFB
  4017                           pclath	equ	0xFFA
  4018                           tblptru	equ	0xFF8
  4019                           tblptrh	equ	0xFF7
  4020                           tblptrl	equ	0xFF6
  4021                           tablat	equ	0xFF5
  4022                           prodh	equ	0xFF4
  4023                           prodl	equ	0xFF3
  4024                           intcon	equ	0xFF2
  4025                           intcon2	equ	0xFF1
  4026                           postinc0	equ	0xFEE
  4027                           fsr0h	equ	0xFEA
  4028                           fsr0l	equ	0xFE9
  4029                           wreg	equ	0xFE8
  4030                           postdec1	equ	0xFE5
  4031                           fsr1h	equ	0xFE2
  4032                           fsr1l	equ	0xFE1
  4033                           indf2	equ	0xFDF
  4034                           fsr2h	equ	0xFDA
  4035                           fsr2l	equ	0xFD9
  4036                           status	equ	0xFD8
  4037                           
  4038 ;; *************** function _ADC_ISR *****************
  4039 ;; Defined at:
  4040 ;;		line 144 in file "mcc_generated_files/adc.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;		None
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;		None
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		None
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;Total ram usage:        0 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		_INTERRUPT_InterruptManager
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text30
  4068  000A34                     __ptext30:
  4069                           	opt stack 0
  4070  000A34                     _ADC_ISR:
  4071                           	opt stack 25
  4072                           
  4073                           ;adc.c: 149: PIR1bits.ADIF = 0;
  4074                           
  4075                           ;incstack = 0
  4076  000A34  9C9E               	bcf	3998,6,c	;volatile
  4077  000A36  0012               	return		;funcret
  4078  000A38                     __end_of_ADC_ISR:
  4079                           	opt stack 0
  4080  0000                     tosu	equ	0xFFF
  4081                           tosh	equ	0xFFE
  4082                           tosl	equ	0xFFD
  4083                           pclatu	equ	0xFFB
  4084                           pclath	equ	0xFFA
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           prodh	equ	0xFF4
  4090                           prodl	equ	0xFF3
  4091                           intcon	equ	0xFF2
  4092                           intcon2	equ	0xFF1
  4093                           postinc0	equ	0xFEE
  4094                           fsr0h	equ	0xFEA
  4095                           fsr0l	equ	0xFE9
  4096                           wreg	equ	0xFE8
  4097                           postdec1	equ	0xFE5
  4098                           fsr1h	equ	0xFE2
  4099                           fsr1l	equ	0xFE1
  4100                           indf2	equ	0xFDF
  4101                           fsr2h	equ	0xFDA
  4102                           fsr2l	equ	0xFD9
  4103                           status	equ	0xFD8
  4104                           tosu	equ	0xFFF
  4105                           tosh	equ	0xFFE
  4106                           tosl	equ	0xFFD
  4107                           pclatu	equ	0xFFB
  4108                           pclath	equ	0xFFA
  4109                           tblptru	equ	0xFF8
  4110                           tblptrh	equ	0xFF7
  4111                           tblptrl	equ	0xFF6
  4112                           tablat	equ	0xFF5
  4113                           prodh	equ	0xFF4
  4114                           prodl	equ	0xFF3
  4115                           intcon	equ	0xFF2
  4116                           intcon2	equ	0xFF1
  4117                           postinc0	equ	0xFEE
  4118                           fsr0h	equ	0xFEA
  4119                           fsr0l	equ	0xFE9
  4120                           wreg	equ	0xFE8
  4121                           postdec1	equ	0xFE5
  4122                           fsr1h	equ	0xFE2
  4123                           fsr1l	equ	0xFE1
  4124                           indf2	equ	0xFDF
  4125                           fsr2h	equ	0xFDA
  4126                           fsr2l	equ	0xFD9
  4127                           status	equ	0xFD8
  4128                           
  4129                           	psect	text31
  4130  000000                     __ptext31:
  4131                           	opt stack 0
  4132                           tosu	equ	0xFFF
  4133                           tosh	equ	0xFFE
  4134                           tosl	equ	0xFFD
  4135                           pclatu	equ	0xFFB
  4136                           pclath	equ	0xFFA
  4137                           tblptru	equ	0xFF8
  4138                           tblptrh	equ	0xFF7
  4139                           tblptrl	equ	0xFF6
  4140                           tablat	equ	0xFF5
  4141                           prodh	equ	0xFF4
  4142                           prodl	equ	0xFF3
  4143                           intcon	equ	0xFF2
  4144                           intcon2	equ	0xFF1
  4145                           postinc0	equ	0xFEE
  4146                           fsr0h	equ	0xFEA
  4147                           fsr0l	equ	0xFE9
  4148                           wreg	equ	0xFE8
  4149                           postdec1	equ	0xFE5
  4150                           fsr1h	equ	0xFE2
  4151                           fsr1l	equ	0xFE1
  4152                           indf2	equ	0xFDF
  4153                           fsr2h	equ	0xFDA
  4154                           fsr2l	equ	0xFD9
  4155                           status	equ	0xFD8
  4156                           
  4157                           	psect	rparam
  4158  0000                     tosu	equ	0xFFF
  4159                           tosh	equ	0xFFE
  4160                           tosl	equ	0xFFD
  4161                           pclatu	equ	0xFFB
  4162                           pclath	equ	0xFFA
  4163                           tblptru	equ	0xFF8
  4164                           tblptrh	equ	0xFF7
  4165                           tblptrl	equ	0xFF6
  4166                           tablat	equ	0xFF5
  4167                           prodh	equ	0xFF4
  4168                           prodl	equ	0xFF3
  4169                           intcon	equ	0xFF2
  4170                           intcon2	equ	0xFF1
  4171                           postinc0	equ	0xFEE
  4172                           fsr0h	equ	0xFEA
  4173                           fsr0l	equ	0xFE9
  4174                           wreg	equ	0xFE8
  4175                           postdec1	equ	0xFE5
  4176                           fsr1h	equ	0xFE2
  4177                           fsr1l	equ	0xFE1
  4178                           indf2	equ	0xFDF
  4179                           fsr2h	equ	0xFDA
  4180                           fsr2l	equ	0xFD9
  4181                           status	equ	0xFD8
  4182                           
  4183                           	psect	temp
  4184  000050                     btemp:
  4185                           	opt stack 0
  4186  000050                     	ds	1
  4187  0000                     int$flags	set	btemp
  4188                           tosu	equ	0xFFF
  4189                           tosh	equ	0xFFE
  4190                           tosl	equ	0xFFD
  4191                           pclatu	equ	0xFFB
  4192                           pclath	equ	0xFFA
  4193                           tblptru	equ	0xFF8
  4194                           tblptrh	equ	0xFF7
  4195                           tblptrl	equ	0xFF6
  4196                           tablat	equ	0xFF5
  4197                           prodh	equ	0xFF4
  4198                           prodl	equ	0xFF3
  4199                           intcon	equ	0xFF2
  4200                           intcon2	equ	0xFF1
  4201                           postinc0	equ	0xFEE
  4202                           fsr0h	equ	0xFEA
  4203                           fsr0l	equ	0xFE9
  4204                           wreg	equ	0xFE8
  4205                           postdec1	equ	0xFE5
  4206                           fsr1h	equ	0xFE2
  4207                           fsr1l	equ	0xFE1
  4208                           indf2	equ	0xFDF
  4209                           fsr2h	equ	0xFDA
  4210                           fsr2l	equ	0xFD9
  4211                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        192
    BSS         20
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      79
    BANK0           160      0     160
    BANK1           256      9       9
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StepMove
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _RectaAceleracion->_StepMove
    _StepMove->_State16MEF_act
    _StepMove->_State8MEF_act
    _State8MEF_act->_EPWM1_LoadDutyValue
    _State8MEF_act->_EPWM2_LoadDutyValue
    _State16MEF_act->_EPWM1_LoadDutyValue
    _State16MEF_act->_EPWM2_LoadDutyValue

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_RectaAceleracion
    _RectaAceleracion->_StepMove

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9958
                         _Motor_Stop
                   _RectaAceleracion
                  _SYSTEM_Initialize
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RectaAceleracion                                     4     2      2    5131
                                              5 BANK1      4     2      2
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StepMove                                             7     2      5    4655
                                             20 COMRAM     2     2      0
                                              0 BANK1      5     0      5
                     _State16MEF_act
                      _State8MEF_act
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act                                        2     2      0    1480
                                             18 COMRAM     2     2      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act                                       2     2      0    1480
                                             18 COMRAM     2     2      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2     678
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     678
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Motor_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Motor_Stop
   _RectaAceleracion
     _StepMove
       _State16MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
       _State8MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_ini
   _StepMove
     _State16MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
     _State8MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      9       9       7        3.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      4F       1       84.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F8      12        0.0%
DATA                 0      0      F8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Jun 28 10:27:30 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 0A1E  
                       ??_TMR6_StartTimer 002F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l513 0564                                       l521 0704  
                                     l467 0308                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _PR6 000F4B                           __end_of_ADC_ISR 0A38  
                         _TMR2_Initialize 0936                                       tosl 000FFD  
                                     wreg 000FE8                  __end_of_EPWM2_Initialize 0912  
                         _CCP5_Initialize 09C8                                      l2202 0274  
                                    l2220 02E4                                      l2140 0130  
                                    l2302 04AC                                      l2214 02D0  
                                    l2150 0154                                      l2142 0138  
                                    l2134 0116                                      l2126 00CE  
                                    l2118 00B2                                      l2312 04D0  
                                    l2304 04B4                                      l2216 02D6  
                                    l2160 01AC                                      l2136 011C  
                                    l2224 02EC                                      l2330 0540  
                                    l2250 038C                                      l2162 01B2  
                                    l2410 074A                                      l2324 052C  
                                    l2260 03B0                                      l2252 0394  
                                    l2244 0372                                      l2236 032A  
                                    l2228 030E                                      l2404 0732  
                                    l2326 0532                                      l2270 0408  
                                    l2246 0378                                      l2334 0548  
                                    l2166 01C0                                      l2350 06E2  
                                    l2272 040E                                      l2192 0250  
                                    l2176 01E4                                      l2168 01C8  
                                    l2194 0258                                      l2186 023C  
                                    l2354 06EE                                      l2370 0642  
                                    l2276 041C                                      l2188 0242  
                                    l2348 06DA                                      l2356 06F2  
                                    l2380 0688                                      l2372 0650  
                                    l2286 0440                                      l2278 0424  
                                    l2358 06F8                                      l2366 061C  
                                    l2296 0498                                      l2376 0662  
                                    l2298 049E                                      u1500 0164  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      u1600 0284  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u1451 00CC                                      u1541 01E2  
                                    u1550 01F4                                      u1641 0328  
                                    u1731 043E                                      u1491 0152  
                                    u1740 0450                                      u1681 03AE  
                                    u1690 03C0                                      u1790 04E0  
                                    _TMR2 000FBC                                      _TMR6 000F4C  
                                    _WPUB 000F61                          _RectaAceleracion 0606  
                                    _main 0708                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0050                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00AA                             __CFG_IESO$OFF 000000  
                   ??_EPWM1_LoadDutyValue 0031                              ___param_bank 000000  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 0A0A  
                                   ?_main 0021                                     _T2CON 000FBA  
                                   _T6CON 000F4A                            __CFG_DEBUG$OFF 000000  
                                   i2l270 0052                                     i2l272 0062  
                                   i2l276 006E                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
       __size_of_TMR6_SetInterruptHandler 000A                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
               ?_TMR6_SetInterruptHandler 002F                          __end_of_TMR2_ISR 0A26  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                          __end_of_TMR6_ISR 097A  
                          __CFG_EBTRB$OFF 000000                                     _parar 0047  
                        _LookUP_TABLE_COS 0001                          _LookUP_TABLE_SEN 00E0  
                      __CFG_MCLRE$EXTMCLR 000000                        StepMove@StepNumber 0100  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 0A2C                            __CFG_PBADEN$ON 000000  
          ??_TMR6_DefaultInterruptHandler 0021                           __initialization 076E  
              __end_of_EUSART1_Initialize 09C8                              __end_of_main 076E  
                 __end_of_TMR2_Initialize 0958                                 ??_ADC_ISR 0021  
             ?_INTERRUPT_InterruptManager 0021                  _TMR2_SetInterruptHandler 0A14  
                                  ??_main 0037                   __end_of_CCP5_Initialize 09DC  
                           __activetblptr 000002                           _TMR6_Initialize 089E  
                        __end_of_StepMove 0708                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR1H 000FBF                                    _CCPR2H 000F68  
                                  _CCPR1L 000FBE                                    _CCPR2L 000F67  
                                  _CCPR5H 000F56                                    _CCPR5L 000F55  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                          __CFG_XINST$OFF 000000                              _CCPTMRS0bits 000F49  
                              _Motor_Stop 09DC                            __CFG_STVREN$ON 000000  
                 __size_of_State16MEF_act 025C                                    clear_0 07B4  
                            __pdataCOMRAM 0001                  StepMove@microstep_number 0103  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       _EPWM2_LoadDutyValue 0814  
                 __end_of_TMR2_StartTimer 0A30  TMR2_SetInterruptHandler@InterruptHandler 002F  
TMR6_SetInterruptHandler@InterruptHandler 002F             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 0874                                __accesstop 0060  
                 __end_of__initialization 07BA                     __end_of_TMR2_CallBack 08EE  
                      ?_SYSTEM_Initialize 0021                           _TMR6_StartTimer 0A26  
                           ___rparam_used 000001                         ?_EPWM1_Initialize 0021  
                          __pcstackCOMRAM 0021                      ?_EPWM2_LoadDutyValue 002F  
                            __pidataBANK0 0566                       ??_SYSTEM_Initialize 0031  
                   __end_of_State8MEF_act 030A                                 ?_TMR2_ISR 0021  
                               ?_TMR6_ISR 0021                        ??_EPWM1_Initialize 002F  
                        ?_TMR2_Initialize 0021                   __end_of_TMR6_Initialize 08C6  
                __end_of_RectaAceleracion 0696                          ?_CCP5_Initialize 0021  
                       ?_EPWM2_Initialize 0021                 __end_of_SYSTEM_Initialize 089E  
                      ??_EPWM2_Initialize 002F                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 004B                        __CFG_CCP2MX$PORTC1 000000  
                   ??_EPWM2_LoadDutyValue 0031                               ?_Motor_Stop 0021  
        __end_of_TMR6_SetInterruptHandler 0A14                                ??_TMR2_ISR 0021  
                      __CFG_CCP3MX$PORTB5 000000                                 ?_StepMove 0100  
                              ??_TMR6_ISR 0021                                   _CCP1CON 000FBD  
                                 _CCP2CON 000F66                                   _CCP5CON 000F54  
                                 _ECCP1AS 000FB6                                   _ECCP2AS 000F64  
                                 _ADC_ISR 0A34                   __size_of_ADC_Initialize 0018  
                                 _OSCCON2 000FD2                                   i2u40_48 08DA  
                                 _OSCTUNE 000F9B                                   i2u46_48 0966  
                                 _PWM1CON 000FB7                                   _PWM2CON 000F65  
                                 _SPBRGH1 000FB0                          ?_TMR2_StartTimer 0021  
                 __end_of_TMR6_StartTimer 0A2C               __end_of_EPWM1_LoadDutyValue 0874  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0031  
                              ??_StepMove 0035                            _State16MEF_act 030A  
                                 __pcinit 076E                          ?_TMR6_Initialize 0021  
                                 __ramtop 1000                                   __ptext0 0708  
                                 __ptext1 09EE                                   __ptext2 0874  
                                 __ptext3 089E                                   __ptext4 0A26  
                                 __ptext5 0A0A                                   __ptext6 0936  
                                 __ptext7 0A2C                                   __ptext8 0A14  
                                 __ptext9 07C8                     _OSCILLATOR_Initialize 09FC  
                               _T2CONbits 000FBA                             ?_StateMEF_ini 0021  
                      _EUSART1_Initialize 09B2                  ??_PIN_MANAGER_Initialize 002F  
                               _T6CONbits 000F4A                __size_of_SYSTEM_Initialize 002A  
                     __size_of_Motor_Stop 0012                      end_of_initialization 07BA  
                     ?_EUSART1_Initialize 0021                             __Lmediumconst 0000  
                  __end_of_State16MEF_act 0566                                   postdec1 000FE5  
                                 postinc0 000FEE                      ??_EUSART1_Initialize 002F  
                _TMR6_SetInterruptHandler 0A0A                            ??_StateMEF_ini 002F  
                        ?_TMR6_StartTimer 0021                              _EstadoActual 004F  
                       RectaAceleracion@i 0108                           ?_State16MEF_act 0021  
            __end_of_INTERRUPT_Initialize 0A34      __end_of_TMR2_DefaultInterruptHandler 0A3C  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 0A3A  
               RectaAceleracion@direccion 0106                         StepMove@Velocidad 0102  
                           __pidataCOMRAM 097A                         __size_of_TMR2_ISR 0008  
                          _ADC_Initialize 099A                         __size_of_TMR6_ISR 0022  
                  ?_OSCILLATOR_Initialize 0021                         ?_RectaAceleracion 0105  
                     start_initialization 076E                        ??_RectaAceleracion 0037  
               __size_of_EPWM1_Initialize 0024           __size_of_PIN_MANAGER_Initialize 004C  
                               _Microstep 0040              EPWM1_LoadDutyValue@dutyValue 002F  
               __size_of_EPWM2_Initialize 0024                              ??_Motor_Stop 002F  
                        _DelayTimerTicked 0049                    __end_of_ADC_Initialize 09B2  
                             __pdataBANK0 0060                 RectaAceleracion@velocidad 0107  
                                ?_ADC_ISR 0021                                 _StepCount 003E  
                       StepMove@direccion 0104             ?_TMR2_DefaultInterruptHandler 0021  
                       __size_of_StepMove 0072                    __size_of_TMR2_CallBack 0028  
                             __pbssCOMRAM 0037                             __pcstackBANK1 0100  
                __size_of_TMR2_Initialize 0022                  __size_of_CCP5_Initialize 0014  
                      __end_of_Motor_Stop 09EE                    __size_of_State8MEF_act 025C  
             __end_of_EPWM2_LoadDutyValue 0844                     _TMR6_InterruptHandler 004D  
                    __end_of_StateMEF_ini 09FC                    _PIN_MANAGER_Initialize 07C8  
                               __pintcode 0008                           ?_ADC_Initialize 0021  
                 State16MEF_act@direccion 0034              ??_INTERRUPT_InterruptManager 0021  
                        __CFG_PRICLKEN$ON 000000                                  _BAUDCON1 000FB8  
                                _ANALOG_0 0044                                  _ANALOG_1 0042  
                    _INTERRUPT_Initialize 0A30                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                           _TMR2_CallBack 08C6                                  _PIE1bits 000F9D  
                                _PIE5bits 000F7D                  __size_of_TMR2_StartTimer 0004  
     __size_of_INTERRUPT_InterruptManager 00A2                                  _PIR1bits 000F9E  
                                _PIR5bits 000F7E              __size_of_EPWM1_LoadDutyValue 0030  
              ??_TMR6_SetInterruptHandler 0031                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR2_ISR 0A1E  
                                _PSTR1CON 000FB9                                  _PSTR2CON 000F63  
                                _TMR6_ISR 0958                             _State8MEF_act 00AE  
                        _Timer2Tick_count 003C                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2            ??_TMR2_DefaultInterruptHandler 0021  
                        _EPWM1_Initialize 0912         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 002F                  __size_of_TMR6_Initialize 0028  
                             _INTCON2bits 000FF1                                 copy_data0 0782  
                               copy_data1 07A2                     ?_INTERRUPT_Initialize 0021  
                       ??_TMR2_Initialize 0031                            ?_TMR2_CallBack 0021  
                        ??_State16MEF_act 0033                         ??_CCP5_Initialize 002F  
                                _MoveDone 0046                                  __Hrparam 0000  
                            _Timer2Ticked 004A                          _EPWM2_Initialize 08EE  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTC0 000000                            ?_State8MEF_act 0021  
                                _StepMove 0696                   ??_OSCILLATOR_Initialize 002F  
             __size_of_EUSART1_Initialize 0016                                  __ptext10 09FC  
                                __ptext11 0A30                                  __ptext20 030A  
                                __ptext12 09B2                                  __ptext21 0814  
                                __ptext13 08EE                                  __ptext30 0A34  
                                __ptext22 0844                                  __ptext14 0912  
                                __ptext31 0000                                  __ptext23 09DC  
                                __ptext15 09C8                                  __ptext16 099A  
                                __ptext25 0958                                  __ptext17 0606  
                                __ptext26 0A38                                  __ptext18 0696  
                                __ptext27 0A1E                                  __ptext19 00AE  
                                __ptext28 08C6                                  __ptext29 0A3A  
                   __size_of_StateMEF_ini 000E                 __size_of_RectaAceleracion 0090  
                           __size_of_main 0066          RectaAceleracion@microstep_number 0105  
                     _LookUP_TABLE_COS_16 00A0                       _LookUP_TABLE_SEN_16 0060  
                __size_of_TMR6_StartTimer 0006                                  int$flags 0050  
                       ??_TMR2_StartTimer 002F        __end_of_INTERRUPT_InterruptManager 00AA  
              _INTERRUPT_InterruptManager 0008                                _INTCONbits 000FF2  
                            _StateMEF_ini 09EE                    ??_INTERRUPT_Initialize 002F  
    __end_of_TMR6_DefaultInterruptHandler 0A3A     __size_of_TMR6_DefaultInterruptHandler 0002  
            _TMR6_DefaultInterruptHandler 0A38                                  intlevel2 0000  
                         ??_TMR2_CallBack 0021              EPWM2_LoadDutyValue@dutyValue 002F  
                 ?_PIN_MANAGER_Initialize 0021                         ??_TMR6_Initialize 0031  
                              _RCSTA1bits 000FAB                          ??_ADC_Initialize 002F  
                           _StepsComplete 0048                           ??_State8MEF_act 0033  
                  State8MEF_act@direccion 0034                         __CFG_T3CMX$PORTC0 000000  
                     _EPWM1_LoadDutyValue 0844            __end_of_PIN_MANAGER_Initialize 0814  
           ?_TMR6_DefaultInterruptHandler 0021                         __CFG_FOSC$INTIO67 000000  
                            _StepperMotor 0037                     _TMR2_InterruptHandler 004B  
                __end_of_EPWM1_Initialize 0936                      ?_EPWM1_LoadDutyValue 002F  
