

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Jun 05 10:43:57 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 1.41
    47                           ; Generated 25/01/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F46K22 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataCOMRAM
    82  0004EA                     __pidataCOMRAM:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _LookUP_TABLE_COS
    86  0004EA  FA                 	db	250
    87  0004EB  ED                 	db	237
    88  0004EC  D8                 	db	216
    89  0004ED  BC                 	db	188
    90  0004EE  99                 	db	153
    91  0004EF  71                 	db	113
    92  0004F0  45                 	db	69
    93  0004F1  18                 	db	24
    94  0004F2  18                 	db	24
    95  0004F3  45                 	db	69
    96  0004F4  71                 	db	113
    97  0004F5  99                 	db	153
    98  0004F6  BC                 	db	188
    99  0004F7  D8                 	db	216
   100  0004F8  ED                 	db	237
   101  0004F9  FA                 	db	250
   102  0004FA  FA                 	db	250
   103  0004FB  ED                 	db	237
   104  0004FC  D8                 	db	216
   105  0004FD  BC                 	db	188
   106  0004FE  99                 	db	153
   107  0004FF  71                 	db	113
   108  000500  45                 	db	69
   109  000501  18                 	db	24
   110  000502  18                 	db	24
   111  000503  45                 	db	69
   112  000504  71                 	db	113
   113  000505  99                 	db	153
   114  000506  BC                 	db	188
   115  000507  D8                 	db	216
   116  000508  ED                 	db	237
   117  000509  FA                 	db	250
   118                           
   119                           	psect	idataBANK0
   120  00050A                     __pidataBANK0:
   121                           	opt stack 0
   122                           
   123                           ;initializer for _LookUP_TABLE_SEN
   124  00050A  18                 	db	24
   125  00050B  45                 	db	69
   126  00050C  71                 	db	113
   127  00050D  99                 	db	153
   128  00050E  BC                 	db	188
   129  00050F  D8                 	db	216
   130  000510  ED                 	db	237
   131  000511  FA                 	db	250
   132  000512  FA                 	db	250
   133  000513  ED                 	db	237
   134  000514  D8                 	db	216
   135  000515  BC                 	db	188
   136  000516  99                 	db	153
   137  000517  71                 	db	113
   138  000518  45                 	db	69
   139  000519  18                 	db	24
   140  00051A  18                 	db	24
   141  00051B  45                 	db	69
   142  00051C  71                 	db	113
   143  00051D  99                 	db	153
   144  00051E  BC                 	db	188
   145  00051F  D8                 	db	216
   146  000520  ED                 	db	237
   147  000521  FA                 	db	250
   148  000522  FA                 	db	250
   149  000523  ED                 	db	237
   150  000524  D8                 	db	216
   151  000525  BC                 	db	188
   152  000526  99                 	db	153
   153  000527  71                 	db	113
   154  000528  45                 	db	69
   155  000529  18                 	db	24
   156                           
   157                           	psect	nvCOMRAM
   158  000034                     __pnvCOMRAM:
   159                           	opt stack 0
   160  000034                     _StepCount:
   161                           	opt stack 0
   162  000034                     	ds	2
   163  000036                     _Timer2Tick_count:
   164                           	opt stack 0
   165  000036                     	ds	2
   166  000038                     _TMR2_InterruptHandler:
   167                           	opt stack 0
   168  000038                     	ds	2
   169  00003A                     _TMR6_InterruptHandler:
   170                           	opt stack 0
   171  00003A                     	ds	2
   172  0000                     _CCPTMRS0bits	set	3913
   173  0000                     _ANSELA	set	3896
   174  0000                     _ANSELE	set	3900
   175  0000                     _ANSELD	set	3899
   176  0000                     _ANSELB	set	3897
   177  0000                     _ANSELC	set	3898
   178  0000                     _CCPR5H	set	3926
   179  0000                     _CCPR5L	set	3925
   180  0000                     _CCP5CON	set	3924
   181  0000                     _T6CONbits	set	3914
   182  0000                     _TMR6	set	3916
   183  0000                     _PR6	set	3915
   184  0000                     _T6CON	set	3914
   185  0000                     _LATCbits	set	3979
   186  0000                     _LATDbits	set	3980
   187  0000                     _LATBbits	set	3978
   188  0000                     _TXREG1	set	4013
   189  0000                     _RCREG1	set	4014
   190  0000                     _RCSTA1bits	set	4011
   191  0000                     _SPBRGH1	set	4016
   192  0000                     _SPBRG1	set	4015
   193  0000                     _TXSTA1	set	4012
   194  0000                     _RCSTA1	set	4011
   195  0000                     _BAUDCON1	set	4024
   196  0000                     _OSCTUNE	set	3995
   197  0000                     _OSCCON2	set	4050
   198  0000                     _OSCCON	set	4051
   199  0000                     _INTCONbits	set	4082
   200  0000                     _RCONbits	set	4048
   201  0000                     _ADCON0bits	set	4034
   202  0000                     _ADRESH	set	4036
   203  0000                     _ADRESL	set	4035
   204  0000                     _ADCON2	set	4032
   205  0000                     _ADCON1	set	4033
   206  0000                     _ADCON0	set	4034
   207  0000                     _CCPR1H	set	4031
   208  0000                     _CCPR1L	set	4030
   209  0000                     _PSTR1CON	set	4025
   210  0000                     _PWM1CON	set	4023
   211  0000                     _ECCP1AS	set	4022
   212  0000                     _CCP1CON	set	4029
   213  0000                     _CCPR2H	set	3944
   214  0000                     _CCPR2L	set	3943
   215  0000                     _PSTR2CON	set	3939
   216  0000                     _PWM2CON	set	3941
   217  0000                     _ECCP2AS	set	3940
   218  0000                     _CCP2CON	set	3942
   219  0000                     _INTCON2bits	set	4081
   220  0000                     _WPUB	set	3937
   221  0000                     _TRISD	set	3989
   222  0000                     _TRISC	set	3988
   223  0000                     _TRISB	set	3987
   224  0000                     _TRISA	set	3986
   225  0000                     _TRISE	set	3990
   226  0000                     _LATC	set	3979
   227  0000                     _LATB	set	3978
   228  0000                     _LATA	set	3977
   229  0000                     _LATD	set	3980
   230  0000                     _LATE	set	3981
   231  0000                     _T2CONbits	set	4026
   232  0000                     _PIE1bits	set	3997
   233  0000                     _PIR1bits	set	3998
   234  0000                     _TMR2	set	4028
   235  0000                     _PR2	set	4027
   236  0000                     _T2CON	set	4026
   237  0000                     _PIE5bits	set	3965
   238  0000                     _PIR5bits	set	3966
   239                           
   240                           ; #config settings
   241  0000                     
   242                           	psect	cinit
   243  00028C                     __pcinit:
   244                           	opt stack 0
   245  00028C                     start_initialization:
   246                           	opt stack 0
   247  00028C                     __initialization:
   248                           	opt stack 0
   249                           
   250                           ; Initialize objects allocated to BANK0 (32 bytes)
   251                           ; load TBLPTR registers with __pidataBANK0
   252  00028C  0E0A               	movlw	low __pidataBANK0
   253  00028E  6EF6               	movwf	tblptrl,c
   254  000290  0E05               	movlw	high __pidataBANK0
   255  000292  6EF7               	movwf	tblptrh,c
   256  000294  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   257  000296  6EF8               	movwf	tblptru,c
   258  000298  EE00  F060         	lfsr	0,__pdataBANK0
   259  00029C  EE10 F020          	lfsr	1,32
   260  0002A0                     copy_data0:
   261  0002A0  0009               	tblrd		*+
   262  0002A2  CFF5 FFEE          	movff	tablat,postinc0
   263  0002A6  50E5               	movf	postdec1,w,c
   264  0002A8  50E1               	movf	fsr1l,w,c
   265  0002AA  E1FA               	bnz	copy_data0
   266                           
   267                           ; Initialize objects allocated to COMRAM (32 bytes)
   268                           ; load TBLPTR registers with __pidataCOMRAM
   269  0002AC  0EEA               	movlw	low __pidataCOMRAM
   270  0002AE  6EF6               	movwf	tblptrl,c
   271  0002B0  0E04               	movlw	high __pidataCOMRAM
   272  0002B2  6EF7               	movwf	tblptrh,c
   273  0002B4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   274  0002B6  6EF8               	movwf	tblptru,c
   275  0002B8  EE00  F001         	lfsr	0,__pdataCOMRAM
   276  0002BC  EE10 F020          	lfsr	1,32
   277  0002C0                     copy_data1:
   278  0002C0  0009               	tblrd		*+
   279  0002C2  CFF5 FFEE          	movff	tablat,postinc0
   280  0002C6  50E5               	movf	postdec1,w,c
   281  0002C8  50E1               	movf	fsr1l,w,c
   282  0002CA  E1FA               	bnz	copy_data1
   283                           
   284                           ; Clear objects allocated to COMRAM (5 bytes)
   285  0002CC  6A40               	clrf	(__pbssCOMRAM+4)& (0+255),c
   286  0002CE  6A3F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   287  0002D0  6A3E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   288  0002D2  6A3D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   289  0002D4  6A3C               	clrf	__pbssCOMRAM& (0+255),c
   290  0002D6                     end_of_initialization:
   291                           	opt stack 0
   292  0002D6                     __end_of__initialization:
   293                           	opt stack 0
   294  0002D6  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   295  0002D8  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   296  0002DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   297  0002DC  6EF8               	movwf	tblptru,c
   298  0002DE  0100               	movlb	0
   299  0002E0  EF72  F001         	goto	_main	;jump to C main() function
   300                           tblptru	equ	0xFF8
   301                           tblptrh	equ	0xFF7
   302                           tblptrl	equ	0xFF6
   303                           tablat	equ	0xFF5
   304                           postinc0	equ	0xFEE
   305                           postdec1	equ	0xFE5
   306                           fsr1l	equ	0xFE1
   307                           
   308                           	psect	bssCOMRAM
   309  00003C                     __pbssCOMRAM:
   310                           	opt stack 0
   311  00003C                     TMR2_ISR@CountCallBack:
   312                           	opt stack 0
   313  00003C                     	ds	2
   314  00003E                     _EstadoActual:
   315                           	opt stack 0
   316  00003E                     	ds	1
   317  00003F                     _Microstep:
   318                           	opt stack 0
   319  00003F                     	ds	1
   320  000040                     _Timer2Ticked:
   321                           	opt stack 0
   322  000040                     	ds	1
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           postdec1	equ	0xFE5
   329                           fsr1l	equ	0xFE1
   330                           
   331                           	psect	dataCOMRAM
   332  000001                     __pdataCOMRAM:
   333                           	opt stack 0
   334  000001                     _LookUP_TABLE_COS:
   335                           	opt stack 0
   336  000001                     	ds	32
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           postinc0	equ	0xFEE
   342                           postdec1	equ	0xFE5
   343                           fsr1l	equ	0xFE1
   344                           
   345                           	psect	dataBANK0
   346  000060                     __pdataBANK0:
   347                           	opt stack 0
   348  000060                     _LookUP_TABLE_SEN:
   349                           	opt stack 0
   350  000060                     	ds	32
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           postdec1	equ	0xFE5
   357                           fsr1l	equ	0xFE1
   358                           
   359                           	psect	cstackCOMRAM
   360  000021                     __pcstackCOMRAM:
   361                           	opt stack 0
   362  000021                     ??_INTERRUPT_InterruptManager:
   363  000021                     
   364                           ; 1 bytes @ 0x0
   365  000021                     	ds	14
   366  00002F                     EUSART1_Write@txData:
   367                           	opt stack 0
   368  00002F                     TMR6_SetInterruptHandler@InterruptHandler:
   369                           	opt stack 0
   370  00002F                     TMR2_SetInterruptHandler@InterruptHandler:
   371                           	opt stack 0
   372  00002F                     EPWM2_LoadDutyValue@dutyValue:
   373                           	opt stack 0
   374  00002F                     EPWM1_LoadDutyValue@dutyValue:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0xE
   378  00002F                     	ds	2
   379  000031                     ??_EPWM2_LoadDutyValue:
   380  000031                     ??_EPWM1_LoadDutyValue:
   381  000031                     
   382                           ; 1 bytes @ 0x10
   383  000031                     	ds	2
   384  000033                     ??_StateMEF_act:
   385                           
   386                           ; 1 bytes @ 0x12
   387  000033                     	ds	1
   388  000034                     tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           postdec1	equ	0xFE5
   394                           fsr1l	equ	0xFE1
   395                           
   396                           ; 1 bytes @ 0x13
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 24 in file "main.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;Total ram usage:        0 bytes
   421 ;; Hardware stack levels required when called:    7
   422 ;; This function calls:
   423 ;;		_SYSTEM_Initialize
   424 ;;		_StateMEF_act
   425 ;;		_StateMEF_ini
   426 ;; This function is called by:
   427 ;;		Startup code after reset
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text0
   432  0002E4                     __ptext0:
   433                           	opt stack 0
   434  0002E4                     _main:
   435                           	opt stack 24
   436                           
   437                           ;main.c: 27: SYSTEM_Initialize();
   438                           
   439                           ;incstack = 0
   440  0002E4  ECF4  F001         	call	_SYSTEM_Initialize	;wreg free
   441                           
   442                           ;main.c: 28: StateMEF_ini();
   443  0002E8  ECD3  F002         	call	_StateMEF_ini	;wreg free
   444                           
   445                           ;main.c: 29: do { LATBbits.LATB6 = 1; } while(0);
   446  0002EC  8C8A               	bsf	3978,6,c	;volatile
   447                           
   448                           ;main.c: 30: Timer2Tick_count=0;
   449  0002EE  0E00               	movlw	0
   450  0002F0  6E37               	movwf	_Timer2Tick_count+1,c
   451  0002F2  0E00               	movlw	0
   452  0002F4  6E36               	movwf	_Timer2Tick_count,c
   453                           
   454                           ;main.c: 31: StepCount=0;
   455  0002F6  0E00               	movlw	0
   456  0002F8  6E35               	movwf	_StepCount+1,c
   457  0002FA  0E00               	movlw	0
   458  0002FC  6E34               	movwf	_StepCount,c
   459                           
   460                           ;main.c: 33: (INTCONbits.GIE = 1);
   461  0002FE  8EF2               	bsf	intcon,7,c	;volatile
   462                           
   463                           ;main.c: 36: (INTCONbits.PEIE = 1);
   464  000300  8CF2               	bsf	intcon,6,c	;volatile
   465  000302                     l1469:
   466                           
   467                           ;main.c: 38: {
   468                           ;main.c: 39: if (StepCount<500)
   469  000302  BE35               	btfsc	_StepCount+1,7,c
   470  000304  D006               	goto	l1471
   471  000306  0EF4               	movlw	244
   472  000308  5C34               	subwf	_StepCount,w,c
   473  00030A  0E01               	movlw	1
   474  00030C  5835               	subwfb	_StepCount+1,w,c
   475  00030E  B0D8               	btfsc	status,0,c
   476  000310  D7F8               	goto	l1469
   477  000312                     l1471:
   478                           
   479                           ;main.c: 40: {
   480                           ;main.c: 41: if (Timer2Ticked){
   481  000312  5040               	movf	_Timer2Ticked,w,c	;volatile
   482  000314  B4D8               	btfsc	status,2,c
   483  000316  D7F5               	goto	l1469
   484                           
   485                           ;main.c: 42: Timer2Tick_count++;
   486  000318  4A36               	infsnz	_Timer2Tick_count,f,c
   487  00031A  2A37               	incf	_Timer2Tick_count+1,f,c
   488                           
   489                           ;main.c: 43: if (Timer2Tick_count==5){
   490  00031C  0E05               	movlw	5
   491  00031E  1836               	xorwf	_Timer2Tick_count,w,c
   492  000320  1037               	iorwf	_Timer2Tick_count+1,w,c
   493  000322  A4D8               	btfss	status,2,c
   494  000324  D008               	goto	l1483
   495                           
   496                           ;main.c: 44: StateMEF_act();
   497  000326  EC57  F000         	call	_StateMEF_act	;wreg free
   498                           
   499                           ;main.c: 45: StepCount++;
   500  00032A  4A34               	infsnz	_StepCount,f,c
   501  00032C  2A35               	incf	_StepCount+1,f,c
   502                           
   503                           ;main.c: 46: Timer2Tick_count=0;
   504  00032E  0E00               	movlw	0
   505  000330  6E37               	movwf	_Timer2Tick_count+1,c
   506  000332  0E00               	movlw	0
   507  000334  6E36               	movwf	_Timer2Tick_count,c
   508  000336                     l1483:
   509                           
   510                           ;main.c: 47: }
   511                           ;main.c: 48: Timer2Ticked = 0;
   512  000336  0E00               	movlw	0
   513  000338  6E40               	movwf	_Timer2Ticked,c	;volatile
   514  00033A  D7E3               	goto	l1469
   515  00033C                     __end_of_main:
   516                           	opt stack 0
   517                           tblptru	equ	0xFF8
   518                           tblptrh	equ	0xFF7
   519                           tblptrl	equ	0xFF6
   520                           tablat	equ	0xFF5
   521                           intcon	equ	0xFF2
   522                           postinc0	equ	0xFEE
   523                           postdec1	equ	0xFE5
   524                           fsr1l	equ	0xFE1
   525                           status	equ	0xFD8
   526                           
   527 ;; *************** function _StateMEF_ini *****************
   528 ;; Defined at:
   529 ;;		line 18 in file "MotorDriver.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;Total ram usage:        0 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; Hardware stack levels required when called:    4
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text1
   558  0005A6                     __ptext1:
   559                           	opt stack 0
   560  0005A6                     _StateMEF_ini:
   561                           	opt stack 26
   562                           
   563                           ;MotorDriver.c: 19: EstadoActual = STATE1;
   564                           
   565                           ;incstack = 0
   566  0005A6  0E00               	movlw	0
   567  0005A8  6E3E               	movwf	_EstadoActual,c
   568                           
   569                           ;MotorDriver.c: 20: Microstep=0;
   570  0005AA  0E00               	movlw	0
   571  0005AC  6E3F               	movwf	_Microstep,c
   572  0005AE  0012               	return		;funcret
   573  0005B0                     __end_of_StateMEF_ini:
   574                           	opt stack 0
   575                           tblptru	equ	0xFF8
   576                           tblptrh	equ	0xFF7
   577                           tblptrl	equ	0xFF6
   578                           tablat	equ	0xFF5
   579                           intcon	equ	0xFF2
   580                           postinc0	equ	0xFEE
   581                           postdec1	equ	0xFE5
   582                           fsr1l	equ	0xFE1
   583                           status	equ	0xFD8
   584                           
   585 ;; *************** function _StateMEF_act *****************
   586 ;; Defined at:
   587 ;;		line 23 in file "MotorDriver.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;Total ram usage:        1 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    5
   608 ;; This function calls:
   609 ;;		_EPWM1_LoadDutyValue
   610 ;;		_EPWM2_LoadDutyValue
   611 ;;		_EUSART1_Write
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text2
   618  0000AE                     __ptext2:
   619                           	opt stack 0
   620  0000AE                     _StateMEF_act:
   621                           	opt stack 25
   622                           
   623                           ;MotorDriver.c: 24: switch(EstadoActual) {
   624                           
   625                           ;incstack = 0
   626  0000AE  D0E0               	goto	l1453
   627  0000B0                     l1371:
   628                           
   629                           ;MotorDriver.c: 26: PSTR1CON = 0x01; PSTR2CON = 0x01;
   630  0000B0  0E01               	movlw	1
   631  0000B2  6EB9               	movwf	4025,c	;volatile
   632  0000B4  0E01               	movlw	1
   633  0000B6  6E63               	movwf	3939,c	;volatile
   634                           
   635                           ;MotorDriver.c: 27: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
   636  0000B8  9A8C               	bcf	3980,5,c	;volatile
   637  0000BA  908B               	bcf	3979,0,c	;volatile
   638                           
   639                           ;MotorDriver.c: 28: EUSART1_Write(Microstep);
   640  0000BC  503F               	movf	_Microstep,w,c
   641  0000BE  ECCD  F002         	call	_EUSART1_Write
   642                           
   643                           ;MotorDriver.c: 29: if (Microstep<8){
   644  0000C2  503F               	movf	_Microstep,w,c
   645  0000C4  0A80               	xorlw	128
   646  0000C6  0F78               	addlw	-136
   647  0000C8  B0D8               	btfsc	status,0,c
   648  0000CA  0012               	return	
   649                           
   650                           ;MotorDriver.c: 30: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   651  0000CC  503F               	movf	_Microstep,w,c
   652  0000CE  0D01               	mullw	1
   653  0000D0  0E01               	movlw	low _LookUP_TABLE_COS
   654  0000D2  24F3               	addwf	prodl,w,c
   655  0000D4  6ED9               	movwf	fsr2l,c
   656  0000D6  0E00               	movlw	high _LookUP_TABLE_COS
   657  0000D8  20F4               	addwfc	prodh,w,c
   658  0000DA  6EDA               	movwf	fsr2h,c
   659  0000DC  50DF               	movf	indf2,w,c
   660  0000DE  6E33               	movwf	??_StateMEF_act& (0+255),c
   661  0000E0  5033               	movf	??_StateMEF_act,w,c
   662  0000E2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   663  0000E4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   664  0000E6  ECDC  F001         	call	_EPWM1_LoadDutyValue	;wreg free
   665                           
   666                           ;MotorDriver.c: 31: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   667  0000EA  503F               	movf	_Microstep,w,c
   668  0000EC  0D01               	mullw	1
   669  0000EE  0E60               	movlw	low _LookUP_TABLE_SEN
   670  0000F0  24F3               	addwf	prodl,w,c
   671  0000F2  6ED9               	movwf	fsr2l,c
   672  0000F4  0E00               	movlw	high _LookUP_TABLE_SEN
   673  0000F6  20F4               	addwfc	prodh,w,c
   674  0000F8  6EDA               	movwf	fsr2h,c
   675  0000FA  50DF               	movf	indf2,w,c
   676  0000FC  6E33               	movwf	??_StateMEF_act& (0+255),c
   677  0000FE  5033               	movf	??_StateMEF_act,w,c
   678  000100  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   679  000102  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   680  000104  ECC4  F001         	call	_EPWM2_LoadDutyValue	;wreg free
   681                           
   682                           ;MotorDriver.c: 32: if (Microstep==7){
   683  000108  0E07               	movlw	7
   684  00010A  183F               	xorwf	_Microstep,w,c
   685  00010C  A4D8               	btfss	status,2,c
   686  00010E  D002               	goto	l1387
   687                           
   688                           ;MotorDriver.c: 33: EstadoActual = STATE2;
   689  000110  0E01               	movlw	1
   690  000112  6E3E               	movwf	_EstadoActual,c
   691  000114                     l1387:
   692                           
   693                           ;MotorDriver.c: 34: }
   694                           ;MotorDriver.c: 35: Microstep++;
   695  000114  2A3F               	incf	_Microstep,f,c
   696                           
   697                           ;MotorDriver.c: 36: }
   698                           ;MotorDriver.c: 37: break;
   699  000116  0012               	return	
   700  000118                     l1389:
   701                           
   702                           ;MotorDriver.c: 39: PSTR1CON = 0x02; PSTR2CON = 0x01;
   703  000118  0E02               	movlw	2
   704  00011A  6EB9               	movwf	4025,c	;volatile
   705  00011C  0E01               	movlw	1
   706  00011E  6E63               	movwf	3939,c	;volatile
   707                           
   708                           ;MotorDriver.c: 40: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
   709  000120  948B               	bcf	3979,2,c	;volatile
   710  000122  908B               	bcf	3979,0,c	;volatile
   711                           
   712                           ;MotorDriver.c: 41: EUSART1_Write(Microstep);
   713  000124  503F               	movf	_Microstep,w,c
   714  000126  ECCD  F002         	call	_EUSART1_Write
   715                           
   716                           ;MotorDriver.c: 42: if ((Microstep<16)&&(Microstep>7)){
   717  00012A  503F               	movf	_Microstep,w,c
   718  00012C  0A80               	xorlw	128
   719  00012E  0F70               	addlw	-144
   720  000130  B0D8               	btfsc	status,0,c
   721  000132  0012               	return	
   722  000134  503F               	movf	_Microstep,w,c
   723  000136  0A80               	xorlw	128
   724  000138  0F78               	addlw	-136
   725  00013A  A0D8               	btfss	status,0,c
   726  00013C  0012               	return	
   727                           
   728                           ;MotorDriver.c: 43: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   729  00013E  503F               	movf	_Microstep,w,c
   730  000140  0D01               	mullw	1
   731  000142  0E01               	movlw	low _LookUP_TABLE_COS
   732  000144  24F3               	addwf	prodl,w,c
   733  000146  6ED9               	movwf	fsr2l,c
   734  000148  0E00               	movlw	high _LookUP_TABLE_COS
   735  00014A  20F4               	addwfc	prodh,w,c
   736  00014C  6EDA               	movwf	fsr2h,c
   737  00014E  50DF               	movf	indf2,w,c
   738  000150  6E33               	movwf	??_StateMEF_act& (0+255),c
   739  000152  5033               	movf	??_StateMEF_act,w,c
   740  000154  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   741  000156  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   742  000158  ECDC  F001         	call	_EPWM1_LoadDutyValue	;wreg free
   743                           
   744                           ;MotorDriver.c: 44: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   745  00015C  503F               	movf	_Microstep,w,c
   746  00015E  0D01               	mullw	1
   747  000160  0E60               	movlw	low _LookUP_TABLE_SEN
   748  000162  24F3               	addwf	prodl,w,c
   749  000164  6ED9               	movwf	fsr2l,c
   750  000166  0E00               	movlw	high _LookUP_TABLE_SEN
   751  000168  20F4               	addwfc	prodh,w,c
   752  00016A  6EDA               	movwf	fsr2h,c
   753  00016C  50DF               	movf	indf2,w,c
   754  00016E  6E33               	movwf	??_StateMEF_act& (0+255),c
   755  000170  5033               	movf	??_StateMEF_act,w,c
   756  000172  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   757  000174  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   758  000176  ECC4  F001         	call	_EPWM2_LoadDutyValue	;wreg free
   759                           
   760                           ;MotorDriver.c: 45: if (Microstep==15){
   761  00017A  0E0F               	movlw	15
   762  00017C  183F               	xorwf	_Microstep,w,c
   763  00017E  A4D8               	btfss	status,2,c
   764  000180  D002               	goto	l1407
   765                           
   766                           ;MotorDriver.c: 46: EstadoActual = STATE3;
   767  000182  0E02               	movlw	2
   768  000184  6E3E               	movwf	_EstadoActual,c
   769  000186                     l1407:
   770                           
   771                           ;MotorDriver.c: 47: }
   772                           ;MotorDriver.c: 48: Microstep++;
   773  000186  2A3F               	incf	_Microstep,f,c
   774                           
   775                           ;MotorDriver.c: 49: }
   776                           ;MotorDriver.c: 50: break;
   777  000188  0012               	return	
   778  00018A                     l1409:
   779                           
   780                           ;MotorDriver.c: 52: PSTR1CON = 0x02; PSTR2CON = 0x02;
   781  00018A  0E02               	movlw	2
   782  00018C  6EB9               	movwf	4025,c	;volatile
   783  00018E  0E02               	movlw	2
   784  000190  6E63               	movwf	3939,c	;volatile
   785                           
   786                           ;MotorDriver.c: 53: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
   787  000192  948B               	bcf	3979,2,c	;volatile
   788  000194  928B               	bcf	3979,1,c	;volatile
   789                           
   790                           ;MotorDriver.c: 54: EUSART1_Write(Microstep);
   791  000196  503F               	movf	_Microstep,w,c
   792  000198  ECCD  F002         	call	_EUSART1_Write
   793                           
   794                           ;MotorDriver.c: 55: if ((Microstep<24)&&(Microstep>15)){
   795  00019C  503F               	movf	_Microstep,w,c
   796  00019E  0A80               	xorlw	128
   797  0001A0  0F68               	addlw	-152
   798  0001A2  B0D8               	btfsc	status,0,c
   799  0001A4  0012               	return	
   800  0001A6  503F               	movf	_Microstep,w,c
   801  0001A8  0A80               	xorlw	128
   802  0001AA  0F70               	addlw	-144
   803  0001AC  A0D8               	btfss	status,0,c
   804  0001AE  0012               	return	
   805                           
   806                           ;MotorDriver.c: 56: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   807  0001B0  503F               	movf	_Microstep,w,c
   808  0001B2  0D01               	mullw	1
   809  0001B4  0E01               	movlw	low _LookUP_TABLE_COS
   810  0001B6  24F3               	addwf	prodl,w,c
   811  0001B8  6ED9               	movwf	fsr2l,c
   812  0001BA  0E00               	movlw	high _LookUP_TABLE_COS
   813  0001BC  20F4               	addwfc	prodh,w,c
   814  0001BE  6EDA               	movwf	fsr2h,c
   815  0001C0  50DF               	movf	indf2,w,c
   816  0001C2  6E33               	movwf	??_StateMEF_act& (0+255),c
   817  0001C4  5033               	movf	??_StateMEF_act,w,c
   818  0001C6  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   819  0001C8  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   820  0001CA  ECDC  F001         	call	_EPWM1_LoadDutyValue	;wreg free
   821                           
   822                           ;MotorDriver.c: 57: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   823  0001CE  503F               	movf	_Microstep,w,c
   824  0001D0  0D01               	mullw	1
   825  0001D2  0E60               	movlw	low _LookUP_TABLE_SEN
   826  0001D4  24F3               	addwf	prodl,w,c
   827  0001D6  6ED9               	movwf	fsr2l,c
   828  0001D8  0E00               	movlw	high _LookUP_TABLE_SEN
   829  0001DA  20F4               	addwfc	prodh,w,c
   830  0001DC  6EDA               	movwf	fsr2h,c
   831  0001DE  50DF               	movf	indf2,w,c
   832  0001E0  6E33               	movwf	??_StateMEF_act& (0+255),c
   833  0001E2  5033               	movf	??_StateMEF_act,w,c
   834  0001E4  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   835  0001E6  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   836  0001E8  ECC4  F001         	call	_EPWM2_LoadDutyValue	;wreg free
   837                           
   838                           ;MotorDriver.c: 58: if (Microstep==23){
   839  0001EC  0E17               	movlw	23
   840  0001EE  183F               	xorwf	_Microstep,w,c
   841  0001F0  A4D8               	btfss	status,2,c
   842  0001F2  D002               	goto	l1427
   843                           
   844                           ;MotorDriver.c: 59: EstadoActual = STATE4;
   845  0001F4  0E03               	movlw	3
   846  0001F6  6E3E               	movwf	_EstadoActual,c
   847  0001F8                     l1427:
   848                           
   849                           ;MotorDriver.c: 60: }
   850                           ;MotorDriver.c: 61: Microstep++;
   851  0001F8  2A3F               	incf	_Microstep,f,c
   852                           
   853                           ;MotorDriver.c: 62: }
   854                           ;MotorDriver.c: 63: break;
   855  0001FA  0012               	return	
   856  0001FC                     l1429:
   857                           
   858                           ;MotorDriver.c: 65: PSTR1CON = 0x01; PSTR2CON = 0x02;
   859  0001FC  0E01               	movlw	1
   860  0001FE  6EB9               	movwf	4025,c	;volatile
   861  000200  0E02               	movlw	2
   862  000202  6E63               	movwf	3939,c	;volatile
   863                           
   864                           ;MotorDriver.c: 66: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
   865  000204  9A8C               	bcf	3980,5,c	;volatile
   866  000206  928B               	bcf	3979,1,c	;volatile
   867                           
   868                           ;MotorDriver.c: 67: EUSART1_Write(Microstep);
   869  000208  503F               	movf	_Microstep,w,c
   870  00020A  ECCD  F002         	call	_EUSART1_Write
   871                           
   872                           ;MotorDriver.c: 68: if ((Microstep<32)&&(Microstep>23)){
   873  00020E  503F               	movf	_Microstep,w,c
   874  000210  0A80               	xorlw	128
   875  000212  0F60               	addlw	-160
   876  000214  B0D8               	btfsc	status,0,c
   877  000216  0012               	return	
   878  000218  503F               	movf	_Microstep,w,c
   879  00021A  0A80               	xorlw	128
   880  00021C  0F68               	addlw	-152
   881  00021E  A0D8               	btfss	status,0,c
   882  000220  0012               	return	
   883                           
   884                           ;MotorDriver.c: 69: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   885  000222  503F               	movf	_Microstep,w,c
   886  000224  0D01               	mullw	1
   887  000226  0E01               	movlw	low _LookUP_TABLE_COS
   888  000228  24F3               	addwf	prodl,w,c
   889  00022A  6ED9               	movwf	fsr2l,c
   890  00022C  0E00               	movlw	high _LookUP_TABLE_COS
   891  00022E  20F4               	addwfc	prodh,w,c
   892  000230  6EDA               	movwf	fsr2h,c
   893  000232  50DF               	movf	indf2,w,c
   894  000234  6E33               	movwf	??_StateMEF_act& (0+255),c
   895  000236  5033               	movf	??_StateMEF_act,w,c
   896  000238  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   897  00023A  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   898  00023C  ECDC  F001         	call	_EPWM1_LoadDutyValue	;wreg free
   899                           
   900                           ;MotorDriver.c: 70: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   901  000240  503F               	movf	_Microstep,w,c
   902  000242  0D01               	mullw	1
   903  000244  0E60               	movlw	low _LookUP_TABLE_SEN
   904  000246  24F3               	addwf	prodl,w,c
   905  000248  6ED9               	movwf	fsr2l,c
   906  00024A  0E00               	movlw	high _LookUP_TABLE_SEN
   907  00024C  20F4               	addwfc	prodh,w,c
   908  00024E  6EDA               	movwf	fsr2h,c
   909  000250  50DF               	movf	indf2,w,c
   910  000252  6E33               	movwf	??_StateMEF_act& (0+255),c
   911  000254  5033               	movf	??_StateMEF_act,w,c
   912  000256  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   913  000258  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   914  00025A  ECC4  F001         	call	_EPWM2_LoadDutyValue	;wreg free
   915                           
   916                           ;MotorDriver.c: 71: if (Microstep==31){
   917  00025E  0E1F               	movlw	31
   918  000260  183F               	xorwf	_Microstep,w,c
   919  000262  A4D8               	btfss	status,2,c
   920  000264  D003               	goto	l1449
   921                           
   922                           ;MotorDriver.c: 72: EstadoActual = STATE1;
   923  000266  0E00               	movlw	0
   924  000268  6E3E               	movwf	_EstadoActual,c
   925                           
   926                           ;MotorDriver.c: 73: Microstep=-1;
   927  00026A  683F               	setf	_Microstep,c
   928  00026C                     l1449:
   929                           
   930                           ;MotorDriver.c: 74: }
   931                           ;MotorDriver.c: 75: Microstep++;
   932  00026C  2A3F               	incf	_Microstep,f,c
   933                           
   934                           ;MotorDriver.c: 81: }
   935                           
   936                           ;MotorDriver.c: 80: break;
   937                           
   938                           ;MotorDriver.c: 78: default:
   939                           
   940                           ;MotorDriver.c: 76: }
   941                           ;MotorDriver.c: 77: break;
   942  00026E  0012               	return	
   943  000270                     l1453:
   944  000270  503E               	movf	_EstadoActual,w,c
   945                           
   946                           ; Switch size 1, requested type "space"
   947                           ; Number of cases is 4, Range of values is 0 to 3
   948                           ; switch strategies available:
   949                           ; Name         Instructions Cycles
   950                           ; simple_byte           13     7 (average)
   951                           ;	Chosen strategy is simple_byte
   952  000272  0A00               	xorlw	0	; case 0
   953  000274  B4D8               	btfsc	status,2,c
   954  000276  D71C               	goto	l1371
   955  000278  0A01               	xorlw	1	; case 1
   956  00027A  B4D8               	btfsc	status,2,c
   957  00027C  D74D               	goto	l1389
   958  00027E  0A03               	xorlw	3	; case 2
   959  000280  B4D8               	btfsc	status,2,c
   960  000282  D783               	goto	l1409
   961  000284  0A01               	xorlw	1	; case 3
   962  000286  A4D8               	btfss	status,2,c
   963  000288  0012               	return	
   964  00028A  D7B8               	goto	l1429
   965  00028C                     __end_of_StateMEF_act:
   966                           	opt stack 0
   967                           tblptru	equ	0xFF8
   968                           tblptrh	equ	0xFF7
   969                           tblptrl	equ	0xFF6
   970                           tablat	equ	0xFF5
   971                           prodh	equ	0xFF4
   972                           prodl	equ	0xFF3
   973                           intcon	equ	0xFF2
   974                           postinc0	equ	0xFEE
   975                           postdec1	equ	0xFE5
   976                           fsr1l	equ	0xFE1
   977                           indf2	equ	0xFDF
   978                           fsr2h	equ	0xFDA
   979                           fsr2l	equ	0xFD9
   980                           status	equ	0xFD8
   981                           
   982 ;; *************** function _EUSART1_Write *****************
   983 ;; Defined at:
   984 ;;		line 96 in file "mcc_generated_files/eusart1.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  txData          1    wreg     unsigned char 
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  txData          1   14[COMRAM] unsigned char 
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;Total ram usage:        1 bytes
  1003 ;; Hardware stack levels used:    1
  1004 ;; Hardware stack levels required when called:    4
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_StateMEF_act
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text3
  1013  00059A                     __ptext3:
  1014                           	opt stack 0
  1015  00059A                     _EUSART1_Write:
  1016                           	opt stack 25
  1017                           
  1018                           ;incstack = 0
  1019                           ;EUSART1_Write@txData stored from wreg
  1020  00059A  6E2F               	movwf	EUSART1_Write@txData,c
  1021  00059C                     l328:
  1022  00059C  A89E               	btfss	3998,4,c	;volatile
  1023  00059E  D7FE               	goto	l328
  1024                           
  1025                           ;eusart1.c: 100: }
  1026                           ;eusart1.c: 102: TXREG1 = txData;
  1027  0005A0  C02F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1028  0005A4  0012               	return		;funcret
  1029  0005A6                     __end_of_EUSART1_Write:
  1030                           	opt stack 0
  1031                           tblptru	equ	0xFF8
  1032                           tblptrh	equ	0xFF7
  1033                           tblptrl	equ	0xFF6
  1034                           tablat	equ	0xFF5
  1035                           prodh	equ	0xFF4
  1036                           prodl	equ	0xFF3
  1037                           intcon	equ	0xFF2
  1038                           postinc0	equ	0xFEE
  1039                           postdec1	equ	0xFE5
  1040                           fsr1l	equ	0xFE1
  1041                           indf2	equ	0xFDF
  1042                           fsr2h	equ	0xFDA
  1043                           fsr2l	equ	0xFD9
  1044                           status	equ	0xFD8
  1045                           
  1046 ;; *************** function _EPWM2_LoadDutyValue *****************
  1047 ;; Defined at:
  1048 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;Total ram usage:        4 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    4
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_StateMEF_act
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text4
  1077  000388                     __ptext4:
  1078                           	opt stack 0
  1079  000388                     _EPWM2_LoadDutyValue:
  1080                           	opt stack 25
  1081                           
  1082                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  1083                           
  1084                           ;incstack = 0
  1085  000388  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1086  00038C  C030  F032         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  1087  000390  90D8               	bcf	status,0,c
  1088  000392  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1089  000394  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1090  000396  90D8               	bcf	status,0,c
  1091  000398  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1092  00039A  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1093  00039C  5031               	movf	??_EPWM2_LoadDutyValue,w,c
  1094  00039E  6E67               	movwf	3943,c	;volatile
  1095                           
  1096                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1097  0003A0  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1098  0003A4  0E03               	movlw	3
  1099  0003A6  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  1100  0003A8  3A31               	swapf	??_EPWM2_LoadDutyValue,f,c
  1101  0003AA  0EF0               	movlw	240
  1102  0003AC  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  1103  0003AE  5066               	movf	3942,w,c	;volatile
  1104  0003B0  0BCF               	andlw	207
  1105  0003B2  1031               	iorwf	??_EPWM2_LoadDutyValue,w,c
  1106  0003B4  6E66               	movwf	3942,c	;volatile
  1107  0003B6  0012               	return		;funcret
  1108  0003B8                     __end_of_EPWM2_LoadDutyValue:
  1109                           	opt stack 0
  1110                           tblptru	equ	0xFF8
  1111                           tblptrh	equ	0xFF7
  1112                           tblptrl	equ	0xFF6
  1113                           tablat	equ	0xFF5
  1114                           prodh	equ	0xFF4
  1115                           prodl	equ	0xFF3
  1116                           intcon	equ	0xFF2
  1117                           postinc0	equ	0xFEE
  1118                           postdec1	equ	0xFE5
  1119                           fsr1l	equ	0xFE1
  1120                           indf2	equ	0xFDF
  1121                           fsr2h	equ	0xFDA
  1122                           fsr2l	equ	0xFD9
  1123                           status	equ	0xFD8
  1124                           
  1125 ;; *************** function _EPWM1_LoadDutyValue *****************
  1126 ;; Defined at:
  1127 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2, status,0
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;Total ram usage:        4 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; Hardware stack levels required when called:    4
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_StateMEF_act
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text5
  1156  0003B8                     __ptext5:
  1157                           	opt stack 0
  1158  0003B8                     _EPWM1_LoadDutyValue:
  1159                           	opt stack 25
  1160                           
  1161                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  1162                           
  1163                           ;incstack = 0
  1164  0003B8  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1165  0003BC  C030  F032         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  1166  0003C0  90D8               	bcf	status,0,c
  1167  0003C2  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1168  0003C4  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1169  0003C6  90D8               	bcf	status,0,c
  1170  0003C8  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1171  0003CA  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1172  0003CC  5031               	movf	??_EPWM1_LoadDutyValue,w,c
  1173  0003CE  6EBE               	movwf	4030,c	;volatile
  1174                           
  1175                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1176  0003D0  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1177  0003D4  0E03               	movlw	3
  1178  0003D6  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  1179  0003D8  3A31               	swapf	??_EPWM1_LoadDutyValue,f,c
  1180  0003DA  0EF0               	movlw	240
  1181  0003DC  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  1182  0003DE  50BD               	movf	4029,w,c	;volatile
  1183  0003E0  0BCF               	andlw	207
  1184  0003E2  1031               	iorwf	??_EPWM1_LoadDutyValue,w,c
  1185  0003E4  6EBD               	movwf	4029,c	;volatile
  1186  0003E6  0012               	return		;funcret
  1187  0003E8                     __end_of_EPWM1_LoadDutyValue:
  1188                           	opt stack 0
  1189                           tblptru	equ	0xFF8
  1190                           tblptrh	equ	0xFF7
  1191                           tblptrl	equ	0xFF6
  1192                           tablat	equ	0xFF5
  1193                           prodh	equ	0xFF4
  1194                           prodl	equ	0xFF3
  1195                           intcon	equ	0xFF2
  1196                           postinc0	equ	0xFEE
  1197                           postdec1	equ	0xFE5
  1198                           fsr1l	equ	0xFE1
  1199                           indf2	equ	0xFDF
  1200                           fsr2h	equ	0xFDA
  1201                           fsr2l	equ	0xFD9
  1202                           status	equ	0xFD8
  1203                           
  1204 ;; *************** function _SYSTEM_Initialize *****************
  1205 ;; Defined at:
  1206 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;Total ram usage:        0 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    6
  1227 ;; This function calls:
  1228 ;;		_ADC_Initialize
  1229 ;;		_CCP5_Initialize
  1230 ;;		_EPWM1_Initialize
  1231 ;;		_EPWM2_Initialize
  1232 ;;		_EUSART1_Initialize
  1233 ;;		_INTERRUPT_Initialize
  1234 ;;		_OSCILLATOR_Initialize
  1235 ;;		_PIN_MANAGER_Initialize
  1236 ;;		_TMR2_Initialize
  1237 ;;		_TMR6_Initialize
  1238 ;; This function is called by:
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text6
  1244  0003E8                     __ptext6:
  1245                           	opt stack 0
  1246  0003E8                     _SYSTEM_Initialize:
  1247                           	opt stack 24
  1248                           
  1249                           ;mcc.c: 114: INTERRUPT_Initialize();
  1250                           
  1251                           ;incstack = 0
  1252  0003E8  ECE7  F002         	call	_INTERRUPT_Initialize	;wreg free
  1253                           
  1254                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1255  0003EC  EC9E  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1256                           
  1257                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1258  0003F0  ECC6  F002         	call	_OSCILLATOR_Initialize	;wreg free
  1259                           
  1260                           ;mcc.c: 117: TMR6_Initialize();
  1261  0003F4  EC09  F002         	call	_TMR6_Initialize	;wreg free
  1262                           
  1263                           ;mcc.c: 118: EPWM2_Initialize();
  1264  0003F8  EC1D  F002         	call	_EPWM2_Initialize	;wreg free
  1265                           
  1266                           ;mcc.c: 119: CCP5_Initialize();
  1267  0003FC  ECBC  F002         	call	_CCP5_Initialize	;wreg free
  1268                           
  1269                           ;mcc.c: 120: ADC_Initialize();
  1270  000400  ECA5  F002         	call	_ADC_Initialize	;wreg free
  1271                           
  1272                           ;mcc.c: 121: EPWM1_Initialize();
  1273  000404  EC2F  F002         	call	_EPWM1_Initialize	;wreg free
  1274                           
  1275                           ;mcc.c: 122: TMR2_Initialize();
  1276  000408  EC53  F002         	call	_TMR2_Initialize	;wreg free
  1277                           
  1278                           ;mcc.c: 123: EUSART1_Initialize();
  1279  00040C  ECB1  F002         	call	_EUSART1_Initialize	;wreg free
  1280  000410  0012               	return		;funcret
  1281  000412                     __end_of_SYSTEM_Initialize:
  1282                           	opt stack 0
  1283                           tblptru	equ	0xFF8
  1284                           tblptrh	equ	0xFF7
  1285                           tblptrl	equ	0xFF6
  1286                           tablat	equ	0xFF5
  1287                           prodh	equ	0xFF4
  1288                           prodl	equ	0xFF3
  1289                           intcon	equ	0xFF2
  1290                           postinc0	equ	0xFEE
  1291                           postdec1	equ	0xFE5
  1292                           fsr1l	equ	0xFE1
  1293                           indf2	equ	0xFDF
  1294                           fsr2h	equ	0xFDA
  1295                           fsr2l	equ	0xFD9
  1296                           status	equ	0xFD8
  1297                           
  1298 ;; *************** function _TMR6_Initialize *****************
  1299 ;; Defined at:
  1300 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;		None
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;		None
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;Total ram usage:        0 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    5
  1321 ;; This function calls:
  1322 ;;		_TMR6_SetInterruptHandler
  1323 ;;		_TMR6_StartTimer
  1324 ;; This function is called by:
  1325 ;;		_SYSTEM_Initialize
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text7
  1330  000412                     __ptext7:
  1331                           	opt stack 0
  1332  000412                     _TMR6_Initialize:
  1333                           	opt stack 24
  1334                           
  1335                           ;tmr6.c: 68: T6CON = 0x01;
  1336                           
  1337                           ;incstack = 0
  1338  000412  0E01               	movlw	1
  1339  000414  010F               	movlb	15	; () banked
  1340  000416  6F4A               	movwf	74,b	;volatile
  1341                           
  1342                           ;tmr6.c: 71: PR6 = 0x3C;
  1343  000418  0E3C               	movlw	60
  1344  00041A  010F               	movlb	15	; () banked
  1345  00041C  6F4B               	movwf	75,b	;volatile
  1346                           
  1347                           ;tmr6.c: 74: TMR6 = 0x00;
  1348  00041E  0E00               	movlw	0
  1349  000420  010F               	movlb	15	; () banked
  1350  000422  6F4C               	movwf	76,b	;volatile
  1351                           
  1352                           ; BSR set to: 15
  1353                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
  1354  000424  947E               	bcf	3966,2,c	;volatile
  1355                           
  1356                           ; BSR set to: 15
  1357                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
  1358  000426  847D               	bsf	3965,2,c	;volatile
  1359                           
  1360                           ; BSR set to: 15
  1361                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  1362  000428  0ED6               	movlw	low _TMR6_DefaultInterruptHandler
  1363  00042A  6E2F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  1364  00042C  0E05               	movlw	high _TMR6_DefaultInterruptHandler
  1365  00042E  6E30               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  1366  000430  ECD8  F002         	call	_TMR6_SetInterruptHandler	;wreg free
  1367                           
  1368                           ;tmr6.c: 86: TMR6_StartTimer();
  1369  000434  ECE2  F002         	call	_TMR6_StartTimer	;wreg free
  1370  000438  0012               	return		;funcret
  1371  00043A                     __end_of_TMR6_Initialize:
  1372                           	opt stack 0
  1373                           tblptru	equ	0xFF8
  1374                           tblptrh	equ	0xFF7
  1375                           tblptrl	equ	0xFF6
  1376                           tablat	equ	0xFF5
  1377                           prodh	equ	0xFF4
  1378                           prodl	equ	0xFF3
  1379                           intcon	equ	0xFF2
  1380                           postinc0	equ	0xFEE
  1381                           postdec1	equ	0xFE5
  1382                           fsr1l	equ	0xFE1
  1383                           indf2	equ	0xFDF
  1384                           fsr2h	equ	0xFDA
  1385                           fsr2l	equ	0xFD9
  1386                           status	equ	0xFD8
  1387                           
  1388 ;; *************** function _TMR6_StartTimer *****************
  1389 ;; Defined at:
  1390 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		None
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;Total ram usage:        0 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; Hardware stack levels required when called:    4
  1411 ;; This function calls:
  1412 ;;		Nothing
  1413 ;; This function is called by:
  1414 ;;		_TMR6_Initialize
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text8
  1419  0005C4                     __ptext8:
  1420                           	opt stack 0
  1421  0005C4                     _TMR6_StartTimer:
  1422                           	opt stack 24
  1423                           
  1424                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  1425                           
  1426                           ;incstack = 0
  1427  0005C4  010F               	movlb	15	; () banked
  1428  0005C6  854A               	bsf	74,2,b	;volatile
  1429                           
  1430                           ; BSR set to: 15
  1431  0005C8  0012               	return		;funcret
  1432  0005CA                     __end_of_TMR6_StartTimer:
  1433                           	opt stack 0
  1434                           tblptru	equ	0xFF8
  1435                           tblptrh	equ	0xFF7
  1436                           tblptrl	equ	0xFF6
  1437                           tablat	equ	0xFF5
  1438                           prodh	equ	0xFF4
  1439                           prodl	equ	0xFF3
  1440                           intcon	equ	0xFF2
  1441                           postinc0	equ	0xFEE
  1442                           postdec1	equ	0xFE5
  1443                           fsr1l	equ	0xFE1
  1444                           indf2	equ	0xFDF
  1445                           fsr2h	equ	0xFDA
  1446                           fsr2l	equ	0xFD9
  1447                           status	equ	0xFD8
  1448                           
  1449 ;; *************** function _TMR6_SetInterruptHandler *****************
  1450 ;; Defined at:
  1451 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1454 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;Total ram usage:        2 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    4
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_TMR6_Initialize
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text9
  1481  0005B0                     __ptext9:
  1482                           	opt stack 0
  1483  0005B0                     _TMR6_SetInterruptHandler:
  1484                           	opt stack 24
  1485                           
  1486                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  1487                           
  1488                           ; BSR set to: 15
  1489                           ;incstack = 0
  1490  0005B0  C02F  F03A         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  1491  0005B4  C030  F03B         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  1492  0005B8  0012               	return		;funcret
  1493  0005BA                     __end_of_TMR6_SetInterruptHandler:
  1494                           	opt stack 0
  1495                           tblptru	equ	0xFF8
  1496                           tblptrh	equ	0xFF7
  1497                           tblptrl	equ	0xFF6
  1498                           tablat	equ	0xFF5
  1499                           prodh	equ	0xFF4
  1500                           prodl	equ	0xFF3
  1501                           intcon	equ	0xFF2
  1502                           postinc0	equ	0xFEE
  1503                           postdec1	equ	0xFE5
  1504                           fsr1l	equ	0xFE1
  1505                           indf2	equ	0xFDF
  1506                           fsr2h	equ	0xFDA
  1507                           fsr2l	equ	0xFD9
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function _TMR2_Initialize *****************
  1511 ;; Defined at:
  1512 ;;		line 18 in file "mcc_generated_files/tmr2.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    5
  1533 ;; This function calls:
  1534 ;;		_TMR2_SetInterruptHandler
  1535 ;;		_TMR2_StartTimer
  1536 ;; This function is called by:
  1537 ;;		_SYSTEM_Initialize
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text10
  1542  0004A6                     __ptext10:
  1543                           	opt stack 0
  1544  0004A6                     _TMR2_Initialize:
  1545                           	opt stack 24
  1546                           
  1547                           ;tmr2.c: 23: T2CON = 0x02;
  1548                           
  1549                           ;incstack = 0
  1550  0004A6  0E02               	movlw	2
  1551  0004A8  6EBA               	movwf	4026,c	;volatile
  1552                           
  1553                           ;tmr2.c: 26: PR2 = 0x12;
  1554  0004AA  0E12               	movlw	18
  1555  0004AC  6EBB               	movwf	4027,c	;volatile
  1556                           
  1557                           ;tmr2.c: 29: TMR2 = 0x00;
  1558  0004AE  0E00               	movlw	0
  1559  0004B0  6EBC               	movwf	4028,c	;volatile
  1560                           
  1561                           ;tmr2.c: 32: PIR1bits.TMR2IF = 0;
  1562  0004B2  929E               	bcf	3998,1,c	;volatile
  1563                           
  1564                           ;tmr2.c: 35: PIE1bits.TMR2IE = 1;
  1565  0004B4  829D               	bsf	3997,1,c	;volatile
  1566                           
  1567                           ;tmr2.c: 38: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  1568  0004B6  0ED8               	movlw	low _TMR2_DefaultInterruptHandler
  1569  0004B8  6E2F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  1570  0004BA  0E05               	movlw	high _TMR2_DefaultInterruptHandler
  1571  0004BC  6E30               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  1572  0004BE  ECDD  F002         	call	_TMR2_SetInterruptHandler	;wreg free
  1573                           
  1574                           ;tmr2.c: 41: TMR2_StartTimer();
  1575  0004C2  ECE5  F002         	call	_TMR2_StartTimer	;wreg free
  1576  0004C6  0012               	return		;funcret
  1577  0004C8                     __end_of_TMR2_Initialize:
  1578                           	opt stack 0
  1579                           tblptru	equ	0xFF8
  1580                           tblptrh	equ	0xFF7
  1581                           tblptrl	equ	0xFF6
  1582                           tablat	equ	0xFF5
  1583                           prodh	equ	0xFF4
  1584                           prodl	equ	0xFF3
  1585                           intcon	equ	0xFF2
  1586                           postinc0	equ	0xFEE
  1587                           postdec1	equ	0xFE5
  1588                           fsr1l	equ	0xFE1
  1589                           indf2	equ	0xFDF
  1590                           fsr2h	equ	0xFDA
  1591                           fsr2l	equ	0xFD9
  1592                           status	equ	0xFD8
  1593                           
  1594 ;; *************** function _TMR2_StartTimer *****************
  1595 ;; Defined at:
  1596 ;;		line 44 in file "mcc_generated_files/tmr2.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		None
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    4
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_TMR2_Initialize
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text11
  1625  0005CA                     __ptext11:
  1626                           	opt stack 0
  1627  0005CA                     _TMR2_StartTimer:
  1628                           	opt stack 24
  1629                           
  1630                           ;tmr2.c: 47: T2CONbits.TMR2ON = 1;
  1631                           
  1632                           ;incstack = 0
  1633  0005CA  84BA               	bsf	4026,2,c	;volatile
  1634  0005CC  0012               	return		;funcret
  1635  0005CE                     __end_of_TMR2_StartTimer:
  1636                           	opt stack 0
  1637                           tblptru	equ	0xFF8
  1638                           tblptrh	equ	0xFF7
  1639                           tblptrl	equ	0xFF6
  1640                           tablat	equ	0xFF5
  1641                           prodh	equ	0xFF4
  1642                           prodl	equ	0xFF3
  1643                           intcon	equ	0xFF2
  1644                           postinc0	equ	0xFEE
  1645                           postdec1	equ	0xFE5
  1646                           fsr1l	equ	0xFE1
  1647                           indf2	equ	0xFDF
  1648                           fsr2h	equ	0xFDA
  1649                           fsr2l	equ	0xFD9
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function _TMR2_SetInterruptHandler *****************
  1653 ;; Defined at:
  1654 ;;		line 105 in file "mcc_generated_files/tmr2.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1657 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;Total ram usage:        2 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    4
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_TMR2_Initialize
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text12
  1684  0005BA                     __ptext12:
  1685                           	opt stack 0
  1686  0005BA                     _TMR2_SetInterruptHandler:
  1687                           	opt stack 24
  1688                           
  1689                           ;tmr2.c: 106: TMR2_InterruptHandler = InterruptHandler;
  1690                           
  1691                           ;incstack = 0
  1692  0005BA  C02F  F038         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1693  0005BE  C030  F039         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1694  0005C2  0012               	return		;funcret
  1695  0005C4                     __end_of_TMR2_SetInterruptHandler:
  1696                           	opt stack 0
  1697                           tblptru	equ	0xFF8
  1698                           tblptrh	equ	0xFF7
  1699                           tblptrl	equ	0xFF6
  1700                           tablat	equ	0xFF5
  1701                           prodh	equ	0xFF4
  1702                           prodl	equ	0xFF3
  1703                           intcon	equ	0xFF2
  1704                           postinc0	equ	0xFEE
  1705                           postdec1	equ	0xFE5
  1706                           fsr1l	equ	0xFE1
  1707                           indf2	equ	0xFDF
  1708                           fsr2h	equ	0xFDA
  1709                           fsr2l	equ	0xFD9
  1710                           status	equ	0xFD8
  1711                           
  1712 ;; *************** function _PIN_MANAGER_Initialize *****************
  1713 ;; Defined at:
  1714 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    4
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_SYSTEM_Initialize
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text13
  1743  00033C                     __ptext13:
  1744                           	opt stack 0
  1745  00033C                     _PIN_MANAGER_Initialize:
  1746                           	opt stack 25
  1747                           
  1748                           ;pin_manager.c: 56: LATE = 0x00;
  1749                           
  1750                           ;incstack = 0
  1751  00033C  0E00               	movlw	0
  1752  00033E  6E8D               	movwf	3981,c	;volatile
  1753                           
  1754                           ;pin_manager.c: 57: LATD = 0x00;
  1755  000340  0E00               	movlw	0
  1756  000342  6E8C               	movwf	3980,c	;volatile
  1757                           
  1758                           ;pin_manager.c: 58: LATA = 0x00;
  1759  000344  0E00               	movlw	0
  1760  000346  6E89               	movwf	3977,c	;volatile
  1761                           
  1762                           ;pin_manager.c: 59: LATB = 0x00;
  1763  000348  0E00               	movlw	0
  1764  00034A  6E8A               	movwf	3978,c	;volatile
  1765                           
  1766                           ;pin_manager.c: 60: LATC = 0x00;
  1767  00034C  0E00               	movlw	0
  1768  00034E  6E8B               	movwf	3979,c	;volatile
  1769                           
  1770                           ;pin_manager.c: 65: TRISE = 0x07;
  1771  000350  0E07               	movlw	7
  1772  000352  6E96               	movwf	3990,c	;volatile
  1773                           
  1774                           ;pin_manager.c: 66: TRISA = 0xEB;
  1775  000354  0EEB               	movlw	235
  1776  000356  6E92               	movwf	3986,c	;volatile
  1777                           
  1778                           ;pin_manager.c: 67: TRISB = 0xBF;
  1779  000358  0EBF               	movlw	191
  1780  00035A  6E93               	movwf	3987,c	;volatile
  1781                           
  1782                           ;pin_manager.c: 68: TRISC = 0xB8;
  1783  00035C  0EB8               	movlw	184
  1784  00035E  6E94               	movwf	3988,c	;volatile
  1785                           
  1786                           ;pin_manager.c: 69: TRISD = 0xDF;
  1787  000360  0EDF               	movlw	223
  1788  000362  6E95               	movwf	3989,c	;volatile
  1789                           
  1790                           ;pin_manager.c: 74: ANSELC = 0x38;
  1791  000364  0E38               	movlw	56
  1792  000366  010F               	movlb	15	; () banked
  1793  000368  6F3A               	movwf	58,b	;volatile
  1794                           
  1795                           ;pin_manager.c: 75: ANSELB = 0x3E;
  1796  00036A  0E3E               	movlw	62
  1797  00036C  010F               	movlb	15	; () banked
  1798  00036E  6F39               	movwf	57,b	;volatile
  1799                           
  1800                           ;pin_manager.c: 76: ANSELD = 0xDF;
  1801  000370  0EDF               	movlw	223
  1802  000372  010F               	movlb	15	; () banked
  1803  000374  6F3B               	movwf	59,b	;volatile
  1804                           
  1805                           ;pin_manager.c: 77: ANSELE = 0x03;
  1806  000376  0E03               	movlw	3
  1807  000378  010F               	movlb	15	; () banked
  1808  00037A  6F3C               	movwf	60,b	;volatile
  1809                           
  1810                           ;pin_manager.c: 78: ANSELA = 0x2B;
  1811  00037C  0E2B               	movlw	43
  1812  00037E  010F               	movlb	15	; () banked
  1813  000380  6F38               	movwf	56,b	;volatile
  1814                           
  1815                           ; BSR set to: 15
  1816                           ;pin_manager.c: 83: WPUB = 0xFF;
  1817  000382  6861               	setf	3937,c	;volatile
  1818                           
  1819                           ; BSR set to: 15
  1820                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1821  000384  9EF1               	bcf	intcon2,7,c	;volatile
  1822                           
  1823                           ; BSR set to: 15
  1824  000386  0012               	return		;funcret
  1825  000388                     __end_of_PIN_MANAGER_Initialize:
  1826                           	opt stack 0
  1827                           tblptru	equ	0xFF8
  1828                           tblptrh	equ	0xFF7
  1829                           tblptrl	equ	0xFF6
  1830                           tablat	equ	0xFF5
  1831                           prodh	equ	0xFF4
  1832                           prodl	equ	0xFF3
  1833                           intcon	equ	0xFF2
  1834                           intcon2	equ	0xFF1
  1835                           postinc0	equ	0xFEE
  1836                           postdec1	equ	0xFE5
  1837                           fsr1l	equ	0xFE1
  1838                           indf2	equ	0xFDF
  1839                           fsr2h	equ	0xFDA
  1840                           fsr2l	equ	0xFD9
  1841                           status	equ	0xFD8
  1842                           
  1843 ;; *************** function _OSCILLATOR_Initialize *****************
  1844 ;; Defined at:
  1845 ;;		line 126 in file "mcc_generated_files/mcc.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;Total ram usage:        0 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    4
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_SYSTEM_Initialize
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text14
  1874  00058C                     __ptext14:
  1875                           	opt stack 0
  1876  00058C                     _OSCILLATOR_Initialize:
  1877                           	opt stack 25
  1878                           
  1879                           ;mcc.c: 129: OSCCON = 0x70;
  1880                           
  1881                           ; BSR set to: 15
  1882                           ;incstack = 0
  1883  00058C  0E70               	movlw	112
  1884  00058E  6ED3               	movwf	4051,c	;volatile
  1885                           
  1886                           ;mcc.c: 131: OSCCON2 = 0x04;
  1887  000590  0E04               	movlw	4
  1888  000592  6ED2               	movwf	4050,c	;volatile
  1889                           
  1890                           ;mcc.c: 133: OSCTUNE = 0x00;
  1891  000594  0E00               	movlw	0
  1892  000596  6E9B               	movwf	3995,c	;volatile
  1893  000598  0012               	return		;funcret
  1894  00059A                     __end_of_OSCILLATOR_Initialize:
  1895                           	opt stack 0
  1896                           tblptru	equ	0xFF8
  1897                           tblptrh	equ	0xFF7
  1898                           tblptrl	equ	0xFF6
  1899                           tablat	equ	0xFF5
  1900                           prodh	equ	0xFF4
  1901                           prodl	equ	0xFF3
  1902                           intcon	equ	0xFF2
  1903                           intcon2	equ	0xFF1
  1904                           postinc0	equ	0xFEE
  1905                           postdec1	equ	0xFE5
  1906                           fsr1l	equ	0xFE1
  1907                           indf2	equ	0xFDF
  1908                           fsr2h	equ	0xFDA
  1909                           fsr2l	equ	0xFD9
  1910                           status	equ	0xFD8
  1911                           
  1912 ;; *************** function _INTERRUPT_Initialize *****************
  1913 ;; Defined at:
  1914 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		None
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;Total ram usage:        0 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    4
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_SYSTEM_Initialize
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text15
  1943  0005CE                     __ptext15:
  1944                           	opt stack 0
  1945  0005CE                     _INTERRUPT_Initialize:
  1946                           	opt stack 25
  1947                           
  1948                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1949                           
  1950                           ;incstack = 0
  1951  0005CE  9ED0               	bcf	4048,7,c	;volatile
  1952  0005D0  0012               	return		;funcret
  1953  0005D2                     __end_of_INTERRUPT_Initialize:
  1954                           	opt stack 0
  1955                           tblptru	equ	0xFF8
  1956                           tblptrh	equ	0xFF7
  1957                           tblptrl	equ	0xFF6
  1958                           tablat	equ	0xFF5
  1959                           prodh	equ	0xFF4
  1960                           prodl	equ	0xFF3
  1961                           intcon	equ	0xFF2
  1962                           intcon2	equ	0xFF1
  1963                           postinc0	equ	0xFEE
  1964                           postdec1	equ	0xFE5
  1965                           fsr1l	equ	0xFE1
  1966                           indf2	equ	0xFDF
  1967                           fsr2h	equ	0xFDA
  1968                           fsr2l	equ	0xFD9
  1969                           status	equ	0xFD8
  1970                           
  1971 ;; *************** function _EUSART1_Initialize *****************
  1972 ;; Defined at:
  1973 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;Total ram usage:        0 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    4
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_SYSTEM_Initialize
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text16
  2002  000562                     __ptext16:
  2003                           	opt stack 0
  2004  000562                     _EUSART1_Initialize:
  2005                           	opt stack 25
  2006                           
  2007                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  2008                           
  2009                           ;incstack = 0
  2010  000562  0E08               	movlw	8
  2011  000564  6EB8               	movwf	4024,c	;volatile
  2012                           
  2013                           ;eusart1.c: 63: RCSTA1 = 0x90;
  2014  000566  0E90               	movlw	144
  2015  000568  6EAB               	movwf	4011,c	;volatile
  2016                           
  2017                           ;eusart1.c: 66: TXSTA1 = 0x24;
  2018  00056A  0E24               	movlw	36
  2019  00056C  6EAC               	movwf	4012,c	;volatile
  2020                           
  2021                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  2022  00056E  0EA0               	movlw	160
  2023  000570  6EAF               	movwf	4015,c	;volatile
  2024                           
  2025                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  2026  000572  0E01               	movlw	1
  2027  000574  6EB0               	movwf	4016,c	;volatile
  2028  000576  0012               	return		;funcret
  2029  000578                     __end_of_EUSART1_Initialize:
  2030                           	opt stack 0
  2031                           tblptru	equ	0xFF8
  2032                           tblptrh	equ	0xFF7
  2033                           tblptrl	equ	0xFF6
  2034                           tablat	equ	0xFF5
  2035                           prodh	equ	0xFF4
  2036                           prodl	equ	0xFF3
  2037                           intcon	equ	0xFF2
  2038                           intcon2	equ	0xFF1
  2039                           postinc0	equ	0xFEE
  2040                           postdec1	equ	0xFE5
  2041                           fsr1l	equ	0xFE1
  2042                           indf2	equ	0xFDF
  2043                           fsr2h	equ	0xFDA
  2044                           fsr2l	equ	0xFD9
  2045                           status	equ	0xFD8
  2046                           
  2047 ;; *************** function _EPWM2_Initialize *****************
  2048 ;; Defined at:
  2049 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg, status,2
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;Total ram usage:        0 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    4
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_SYSTEM_Initialize
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text17
  2078  00043A                     __ptext17:
  2079                           	opt stack 0
  2080  00043A                     _EPWM2_Initialize:
  2081                           	opt stack 25
  2082                           
  2083                           ;epwm2.c: 68: CCP2CON = 0x0C;
  2084                           
  2085                           ;incstack = 0
  2086  00043A  0E0C               	movlw	12
  2087  00043C  6E66               	movwf	3942,c	;volatile
  2088                           
  2089                           ;epwm2.c: 71: ECCP2AS = 0x00;
  2090  00043E  0E00               	movlw	0
  2091  000440  6E64               	movwf	3940,c	;volatile
  2092                           
  2093                           ;epwm2.c: 74: PWM2CON = 0x80;
  2094  000442  0E80               	movlw	128
  2095  000444  6E65               	movwf	3941,c	;volatile
  2096                           
  2097                           ;epwm2.c: 77: PSTR2CON = 0x03;
  2098  000446  0E03               	movlw	3
  2099  000448  6E63               	movwf	3939,c	;volatile
  2100                           
  2101                           ;epwm2.c: 80: CCPR2L = 0x0C;
  2102  00044A  0E0C               	movlw	12
  2103  00044C  6E67               	movwf	3943,c	;volatile
  2104                           
  2105                           ;epwm2.c: 83: CCPR2H = 0x00;
  2106  00044E  0E00               	movlw	0
  2107  000450  6E68               	movwf	3944,c	;volatile
  2108                           
  2109                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  2110  000452  010F               	movlb	15	; () banked
  2111  000454  5149               	movf	73,w,b	;volatile
  2112  000456  0BE7               	andlw	-25
  2113  000458  0910               	iorlw	16
  2114  00045A  6F49               	movwf	73,b	;volatile
  2115                           
  2116                           ; BSR set to: 15
  2117  00045C  0012               	return		;funcret
  2118  00045E                     __end_of_EPWM2_Initialize:
  2119                           	opt stack 0
  2120                           tblptru	equ	0xFF8
  2121                           tblptrh	equ	0xFF7
  2122                           tblptrl	equ	0xFF6
  2123                           tablat	equ	0xFF5
  2124                           prodh	equ	0xFF4
  2125                           prodl	equ	0xFF3
  2126                           intcon	equ	0xFF2
  2127                           intcon2	equ	0xFF1
  2128                           postinc0	equ	0xFEE
  2129                           postdec1	equ	0xFE5
  2130                           fsr1l	equ	0xFE1
  2131                           indf2	equ	0xFDF
  2132                           fsr2h	equ	0xFDA
  2133                           fsr2l	equ	0xFD9
  2134                           status	equ	0xFD8
  2135                           
  2136 ;; *************** function _EPWM1_Initialize *****************
  2137 ;; Defined at:
  2138 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    4
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_SYSTEM_Initialize
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text18
  2167  00045E                     __ptext18:
  2168                           	opt stack 0
  2169  00045E                     _EPWM1_Initialize:
  2170                           	opt stack 25
  2171                           
  2172                           ;epwm1.c: 68: CCP1CON = 0x0C;
  2173                           
  2174                           ; BSR set to: 15
  2175                           ;incstack = 0
  2176  00045E  0E0C               	movlw	12
  2177  000460  6EBD               	movwf	4029,c	;volatile
  2178                           
  2179                           ;epwm1.c: 71: ECCP1AS = 0x00;
  2180  000462  0E00               	movlw	0
  2181  000464  6EB6               	movwf	4022,c	;volatile
  2182                           
  2183                           ;epwm1.c: 74: PWM1CON = 0x80;
  2184  000466  0E80               	movlw	128
  2185  000468  6EB7               	movwf	4023,c	;volatile
  2186                           
  2187                           ;epwm1.c: 77: PSTR1CON = 0x03;
  2188  00046A  0E03               	movlw	3
  2189  00046C  6EB9               	movwf	4025,c	;volatile
  2190                           
  2191                           ;epwm1.c: 80: CCPR1L = 0x0C;
  2192  00046E  0E0C               	movlw	12
  2193  000470  6EBE               	movwf	4030,c	;volatile
  2194                           
  2195                           ;epwm1.c: 83: CCPR1H = 0x00;
  2196  000472  0E00               	movlw	0
  2197  000474  6EBF               	movwf	4031,c	;volatile
  2198                           
  2199                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  2200  000476  010F               	movlb	15	; () banked
  2201  000478  5149               	movf	73,w,b	;volatile
  2202  00047A  0BFC               	andlw	-4
  2203  00047C  0902               	iorlw	2
  2204  00047E  6F49               	movwf	73,b	;volatile
  2205                           
  2206                           ; BSR set to: 15
  2207  000480  0012               	return		;funcret
  2208  000482                     __end_of_EPWM1_Initialize:
  2209                           	opt stack 0
  2210                           tblptru	equ	0xFF8
  2211                           tblptrh	equ	0xFF7
  2212                           tblptrl	equ	0xFF6
  2213                           tablat	equ	0xFF5
  2214                           prodh	equ	0xFF4
  2215                           prodl	equ	0xFF3
  2216                           intcon	equ	0xFF2
  2217                           intcon2	equ	0xFF1
  2218                           postinc0	equ	0xFEE
  2219                           postdec1	equ	0xFE5
  2220                           fsr1l	equ	0xFE1
  2221                           indf2	equ	0xFDF
  2222                           fsr2h	equ	0xFDA
  2223                           fsr2l	equ	0xFD9
  2224                           status	equ	0xFD8
  2225                           
  2226 ;; *************** function _CCP5_Initialize *****************
  2227 ;; Defined at:
  2228 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, status,2
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;Total ram usage:        0 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    4
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_SYSTEM_Initialize
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text19
  2257  000578                     __ptext19:
  2258                           	opt stack 0
  2259  000578                     _CCP5_Initialize:
  2260                           	opt stack 25
  2261                           
  2262                           ;ccp5.c: 60: CCP5CON = 0x00;
  2263                           
  2264                           ; BSR set to: 15
  2265                           ;incstack = 0
  2266  000578  0E00               	movlw	0
  2267  00057A  010F               	movlb	15	; () banked
  2268  00057C  6F54               	movwf	84,b	;volatile
  2269                           
  2270                           ;ccp5.c: 62: CCPR5L = 0x00;
  2271  00057E  0E00               	movlw	0
  2272  000580  010F               	movlb	15	; () banked
  2273  000582  6F55               	movwf	85,b	;volatile
  2274                           
  2275                           ;ccp5.c: 64: CCPR5H = 0x00;
  2276  000584  0E00               	movlw	0
  2277  000586  010F               	movlb	15	; () banked
  2278  000588  6F56               	movwf	86,b	;volatile
  2279                           
  2280                           ; BSR set to: 15
  2281  00058A  0012               	return		;funcret
  2282  00058C                     __end_of_CCP5_Initialize:
  2283                           	opt stack 0
  2284                           tblptru	equ	0xFF8
  2285                           tblptrh	equ	0xFF7
  2286                           tblptrl	equ	0xFF6
  2287                           tablat	equ	0xFF5
  2288                           prodh	equ	0xFF4
  2289                           prodl	equ	0xFF3
  2290                           intcon	equ	0xFF2
  2291                           intcon2	equ	0xFF1
  2292                           postinc0	equ	0xFEE
  2293                           postdec1	equ	0xFE5
  2294                           fsr1l	equ	0xFE1
  2295                           indf2	equ	0xFDF
  2296                           fsr2h	equ	0xFDA
  2297                           fsr2l	equ	0xFD9
  2298                           status	equ	0xFD8
  2299                           
  2300 ;; *************** function _ADC_Initialize *****************
  2301 ;; Defined at:
  2302 ;;		line 58 in file "mcc_generated_files/adc.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;Total ram usage:        0 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    4
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_SYSTEM_Initialize
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text20
  2331  00054A                     __ptext20:
  2332                           	opt stack 0
  2333  00054A                     _ADC_Initialize:
  2334                           	opt stack 25
  2335                           
  2336                           ;adc.c: 63: ADCON0 = 0x01;
  2337                           
  2338                           ; BSR set to: 15
  2339                           ;incstack = 0
  2340  00054A  0E01               	movlw	1
  2341  00054C  6EC2               	movwf	4034,c	;volatile
  2342                           
  2343                           ;adc.c: 66: ADCON1 = 0x00;
  2344  00054E  0E00               	movlw	0
  2345  000550  6EC1               	movwf	4033,c	;volatile
  2346                           
  2347                           ;adc.c: 69: ADCON2 = 0x02;
  2348  000552  0E02               	movlw	2
  2349  000554  6EC0               	movwf	4032,c	;volatile
  2350                           
  2351                           ;adc.c: 72: ADRESL = 0x00;
  2352  000556  0E00               	movlw	0
  2353  000558  6EC3               	movwf	4035,c	;volatile
  2354                           
  2355                           ;adc.c: 75: ADRESH = 0x00;
  2356  00055A  0E00               	movlw	0
  2357  00055C  6EC4               	movwf	4036,c	;volatile
  2358                           
  2359                           ;adc.c: 78: PIE1bits.ADIE = 1;
  2360  00055E  8C9D               	bsf	3997,6,c	;volatile
  2361  000560  0012               	return		;funcret
  2362  000562                     __end_of_ADC_Initialize:
  2363                           	opt stack 0
  2364                           tblptru	equ	0xFF8
  2365                           tblptrh	equ	0xFF7
  2366                           tblptrl	equ	0xFF6
  2367                           tablat	equ	0xFF5
  2368                           prodh	equ	0xFF4
  2369                           prodl	equ	0xFF3
  2370                           intcon	equ	0xFF2
  2371                           intcon2	equ	0xFF1
  2372                           postinc0	equ	0xFEE
  2373                           postdec1	equ	0xFE5
  2374                           fsr1l	equ	0xFE1
  2375                           indf2	equ	0xFDF
  2376                           fsr2h	equ	0xFDA
  2377                           fsr2l	equ	0xFD9
  2378                           status	equ	0xFD8
  2379                           
  2380 ;; *************** function _INTERRUPT_InterruptManager *****************
  2381 ;; Defined at:
  2382 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;Total ram usage:       14 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    3
  2403 ;; This function calls:
  2404 ;;		_ADC_ISR
  2405 ;;		_TMR2_ISR
  2406 ;;		_TMR6_ISR
  2407 ;; This function is called by:
  2408 ;;		Interrupt level 2
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           	psect	intcode
  2413  000008                     __pintcode:
  2414                           	opt stack 0
  2415  000008                     _INTERRUPT_InterruptManager:
  2416                           	opt stack 24
  2417                           
  2418                           ;incstack = 0
  2419  000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2420  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  2421  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2422  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2423  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2424  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2425  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2426  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2427  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2428  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2429  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2430  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2431  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2432  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2433  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2434                           
  2435                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  2436  000042  BCF2               	btfsc	intcon,6,c	;volatile
  2437  000044  AC9D               	btfss	3997,6,c	;volatile
  2438  000046  D005               	goto	i2l259
  2439  000048  AC9E               	btfss	3998,6,c	;volatile
  2440  00004A  D003               	goto	i2l259
  2441                           
  2442                           ;interrupt_manager.c: 61: {
  2443                           ;interrupt_manager.c: 62: ADC_ISR();
  2444  00004C  ECE9  F002         	call	_ADC_ISR	;wreg free
  2445                           
  2446                           ;interrupt_manager.c: 63: }
  2447  000050  D00E               	goto	i2l265
  2448  000052                     i2l259:
  2449                           
  2450                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  2451  000052  BCF2               	btfsc	intcon,6,c	;volatile
  2452  000054  A47D               	btfss	3965,2,c	;volatile
  2453  000056  D005               	goto	i2l261
  2454  000058  A47E               	btfss	3966,2,c	;volatile
  2455  00005A  D003               	goto	i2l261
  2456                           
  2457                           ;interrupt_manager.c: 65: {
  2458                           ;interrupt_manager.c: 66: TMR6_ISR();
  2459  00005C  EC64  F002         	call	_TMR6_ISR	;wreg free
  2460                           
  2461                           ;interrupt_manager.c: 67: }
  2462  000060  D006               	goto	i2l265
  2463  000062                     i2l261:
  2464                           
  2465                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  2466  000062  BCF2               	btfsc	intcon,6,c	;volatile
  2467  000064  A29D               	btfss	3997,1,c	;volatile
  2468  000066  D003               	goto	i2l265
  2469  000068  B29E               	btfsc	3998,1,c	;volatile
  2470                           
  2471                           ;interrupt_manager.c: 69: {
  2472                           ;interrupt_manager.c: 70: TMR2_ISR();
  2473  00006A  EC95  F002         	call	_TMR2_ISR	;wreg free
  2474  00006E                     i2l265:
  2475  00006E  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2476  000072  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2477  000076  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2478  00007A  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2479  00007E  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2480  000082  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2481  000086  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2482  00008A  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2483  00008E  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2484  000092  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2485  000096  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2486  00009A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2487  00009E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2488  0000A2  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2489  0000A6  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2490  0000A8  0011               	retfie		f
  2491  0000AA                     __end_of_INTERRUPT_InterruptManager:
  2492                           	opt stack 0
  2493                           pclatu	equ	0xFFB
  2494                           pclath	equ	0xFFA
  2495                           tblptru	equ	0xFF8
  2496                           tblptrh	equ	0xFF7
  2497                           tblptrl	equ	0xFF6
  2498                           tablat	equ	0xFF5
  2499                           prodh	equ	0xFF4
  2500                           prodl	equ	0xFF3
  2501                           intcon	equ	0xFF2
  2502                           intcon2	equ	0xFF1
  2503                           postinc0	equ	0xFEE
  2504                           fsr0h	equ	0xFEA
  2505                           fsr0l	equ	0xFE9
  2506                           postdec1	equ	0xFE5
  2507                           fsr1h	equ	0xFE2
  2508                           fsr1l	equ	0xFE1
  2509                           indf2	equ	0xFDF
  2510                           fsr2h	equ	0xFDA
  2511                           fsr2l	equ	0xFD9
  2512                           status	equ	0xFD8
  2513                           
  2514 ;; *************** function _TMR6_ISR *****************
  2515 ;; Defined at:
  2516 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;Total ram usage:        0 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:    1
  2537 ;; This function calls:
  2538 ;;		Absolute function
  2539 ;;		_TMR6_DefaultInterruptHandler
  2540 ;; This function is called by:
  2541 ;;		_INTERRUPT_InterruptManager
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text22
  2546  0004C8                     __ptext22:
  2547                           	opt stack 0
  2548  0004C8                     _TMR6_ISR:
  2549                           	opt stack 25
  2550                           
  2551                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  2552                           
  2553                           ;incstack = 0
  2554  0004C8  947E               	bcf	3966,2,c	;volatile
  2555                           
  2556                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  2557  0004CA  503A               	movf	_TMR6_InterruptHandler,w,c
  2558  0004CC  103B               	iorwf	_TMR6_InterruptHandler+1,w,c
  2559  0004CE  B4D8               	btfsc	status,2,c
  2560  0004D0  0012               	return	
  2561                           
  2562                           ;tmr6.c: 128: {
  2563                           ;tmr6.c: 129: TMR6_InterruptHandler();
  2564  0004D2  D801               	call	i2u5_48
  2565  0004D4  0012               	return	
  2566  0004D6                     i2u5_48:
  2567  0004D6  0005               	push	
  2568  0004D8  6EFA               	movwf	pclath,c
  2569  0004DA  503A               	movf	_TMR6_InterruptHandler,w,c
  2570  0004DC  6EFD               	movwf	tosl,c
  2571  0004DE  503B               	movf	_TMR6_InterruptHandler+1,w,c
  2572  0004E0  6EFE               	movwf	tosh,c
  2573  0004E2  50F8               	movf	tblptru,w,c
  2574  0004E4  6EFF               	movwf	tosu,c
  2575  0004E6  50FA               	movf	pclath,w,c
  2576  0004E8  0012               	return		;indir
  2577  0004EA                     __end_of_TMR6_ISR:
  2578                           	opt stack 0
  2579                           tosu	equ	0xFFF
  2580                           tosh	equ	0xFFE
  2581                           tosl	equ	0xFFD
  2582                           pclatu	equ	0xFFB
  2583                           pclath	equ	0xFFA
  2584                           tblptru	equ	0xFF8
  2585                           tblptrh	equ	0xFF7
  2586                           tblptrl	equ	0xFF6
  2587                           tablat	equ	0xFF5
  2588                           prodh	equ	0xFF4
  2589                           prodl	equ	0xFF3
  2590                           intcon	equ	0xFF2
  2591                           intcon2	equ	0xFF1
  2592                           postinc0	equ	0xFEE
  2593                           fsr0h	equ	0xFEA
  2594                           fsr0l	equ	0xFE9
  2595                           postdec1	equ	0xFE5
  2596                           fsr1h	equ	0xFE2
  2597                           fsr1l	equ	0xFE1
  2598                           indf2	equ	0xFDF
  2599                           fsr2h	equ	0xFDA
  2600                           fsr2l	equ	0xFD9
  2601                           status	equ	0xFD8
  2602                           
  2603 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  2604 ;; Defined at:
  2605 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		None
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;Total ram usage:        0 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_TMR6_Initialize
  2629 ;;		_TMR6_ISR
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text23
  2634  0005D6                     __ptext23:
  2635                           	opt stack 0
  2636  0005D6                     _TMR6_DefaultInterruptHandler:
  2637                           	opt stack 25
  2638                           
  2639                           ;incstack = 0
  2640  0005D6  0012               	return		;funcret
  2641  0005D8                     __end_of_TMR6_DefaultInterruptHandler:
  2642                           	opt stack 0
  2643                           tosu	equ	0xFFF
  2644                           tosh	equ	0xFFE
  2645                           tosl	equ	0xFFD
  2646                           pclatu	equ	0xFFB
  2647                           pclath	equ	0xFFA
  2648                           tblptru	equ	0xFF8
  2649                           tblptrh	equ	0xFF7
  2650                           tblptrl	equ	0xFF6
  2651                           tablat	equ	0xFF5
  2652                           prodh	equ	0xFF4
  2653                           prodl	equ	0xFF3
  2654                           intcon	equ	0xFF2
  2655                           intcon2	equ	0xFF1
  2656                           postinc0	equ	0xFEE
  2657                           fsr0h	equ	0xFEA
  2658                           fsr0l	equ	0xFE9
  2659                           postdec1	equ	0xFE5
  2660                           fsr1h	equ	0xFE2
  2661                           fsr1l	equ	0xFE1
  2662                           indf2	equ	0xFDF
  2663                           fsr2h	equ	0xFDA
  2664                           fsr2l	equ	0xFD9
  2665                           status	equ	0xFD8
  2666                           
  2667 ;; *************** function _TMR2_ISR *****************
  2668 ;; Defined at:
  2669 ;;		line 76 in file "mcc_generated_files/tmr2.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;Total ram usage:        0 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    2
  2690 ;; This function calls:
  2691 ;;		_TMR2_CallBack
  2692 ;; This function is called by:
  2693 ;;		_INTERRUPT_InterruptManager
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text24
  2698  00052A                     __ptext24:
  2699                           	opt stack 0
  2700  00052A                     _TMR2_ISR:
  2701                           	opt stack 24
  2702                           
  2703                           ;tmr2.c: 78: static volatile unsigned int CountCallBack = 0;
  2704                           ;tmr2.c: 81: PIR1bits.TMR2IF = 0;
  2705                           
  2706                           ;incstack = 0
  2707  00052A  929E               	bcf	3998,1,c	;volatile
  2708                           
  2709                           ;tmr2.c: 84: if (++CountCallBack >= 16)
  2710  00052C  4A3C               	infsnz	TMR2_ISR@CountCallBack,f,c	;volatile
  2711  00052E  2A3D               	incf	TMR2_ISR@CountCallBack+1,f,c	;volatile
  2712  000530  503D               	movf	TMR2_ISR@CountCallBack+1,w,c	;volatile
  2713  000532  E104               	bnz	i2u6_40
  2714  000534  0E10               	movlw	16
  2715  000536  5C3C               	subwf	TMR2_ISR@CountCallBack,w,c	;volatile
  2716  000538  A0D8               	btfss	status,0,c
  2717  00053A  0012               	return	
  2718  00053C                     i2u6_40:
  2719                           
  2720                           ;tmr2.c: 85: {
  2721                           ;tmr2.c: 87: TMR2_CallBack();
  2722  00053C  EC41  F002         	call	_TMR2_CallBack	;wreg free
  2723                           
  2724                           ;tmr2.c: 90: CountCallBack = 0;
  2725  000540  0E00               	movlw	0
  2726  000542  6E3D               	movwf	TMR2_ISR@CountCallBack+1,c	;volatile
  2727  000544  0E00               	movlw	0
  2728  000546  6E3C               	movwf	TMR2_ISR@CountCallBack,c	;volatile
  2729  000548  0012               	return	
  2730  00054A                     __end_of_TMR2_ISR:
  2731                           	opt stack 0
  2732                           tosu	equ	0xFFF
  2733                           tosh	equ	0xFFE
  2734                           tosl	equ	0xFFD
  2735                           pclatu	equ	0xFFB
  2736                           pclath	equ	0xFFA
  2737                           tblptru	equ	0xFF8
  2738                           tblptrh	equ	0xFF7
  2739                           tblptrl	equ	0xFF6
  2740                           tablat	equ	0xFF5
  2741                           prodh	equ	0xFF4
  2742                           prodl	equ	0xFF3
  2743                           intcon	equ	0xFF2
  2744                           intcon2	equ	0xFF1
  2745                           postinc0	equ	0xFEE
  2746                           fsr0h	equ	0xFEA
  2747                           fsr0l	equ	0xFE9
  2748                           postdec1	equ	0xFE5
  2749                           fsr1h	equ	0xFE2
  2750                           fsr1l	equ	0xFE1
  2751                           indf2	equ	0xFDF
  2752                           fsr2h	equ	0xFDA
  2753                           fsr2l	equ	0xFD9
  2754                           status	equ	0xFD8
  2755                           
  2756 ;; *************** function _TMR2_CallBack *****************
  2757 ;; Defined at:
  2758 ;;		line 94 in file "mcc_generated_files/tmr2.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;		None
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;		None
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;Total ram usage:        0 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    1
  2779 ;; This function calls:
  2780 ;;		Absolute function
  2781 ;;		_TMR2_DefaultInterruptHandler
  2782 ;; This function is called by:
  2783 ;;		_TMR2_ISR
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text25
  2788  000482                     __ptext25:
  2789                           	opt stack 0
  2790  000482                     _TMR2_CallBack:
  2791                           	opt stack 24
  2792                           
  2793                           ;tmr2.c: 98: Timer2Ticked = 1;
  2794                           
  2795                           ;incstack = 0
  2796  000482  0E01               	movlw	1
  2797  000484  6E40               	movwf	_Timer2Ticked,c	;volatile
  2798                           
  2799                           ;tmr2.c: 99: if(TMR2_InterruptHandler)
  2800  000486  5038               	movf	_TMR2_InterruptHandler,w,c
  2801  000488  1039               	iorwf	_TMR2_InterruptHandler+1,w,c
  2802  00048A  B4D8               	btfsc	status,2,c
  2803  00048C  0012               	return	
  2804                           
  2805                           ;tmr2.c: 100: {
  2806                           ;tmr2.c: 101: TMR2_InterruptHandler();
  2807  00048E  D801               	call	i2u2_48
  2808  000490  0012               	return	
  2809  000492                     i2u2_48:
  2810  000492  0005               	push	
  2811  000494  6EFA               	movwf	pclath,c
  2812  000496  5038               	movf	_TMR2_InterruptHandler,w,c
  2813  000498  6EFD               	movwf	tosl,c
  2814  00049A  5039               	movf	_TMR2_InterruptHandler+1,w,c
  2815  00049C  6EFE               	movwf	tosh,c
  2816  00049E  50F8               	movf	tblptru,w,c
  2817  0004A0  6EFF               	movwf	tosu,c
  2818  0004A2  50FA               	movf	pclath,w,c
  2819  0004A4  0012               	return		;indir
  2820  0004A6                     __end_of_TMR2_CallBack:
  2821                           	opt stack 0
  2822                           tosu	equ	0xFFF
  2823                           tosh	equ	0xFFE
  2824                           tosl	equ	0xFFD
  2825                           pclatu	equ	0xFFB
  2826                           pclath	equ	0xFFA
  2827                           tblptru	equ	0xFF8
  2828                           tblptrh	equ	0xFF7
  2829                           tblptrl	equ	0xFF6
  2830                           tablat	equ	0xFF5
  2831                           prodh	equ	0xFF4
  2832                           prodl	equ	0xFF3
  2833                           intcon	equ	0xFF2
  2834                           intcon2	equ	0xFF1
  2835                           postinc0	equ	0xFEE
  2836                           fsr0h	equ	0xFEA
  2837                           fsr0l	equ	0xFE9
  2838                           postdec1	equ	0xFE5
  2839                           fsr1h	equ	0xFE2
  2840                           fsr1l	equ	0xFE1
  2841                           indf2	equ	0xFDF
  2842                           fsr2h	equ	0xFDA
  2843                           fsr2l	equ	0xFD9
  2844                           status	equ	0xFD8
  2845                           
  2846 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  2847 ;; Defined at:
  2848 ;;		line 109 in file "mcc_generated_files/tmr2.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		None
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;Total ram usage:        0 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_TMR2_Initialize
  2872 ;;		_TMR2_CallBack
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text26
  2877  0005D8                     __ptext26:
  2878                           	opt stack 0
  2879  0005D8                     _TMR2_DefaultInterruptHandler:
  2880                           	opt stack 24
  2881                           
  2882                           ;incstack = 0
  2883  0005D8  0012               	return		;funcret
  2884  0005DA                     __end_of_TMR2_DefaultInterruptHandler:
  2885                           	opt stack 0
  2886                           tosu	equ	0xFFF
  2887                           tosh	equ	0xFFE
  2888                           tosl	equ	0xFFD
  2889                           pclatu	equ	0xFFB
  2890                           pclath	equ	0xFFA
  2891                           tblptru	equ	0xFF8
  2892                           tblptrh	equ	0xFF7
  2893                           tblptrl	equ	0xFF6
  2894                           tablat	equ	0xFF5
  2895                           prodh	equ	0xFF4
  2896                           prodl	equ	0xFF3
  2897                           intcon	equ	0xFF2
  2898                           intcon2	equ	0xFF1
  2899                           postinc0	equ	0xFEE
  2900                           fsr0h	equ	0xFEA
  2901                           fsr0l	equ	0xFE9
  2902                           postdec1	equ	0xFE5
  2903                           fsr1h	equ	0xFE2
  2904                           fsr1l	equ	0xFE1
  2905                           indf2	equ	0xFDF
  2906                           fsr2h	equ	0xFDA
  2907                           fsr2l	equ	0xFD9
  2908                           status	equ	0xFD8
  2909                           
  2910 ;; *************** function _ADC_ISR *****************
  2911 ;; Defined at:
  2912 ;;		line 129 in file "mcc_generated_files/adc.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		None
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;Total ram usage:        0 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_INTERRUPT_InterruptManager
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text27
  2940  0005D2                     __ptext27:
  2941                           	opt stack 0
  2942  0005D2                     _ADC_ISR:
  2943                           	opt stack 26
  2944                           
  2945                           ;adc.c: 132: PIR1bits.ADIF = 0;
  2946                           
  2947                           ;incstack = 0
  2948  0005D2  9C9E               	bcf	3998,6,c	;volatile
  2949  0005D4  0012               	return		;funcret
  2950  0005D6                     __end_of_ADC_ISR:
  2951                           	opt stack 0
  2952  0000                     tosu	equ	0xFFF
  2953                           tosh	equ	0xFFE
  2954                           tosl	equ	0xFFD
  2955                           pclatu	equ	0xFFB
  2956                           pclath	equ	0xFFA
  2957                           tblptru	equ	0xFF8
  2958                           tblptrh	equ	0xFF7
  2959                           tblptrl	equ	0xFF6
  2960                           tablat	equ	0xFF5
  2961                           prodh	equ	0xFF4
  2962                           prodl	equ	0xFF3
  2963                           intcon	equ	0xFF2
  2964                           intcon2	equ	0xFF1
  2965                           postinc0	equ	0xFEE
  2966                           fsr0h	equ	0xFEA
  2967                           fsr0l	equ	0xFE9
  2968                           postdec1	equ	0xFE5
  2969                           fsr1h	equ	0xFE2
  2970                           fsr1l	equ	0xFE1
  2971                           indf2	equ	0xFDF
  2972                           fsr2h	equ	0xFDA
  2973                           fsr2l	equ	0xFD9
  2974                           status	equ	0xFD8
  2975                           tosu	equ	0xFFF
  2976                           tosh	equ	0xFFE
  2977                           tosl	equ	0xFFD
  2978                           pclatu	equ	0xFFB
  2979                           pclath	equ	0xFFA
  2980                           tblptru	equ	0xFF8
  2981                           tblptrh	equ	0xFF7
  2982                           tblptrl	equ	0xFF6
  2983                           tablat	equ	0xFF5
  2984                           prodh	equ	0xFF4
  2985                           prodl	equ	0xFF3
  2986                           intcon	equ	0xFF2
  2987                           intcon2	equ	0xFF1
  2988                           postinc0	equ	0xFEE
  2989                           fsr0h	equ	0xFEA
  2990                           fsr0l	equ	0xFE9
  2991                           postdec1	equ	0xFE5
  2992                           fsr1h	equ	0xFE2
  2993                           fsr1l	equ	0xFE1
  2994                           indf2	equ	0xFDF
  2995                           fsr2h	equ	0xFDA
  2996                           fsr2l	equ	0xFD9
  2997                           status	equ	0xFD8
  2998                           
  2999                           	psect	text28
  3000  000000                     __ptext28:
  3001                           	opt stack 0
  3002                           tosu	equ	0xFFF
  3003                           tosh	equ	0xFFE
  3004                           tosl	equ	0xFFD
  3005                           pclatu	equ	0xFFB
  3006                           pclath	equ	0xFFA
  3007                           tblptru	equ	0xFF8
  3008                           tblptrh	equ	0xFF7
  3009                           tblptrl	equ	0xFF6
  3010                           tablat	equ	0xFF5
  3011                           prodh	equ	0xFF4
  3012                           prodl	equ	0xFF3
  3013                           intcon	equ	0xFF2
  3014                           intcon2	equ	0xFF1
  3015                           postinc0	equ	0xFEE
  3016                           fsr0h	equ	0xFEA
  3017                           fsr0l	equ	0xFE9
  3018                           postdec1	equ	0xFE5
  3019                           fsr1h	equ	0xFE2
  3020                           fsr1l	equ	0xFE1
  3021                           indf2	equ	0xFDF
  3022                           fsr2h	equ	0xFDA
  3023                           fsr2l	equ	0xFD9
  3024                           status	equ	0xFD8
  3025                           
  3026                           	psect	rparam
  3027  0000                     tosu	equ	0xFFF
  3028                           tosh	equ	0xFFE
  3029                           tosl	equ	0xFFD
  3030                           pclatu	equ	0xFFB
  3031                           pclath	equ	0xFFA
  3032                           tblptru	equ	0xFF8
  3033                           tblptrh	equ	0xFF7
  3034                           tblptrl	equ	0xFF6
  3035                           tablat	equ	0xFF5
  3036                           prodh	equ	0xFF4
  3037                           prodl	equ	0xFF3
  3038                           intcon	equ	0xFF2
  3039                           intcon2	equ	0xFF1
  3040                           postinc0	equ	0xFEE
  3041                           fsr0h	equ	0xFEA
  3042                           fsr0l	equ	0xFE9
  3043                           postdec1	equ	0xFE5
  3044                           fsr1h	equ	0xFE2
  3045                           fsr1l	equ	0xFE1
  3046                           indf2	equ	0xFDF
  3047                           fsr2h	equ	0xFDA
  3048                           fsr2l	equ	0xFD9
  3049                           status	equ	0xFD8
  3050                           
  3051                           	psect	temp
  3052  000041                     btemp:
  3053                           	opt stack 0
  3054  000041                     	ds	1
  3055  0000                     int$flags	set	btemp
  3056                           tosu	equ	0xFFF
  3057                           tosh	equ	0xFFE
  3058                           tosl	equ	0xFFD
  3059                           pclatu	equ	0xFFB
  3060                           pclath	equ	0xFFA
  3061                           tblptru	equ	0xFF8
  3062                           tblptrh	equ	0xFF7
  3063                           tblptrl	equ	0xFF6
  3064                           tablat	equ	0xFF5
  3065                           prodh	equ	0xFF4
  3066                           prodl	equ	0xFF3
  3067                           intcon	equ	0xFF2
  3068                           intcon2	equ	0xFF1
  3069                           postinc0	equ	0xFEE
  3070                           fsr0h	equ	0xFEA
  3071                           fsr0l	equ	0xFE9
  3072                           postdec1	equ	0xFE5
  3073                           fsr1h	equ	0xFE2
  3074                           fsr1l	equ	0xFE1
  3075                           indf2	equ	0xFDF
  3076                           fsr2h	equ	0xFDA
  3077                           fsr2l	equ	0xFD9
  3078                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        64
    BSS         5
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      64
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StateMEF_act
    _StateMEF_act->_EPWM1_LoadDutyValue
    _StateMEF_act->_EPWM2_LoadDutyValue
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     794
                  _SYSTEM_Initialize
                       _StateMEF_act
                       _StateMEF_ini
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StateMEF_act                                         1     1      0     622
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_LoadDutyValue                                  4     2      2     300
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_LoadDutyValue                                  4     2      2     300
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_act
     _EPWM1_LoadDutyValue
     _EPWM2_LoadDutyValue
     _EUSART1_Write
   _StateMEF_ini

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      40       1       68.1%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      60      12        0.0%
DATA                 0      0      60       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Jun 05 10:43:57 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 05C4  
                       ??_TMR6_StartTimer 002F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l328 059C                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _PR6 000F4B                           __end_of_ADC_ISR 05D6  
                         _TMR2_Initialize 04A6                                       prod 000FF3  
                                     tosl 000FFD                  __end_of_EPWM2_Initialize 045E  
                         _CCP5_Initialize 0578                                      l1407 0186  
                                    l1409 018A                                      l1427 01F8  
                                    l1371 00B0                                      l1429 01FC  
                                    l1453 0270                                      l1471 0312  
                                    l1449 026C                                      l1387 0114  
                                    l1483 0336                                      l1389 0118  
                                    l1469 0302                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    _TMR2 000FBC                                      _TMR6 000F4C  
                                    _WPUB 000F61                             _EUSART1_Write 059A  
                                    _main 02E4                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0041                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00AA                             __CFG_IESO$OFF 000000  
                   ??_EPWM1_LoadDutyValue 0031                              ___param_bank 000000  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 059A  
                                   ?_main 0021                                     _T2CON 000FBA  
                                   _T6CON 000F4A                            __CFG_DEBUG$OFF 000000  
                                   i2l261 0062                                     i2l265 006E  
                                   i2l259 0052                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
       __size_of_TMR6_SetInterruptHandler 000A                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
               ?_TMR6_SetInterruptHandler 002F                          __end_of_TMR2_ISR 054A  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                          __end_of_TMR6_ISR 04EA  
                          __CFG_EBTRB$OFF 000000                          _LookUP_TABLE_COS 0001  
                        _LookUP_TABLE_SEN 0060                        __CFG_MCLRE$EXTMCLR 000000  
                          ?_EUSART1_Write 0021                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 05CA  
                          __CFG_PBADEN$ON 000000            ??_TMR6_DefaultInterruptHandler 0021  
                         __initialization 028C                __end_of_EUSART1_Initialize 0578  
                            __end_of_main 033C                   __end_of_TMR2_Initialize 04C8  
                               ??_ADC_ISR 0021               ?_INTERRUPT_InterruptManager 0021  
                _TMR2_SetInterruptHandler 05BA                                    ??_main 0034  
                 __end_of_CCP5_Initialize 058C                             __activetblptr 000002  
                         _TMR6_Initialize 0412                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR1H 000FBF                                    _CCPR2H 000F68  
                                  _CCPR1L 000FBE                                    _CCPR2L 000F67  
                                  _CCPR5H 000F56                                    _CCPR5L 000F55  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  i2u2_48 0492                                    i2u6_40 053C  
                                  i2u5_48 04D6                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                            __CFG_XINST$OFF 000000  
                            _CCPTMRS0bits 000F49                            __CFG_STVREN$ON 000000  
                            __pdataCOMRAM 0001                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                         ??_EUSART1_Write 002F                       _EPWM2_LoadDutyValue 0388  
                 __end_of_TMR2_StartTimer 05CE  TMR2_SetInterruptHandler@InterruptHandler 002F  
TMR6_SetInterruptHandler@InterruptHandler 002F             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 03E8                                __accesstop 0060  
                 __end_of__initialization 02D6                     __end_of_TMR2_CallBack 04A6  
                      ?_SYSTEM_Initialize 0021                           _TMR6_StartTimer 05C4  
                           ___rparam_used 000001                         ?_EPWM1_Initialize 0021  
                          __pcstackCOMRAM 0021                      ?_EPWM2_LoadDutyValue 002F  
                            __pidataBANK0 050A                       ??_SYSTEM_Initialize 0031  
                               ?_TMR2_ISR 0021                                 ?_TMR6_ISR 0021  
                      ??_EPWM1_Initialize 002F                          ?_TMR2_Initialize 0021  
                 __end_of_TMR6_Initialize 043A                          ?_CCP5_Initialize 0021  
                       ?_EPWM2_Initialize 0021                 __end_of_SYSTEM_Initialize 0412  
                      ??_EPWM2_Initialize 002F                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 0034                        __CFG_CCP2MX$PORTC1 000000  
                   ??_EPWM2_LoadDutyValue 0031          __end_of_TMR6_SetInterruptHandler 05BA  
                              ??_TMR2_ISR 0021                        __CFG_CCP3MX$PORTB5 000000  
                              ??_TMR6_ISR 0021                                   _CCP1CON 000FBD  
                                 _CCP2CON 000F66                                   _CCP5CON 000F54  
                                 _ECCP1AS 000FB6                                   _ECCP2AS 000F64  
                                 _ADC_ISR 05D2                   __size_of_ADC_Initialize 0018  
                                 _OSCCON2 000FD2                                   _OSCTUNE 000F9B  
                                 _PWM1CON 000FB7                                   _PWM2CON 000F65  
                                 _SPBRGH1 000FB0                          ?_TMR2_StartTimer 0021  
                 __end_of_TMR6_StartTimer 05CA               __end_of_EPWM1_LoadDutyValue 03E8  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0031  
                                 __pcinit 028C                          ?_TMR6_Initialize 0021  
                                 __ramtop 1000                                   __ptext0 02E4  
                                 __ptext1 05A6                                   __ptext2 00AE  
                                 __ptext3 059A                                   __ptext4 0388  
                                 __ptext5 03B8                                   __ptext6 03E8  
                                 __ptext7 0412                                   __ptext8 05C4  
                                 __ptext9 05B0                             ?_StateMEF_act 0021  
                   _OSCILLATOR_Initialize 058C                                 _T2CONbits 000FBA  
                           ?_StateMEF_ini 0021                        _EUSART1_Initialize 0562  
                ??_PIN_MANAGER_Initialize 002F                                 _T6CONbits 000F4A  
              __size_of_SYSTEM_Initialize 002A                      end_of_initialization 02D6  
                     ?_EUSART1_Initialize 0021                             __Lmediumconst 0000  
                                 postdec1 000FE5                                   postinc0 000FEE  
                    ??_EUSART1_Initialize 002F                  _TMR6_SetInterruptHandler 05B0  
                          ??_StateMEF_act 0033                            ??_StateMEF_ini 002F  
                     EUSART1_Write@txData 002F                          ?_TMR6_StartTimer 0021  
                            _EstadoActual 003E              __end_of_INTERRUPT_Initialize 05D2  
    __end_of_TMR2_DefaultInterruptHandler 05DA     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 05D8                             __pidataCOMRAM 04EA  
                       __size_of_TMR2_ISR 0020                            _ADC_Initialize 054A  
                       __size_of_TMR6_ISR 0022                    ?_OSCILLATOR_Initialize 0021  
                     start_initialization 028C                 __size_of_EPWM1_Initialize 0024  
         __size_of_PIN_MANAGER_Initialize 004C                                 _Microstep 003F  
            EPWM1_LoadDutyValue@dutyValue 002F                     __end_of_EUSART1_Write 05A6  
               __size_of_EPWM2_Initialize 0024                    __end_of_ADC_Initialize 0562  
                             __pdataBANK0 0060                                  ?_ADC_ISR 0021  
                               _StepCount 0034             ?_TMR2_DefaultInterruptHandler 0021  
                  __size_of_TMR2_CallBack 0024                               __pbssCOMRAM 003C  
                __size_of_TMR2_Initialize 0022                  __size_of_CCP5_Initialize 0014  
             __end_of_EPWM2_LoadDutyValue 03B8                     _TMR6_InterruptHandler 003A  
                    __end_of_StateMEF_act 028C                      __end_of_StateMEF_ini 05B0  
                  _PIN_MANAGER_Initialize 033C                                 __pintcode 0008  
                         ?_ADC_Initialize 0021              ??_INTERRUPT_InterruptManager 0021  
                        __CFG_PRICLKEN$ON 000000                                  _BAUDCON1 000FB8  
                    _INTERRUPT_Initialize 05CE                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                           _TMR2_CallBack 0482                                  _PIE1bits 000F9D  
                                _PIE5bits 000F7D                  __size_of_TMR2_StartTimer 0004  
     __size_of_INTERRUPT_InterruptManager 00A2                                  _PIR1bits 000F9E  
                                _PIR5bits 000F7E              __size_of_EPWM1_LoadDutyValue 0030  
              ??_TMR6_SetInterruptHandler 0031                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR2_ISR 052A  
                                _PSTR1CON 000FB9                                  _PSTR2CON 000F63  
                                _TMR6_ISR 04C8                          _Timer2Tick_count 0036  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
          ??_TMR2_DefaultInterruptHandler 0021                          _EPWM1_Initialize 045E  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 002F  
                __size_of_TMR6_Initialize 0028                               _INTCON2bits 000FF1  
                               copy_data0 02A0                                 copy_data1 02C0  
                   ?_INTERRUPT_Initialize 0021                         ??_TMR2_Initialize 0031  
                          ?_TMR2_CallBack 0021                         ??_CCP5_Initialize 002F  
                                __Hrparam 0000                              _Timer2Ticked 0040  
                        _EPWM2_Initialize 043A                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTC0 000000  
                 ??_OSCILLATOR_Initialize 002F               __size_of_EUSART1_Initialize 0016  
                                __ptext10 04A6                                  __ptext11 05CA  
                                __ptext20 054A                                  __ptext12 05BA  
                                __ptext13 033C                                  __ptext22 04C8  
                                __ptext14 058C                                  __ptext23 05D6  
                                __ptext15 05CE                                  __ptext24 052A  
                                __ptext16 0562                                  __ptext25 0482  
                                __ptext17 043A                                  __ptext26 05D8  
                                __ptext18 045E                                  __ptext27 05D2  
                                __ptext19 0578                                  __ptext28 0000  
                   __size_of_StateMEF_act 01DE                     __size_of_StateMEF_ini 000A  
                           __size_of_main 0058                  __size_of_TMR6_StartTimer 0006  
                                int$flags 0041                         ??_TMR2_StartTimer 002F  
      __end_of_INTERRUPT_InterruptManager 00AA                _INTERRUPT_InterruptManager 0008  
                            _StateMEF_act 00AE                                _INTCONbits 000FF2  
                            _StateMEF_ini 05A6                    ??_INTERRUPT_Initialize 002F  
    __end_of_TMR6_DefaultInterruptHandler 05D8     __size_of_TMR6_DefaultInterruptHandler 0002  
            _TMR6_DefaultInterruptHandler 05D6                                  intlevel2 0000  
                         ??_TMR2_CallBack 0021              EPWM2_LoadDutyValue@dutyValue 002F  
                 ?_PIN_MANAGER_Initialize 0021                         ??_TMR6_Initialize 0031  
                              _RCSTA1bits 000FAB                          ??_ADC_Initialize 002F  
                  __size_of_EUSART1_Write 000C                     TMR2_ISR@CountCallBack 003C  
                       __CFG_T3CMX$PORTC0 000000                       _EPWM1_LoadDutyValue 03B8  
          __end_of_PIN_MANAGER_Initialize 0388             ?_TMR6_DefaultInterruptHandler 0021  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 0038  
                __end_of_EPWM1_Initialize 0482                      ?_EPWM1_LoadDutyValue 002F  
