

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Jun 22 11:17:49 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 1.41
    50                           ; Generated 25/01/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F46K22 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataCOMRAM
    85  0008F4                     __pidataCOMRAM:
    86                           	opt stack 0
    87                           
    88                           ;initializer for _LookUP_TABLE_COS
    89  0008F4  7D                 	db	125
    90  0008F5  76                 	db	118
    91  0008F6  6C                 	db	108
    92  0008F7  5E                 	db	94
    93  0008F8  4D                 	db	77
    94  0008F9  39                 	db	57
    95  0008FA  22                 	db	34
    96  0008FB  0C                 	db	12
    97  0008FC  0C                 	db	12
    98  0008FD  22                 	db	34
    99  0008FE  39                 	db	57
   100  0008FF  4D                 	db	77
   101  000900  5E                 	db	94
   102  000901  6C                 	db	108
   103  000902  76                 	db	118
   104  000903  7D                 	db	125
   105  000904  7D                 	db	125
   106  000905  76                 	db	118
   107  000906  6C                 	db	108
   108  000907  5E                 	db	94
   109  000908  4D                 	db	77
   110  000909  39                 	db	57
   111  00090A  22                 	db	34
   112  00090B  0C                 	db	12
   113  00090C  0C                 	db	12
   114  00090D  22                 	db	34
   115  00090E  39                 	db	57
   116  00090F  4D                 	db	77
   117  000910  5E                 	db	94
   118  000911  6C                 	db	108
   119  000912  76                 	db	118
   120  000913  7D                 	db	125
   121                           
   122                           	psect	idataBANK0
   123  000566                     __pidataBANK0:
   124                           	opt stack 0
   125                           
   126                           ;initializer for _LookUP_TABLE_SEN_16
   127  000566  06                 	db	6
   128  000567  12                 	db	18
   129  000568  1D                 	db	29
   130  000569  2A                 	db	42
   131  00056A  35                 	db	53
   132  00056B  3F                 	db	63
   133  00056C  49                 	db	73
   134  00056D  53                 	db	83
   135  00056E  5B                 	db	91
   136  00056F  63                 	db	99
   137  000570  6A                 	db	106
   138  000571  70                 	db	112
   139  000572  75                 	db	117
   140  000573  79                 	db	121
   141  000574  7C                 	db	124
   142  000575  7E                 	db	126
   143  000576  7E                 	db	126
   144  000577  7C                 	db	124
   145  000578  79                 	db	121
   146  000579  75                 	db	117
   147  00057A  70                 	db	112
   148  00057B  6A                 	db	106
   149  00057C  63                 	db	99
   150  00057D  5B                 	db	91
   151  00057E  53                 	db	83
   152  00057F  49                 	db	73
   153  000580  3F                 	db	63
   154  000581  35                 	db	53
   155  000582  2A                 	db	42
   156  000583  1D                 	db	29
   157  000584  12                 	db	18
   158  000585  06                 	db	6
   159  000586  06                 	db	6
   160  000587  12                 	db	18
   161  000588  1D                 	db	29
   162  000589  2A                 	db	42
   163  00058A  35                 	db	53
   164  00058B  3F                 	db	63
   165  00058C  49                 	db	73
   166  00058D  53                 	db	83
   167  00058E  5B                 	db	91
   168  00058F  63                 	db	99
   169  000590  6A                 	db	106
   170  000591  70                 	db	112
   171  000592  75                 	db	117
   172  000593  79                 	db	121
   173  000594  7C                 	db	124
   174  000595  7E                 	db	126
   175  000596  7E                 	db	126
   176  000597  7C                 	db	124
   177  000598  79                 	db	121
   178  000599  75                 	db	117
   179  00059A  70                 	db	112
   180  00059B  6A                 	db	106
   181  00059C  63                 	db	99
   182  00059D  5B                 	db	91
   183  00059E  53                 	db	83
   184  00059F  49                 	db	73
   185  0005A0  3F                 	db	63
   186  0005A1  35                 	db	53
   187  0005A2  2A                 	db	42
   188  0005A3  1D                 	db	29
   189  0005A4  12                 	db	18
   190  0005A5  06                 	db	6
   191                           
   192                           ;initializer for _LookUP_TABLE_COS_16
   193  0005A6  7E                 	db	126
   194  0005A7  7C                 	db	124
   195  0005A8  79                 	db	121
   196  0005A9  75                 	db	117
   197  0005AA  70                 	db	112
   198  0005AB  6A                 	db	106
   199  0005AC  63                 	db	99
   200  0005AD  5B                 	db	91
   201  0005AE  53                 	db	83
   202  0005AF  49                 	db	73
   203  0005B0  3F                 	db	63
   204  0005B1  35                 	db	53
   205  0005B2  2A                 	db	42
   206  0005B3  1D                 	db	29
   207  0005B4  12                 	db	18
   208  0005B5  06                 	db	6
   209  0005B6  06                 	db	6
   210  0005B7  12                 	db	18
   211  0005B8  1D                 	db	29
   212  0005B9  2A                 	db	42
   213  0005BA  35                 	db	53
   214  0005BB  3F                 	db	63
   215  0005BC  49                 	db	73
   216  0005BD  53                 	db	83
   217  0005BE  5B                 	db	91
   218  0005BF  63                 	db	99
   219  0005C0  6A                 	db	106
   220  0005C1  70                 	db	112
   221  0005C2  75                 	db	117
   222  0005C3  79                 	db	121
   223  0005C4  7C                 	db	124
   224  0005C5  7E                 	db	126
   225  0005C6  7E                 	db	126
   226  0005C7  7C                 	db	124
   227  0005C8  79                 	db	121
   228  0005C9  75                 	db	117
   229  0005CA  70                 	db	112
   230  0005CB  6A                 	db	106
   231  0005CC  63                 	db	99
   232  0005CD  5B                 	db	91
   233  0005CE  53                 	db	83
   234  0005CF  49                 	db	73
   235  0005D0  3F                 	db	63
   236  0005D1  35                 	db	53
   237  0005D2  2A                 	db	42
   238  0005D3  1D                 	db	29
   239  0005D4  12                 	db	18
   240  0005D5  06                 	db	6
   241  0005D6  06                 	db	6
   242  0005D7  12                 	db	18
   243  0005D8  1D                 	db	29
   244  0005D9  2A                 	db	42
   245  0005DA  35                 	db	53
   246  0005DB  3F                 	db	63
   247  0005DC  49                 	db	73
   248  0005DD  53                 	db	83
   249  0005DE  5B                 	db	91
   250  0005DF  63                 	db	99
   251  0005E0  6A                 	db	106
   252  0005E1  70                 	db	112
   253  0005E2  75                 	db	117
   254  0005E3  79                 	db	121
   255  0005E4  7C                 	db	124
   256  0005E5  7E                 	db	126
   257                           
   258                           ;initializer for _LookUP_TABLE_SEN
   259  0005E6  0C                 	db	12
   260  0005E7  22                 	db	34
   261  0005E8  39                 	db	57
   262  0005E9  4D                 	db	77
   263  0005EA  5E                 	db	94
   264  0005EB  6C                 	db	108
   265  0005EC  76                 	db	118
   266  0005ED  7D                 	db	125
   267  0005EE  7D                 	db	125
   268  0005EF  76                 	db	118
   269  0005F0  6C                 	db	108
   270  0005F1  5E                 	db	94
   271  0005F2  4D                 	db	77
   272  0005F3  39                 	db	57
   273  0005F4  22                 	db	34
   274  0005F5  0C                 	db	12
   275  0005F6  0C                 	db	12
   276  0005F7  22                 	db	34
   277  0005F8  39                 	db	57
   278  0005F9  4D                 	db	77
   279  0005FA  5E                 	db	94
   280  0005FB  6C                 	db	108
   281  0005FC  76                 	db	118
   282  0005FD  7D                 	db	125
   283  0005FE  7D                 	db	125
   284  0005FF  76                 	db	118
   285  000600  6C                 	db	108
   286  000601  5E                 	db	94
   287  000602  4D                 	db	77
   288  000603  39                 	db	57
   289  000604  22                 	db	34
   290  000605  0C                 	db	12
   291                           
   292                           	psect	nvCOMRAM
   293  00004A                     __pnvCOMRAM:
   294                           	opt stack 0
   295  00004A                     _TMR2_InterruptHandler:
   296                           	opt stack 0
   297  00004A                     	ds	2
   298  00004C                     _TMR6_InterruptHandler:
   299                           	opt stack 0
   300  00004C                     	ds	2
   301  00004E                     _EstadoActual:
   302                           	opt stack 0
   303  00004E                     	ds	1
   304  0000                     _CCPTMRS0bits	set	3913
   305  0000                     _ANSELA	set	3896
   306  0000                     _ANSELE	set	3900
   307  0000                     _ANSELD	set	3899
   308  0000                     _ANSELB	set	3897
   309  0000                     _ANSELC	set	3898
   310  0000                     _CCPR5H	set	3926
   311  0000                     _CCPR5L	set	3925
   312  0000                     _CCP5CON	set	3924
   313  0000                     _T6CONbits	set	3914
   314  0000                     _TMR6	set	3916
   315  0000                     _PR6	set	3915
   316  0000                     _T6CON	set	3914
   317  0000                     _LATDbits	set	3980
   318  0000                     _LATCbits	set	3979
   319  0000                     _LATBbits	set	3978
   320  0000                     _TXREG1	set	4013
   321  0000                     _RCREG1	set	4014
   322  0000                     _RCSTA1bits	set	4011
   323  0000                     _SPBRGH1	set	4016
   324  0000                     _SPBRG1	set	4015
   325  0000                     _TXSTA1	set	4012
   326  0000                     _RCSTA1	set	4011
   327  0000                     _BAUDCON1	set	4024
   328  0000                     _OSCTUNE	set	3995
   329  0000                     _OSCCON2	set	4050
   330  0000                     _OSCCON	set	4051
   331  0000                     _INTCONbits	set	4082
   332  0000                     _RCONbits	set	4048
   333  0000                     _ADCON0bits	set	4034
   334  0000                     _ADRESH	set	4036
   335  0000                     _ADRESL	set	4035
   336  0000                     _ADCON2	set	4032
   337  0000                     _ADCON1	set	4033
   338  0000                     _ADCON0	set	4034
   339  0000                     _CCPR1H	set	4031
   340  0000                     _CCPR1L	set	4030
   341  0000                     _PSTR1CON	set	4025
   342  0000                     _PWM1CON	set	4023
   343  0000                     _ECCP1AS	set	4022
   344  0000                     _CCP1CON	set	4029
   345  0000                     _CCPR2H	set	3944
   346  0000                     _CCPR2L	set	3943
   347  0000                     _PSTR2CON	set	3939
   348  0000                     _PWM2CON	set	3941
   349  0000                     _ECCP2AS	set	3940
   350  0000                     _CCP2CON	set	3942
   351  0000                     _INTCON2bits	set	4081
   352  0000                     _WPUB	set	3937
   353  0000                     _TRISD	set	3989
   354  0000                     _TRISC	set	3988
   355  0000                     _TRISB	set	3987
   356  0000                     _TRISA	set	3986
   357  0000                     _TRISE	set	3990
   358  0000                     _LATC	set	3979
   359  0000                     _LATB	set	3978
   360  0000                     _LATA	set	3977
   361  0000                     _LATD	set	3980
   362  0000                     _LATE	set	3981
   363  0000                     _T2CONbits	set	4026
   364  0000                     _PIE1bits	set	3997
   365  0000                     _PIR1bits	set	3998
   366  0000                     _TMR2	set	4028
   367  0000                     _PR2	set	4027
   368  0000                     _T2CON	set	4026
   369  0000                     _PIE5bits	set	3965
   370  0000                     _PIR5bits	set	3966
   371                           
   372                           ; #config settings
   373  0000                     
   374                           	psect	cinit
   375  0006E8                     __pcinit:
   376                           	opt stack 0
   377  0006E8                     start_initialization:
   378                           	opt stack 0
   379  0006E8                     __initialization:
   380                           	opt stack 0
   381                           
   382                           ; Initialize objects allocated to BANK0 (160 bytes)
   383                           ; load TBLPTR registers with __pidataBANK0
   384  0006E8  0E66               	movlw	low __pidataBANK0
   385  0006EA  6EF6               	movwf	tblptrl,c
   386  0006EC  0E05               	movlw	high __pidataBANK0
   387  0006EE  6EF7               	movwf	tblptrh,c
   388  0006F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   389  0006F2  6EF8               	movwf	tblptru,c
   390  0006F4  EE00  F060         	lfsr	0,__pdataBANK0
   391  0006F8  EE10 F0A0          	lfsr	1,160
   392  0006FC                     copy_data0:
   393  0006FC  0009               	tblrd		*+
   394  0006FE  CFF5 FFEE          	movff	tablat,postinc0
   395  000702  50E5               	movf	postdec1,w,c
   396  000704  50E1               	movf	fsr1l,w,c
   397  000706  E1FA               	bnz	copy_data0
   398                           
   399                           ; Initialize objects allocated to COMRAM (32 bytes)
   400                           ; load TBLPTR registers with __pidataCOMRAM
   401  000708  0EF4               	movlw	low __pidataCOMRAM
   402  00070A  6EF6               	movwf	tblptrl,c
   403  00070C  0E08               	movlw	high __pidataCOMRAM
   404  00070E  6EF7               	movwf	tblptrh,c
   405  000710  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   406  000712  6EF8               	movwf	tblptru,c
   407  000714  EE00  F001         	lfsr	0,__pdataCOMRAM
   408  000718  EE10 F020          	lfsr	1,32
   409  00071C                     copy_data1:
   410  00071C  0009               	tblrd		*+
   411  00071E  CFF5 FFEE          	movff	tablat,postinc0
   412  000722  50E5               	movf	postdec1,w,c
   413  000724  50E1               	movf	fsr1l,w,c
   414  000726  E1FA               	bnz	copy_data1
   415                           
   416                           ; Clear objects allocated to COMRAM (14 bytes)
   417  000728  EE00  F03C         	lfsr	0,__pbssCOMRAM
   418  00072C  0E0E               	movlw	14
   419  00072E                     clear_0:
   420  00072E  6AEE               	clrf	postinc0,c
   421  000730  06E8               	decf	wreg,f,c
   422  000732  E1FD               	bnz	clear_0
   423  000734                     end_of_initialization:
   424                           	opt stack 0
   425  000734                     __end_of__initialization:
   426                           	opt stack 0
   427  000734  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   428  000736  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   429  000738  0E00               	movlw	low (__Lmediumconst shr (0+16))
   430  00073A  6EF8               	movwf	tblptru,c
   431  00073C  0100               	movlb	0
   432  00073E  EF03  F003         	goto	_main	;jump to C main() function
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           postinc0	equ	0xFEE
   438                           wreg	equ	0xFE8
   439                           postdec1	equ	0xFE5
   440                           fsr1l	equ	0xFE1
   441                           
   442                           	psect	bssCOMRAM
   443  00003C                     __pbssCOMRAM:
   444                           	opt stack 0
   445  00003C                     _Timer2Tick_count:
   446                           	opt stack 0
   447  00003C                     	ds	2
   448  00003E                     _StepCount:
   449                           	opt stack 0
   450  00003E                     	ds	2
   451  000040                     _Microstep:
   452                           	opt stack 0
   453  000040                     	ds	2
   454  000042                     _ANALOG_1:
   455                           	opt stack 0
   456  000042                     	ds	2
   457  000044                     _ANALOG_0:
   458                           	opt stack 0
   459  000044                     	ds	2
   460  000046                     	ds	1
   461  000047                     _StepsComplete:
   462                           	opt stack 0
   463  000047                     	ds	1
   464  000048                     _DelayTimerTicked:
   465                           	opt stack 0
   466  000048                     	ds	1
   467  000049                     _Timer2Ticked:
   468                           	opt stack 0
   469  000049                     	ds	1
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           postdec1	equ	0xFE5
   477                           fsr1l	equ	0xFE1
   478                           
   479                           	psect	dataCOMRAM
   480  000001                     __pdataCOMRAM:
   481                           	opt stack 0
   482  000001                     _LookUP_TABLE_COS:
   483                           	opt stack 0
   484  000001                     	ds	32
   485                           tblptru	equ	0xFF8
   486                           tblptrh	equ	0xFF7
   487                           tblptrl	equ	0xFF6
   488                           tablat	equ	0xFF5
   489                           postinc0	equ	0xFEE
   490                           wreg	equ	0xFE8
   491                           postdec1	equ	0xFE5
   492                           fsr1l	equ	0xFE1
   493                           
   494                           	psect	dataBANK0
   495  000060                     __pdataBANK0:
   496                           	opt stack 0
   497  000060                     _LookUP_TABLE_SEN_16:
   498                           	opt stack 0
   499  000060                     	ds	64
   500  0000A0                     _LookUP_TABLE_COS_16:
   501                           	opt stack 0
   502  0000A0                     	ds	64
   503  0000E0                     _LookUP_TABLE_SEN:
   504                           	opt stack 0
   505  0000E0                     	ds	32
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           tblptrl	equ	0xFF6
   509                           tablat	equ	0xFF5
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           postdec1	equ	0xFE5
   513                           fsr1l	equ	0xFE1
   514                           
   515                           	psect	cstackCOMRAM
   516  000021                     __pcstackCOMRAM:
   517                           	opt stack 0
   518  000021                     ??_INTERRUPT_InterruptManager:
   519  000021                     
   520                           ; 1 bytes @ 0x0
   521  000021                     	ds	14
   522  00002F                     TMR6_SetInterruptHandler@InterruptHandler:
   523                           	opt stack 0
   524  00002F                     TMR2_SetInterruptHandler@InterruptHandler:
   525                           	opt stack 0
   526  00002F                     EPWM2_LoadDutyValue@dutyValue:
   527                           	opt stack 0
   528  00002F                     EPWM1_LoadDutyValue@dutyValue:
   529                           	opt stack 0
   530  00002F                     DelayTmr2@Timeout:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0xE
   534  00002F                     	ds	2
   535  000031                     ??_EPWM2_LoadDutyValue:
   536  000031                     ??_EPWM1_LoadDutyValue:
   537  000031                     
   538                           ; 1 bytes @ 0x10
   539  000031                     	ds	2
   540  000033                     ??_State16MEF_act:
   541  000033                     ??_State8MEF_act:
   542                           
   543                           ; 1 bytes @ 0x12
   544  000033                     	ds	1
   545  000034                     State8MEF_act@direccion:
   546                           	opt stack 0
   547  000034                     State16MEF_act@direccion:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x13
   551  000034                     	ds	1
   552  000035                     StepMove@StepNumber:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x14
   556  000035                     	ds	2
   557  000037                     StepMove@Velocidad:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0x16
   561  000037                     	ds	1
   562  000038                     StepMove@microstep_number:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x17
   566  000038                     	ds	1
   567  000039                     StepMove@direccion:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x18
   571  000039                     	ds	1
   572  00003A                     ??_StepMove:
   573                           
   574                           ; 1 bytes @ 0x19
   575  00003A                     	ds	2
   576  00003C                     tblptru	equ	0xFF8
   577                           tblptrh	equ	0xFF7
   578                           tblptrl	equ	0xFF6
   579                           tablat	equ	0xFF5
   580                           postinc0	equ	0xFEE
   581                           wreg	equ	0xFE8
   582                           postdec1	equ	0xFE5
   583                           fsr1l	equ	0xFE1
   584                           
   585                           ; 1 bytes @ 0x1B
   586 ;;
   587 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   588 ;;
   589 ;; *************** function _main *****************
   590 ;; Defined at:
   591 ;;		line 23 in file "main.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;		None
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;Total ram usage:        0 bytes
   610 ;; Hardware stack levels required when called:    7
   611 ;; This function calls:
   612 ;;		_DelayTmr2
   613 ;;		_Motor_Stop
   614 ;;		_SYSTEM_Initialize
   615 ;;		_StateMEF_ini
   616 ;;		_StepMove
   617 ;; This function is called by:
   618 ;;		Startup code after reset
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text0
   623  000606                     __ptext0:
   624                           	opt stack 0
   625  000606                     _main:
   626                           	opt stack 24
   627                           
   628                           ;main.c: 26: SYSTEM_Initialize();
   629                           
   630                           ;incstack = 0
   631  000606  ECF7  F003         	call	_SYSTEM_Initialize	;wreg free
   632                           
   633                           ;main.c: 27: StateMEF_ini();
   634  00060A  ECC2  F004         	call	_StateMEF_ini	;wreg free
   635                           
   636                           ;main.c: 28: Timer2Ticked=0;
   637  00060E  0E00               	movlw	0
   638  000610  6E49               	movwf	_Timer2Ticked,c	;volatile
   639                           
   640                           ;main.c: 29: DelayTimerTicked=0;
   641  000612  0E00               	movlw	0
   642  000614  6E48               	movwf	_DelayTimerTicked,c	;volatile
   643                           
   644                           ;main.c: 30: do { LATBbits.LATB6 = 1; } while(0);
   645  000616  8C8A               	bsf	3978,6,c	;volatile
   646                           
   647                           ;main.c: 33: (INTCONbits.GIE = 1);
   648  000618  8EF2               	bsf	intcon,7,c	;volatile
   649                           
   650                           ;main.c: 36: (INTCONbits.PEIE = 1);
   651  00061A  8CF2               	bsf	intcon,6,c	;volatile
   652  00061C                     l1953:
   653  00061C  0E0B               	movlw	11
   654  00061E  6E36               	movwf	StepMove@StepNumber+1,c
   655  000620  0EB8               	movlw	184
   656  000622  6E35               	movwf	StepMove@StepNumber,c
   657  000624  0E14               	movlw	20
   658  000626  6E37               	movwf	StepMove@Velocidad,c
   659  000628  0E10               	movlw	16
   660  00062A  6E38               	movwf	StepMove@microstep_number,c
   661  00062C  0E01               	movlw	1
   662  00062E  6E39               	movwf	StepMove@direccion,c
   663  000630  EC41  F003         	call	_StepMove	;wreg free
   664  000634  0900               	iorlw	0
   665  000636  B4D8               	btfsc	status,2,c
   666  000638  D7F1               	goto	l1953
   667                           
   668                           ;main.c: 43: Motor_Stop();
   669  00063A  ECB9  F004         	call	_Motor_Stop	;wreg free
   670                           
   671                           ;main.c: 45: StateMEF_ini();
   672  00063E  ECC2  F004         	call	_StateMEF_ini	;wreg free
   673                           
   674                           ;main.c: 47: DelayTmr2(19230);
   675  000642  0E4B               	movlw	75
   676  000644  6E30               	movwf	DelayTmr2@Timeout+1,c
   677  000646  0E1E               	movlw	30
   678  000648  6E2F               	movwf	DelayTmr2@Timeout,c
   679  00064A  EC8A  F004         	call	_DelayTmr2	;wreg free
   680  00064E                     l1959:
   681  00064E  0E0B               	movlw	11
   682  000650  6E36               	movwf	StepMove@StepNumber+1,c
   683  000652  0EB8               	movlw	184
   684  000654  6E35               	movwf	StepMove@StepNumber,c
   685  000656  0E14               	movlw	20
   686  000658  6E37               	movwf	StepMove@Velocidad,c
   687  00065A  0E10               	movlw	16
   688  00065C  6E38               	movwf	StepMove@microstep_number,c
   689  00065E  0E00               	movlw	0
   690  000660  6E39               	movwf	StepMove@direccion,c
   691  000662  EC41  F003         	call	_StepMove	;wreg free
   692  000666  0900               	iorlw	0
   693  000668  B4D8               	btfsc	status,2,c
   694  00066A  D7F1               	goto	l1959
   695                           
   696                           ;main.c: 51: Motor_Stop();
   697  00066C  ECB9  F004         	call	_Motor_Stop	;wreg free
   698                           
   699                           ;main.c: 53: DelayTmr2(19230);
   700  000670  0E4B               	movlw	75
   701  000672  6E30               	movwf	DelayTmr2@Timeout+1,c
   702  000674  0E1E               	movlw	30
   703  000676  6E2F               	movwf	DelayTmr2@Timeout,c
   704  000678  EC8A  F004         	call	_DelayTmr2	;wreg free
   705                           
   706                           ;main.c: 55: StateMEF_ini();
   707  00067C  ECC2  F004         	call	_StateMEF_ini	;wreg free
   708  000680  D7CD               	goto	l1953
   709  000682                     __end_of_main:
   710                           	opt stack 0
   711                           tblptru	equ	0xFF8
   712                           tblptrh	equ	0xFF7
   713                           tblptrl	equ	0xFF6
   714                           tablat	equ	0xFF5
   715                           intcon	equ	0xFF2
   716                           postinc0	equ	0xFEE
   717                           wreg	equ	0xFE8
   718                           postdec1	equ	0xFE5
   719                           fsr1l	equ	0xFE1
   720                           status	equ	0xFD8
   721                           
   722 ;; *************** function _StepMove *****************
   723 ;; Defined at:
   724 ;;		line 42 in file "MotorDriver.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  StepNumber      2   20[COMRAM] unsigned int 
   727 ;;  Velocidad       1   22[COMRAM] unsigned char 
   728 ;;  microstep_nu    1   23[COMRAM] unsigned char 
   729 ;;  direccion       1   24[COMRAM] unsigned char 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      unsigned char 
   734 ;; Registers used:
   735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   741 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;Total ram usage:        7 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    6
   748 ;; This function calls:
   749 ;;		_State16MEF_act
   750 ;;		_State8MEF_act
   751 ;; This function is called by:
   752 ;;		_main
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text1
   757  000682                     __ptext1:
   758                           	opt stack 0
   759  000682                     _StepMove:
   760                           	opt stack 24
   761                           
   762                           ;MotorDriver.c: 44: if ((StepCount<StepNumber)){
   763                           
   764                           ;incstack = 0
   765  000682  5035               	movf	StepMove@StepNumber,w,c
   766  000684  5C3E               	subwf	_StepCount,w,c
   767  000686  5036               	movf	StepMove@StepNumber+1,w,c
   768  000688  583F               	subwfb	_StepCount+1,w,c
   769  00068A  B0D8               	btfsc	status,0,c
   770  00068C  D025               	goto	l1925
   771                           
   772                           ;MotorDriver.c: 45: if (Timer2Ticked){
   773  00068E  5049               	movf	_Timer2Ticked,w,c	;volatile
   774  000690  B4D8               	btfsc	status,2,c
   775  000692  D01F               	goto	l1923
   776                           
   777                           ;MotorDriver.c: 46: Timer2Tick_count++;
   778  000694  4A3C               	infsnz	_Timer2Tick_count,f,c
   779  000696  2A3D               	incf	_Timer2Tick_count+1,f,c
   780                           
   781                           ;MotorDriver.c: 47: if (Timer2Tick_count == Velocidad){
   782  000698  5037               	movf	StepMove@Velocidad,w,c
   783  00069A  6E3A               	movwf	??_StepMove& (0+255),c
   784  00069C  6A3B               	clrf	(??_StepMove+1)& (0+255),c
   785  00069E  503C               	movf	_Timer2Tick_count,w,c
   786  0006A0  183A               	xorwf	??_StepMove,w,c
   787  0006A2  E115               	bnz	l1921
   788  0006A4  503D               	movf	_Timer2Tick_count+1,w,c
   789  0006A6  183B               	xorwf	??_StepMove+1,w,c
   790  0006A8  A4D8               	btfss	status,2,c
   791  0006AA  D011               	goto	l1921
   792                           
   793                           ;MotorDriver.c: 48: if (microstep_number==16){
   794  0006AC  0E10               	movlw	16
   795  0006AE  1838               	xorwf	StepMove@microstep_number,w,c
   796  0006B0  A4D8               	btfss	status,2,c
   797  0006B2  D004               	goto	l1915
   798                           
   799                           ;MotorDriver.c: 49: State16MEF_act( direccion );
   800  0006B4  5039               	movf	StepMove@direccion,w,c
   801  0006B6  EC85  F001         	call	_State16MEF_act
   802                           
   803                           ;MotorDriver.c: 50: }
   804  0006BA  D003               	goto	l1917
   805  0006BC                     l1915:
   806                           
   807                           ;MotorDriver.c: 51: else{
   808                           ;MotorDriver.c: 53: State8MEF_act( direccion );
   809  0006BC  5039               	movf	StepMove@direccion,w,c
   810  0006BE  EC57  F000         	call	_State8MEF_act
   811  0006C2                     l1917:
   812                           
   813                           ;MotorDriver.c: 54: }
   814                           ;MotorDriver.c: 55: StepCount++;
   815  0006C2  4A3E               	infsnz	_StepCount,f,c
   816  0006C4  2A3F               	incf	_StepCount+1,f,c
   817                           
   818                           ;MotorDriver.c: 56: Timer2Tick_count=0;
   819  0006C6  0E00               	movlw	0
   820  0006C8  6E3D               	movwf	_Timer2Tick_count+1,c
   821  0006CA  0E00               	movlw	0
   822  0006CC  6E3C               	movwf	_Timer2Tick_count,c
   823  0006CE                     l1921:
   824                           
   825                           ;MotorDriver.c: 57: }
   826                           ;MotorDriver.c: 58: Timer2Ticked = 0;
   827  0006CE  0E00               	movlw	0
   828  0006D0  6E49               	movwf	_Timer2Ticked,c	;volatile
   829  0006D2                     l1923:
   830                           
   831                           ;MotorDriver.c: 59: }
   832                           ;MotorDriver.c: 60: StepsComplete=0;
   833  0006D2  0E00               	movlw	0
   834  0006D4  6E47               	movwf	_StepsComplete,c
   835                           
   836                           ;MotorDriver.c: 62: }
   837  0006D6  D006               	goto	l427
   838  0006D8                     l1925:
   839                           
   840                           ;MotorDriver.c: 63: else{
   841                           ;MotorDriver.c: 64: StepsComplete=1;
   842  0006D8  0E01               	movlw	1
   843  0006DA  6E47               	movwf	_StepsComplete,c
   844                           
   845                           ;MotorDriver.c: 65: StepCount=0;
   846  0006DC  0E00               	movlw	0
   847  0006DE  6E3F               	movwf	_StepCount+1,c
   848  0006E0  0E00               	movlw	0
   849  0006E2  6E3E               	movwf	_StepCount,c
   850  0006E4                     l427:
   851                           
   852                           ;MotorDriver.c: 67: }
   853                           ;MotorDriver.c: 68: return(StepsComplete);
   854  0006E4  5047               	movf	_StepsComplete,w,c
   855  0006E6  0012               	return	
   856  0006E8                     __end_of_StepMove:
   857                           	opt stack 0
   858                           tblptru	equ	0xFF8
   859                           tblptrh	equ	0xFF7
   860                           tblptrl	equ	0xFF6
   861                           tablat	equ	0xFF5
   862                           intcon	equ	0xFF2
   863                           postinc0	equ	0xFEE
   864                           wreg	equ	0xFE8
   865                           postdec1	equ	0xFE5
   866                           fsr1l	equ	0xFE1
   867                           status	equ	0xFD8
   868                           
   869 ;; *************** function _State8MEF_act *****************
   870 ;; Defined at:
   871 ;;		line 101 in file "MotorDriver.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;  direccion       1    wreg     unsigned char 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  direccion       1   19[COMRAM] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;Total ram usage:        2 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    5
   892 ;; This function calls:
   893 ;;		_EPWM1_LoadDutyValue
   894 ;;		_EPWM2_LoadDutyValue
   895 ;; This function is called by:
   896 ;;		_StepMove
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text2
   901  0000AE                     __ptext2:
   902                           	opt stack 0
   903  0000AE                     _State8MEF_act:
   904                           	opt stack 24
   905                           
   906                           ;incstack = 0
   907                           ;State8MEF_act@direccion stored from wreg
   908  0000AE  6E34               	movwf	State8MEF_act@direccion,c
   909                           
   910                           ;MotorDriver.c: 103: switch(EstadoActual) {
   911  0000B0  D11D               	goto	l1881
   912  0000B2                     l1775:
   913                           
   914                           ;MotorDriver.c: 105: PSTR1CON = 0x01; PSTR2CON = 0x01;
   915  0000B2  0E01               	movlw	1
   916  0000B4  6EB9               	movwf	4025,c	;volatile
   917  0000B6  0E01               	movlw	1
   918  0000B8  6E63               	movwf	3939,c	;volatile
   919                           
   920                           ;MotorDriver.c: 106: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
   921  0000BA  9A8C               	bcf	3980,5,c	;volatile
   922  0000BC  908B               	bcf	3979,0,c	;volatile
   923                           
   924                           ;MotorDriver.c: 107: if (Microstep<8){
   925  0000BE  BE41               	btfsc	_Microstep+1,7,c
   926  0000C0  D006               	goto	l1783
   927  0000C2  5041               	movf	_Microstep+1,w,c
   928  0000C4  E103               	bnz	u881
   929  0000C6  0E08               	movlw	8
   930  0000C8  5C40               	subwf	_Microstep,w,c
   931  0000CA  B0D8               	btfsc	status,0,c
   932  0000CC                     u881:
   933  0000CC  0012               	return	
   934  0000CE                     l1783:
   935                           
   936                           ;MotorDriver.c: 111: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   937  0000CE  0E01               	movlw	low _LookUP_TABLE_COS
   938  0000D0  2440               	addwf	_Microstep,w,c
   939  0000D2  6ED9               	movwf	fsr2l,c
   940  0000D4  0E00               	movlw	high _LookUP_TABLE_COS
   941  0000D6  2041               	addwfc	_Microstep+1,w,c
   942  0000D8  6EDA               	movwf	fsr2h,c
   943  0000DA  50DF               	movf	indf2,w,c
   944  0000DC  6E33               	movwf	??_State8MEF_act& (0+255),c
   945  0000DE  5033               	movf	??_State8MEF_act,w,c
   946  0000E0  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   947  0000E2  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   948  0000E4  ECDF  F003         	call	_EPWM1_LoadDutyValue	;wreg free
   949                           
   950                           ;MotorDriver.c: 112: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   951  0000E8  0EE0               	movlw	low _LookUP_TABLE_SEN
   952  0000EA  2440               	addwf	_Microstep,w,c
   953  0000EC  6ED9               	movwf	fsr2l,c
   954  0000EE  0E00               	movlw	high _LookUP_TABLE_SEN
   955  0000F0  2041               	addwfc	_Microstep+1,w,c
   956  0000F2  6EDA               	movwf	fsr2h,c
   957  0000F4  50DF               	movf	indf2,w,c
   958  0000F6  6E33               	movwf	??_State8MEF_act& (0+255),c
   959  0000F8  5033               	movf	??_State8MEF_act,w,c
   960  0000FA  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   961  0000FC  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   962  0000FE  ECC7  F003         	call	_EPWM2_LoadDutyValue	;wreg free
   963                           
   964                           ;MotorDriver.c: 114: if (direccion == 1){
   965  000102  0434               	decf	State8MEF_act@direccion,w,c
   966  000104  A4D8               	btfss	status,2,c
   967  000106  D00A               	goto	l1793
   968                           
   969                           ;MotorDriver.c: 115: if (Microstep==7){
   970  000108  0E07               	movlw	7
   971  00010A  1840               	xorwf	_Microstep,w,c
   972  00010C  1041               	iorwf	_Microstep+1,w,c
   973  00010E  A4D8               	btfss	status,2,c
   974  000110  D002               	goto	l1791
   975                           
   976                           ;MotorDriver.c: 116: EstadoActual = STATE2;
   977  000112  0E02               	movlw	2
   978  000114  6E4E               	movwf	_EstadoActual,c
   979  000116                     l1791:
   980                           
   981                           ;MotorDriver.c: 117: }
   982                           ;MotorDriver.c: 118: Microstep++;
   983  000116  4A40               	infsnz	_Microstep,f,c
   984  000118  2A41               	incf	_Microstep+1,f,c
   985                           
   986                           ;MotorDriver.c: 119: }
   987  00011A  0012               	return	
   988  00011C                     l1793:
   989                           
   990                           ;MotorDriver.c: 120: else{
   991                           ;MotorDriver.c: 121: if (Microstep==0){
   992  00011C  5040               	movf	_Microstep,w,c
   993  00011E  1041               	iorwf	_Microstep+1,w,c
   994  000120  A4D8               	btfss	status,2,c
   995  000122  D006               	goto	l1797
   996                           
   997                           ;MotorDriver.c: 122: EstadoActual = STATE4;
   998  000124  0E04               	movlw	4
   999  000126  6E4E               	movwf	_EstadoActual,c
  1000                           
  1001                           ;MotorDriver.c: 123: Microstep=31;
  1002  000128  0E00               	movlw	0
  1003  00012A  6E41               	movwf	_Microstep+1,c
  1004  00012C  0E1F               	movlw	31
  1005  00012E  6E40               	movwf	_Microstep,c
  1006  000130                     l1797:
  1007                           
  1008                           ;MotorDriver.c: 124: }
  1009                           ;MotorDriver.c: 125: Microstep--;
  1010  000130  0640               	decf	_Microstep,f,c
  1011  000132  A0D8               	btfss	status,0,c
  1012  000134  0641               	decf	_Microstep+1,f,c
  1013                           
  1014                           ;MotorDriver.c: 126: }
  1015                           ;MotorDriver.c: 127: }
  1016                           ;MotorDriver.c: 128: break;
  1017  000136  0012               	return	
  1018  000138                     l1799:
  1019                           
  1020                           ;MotorDriver.c: 130: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1021  000138  0E02               	movlw	2
  1022  00013A  6EB9               	movwf	4025,c	;volatile
  1023  00013C  0E01               	movlw	1
  1024  00013E  6E63               	movwf	3939,c	;volatile
  1025                           
  1026                           ;MotorDriver.c: 131: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1027  000140  948B               	bcf	3979,2,c	;volatile
  1028  000142  908B               	bcf	3979,0,c	;volatile
  1029                           
  1030                           ;MotorDriver.c: 132: if ((Microstep<16)&&(Microstep>7)){
  1031  000144  BE41               	btfsc	_Microstep+1,7,c
  1032  000146  D006               	goto	l1807
  1033  000148  5041               	movf	_Microstep+1,w,c
  1034  00014A  E103               	bnz	u921
  1035  00014C  0E10               	movlw	16
  1036  00014E  5C40               	subwf	_Microstep,w,c
  1037  000150  B0D8               	btfsc	status,0,c
  1038  000152                     u921:
  1039  000152  0012               	return	
  1040  000154                     l1807:
  1041  000154  BE41               	btfsc	_Microstep+1,7,c
  1042  000156  0012               	return	
  1043  000158  5041               	movf	_Microstep+1,w,c
  1044  00015A  E104               	bnz	u930
  1045  00015C  0E08               	movlw	8
  1046  00015E  5C40               	subwf	_Microstep,w,c
  1047  000160  A0D8               	btfss	status,0,c
  1048  000162  0012               	return	
  1049  000164                     u930:
  1050                           
  1051                           ;MotorDriver.c: 137: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1052  000164  0E01               	movlw	low _LookUP_TABLE_COS
  1053  000166  2440               	addwf	_Microstep,w,c
  1054  000168  6ED9               	movwf	fsr2l,c
  1055  00016A  0E00               	movlw	high _LookUP_TABLE_COS
  1056  00016C  2041               	addwfc	_Microstep+1,w,c
  1057  00016E  6EDA               	movwf	fsr2h,c
  1058  000170  50DF               	movf	indf2,w,c
  1059  000172  6E33               	movwf	??_State8MEF_act& (0+255),c
  1060  000174  5033               	movf	??_State8MEF_act,w,c
  1061  000176  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1062  000178  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1063  00017A  ECDF  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1064                           
  1065                           ;MotorDriver.c: 138: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1066  00017E  0EE0               	movlw	low _LookUP_TABLE_SEN
  1067  000180  2440               	addwf	_Microstep,w,c
  1068  000182  6ED9               	movwf	fsr2l,c
  1069  000184  0E00               	movlw	high _LookUP_TABLE_SEN
  1070  000186  2041               	addwfc	_Microstep+1,w,c
  1071  000188  6EDA               	movwf	fsr2h,c
  1072  00018A  50DF               	movf	indf2,w,c
  1073  00018C  6E33               	movwf	??_State8MEF_act& (0+255),c
  1074  00018E  5033               	movf	??_State8MEF_act,w,c
  1075  000190  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1076  000192  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1077  000194  ECC7  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1078                           
  1079                           ;MotorDriver.c: 140: if (direccion == 1){
  1080  000198  0434               	decf	State8MEF_act@direccion,w,c
  1081  00019A  A4D8               	btfss	status,2,c
  1082  00019C  D00A               	goto	l1819
  1083                           
  1084                           ;MotorDriver.c: 141: if (Microstep==15){
  1085  00019E  0E0F               	movlw	15
  1086  0001A0  1840               	xorwf	_Microstep,w,c
  1087  0001A2  1041               	iorwf	_Microstep+1,w,c
  1088  0001A4  A4D8               	btfss	status,2,c
  1089  0001A6  D002               	goto	l1817
  1090                           
  1091                           ;MotorDriver.c: 142: EstadoActual = STATE3;
  1092  0001A8  0E03               	movlw	3
  1093  0001AA  6E4E               	movwf	_EstadoActual,c
  1094  0001AC                     l1817:
  1095                           
  1096                           ;MotorDriver.c: 143: }
  1097                           ;MotorDriver.c: 144: Microstep++;
  1098  0001AC  4A40               	infsnz	_Microstep,f,c
  1099  0001AE  2A41               	incf	_Microstep+1,f,c
  1100                           
  1101                           ;MotorDriver.c: 145: }
  1102  0001B0  0012               	return	
  1103  0001B2                     l1819:
  1104                           
  1105                           ;MotorDriver.c: 146: else{
  1106                           ;MotorDriver.c: 147: if (Microstep==8){
  1107  0001B2  0E08               	movlw	8
  1108  0001B4  1840               	xorwf	_Microstep,w,c
  1109  0001B6  1041               	iorwf	_Microstep+1,w,c
  1110  0001B8  A4D8               	btfss	status,2,c
  1111  0001BA  D002               	goto	l1823
  1112                           
  1113                           ;MotorDriver.c: 148: EstadoActual = STATE1;
  1114  0001BC  0E01               	movlw	1
  1115  0001BE  6E4E               	movwf	_EstadoActual,c
  1116  0001C0                     l1823:
  1117                           
  1118                           ;MotorDriver.c: 149: }
  1119                           ;MotorDriver.c: 150: Microstep--;
  1120  0001C0  0640               	decf	_Microstep,f,c
  1121  0001C2  A0D8               	btfss	status,0,c
  1122  0001C4  0641               	decf	_Microstep+1,f,c
  1123                           
  1124                           ;MotorDriver.c: 151: }
  1125                           ;MotorDriver.c: 152: }
  1126                           ;MotorDriver.c: 153: break;
  1127  0001C6  0012               	return	
  1128  0001C8                     l1825:
  1129                           
  1130                           ;MotorDriver.c: 155: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1131  0001C8  0E02               	movlw	2
  1132  0001CA  6EB9               	movwf	4025,c	;volatile
  1133  0001CC  0E02               	movlw	2
  1134  0001CE  6E63               	movwf	3939,c	;volatile
  1135                           
  1136                           ;MotorDriver.c: 156: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1137  0001D0  948B               	bcf	3979,2,c	;volatile
  1138  0001D2  928B               	bcf	3979,1,c	;volatile
  1139                           
  1140                           ;MotorDriver.c: 157: if ((Microstep<24)&&(Microstep>15)){
  1141  0001D4  BE41               	btfsc	_Microstep+1,7,c
  1142  0001D6  D006               	goto	l1833
  1143  0001D8  5041               	movf	_Microstep+1,w,c
  1144  0001DA  E103               	bnz	u971
  1145  0001DC  0E18               	movlw	24
  1146  0001DE  5C40               	subwf	_Microstep,w,c
  1147  0001E0  B0D8               	btfsc	status,0,c
  1148  0001E2                     u971:
  1149  0001E2  0012               	return	
  1150  0001E4                     l1833:
  1151  0001E4  BE41               	btfsc	_Microstep+1,7,c
  1152  0001E6  0012               	return	
  1153  0001E8  5041               	movf	_Microstep+1,w,c
  1154  0001EA  E104               	bnz	u980
  1155  0001EC  0E10               	movlw	16
  1156  0001EE  5C40               	subwf	_Microstep,w,c
  1157  0001F0  A0D8               	btfss	status,0,c
  1158  0001F2  0012               	return	
  1159  0001F4                     u980:
  1160                           
  1161                           ;MotorDriver.c: 162: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1162  0001F4  0E01               	movlw	low _LookUP_TABLE_COS
  1163  0001F6  2440               	addwf	_Microstep,w,c
  1164  0001F8  6ED9               	movwf	fsr2l,c
  1165  0001FA  0E00               	movlw	high _LookUP_TABLE_COS
  1166  0001FC  2041               	addwfc	_Microstep+1,w,c
  1167  0001FE  6EDA               	movwf	fsr2h,c
  1168  000200  50DF               	movf	indf2,w,c
  1169  000202  6E33               	movwf	??_State8MEF_act& (0+255),c
  1170  000204  5033               	movf	??_State8MEF_act,w,c
  1171  000206  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1172  000208  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1173  00020A  ECDF  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1174                           
  1175                           ;MotorDriver.c: 163: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1176  00020E  0EE0               	movlw	low _LookUP_TABLE_SEN
  1177  000210  2440               	addwf	_Microstep,w,c
  1178  000212  6ED9               	movwf	fsr2l,c
  1179  000214  0E00               	movlw	high _LookUP_TABLE_SEN
  1180  000216  2041               	addwfc	_Microstep+1,w,c
  1181  000218  6EDA               	movwf	fsr2h,c
  1182  00021A  50DF               	movf	indf2,w,c
  1183  00021C  6E33               	movwf	??_State8MEF_act& (0+255),c
  1184  00021E  5033               	movf	??_State8MEF_act,w,c
  1185  000220  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1186  000222  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1187  000224  ECC7  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1188                           
  1189                           ;MotorDriver.c: 165: if (direccion == 1){
  1190  000228  0434               	decf	State8MEF_act@direccion,w,c
  1191  00022A  A4D8               	btfss	status,2,c
  1192  00022C  D00A               	goto	l1845
  1193                           
  1194                           ;MotorDriver.c: 166: if (Microstep==23){
  1195  00022E  0E17               	movlw	23
  1196  000230  1840               	xorwf	_Microstep,w,c
  1197  000232  1041               	iorwf	_Microstep+1,w,c
  1198  000234  A4D8               	btfss	status,2,c
  1199  000236  D002               	goto	l1843
  1200                           
  1201                           ;MotorDriver.c: 167: EstadoActual = STATE4;
  1202  000238  0E04               	movlw	4
  1203  00023A  6E4E               	movwf	_EstadoActual,c
  1204  00023C                     l1843:
  1205                           
  1206                           ;MotorDriver.c: 168: }
  1207                           ;MotorDriver.c: 169: Microstep++;
  1208  00023C  4A40               	infsnz	_Microstep,f,c
  1209  00023E  2A41               	incf	_Microstep+1,f,c
  1210                           
  1211                           ;MotorDriver.c: 170: }
  1212  000240  0012               	return	
  1213  000242                     l1845:
  1214                           
  1215                           ;MotorDriver.c: 171: else{
  1216                           ;MotorDriver.c: 172: if (Microstep==16){
  1217  000242  0E10               	movlw	16
  1218  000244  1840               	xorwf	_Microstep,w,c
  1219  000246  1041               	iorwf	_Microstep+1,w,c
  1220  000248  A4D8               	btfss	status,2,c
  1221  00024A  D002               	goto	l1849
  1222                           
  1223                           ;MotorDriver.c: 173: EstadoActual = STATE2;
  1224  00024C  0E02               	movlw	2
  1225  00024E  6E4E               	movwf	_EstadoActual,c
  1226  000250                     l1849:
  1227                           
  1228                           ;MotorDriver.c: 174: }
  1229                           ;MotorDriver.c: 175: Microstep--;
  1230  000250  0640               	decf	_Microstep,f,c
  1231  000252  A0D8               	btfss	status,0,c
  1232  000254  0641               	decf	_Microstep+1,f,c
  1233                           
  1234                           ;MotorDriver.c: 176: }
  1235                           ;MotorDriver.c: 177: }
  1236                           ;MotorDriver.c: 178: break;
  1237  000256  0012               	return	
  1238  000258                     l1851:
  1239                           
  1240                           ;MotorDriver.c: 180: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1241  000258  0E01               	movlw	1
  1242  00025A  6EB9               	movwf	4025,c	;volatile
  1243  00025C  0E02               	movlw	2
  1244  00025E  6E63               	movwf	3939,c	;volatile
  1245                           
  1246                           ;MotorDriver.c: 181: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1247  000260  9A8C               	bcf	3980,5,c	;volatile
  1248  000262  928B               	bcf	3979,1,c	;volatile
  1249                           
  1250                           ;MotorDriver.c: 182: if ((Microstep<32)&&(Microstep>23)){
  1251  000264  BE41               	btfsc	_Microstep+1,7,c
  1252  000266  D006               	goto	l1859
  1253  000268  5041               	movf	_Microstep+1,w,c
  1254  00026A  E14E               	bnz	l497
  1255  00026C  0E20               	movlw	32
  1256  00026E  5C40               	subwf	_Microstep,w,c
  1257  000270  B0D8               	btfsc	status,0,c
  1258  000272  0012               	return	
  1259  000274                     l1859:
  1260  000274  BE41               	btfsc	_Microstep+1,7,c
  1261  000276  0012               	return	
  1262  000278  5041               	movf	_Microstep+1,w,c
  1263  00027A  E104               	bnz	u1030
  1264  00027C  0E18               	movlw	24
  1265  00027E  5C40               	subwf	_Microstep,w,c
  1266  000280  A0D8               	btfss	status,0,c
  1267  000282  0012               	return	
  1268  000284                     u1030:
  1269                           
  1270                           ;MotorDriver.c: 187: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1271  000284  0E01               	movlw	low _LookUP_TABLE_COS
  1272  000286  2440               	addwf	_Microstep,w,c
  1273  000288  6ED9               	movwf	fsr2l,c
  1274  00028A  0E00               	movlw	high _LookUP_TABLE_COS
  1275  00028C  2041               	addwfc	_Microstep+1,w,c
  1276  00028E  6EDA               	movwf	fsr2h,c
  1277  000290  50DF               	movf	indf2,w,c
  1278  000292  6E33               	movwf	??_State8MEF_act& (0+255),c
  1279  000294  5033               	movf	??_State8MEF_act,w,c
  1280  000296  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1281  000298  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1282  00029A  ECDF  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1283                           
  1284                           ;MotorDriver.c: 188: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1285  00029E  0EE0               	movlw	low _LookUP_TABLE_SEN
  1286  0002A0  2440               	addwf	_Microstep,w,c
  1287  0002A2  6ED9               	movwf	fsr2l,c
  1288  0002A4  0E00               	movlw	high _LookUP_TABLE_SEN
  1289  0002A6  2041               	addwfc	_Microstep+1,w,c
  1290  0002A8  6EDA               	movwf	fsr2h,c
  1291  0002AA  50DF               	movf	indf2,w,c
  1292  0002AC  6E33               	movwf	??_State8MEF_act& (0+255),c
  1293  0002AE  5033               	movf	??_State8MEF_act,w,c
  1294  0002B0  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1295  0002B2  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1296  0002B4  ECC7  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1297                           
  1298                           ;MotorDriver.c: 190: if (direccion == 1){
  1299  0002B8  0434               	decf	State8MEF_act@direccion,w,c
  1300  0002BA  A4D8               	btfss	status,2,c
  1301  0002BC  D00C               	goto	l1873
  1302                           
  1303                           ;MotorDriver.c: 191: if (Microstep==31){
  1304  0002BE  0E1F               	movlw	31
  1305  0002C0  1840               	xorwf	_Microstep,w,c
  1306  0002C2  1041               	iorwf	_Microstep+1,w,c
  1307  0002C4  A4D8               	btfss	status,2,c
  1308  0002C6  D004               	goto	l1871
  1309                           
  1310                           ;MotorDriver.c: 192: EstadoActual = STATE1;
  1311  0002C8  0E01               	movlw	1
  1312  0002CA  6E4E               	movwf	_EstadoActual,c
  1313                           
  1314                           ;MotorDriver.c: 193: Microstep=-1;
  1315  0002CC  6840               	setf	_Microstep,c
  1316  0002CE  6841               	setf	_Microstep+1,c
  1317  0002D0                     l1871:
  1318                           
  1319                           ;MotorDriver.c: 194: }
  1320                           ;MotorDriver.c: 195: Microstep++;
  1321  0002D0  4A40               	infsnz	_Microstep,f,c
  1322  0002D2  2A41               	incf	_Microstep+1,f,c
  1323                           
  1324                           ;MotorDriver.c: 196: }
  1325  0002D4  0012               	return	
  1326  0002D6                     l1873:
  1327                           
  1328                           ;MotorDriver.c: 197: else{
  1329                           ;MotorDriver.c: 198: if (Microstep==24){
  1330  0002D6  0E18               	movlw	24
  1331  0002D8  1840               	xorwf	_Microstep,w,c
  1332  0002DA  1041               	iorwf	_Microstep+1,w,c
  1333  0002DC  A4D8               	btfss	status,2,c
  1334  0002DE  D002               	goto	l1877
  1335                           
  1336                           ;MotorDriver.c: 199: EstadoActual = STATE3;
  1337  0002E0  0E03               	movlw	3
  1338  0002E2  6E4E               	movwf	_EstadoActual,c
  1339  0002E4                     l1877:
  1340                           
  1341                           ;MotorDriver.c: 200: }
  1342                           ;MotorDriver.c: 201: Microstep--;
  1343  0002E4  0640               	decf	_Microstep,f,c
  1344  0002E6  A0D8               	btfss	status,0,c
  1345  0002E8  0641               	decf	_Microstep+1,f,c
  1346                           
  1347                           ;MotorDriver.c: 208: }
  1348                           
  1349                           ;MotorDriver.c: 207: break;
  1350                           
  1351                           ;MotorDriver.c: 205: default:
  1352                           
  1353                           ;MotorDriver.c: 202: }
  1354                           ;MotorDriver.c: 203: }
  1355                           ;MotorDriver.c: 204: break;
  1356  0002EA  0012               	return	
  1357  0002EC                     l1881:
  1358  0002EC  504E               	movf	_EstadoActual,w,c
  1359                           
  1360                           ; Switch size 1, requested type "space"
  1361                           ; Number of cases is 4, Range of values is 1 to 4
  1362                           ; switch strategies available:
  1363                           ; Name         Instructions Cycles
  1364                           ; simple_byte           13     7 (average)
  1365                           ;	Chosen strategy is simple_byte
  1366  0002EE  0A01               	xorlw	1	; case 1
  1367  0002F0  B4D8               	btfsc	status,2,c
  1368  0002F2  D6DF               	goto	l1775
  1369  0002F4  0A03               	xorlw	3	; case 2
  1370  0002F6  B4D8               	btfsc	status,2,c
  1371  0002F8  D71F               	goto	l1799
  1372  0002FA  0A01               	xorlw	1	; case 3
  1373  0002FC  B4D8               	btfsc	status,2,c
  1374  0002FE  D764               	goto	l1825
  1375  000300  0A07               	xorlw	7	; case 4
  1376  000302  A4D8               	btfss	status,2,c
  1377  000304  0012               	return	
  1378  000306  D7A8               	goto	l1851
  1379  000308                     l497:
  1380  000308  0012               	return		;funcret
  1381  00030A                     __end_of_State8MEF_act:
  1382                           	opt stack 0
  1383                           tblptru	equ	0xFF8
  1384                           tblptrh	equ	0xFF7
  1385                           tblptrl	equ	0xFF6
  1386                           tablat	equ	0xFF5
  1387                           intcon	equ	0xFF2
  1388                           postinc0	equ	0xFEE
  1389                           wreg	equ	0xFE8
  1390                           postdec1	equ	0xFE5
  1391                           fsr1l	equ	0xFE1
  1392                           indf2	equ	0xFDF
  1393                           fsr2h	equ	0xFDA
  1394                           fsr2l	equ	0xFD9
  1395                           status	equ	0xFD8
  1396                           
  1397 ;; *************** function _State16MEF_act *****************
  1398 ;; Defined at:
  1399 ;;		line 211 in file "MotorDriver.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  direccion       1    wreg     unsigned char 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  direccion       1   19[COMRAM] unsigned char 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;Total ram usage:        2 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; Hardware stack levels required when called:    5
  1420 ;; This function calls:
  1421 ;;		_EPWM1_LoadDutyValue
  1422 ;;		_EPWM2_LoadDutyValue
  1423 ;; This function is called by:
  1424 ;;		_StepMove
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text3
  1429  00030A                     __ptext3:
  1430                           	opt stack 0
  1431  00030A                     _State16MEF_act:
  1432                           	opt stack 24
  1433                           
  1434                           ;incstack = 0
  1435                           ;State16MEF_act@direccion stored from wreg
  1436  00030A  6E34               	movwf	State16MEF_act@direccion,c
  1437                           
  1438                           ;MotorDriver.c: 213: switch(EstadoActual) {
  1439  00030C  D11D               	goto	l1771
  1440  00030E                     l1665:
  1441                           
  1442                           ;MotorDriver.c: 215: PSTR1CON = 0x01; PSTR2CON = 0x01;
  1443  00030E  0E01               	movlw	1
  1444  000310  6EB9               	movwf	4025,c	;volatile
  1445  000312  0E01               	movlw	1
  1446  000314  6E63               	movwf	3939,c	;volatile
  1447                           
  1448                           ;MotorDriver.c: 216: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1449  000316  9A8C               	bcf	3980,5,c	;volatile
  1450  000318  908B               	bcf	3979,0,c	;volatile
  1451                           
  1452                           ;MotorDriver.c: 217: if (Microstep<16){
  1453  00031A  BE41               	btfsc	_Microstep+1,7,c
  1454  00031C  D006               	goto	l1673
  1455  00031E  5041               	movf	_Microstep+1,w,c
  1456  000320  E103               	bnz	u691
  1457  000322  0E10               	movlw	16
  1458  000324  5C40               	subwf	_Microstep,w,c
  1459  000326  B0D8               	btfsc	status,0,c
  1460  000328                     u691:
  1461  000328  0012               	return	
  1462  00032A                     l1673:
  1463                           
  1464                           ;MotorDriver.c: 221: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1465  00032A  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1466  00032C  2440               	addwf	_Microstep,w,c
  1467  00032E  6ED9               	movwf	fsr2l,c
  1468  000330  0E00               	movlw	high _LookUP_TABLE_COS_16
  1469  000332  2041               	addwfc	_Microstep+1,w,c
  1470  000334  6EDA               	movwf	fsr2h,c
  1471  000336  50DF               	movf	indf2,w,c
  1472  000338  6E33               	movwf	??_State16MEF_act& (0+255),c
  1473  00033A  5033               	movf	??_State16MEF_act,w,c
  1474  00033C  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1475  00033E  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1476  000340  ECDF  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1477                           
  1478                           ;MotorDriver.c: 222: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1479  000344  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1480  000346  2440               	addwf	_Microstep,w,c
  1481  000348  6ED9               	movwf	fsr2l,c
  1482  00034A  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1483  00034C  2041               	addwfc	_Microstep+1,w,c
  1484  00034E  6EDA               	movwf	fsr2h,c
  1485  000350  50DF               	movf	indf2,w,c
  1486  000352  6E33               	movwf	??_State16MEF_act& (0+255),c
  1487  000354  5033               	movf	??_State16MEF_act,w,c
  1488  000356  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1489  000358  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1490  00035A  ECC7  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1491                           
  1492                           ;MotorDriver.c: 224: if (direccion == 1){
  1493  00035E  0434               	decf	State16MEF_act@direccion,w,c
  1494  000360  A4D8               	btfss	status,2,c
  1495  000362  D00A               	goto	l1683
  1496                           
  1497                           ;MotorDriver.c: 225: if (Microstep==15){
  1498  000364  0E0F               	movlw	15
  1499  000366  1840               	xorwf	_Microstep,w,c
  1500  000368  1041               	iorwf	_Microstep+1,w,c
  1501  00036A  A4D8               	btfss	status,2,c
  1502  00036C  D002               	goto	l1681
  1503                           
  1504                           ;MotorDriver.c: 226: EstadoActual = STATE2;
  1505  00036E  0E02               	movlw	2
  1506  000370  6E4E               	movwf	_EstadoActual,c
  1507  000372                     l1681:
  1508                           
  1509                           ;MotorDriver.c: 227: }
  1510                           ;MotorDriver.c: 228: Microstep++;
  1511  000372  4A40               	infsnz	_Microstep,f,c
  1512  000374  2A41               	incf	_Microstep+1,f,c
  1513                           
  1514                           ;MotorDriver.c: 229: }
  1515  000376  0012               	return	
  1516  000378                     l1683:
  1517                           
  1518                           ;MotorDriver.c: 230: else{
  1519                           ;MotorDriver.c: 231: if (Microstep==0){
  1520  000378  5040               	movf	_Microstep,w,c
  1521  00037A  1041               	iorwf	_Microstep+1,w,c
  1522  00037C  A4D8               	btfss	status,2,c
  1523  00037E  D006               	goto	l1687
  1524                           
  1525                           ;MotorDriver.c: 232: EstadoActual = STATE4;
  1526  000380  0E04               	movlw	4
  1527  000382  6E4E               	movwf	_EstadoActual,c
  1528                           
  1529                           ;MotorDriver.c: 233: Microstep=63;
  1530  000384  0E00               	movlw	0
  1531  000386  6E41               	movwf	_Microstep+1,c
  1532  000388  0E3F               	movlw	63
  1533  00038A  6E40               	movwf	_Microstep,c
  1534  00038C                     l1687:
  1535                           
  1536                           ;MotorDriver.c: 234: }
  1537                           ;MotorDriver.c: 235: Microstep--;
  1538  00038C  0640               	decf	_Microstep,f,c
  1539  00038E  A0D8               	btfss	status,0,c
  1540  000390  0641               	decf	_Microstep+1,f,c
  1541                           
  1542                           ;MotorDriver.c: 236: }
  1543                           ;MotorDriver.c: 237: }
  1544                           ;MotorDriver.c: 238: break;
  1545  000392  0012               	return	
  1546  000394                     l1689:
  1547                           
  1548                           ;MotorDriver.c: 240: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1549  000394  0E02               	movlw	2
  1550  000396  6EB9               	movwf	4025,c	;volatile
  1551  000398  0E01               	movlw	1
  1552  00039A  6E63               	movwf	3939,c	;volatile
  1553                           
  1554                           ;MotorDriver.c: 241: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1555  00039C  948B               	bcf	3979,2,c	;volatile
  1556  00039E  908B               	bcf	3979,0,c	;volatile
  1557                           
  1558                           ;MotorDriver.c: 242: if ((Microstep<32)&&(Microstep>15)){
  1559  0003A0  BE41               	btfsc	_Microstep+1,7,c
  1560  0003A2  D006               	goto	l1697
  1561  0003A4  5041               	movf	_Microstep+1,w,c
  1562  0003A6  E103               	bnz	u731
  1563  0003A8  0E20               	movlw	32
  1564  0003AA  5C40               	subwf	_Microstep,w,c
  1565  0003AC  B0D8               	btfsc	status,0,c
  1566  0003AE                     u731:
  1567  0003AE  0012               	return	
  1568  0003B0                     l1697:
  1569  0003B0  BE41               	btfsc	_Microstep+1,7,c
  1570  0003B2  0012               	return	
  1571  0003B4  5041               	movf	_Microstep+1,w,c
  1572  0003B6  E104               	bnz	u740
  1573  0003B8  0E10               	movlw	16
  1574  0003BA  5C40               	subwf	_Microstep,w,c
  1575  0003BC  A0D8               	btfss	status,0,c
  1576  0003BE  0012               	return	
  1577  0003C0                     u740:
  1578                           
  1579                           ;MotorDriver.c: 247: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1580  0003C0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1581  0003C2  2440               	addwf	_Microstep,w,c
  1582  0003C4  6ED9               	movwf	fsr2l,c
  1583  0003C6  0E00               	movlw	high _LookUP_TABLE_COS_16
  1584  0003C8  2041               	addwfc	_Microstep+1,w,c
  1585  0003CA  6EDA               	movwf	fsr2h,c
  1586  0003CC  50DF               	movf	indf2,w,c
  1587  0003CE  6E33               	movwf	??_State16MEF_act& (0+255),c
  1588  0003D0  5033               	movf	??_State16MEF_act,w,c
  1589  0003D2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1590  0003D4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1591  0003D6  ECDF  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1592                           
  1593                           ;MotorDriver.c: 248: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1594  0003DA  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1595  0003DC  2440               	addwf	_Microstep,w,c
  1596  0003DE  6ED9               	movwf	fsr2l,c
  1597  0003E0  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1598  0003E2  2041               	addwfc	_Microstep+1,w,c
  1599  0003E4  6EDA               	movwf	fsr2h,c
  1600  0003E6  50DF               	movf	indf2,w,c
  1601  0003E8  6E33               	movwf	??_State16MEF_act& (0+255),c
  1602  0003EA  5033               	movf	??_State16MEF_act,w,c
  1603  0003EC  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1604  0003EE  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1605  0003F0  ECC7  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1606                           
  1607                           ;MotorDriver.c: 250: if (direccion == 1){
  1608  0003F4  0434               	decf	State16MEF_act@direccion,w,c
  1609  0003F6  A4D8               	btfss	status,2,c
  1610  0003F8  D00A               	goto	l1709
  1611                           
  1612                           ;MotorDriver.c: 251: if (Microstep==31){
  1613  0003FA  0E1F               	movlw	31
  1614  0003FC  1840               	xorwf	_Microstep,w,c
  1615  0003FE  1041               	iorwf	_Microstep+1,w,c
  1616  000400  A4D8               	btfss	status,2,c
  1617  000402  D002               	goto	l1707
  1618                           
  1619                           ;MotorDriver.c: 252: EstadoActual = STATE3;
  1620  000404  0E03               	movlw	3
  1621  000406  6E4E               	movwf	_EstadoActual,c
  1622  000408                     l1707:
  1623                           
  1624                           ;MotorDriver.c: 253: }
  1625                           ;MotorDriver.c: 254: Microstep++;
  1626  000408  4A40               	infsnz	_Microstep,f,c
  1627  00040A  2A41               	incf	_Microstep+1,f,c
  1628                           
  1629                           ;MotorDriver.c: 255: }
  1630  00040C  0012               	return	
  1631  00040E                     l1709:
  1632                           
  1633                           ;MotorDriver.c: 256: else{
  1634                           ;MotorDriver.c: 257: if (Microstep==16){
  1635  00040E  0E10               	movlw	16
  1636  000410  1840               	xorwf	_Microstep,w,c
  1637  000412  1041               	iorwf	_Microstep+1,w,c
  1638  000414  A4D8               	btfss	status,2,c
  1639  000416  D002               	goto	l1713
  1640                           
  1641                           ;MotorDriver.c: 258: EstadoActual = STATE1;
  1642  000418  0E01               	movlw	1
  1643  00041A  6E4E               	movwf	_EstadoActual,c
  1644  00041C                     l1713:
  1645                           
  1646                           ;MotorDriver.c: 259: }
  1647                           ;MotorDriver.c: 260: Microstep--;
  1648  00041C  0640               	decf	_Microstep,f,c
  1649  00041E  A0D8               	btfss	status,0,c
  1650  000420  0641               	decf	_Microstep+1,f,c
  1651                           
  1652                           ;MotorDriver.c: 261: }
  1653                           ;MotorDriver.c: 262: }
  1654                           ;MotorDriver.c: 263: break;
  1655  000422  0012               	return	
  1656  000424                     l1715:
  1657                           
  1658                           ;MotorDriver.c: 265: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1659  000424  0E02               	movlw	2
  1660  000426  6EB9               	movwf	4025,c	;volatile
  1661  000428  0E02               	movlw	2
  1662  00042A  6E63               	movwf	3939,c	;volatile
  1663                           
  1664                           ;MotorDriver.c: 266: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1665  00042C  948B               	bcf	3979,2,c	;volatile
  1666  00042E  928B               	bcf	3979,1,c	;volatile
  1667                           
  1668                           ;MotorDriver.c: 267: if ((Microstep<48)&&(Microstep>31)){
  1669  000430  BE41               	btfsc	_Microstep+1,7,c
  1670  000432  D006               	goto	l1723
  1671  000434  5041               	movf	_Microstep+1,w,c
  1672  000436  E103               	bnz	u781
  1673  000438  0E30               	movlw	48
  1674  00043A  5C40               	subwf	_Microstep,w,c
  1675  00043C  B0D8               	btfsc	status,0,c
  1676  00043E                     u781:
  1677  00043E  0012               	return	
  1678  000440                     l1723:
  1679  000440  BE41               	btfsc	_Microstep+1,7,c
  1680  000442  0012               	return	
  1681  000444  5041               	movf	_Microstep+1,w,c
  1682  000446  E104               	bnz	u790
  1683  000448  0E20               	movlw	32
  1684  00044A  5C40               	subwf	_Microstep,w,c
  1685  00044C  A0D8               	btfss	status,0,c
  1686  00044E  0012               	return	
  1687  000450                     u790:
  1688                           
  1689                           ;MotorDriver.c: 272: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1690  000450  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1691  000452  2440               	addwf	_Microstep,w,c
  1692  000454  6ED9               	movwf	fsr2l,c
  1693  000456  0E00               	movlw	high _LookUP_TABLE_COS_16
  1694  000458  2041               	addwfc	_Microstep+1,w,c
  1695  00045A  6EDA               	movwf	fsr2h,c
  1696  00045C  50DF               	movf	indf2,w,c
  1697  00045E  6E33               	movwf	??_State16MEF_act& (0+255),c
  1698  000460  5033               	movf	??_State16MEF_act,w,c
  1699  000462  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1700  000464  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1701  000466  ECDF  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1702                           
  1703                           ;MotorDriver.c: 273: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1704  00046A  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1705  00046C  2440               	addwf	_Microstep,w,c
  1706  00046E  6ED9               	movwf	fsr2l,c
  1707  000470  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1708  000472  2041               	addwfc	_Microstep+1,w,c
  1709  000474  6EDA               	movwf	fsr2h,c
  1710  000476  50DF               	movf	indf2,w,c
  1711  000478  6E33               	movwf	??_State16MEF_act& (0+255),c
  1712  00047A  5033               	movf	??_State16MEF_act,w,c
  1713  00047C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1714  00047E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1715  000480  ECC7  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1716                           
  1717                           ;MotorDriver.c: 275: if (direccion == 1){
  1718  000484  0434               	decf	State16MEF_act@direccion,w,c
  1719  000486  A4D8               	btfss	status,2,c
  1720  000488  D00A               	goto	l1735
  1721                           
  1722                           ;MotorDriver.c: 276: if (Microstep==47){
  1723  00048A  0E2F               	movlw	47
  1724  00048C  1840               	xorwf	_Microstep,w,c
  1725  00048E  1041               	iorwf	_Microstep+1,w,c
  1726  000490  A4D8               	btfss	status,2,c
  1727  000492  D002               	goto	l1733
  1728                           
  1729                           ;MotorDriver.c: 277: EstadoActual = STATE4;
  1730  000494  0E04               	movlw	4
  1731  000496  6E4E               	movwf	_EstadoActual,c
  1732  000498                     l1733:
  1733                           
  1734                           ;MotorDriver.c: 278: }
  1735                           ;MotorDriver.c: 279: Microstep++;
  1736  000498  4A40               	infsnz	_Microstep,f,c
  1737  00049A  2A41               	incf	_Microstep+1,f,c
  1738                           
  1739                           ;MotorDriver.c: 280: }
  1740  00049C  0012               	return	
  1741  00049E                     l1735:
  1742                           
  1743                           ;MotorDriver.c: 281: else{
  1744                           ;MotorDriver.c: 282: if (Microstep==32){
  1745  00049E  0E20               	movlw	32
  1746  0004A0  1840               	xorwf	_Microstep,w,c
  1747  0004A2  1041               	iorwf	_Microstep+1,w,c
  1748  0004A4  A4D8               	btfss	status,2,c
  1749  0004A6  D002               	goto	l1739
  1750                           
  1751                           ;MotorDriver.c: 283: EstadoActual = STATE2;
  1752  0004A8  0E02               	movlw	2
  1753  0004AA  6E4E               	movwf	_EstadoActual,c
  1754  0004AC                     l1739:
  1755                           
  1756                           ;MotorDriver.c: 284: }
  1757                           ;MotorDriver.c: 285: Microstep--;
  1758  0004AC  0640               	decf	_Microstep,f,c
  1759  0004AE  A0D8               	btfss	status,0,c
  1760  0004B0  0641               	decf	_Microstep+1,f,c
  1761                           
  1762                           ;MotorDriver.c: 286: }
  1763                           ;MotorDriver.c: 287: }
  1764                           ;MotorDriver.c: 288: break;
  1765  0004B2  0012               	return	
  1766  0004B4                     l1741:
  1767                           
  1768                           ;MotorDriver.c: 290: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1769  0004B4  0E01               	movlw	1
  1770  0004B6  6EB9               	movwf	4025,c	;volatile
  1771  0004B8  0E02               	movlw	2
  1772  0004BA  6E63               	movwf	3939,c	;volatile
  1773                           
  1774                           ;MotorDriver.c: 291: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1775  0004BC  9A8C               	bcf	3980,5,c	;volatile
  1776  0004BE  928B               	bcf	3979,1,c	;volatile
  1777                           
  1778                           ;MotorDriver.c: 292: if ((Microstep<64)&&(Microstep>47)){
  1779  0004C0  BE41               	btfsc	_Microstep+1,7,c
  1780  0004C2  D006               	goto	l1749
  1781  0004C4  5041               	movf	_Microstep+1,w,c
  1782  0004C6  E14E               	bnz	l543
  1783  0004C8  0E40               	movlw	64
  1784  0004CA  5C40               	subwf	_Microstep,w,c
  1785  0004CC  B0D8               	btfsc	status,0,c
  1786  0004CE  0012               	return	
  1787  0004D0                     l1749:
  1788  0004D0  BE41               	btfsc	_Microstep+1,7,c
  1789  0004D2  0012               	return	
  1790  0004D4  5041               	movf	_Microstep+1,w,c
  1791  0004D6  E104               	bnz	u840
  1792  0004D8  0E30               	movlw	48
  1793  0004DA  5C40               	subwf	_Microstep,w,c
  1794  0004DC  A0D8               	btfss	status,0,c
  1795  0004DE  0012               	return	
  1796  0004E0                     u840:
  1797                           
  1798                           ;MotorDriver.c: 297: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1799  0004E0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1800  0004E2  2440               	addwf	_Microstep,w,c
  1801  0004E4  6ED9               	movwf	fsr2l,c
  1802  0004E6  0E00               	movlw	high _LookUP_TABLE_COS_16
  1803  0004E8  2041               	addwfc	_Microstep+1,w,c
  1804  0004EA  6EDA               	movwf	fsr2h,c
  1805  0004EC  50DF               	movf	indf2,w,c
  1806  0004EE  6E33               	movwf	??_State16MEF_act& (0+255),c
  1807  0004F0  5033               	movf	??_State16MEF_act,w,c
  1808  0004F2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1809  0004F4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1810  0004F6  ECDF  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1811                           
  1812                           ;MotorDriver.c: 298: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1813  0004FA  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1814  0004FC  2440               	addwf	_Microstep,w,c
  1815  0004FE  6ED9               	movwf	fsr2l,c
  1816  000500  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1817  000502  2041               	addwfc	_Microstep+1,w,c
  1818  000504  6EDA               	movwf	fsr2h,c
  1819  000506  50DF               	movf	indf2,w,c
  1820  000508  6E33               	movwf	??_State16MEF_act& (0+255),c
  1821  00050A  5033               	movf	??_State16MEF_act,w,c
  1822  00050C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1823  00050E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1824  000510  ECC7  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1825                           
  1826                           ;MotorDriver.c: 300: if (direccion == 1){
  1827  000514  0434               	decf	State16MEF_act@direccion,w,c
  1828  000516  A4D8               	btfss	status,2,c
  1829  000518  D00C               	goto	l1763
  1830                           
  1831                           ;MotorDriver.c: 301: if (Microstep==63){
  1832  00051A  0E3F               	movlw	63
  1833  00051C  1840               	xorwf	_Microstep,w,c
  1834  00051E  1041               	iorwf	_Microstep+1,w,c
  1835  000520  A4D8               	btfss	status,2,c
  1836  000522  D004               	goto	l1761
  1837                           
  1838                           ;MotorDriver.c: 302: EstadoActual = STATE1;
  1839  000524  0E01               	movlw	1
  1840  000526  6E4E               	movwf	_EstadoActual,c
  1841                           
  1842                           ;MotorDriver.c: 303: Microstep=-1;
  1843  000528  6840               	setf	_Microstep,c
  1844  00052A  6841               	setf	_Microstep+1,c
  1845  00052C                     l1761:
  1846                           
  1847                           ;MotorDriver.c: 304: }
  1848                           ;MotorDriver.c: 305: Microstep++;
  1849  00052C  4A40               	infsnz	_Microstep,f,c
  1850  00052E  2A41               	incf	_Microstep+1,f,c
  1851                           
  1852                           ;MotorDriver.c: 306: }
  1853  000530  0012               	return	
  1854  000532                     l1763:
  1855                           
  1856                           ;MotorDriver.c: 307: else{
  1857                           ;MotorDriver.c: 308: if (Microstep==48){
  1858  000532  0E30               	movlw	48
  1859  000534  1840               	xorwf	_Microstep,w,c
  1860  000536  1041               	iorwf	_Microstep+1,w,c
  1861  000538  A4D8               	btfss	status,2,c
  1862  00053A  D002               	goto	l1767
  1863                           
  1864                           ;MotorDriver.c: 309: EstadoActual = STATE3;
  1865  00053C  0E03               	movlw	3
  1866  00053E  6E4E               	movwf	_EstadoActual,c
  1867  000540                     l1767:
  1868                           
  1869                           ;MotorDriver.c: 310: }
  1870                           ;MotorDriver.c: 311: Microstep--;
  1871  000540  0640               	decf	_Microstep,f,c
  1872  000542  A0D8               	btfss	status,0,c
  1873  000544  0641               	decf	_Microstep+1,f,c
  1874                           
  1875                           ;MotorDriver.c: 318: }
  1876                           
  1877                           ;MotorDriver.c: 317: break;
  1878                           
  1879                           ;MotorDriver.c: 315: default:
  1880                           
  1881                           ;MotorDriver.c: 312: }
  1882                           ;MotorDriver.c: 313: }
  1883                           ;MotorDriver.c: 314: break;
  1884  000546  0012               	return	
  1885  000548                     l1771:
  1886  000548  504E               	movf	_EstadoActual,w,c
  1887                           
  1888                           ; Switch size 1, requested type "space"
  1889                           ; Number of cases is 4, Range of values is 1 to 4
  1890                           ; switch strategies available:
  1891                           ; Name         Instructions Cycles
  1892                           ; simple_byte           13     7 (average)
  1893                           ;	Chosen strategy is simple_byte
  1894  00054A  0A01               	xorlw	1	; case 1
  1895  00054C  B4D8               	btfsc	status,2,c
  1896  00054E  D6DF               	goto	l1665
  1897  000550  0A03               	xorlw	3	; case 2
  1898  000552  B4D8               	btfsc	status,2,c
  1899  000554  D71F               	goto	l1689
  1900  000556  0A01               	xorlw	1	; case 3
  1901  000558  B4D8               	btfsc	status,2,c
  1902  00055A  D764               	goto	l1715
  1903  00055C  0A07               	xorlw	7	; case 4
  1904  00055E  A4D8               	btfss	status,2,c
  1905  000560  0012               	return	
  1906  000562  D7A8               	goto	l1741
  1907  000564                     l543:
  1908  000564  0012               	return		;funcret
  1909  000566                     __end_of_State16MEF_act:
  1910                           	opt stack 0
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           intcon	equ	0xFF2
  1916                           postinc0	equ	0xFEE
  1917                           wreg	equ	0xFE8
  1918                           postdec1	equ	0xFE5
  1919                           fsr1l	equ	0xFE1
  1920                           indf2	equ	0xFDF
  1921                           fsr2h	equ	0xFDA
  1922                           fsr2l	equ	0xFD9
  1923                           status	equ	0xFD8
  1924                           
  1925 ;; *************** function _EPWM2_LoadDutyValue *****************
  1926 ;; Defined at:
  1927 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg, status,2, status,0
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;Total ram usage:        4 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    4
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_State8MEF_act
  1952 ;;		_State16MEF_act
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text4
  1957  00078E                     __ptext4:
  1958                           	opt stack 0
  1959  00078E                     _EPWM2_LoadDutyValue:
  1960                           	opt stack 24
  1961                           
  1962                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  1963                           
  1964                           ;incstack = 0
  1965  00078E  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1966  000792  C030  F032         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  1967  000796  90D8               	bcf	status,0,c
  1968  000798  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1969  00079A  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1970  00079C  90D8               	bcf	status,0,c
  1971  00079E  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1972  0007A0  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1973  0007A2  5031               	movf	??_EPWM2_LoadDutyValue,w,c
  1974  0007A4  6E67               	movwf	3943,c	;volatile
  1975                           
  1976                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1977  0007A6  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1978  0007AA  0E03               	movlw	3
  1979  0007AC  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  1980  0007AE  3A31               	swapf	??_EPWM2_LoadDutyValue,f,c
  1981  0007B0  0EF0               	movlw	240
  1982  0007B2  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  1983  0007B4  5066               	movf	3942,w,c	;volatile
  1984  0007B6  0BCF               	andlw	207
  1985  0007B8  1031               	iorwf	??_EPWM2_LoadDutyValue,w,c
  1986  0007BA  6E66               	movwf	3942,c	;volatile
  1987  0007BC  0012               	return		;funcret
  1988  0007BE                     __end_of_EPWM2_LoadDutyValue:
  1989                           	opt stack 0
  1990                           tblptru	equ	0xFF8
  1991                           tblptrh	equ	0xFF7
  1992                           tblptrl	equ	0xFF6
  1993                           tablat	equ	0xFF5
  1994                           intcon	equ	0xFF2
  1995                           postinc0	equ	0xFEE
  1996                           wreg	equ	0xFE8
  1997                           postdec1	equ	0xFE5
  1998                           fsr1l	equ	0xFE1
  1999                           indf2	equ	0xFDF
  2000                           fsr2h	equ	0xFDA
  2001                           fsr2l	equ	0xFD9
  2002                           status	equ	0xFD8
  2003                           
  2004 ;; *************** function _EPWM1_LoadDutyValue *****************
  2005 ;; Defined at:
  2006 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  dutyValue       2   14[COMRAM] unsigned int 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;Total ram usage:        4 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    4
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_State8MEF_act
  2031 ;;		_State16MEF_act
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text5
  2036  0007BE                     __ptext5:
  2037                           	opt stack 0
  2038  0007BE                     _EPWM1_LoadDutyValue:
  2039                           	opt stack 24
  2040                           
  2041                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  2042                           
  2043                           ;incstack = 0
  2044  0007BE  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  2045  0007C2  C030  F032         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  2046  0007C6  90D8               	bcf	status,0,c
  2047  0007C8  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  2048  0007CA  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  2049  0007CC  90D8               	bcf	status,0,c
  2050  0007CE  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  2051  0007D0  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  2052  0007D2  5031               	movf	??_EPWM1_LoadDutyValue,w,c
  2053  0007D4  6EBE               	movwf	4030,c	;volatile
  2054                           
  2055                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2056  0007D6  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  2057  0007DA  0E03               	movlw	3
  2058  0007DC  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  2059  0007DE  3A31               	swapf	??_EPWM1_LoadDutyValue,f,c
  2060  0007E0  0EF0               	movlw	240
  2061  0007E2  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  2062  0007E4  50BD               	movf	4029,w,c	;volatile
  2063  0007E6  0BCF               	andlw	207
  2064  0007E8  1031               	iorwf	??_EPWM1_LoadDutyValue,w,c
  2065  0007EA  6EBD               	movwf	4029,c	;volatile
  2066  0007EC  0012               	return		;funcret
  2067  0007EE                     __end_of_EPWM1_LoadDutyValue:
  2068                           	opt stack 0
  2069                           tblptru	equ	0xFF8
  2070                           tblptrh	equ	0xFF7
  2071                           tblptrl	equ	0xFF6
  2072                           tablat	equ	0xFF5
  2073                           intcon	equ	0xFF2
  2074                           postinc0	equ	0xFEE
  2075                           wreg	equ	0xFE8
  2076                           postdec1	equ	0xFE5
  2077                           fsr1l	equ	0xFE1
  2078                           indf2	equ	0xFDF
  2079                           fsr2h	equ	0xFDA
  2080                           fsr2l	equ	0xFD9
  2081                           status	equ	0xFD8
  2082                           
  2083 ;; *************** function _StateMEF_ini *****************
  2084 ;; Defined at:
  2085 ;;		line 36 in file "MotorDriver.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;Total ram usage:        0 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    4
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text6
  2114  000984                     __ptext6:
  2115                           	opt stack 0
  2116  000984                     _StateMEF_ini:
  2117                           	opt stack 26
  2118                           
  2119                           ;MotorDriver.c: 38: EstadoActual = STATE1;
  2120                           
  2121                           ;incstack = 0
  2122  000984  0E01               	movlw	1
  2123  000986  6E4E               	movwf	_EstadoActual,c
  2124                           
  2125                           ;MotorDriver.c: 39: Microstep=0;
  2126  000988  0E00               	movlw	0
  2127  00098A  6E41               	movwf	_Microstep+1,c
  2128  00098C  0E00               	movlw	0
  2129  00098E  6E40               	movwf	_Microstep,c
  2130  000990  0012               	return		;funcret
  2131  000992                     __end_of_StateMEF_ini:
  2132                           	opt stack 0
  2133                           tblptru	equ	0xFF8
  2134                           tblptrh	equ	0xFF7
  2135                           tblptrl	equ	0xFF6
  2136                           tablat	equ	0xFF5
  2137                           intcon	equ	0xFF2
  2138                           postinc0	equ	0xFEE
  2139                           wreg	equ	0xFE8
  2140                           postdec1	equ	0xFE5
  2141                           fsr1l	equ	0xFE1
  2142                           indf2	equ	0xFDF
  2143                           fsr2h	equ	0xFDA
  2144                           fsr2l	equ	0xFD9
  2145                           status	equ	0xFD8
  2146                           
  2147 ;; *************** function _SYSTEM_Initialize *****************
  2148 ;; Defined at:
  2149 ;;		line 111 in file "mcc_generated_files/mcc.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;Total ram usage:        0 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    6
  2170 ;; This function calls:
  2171 ;;		_ADC_Initialize
  2172 ;;		_CCP5_Initialize
  2173 ;;		_EPWM1_Initialize
  2174 ;;		_EPWM2_Initialize
  2175 ;;		_EUSART1_Initialize
  2176 ;;		_INTERRUPT_Initialize
  2177 ;;		_OSCILLATOR_Initialize
  2178 ;;		_PIN_MANAGER_Initialize
  2179 ;;		_TMR2_Initialize
  2180 ;;		_TMR6_Initialize
  2181 ;; This function is called by:
  2182 ;;		_main
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text7
  2187  0007EE                     __ptext7:
  2188                           	opt stack 0
  2189  0007EE                     _SYSTEM_Initialize:
  2190                           	opt stack 24
  2191                           
  2192                           ;mcc.c: 114: INTERRUPT_Initialize();
  2193                           
  2194                           ;incstack = 0
  2195  0007EE  ECE3  F004         	call	_INTERRUPT_Initialize	;wreg free
  2196                           
  2197                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  2198  0007F2  ECA1  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  2199                           
  2200                           ;mcc.c: 116: OSCILLATOR_Initialize();
  2201  0007F6  ECC9  F004         	call	_OSCILLATOR_Initialize	;wreg free
  2202                           
  2203                           ;mcc.c: 117: TMR6_Initialize();
  2204  0007FA  EC0C  F004         	call	_TMR6_Initialize	;wreg free
  2205                           
  2206                           ;mcc.c: 118: EPWM2_Initialize();
  2207  0007FE  EC34  F004         	call	_EPWM2_Initialize	;wreg free
  2208                           
  2209                           ;mcc.c: 119: CCP5_Initialize();
  2210  000802  ECAF  F004         	call	_CCP5_Initialize	;wreg free
  2211                           
  2212                           ;mcc.c: 120: ADC_Initialize();
  2213  000806  EC98  F004         	call	_ADC_Initialize	;wreg free
  2214                           
  2215                           ;mcc.c: 121: EPWM1_Initialize();
  2216  00080A  EC46  F004         	call	_EPWM1_Initialize	;wreg free
  2217                           
  2218                           ;mcc.c: 122: TMR2_Initialize();
  2219  00080E  EC58  F004         	call	_TMR2_Initialize	;wreg free
  2220                           
  2221                           ;mcc.c: 123: EUSART1_Initialize();
  2222  000812  ECA4  F004         	call	_EUSART1_Initialize	;wreg free
  2223  000816  0012               	return		;funcret
  2224  000818                     __end_of_SYSTEM_Initialize:
  2225                           	opt stack 0
  2226                           tblptru	equ	0xFF8
  2227                           tblptrh	equ	0xFF7
  2228                           tblptrl	equ	0xFF6
  2229                           tablat	equ	0xFF5
  2230                           intcon	equ	0xFF2
  2231                           postinc0	equ	0xFEE
  2232                           wreg	equ	0xFE8
  2233                           postdec1	equ	0xFE5
  2234                           fsr1l	equ	0xFE1
  2235                           indf2	equ	0xFDF
  2236                           fsr2h	equ	0xFDA
  2237                           fsr2l	equ	0xFD9
  2238                           status	equ	0xFD8
  2239                           
  2240 ;; *************** function _TMR6_Initialize *****************
  2241 ;; Defined at:
  2242 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;Total ram usage:        0 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    5
  2263 ;; This function calls:
  2264 ;;		_TMR6_SetInterruptHandler
  2265 ;;		_TMR6_StartTimer
  2266 ;; This function is called by:
  2267 ;;		_SYSTEM_Initialize
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text8
  2272  000818                     __ptext8:
  2273                           	opt stack 0
  2274  000818                     _TMR6_Initialize:
  2275                           	opt stack 24
  2276                           
  2277                           ;tmr6.c: 68: T6CON = 0x01;
  2278                           
  2279                           ;incstack = 0
  2280  000818  0E01               	movlw	1
  2281  00081A  010F               	movlb	15	; () banked
  2282  00081C  6F4A               	movwf	74,b	;volatile
  2283                           
  2284                           ;tmr6.c: 71: PR6 = 0x45;
  2285  00081E  0E45               	movlw	69
  2286  000820  010F               	movlb	15	; () banked
  2287  000822  6F4B               	movwf	75,b	;volatile
  2288                           
  2289                           ;tmr6.c: 74: TMR6 = 0x00;
  2290  000824  0E00               	movlw	0
  2291  000826  010F               	movlb	15	; () banked
  2292  000828  6F4C               	movwf	76,b	;volatile
  2293                           
  2294                           ; BSR set to: 15
  2295                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
  2296  00082A  947E               	bcf	3966,2,c	;volatile
  2297                           
  2298                           ; BSR set to: 15
  2299                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
  2300  00082C  847D               	bsf	3965,2,c	;volatile
  2301                           
  2302                           ; BSR set to: 15
  2303                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  2304  00082E  0ECE               	movlw	low _TMR6_DefaultInterruptHandler
  2305  000830  6E2F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  2306  000832  0E09               	movlw	high _TMR6_DefaultInterruptHandler
  2307  000834  6E30               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  2308  000836  ECD0  F004         	call	_TMR6_SetInterruptHandler	;wreg free
  2309                           
  2310                           ;tmr6.c: 86: TMR6_StartTimer();
  2311  00083A  ECDE  F004         	call	_TMR6_StartTimer	;wreg free
  2312  00083E  0012               	return		;funcret
  2313  000840                     __end_of_TMR6_Initialize:
  2314                           	opt stack 0
  2315                           tblptru	equ	0xFF8
  2316                           tblptrh	equ	0xFF7
  2317                           tblptrl	equ	0xFF6
  2318                           tablat	equ	0xFF5
  2319                           intcon	equ	0xFF2
  2320                           postinc0	equ	0xFEE
  2321                           wreg	equ	0xFE8
  2322                           postdec1	equ	0xFE5
  2323                           fsr1l	equ	0xFE1
  2324                           indf2	equ	0xFDF
  2325                           fsr2h	equ	0xFDA
  2326                           fsr2l	equ	0xFD9
  2327                           status	equ	0xFD8
  2328                           
  2329 ;; *************** function _TMR6_StartTimer *****************
  2330 ;; Defined at:
  2331 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		None
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;Total ram usage:        0 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    4
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_TMR6_Initialize
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text9
  2360  0009BC                     __ptext9:
  2361                           	opt stack 0
  2362  0009BC                     _TMR6_StartTimer:
  2363                           	opt stack 24
  2364                           
  2365                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  2366                           
  2367                           ;incstack = 0
  2368  0009BC  010F               	movlb	15	; () banked
  2369  0009BE  854A               	bsf	74,2,b	;volatile
  2370                           
  2371                           ; BSR set to: 15
  2372  0009C0  0012               	return		;funcret
  2373  0009C2                     __end_of_TMR6_StartTimer:
  2374                           	opt stack 0
  2375                           tblptru	equ	0xFF8
  2376                           tblptrh	equ	0xFF7
  2377                           tblptrl	equ	0xFF6
  2378                           tablat	equ	0xFF5
  2379                           intcon	equ	0xFF2
  2380                           postinc0	equ	0xFEE
  2381                           wreg	equ	0xFE8
  2382                           postdec1	equ	0xFE5
  2383                           fsr1l	equ	0xFE1
  2384                           indf2	equ	0xFDF
  2385                           fsr2h	equ	0xFDA
  2386                           fsr2l	equ	0xFD9
  2387                           status	equ	0xFD8
  2388                           
  2389 ;; *************** function _TMR6_SetInterruptHandler *****************
  2390 ;; Defined at:
  2391 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  InterruptHan    2   14[COMRAM] PTR void 
  2394 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;		None
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      void 
  2399 ;; Registers used:
  2400 ;;		wreg, status,2, status,0
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;Total ram usage:        2 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    4
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_TMR6_Initialize
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text10
  2421  0009A0                     __ptext10:
  2422                           	opt stack 0
  2423  0009A0                     _TMR6_SetInterruptHandler:
  2424                           	opt stack 24
  2425                           
  2426                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  2427                           
  2428                           ; BSR set to: 15
  2429                           ;incstack = 0
  2430  0009A0  C02F  F04C         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  2431  0009A4  C030  F04D         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  2432  0009A8  0012               	return		;funcret
  2433  0009AA                     __end_of_TMR6_SetInterruptHandler:
  2434                           	opt stack 0
  2435                           tblptru	equ	0xFF8
  2436                           tblptrh	equ	0xFF7
  2437                           tblptrl	equ	0xFF6
  2438                           tablat	equ	0xFF5
  2439                           intcon	equ	0xFF2
  2440                           postinc0	equ	0xFEE
  2441                           wreg	equ	0xFE8
  2442                           postdec1	equ	0xFE5
  2443                           fsr1l	equ	0xFE1
  2444                           indf2	equ	0xFDF
  2445                           fsr2h	equ	0xFDA
  2446                           fsr2l	equ	0xFD9
  2447                           status	equ	0xFD8
  2448                           
  2449 ;; *************** function _TMR2_Initialize *****************
  2450 ;; Defined at:
  2451 ;;		line 68 in file "mcc_generated_files/tmr2.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;Total ram usage:        0 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    5
  2472 ;; This function calls:
  2473 ;;		_TMR2_SetInterruptHandler
  2474 ;;		_TMR2_StartTimer
  2475 ;; This function is called by:
  2476 ;;		_SYSTEM_Initialize
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text11
  2481  0008B0                     __ptext11:
  2482                           	opt stack 0
  2483  0008B0                     _TMR2_Initialize:
  2484                           	opt stack 24
  2485                           
  2486                           ;tmr2.c: 73: T2CON = 0x02;
  2487                           
  2488                           ;incstack = 0
  2489  0008B0  0E02               	movlw	2
  2490  0008B2  6EBA               	movwf	4026,c	;volatile
  2491                           
  2492                           ;tmr2.c: 76: PR2 = 0x0C;
  2493  0008B4  0E0C               	movlw	12
  2494  0008B6  6EBB               	movwf	4027,c	;volatile
  2495                           
  2496                           ;tmr2.c: 79: TMR2 = 0x00;
  2497  0008B8  0E00               	movlw	0
  2498  0008BA  6EBC               	movwf	4028,c	;volatile
  2499                           
  2500                           ;tmr2.c: 82: PIR1bits.TMR2IF = 0;
  2501  0008BC  929E               	bcf	3998,1,c	;volatile
  2502                           
  2503                           ;tmr2.c: 85: PIE1bits.TMR2IE = 1;
  2504  0008BE  829D               	bsf	3997,1,c	;volatile
  2505                           
  2506                           ;tmr2.c: 88: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  2507  0008C0  0ED0               	movlw	low _TMR2_DefaultInterruptHandler
  2508  0008C2  6E2F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  2509  0008C4  0E09               	movlw	high _TMR2_DefaultInterruptHandler
  2510  0008C6  6E30               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  2511  0008C8  ECD5  F004         	call	_TMR2_SetInterruptHandler	;wreg free
  2512                           
  2513                           ;tmr2.c: 91: TMR2_StartTimer();
  2514  0008CC  ECE1  F004         	call	_TMR2_StartTimer	;wreg free
  2515  0008D0  0012               	return		;funcret
  2516  0008D2                     __end_of_TMR2_Initialize:
  2517                           	opt stack 0
  2518                           tblptru	equ	0xFF8
  2519                           tblptrh	equ	0xFF7
  2520                           tblptrl	equ	0xFF6
  2521                           tablat	equ	0xFF5
  2522                           intcon	equ	0xFF2
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           postdec1	equ	0xFE5
  2526                           fsr1l	equ	0xFE1
  2527                           indf2	equ	0xFDF
  2528                           fsr2h	equ	0xFDA
  2529                           fsr2l	equ	0xFD9
  2530                           status	equ	0xFD8
  2531                           
  2532 ;; *************** function _TMR2_StartTimer *****************
  2533 ;; Defined at:
  2534 ;;		line 94 in file "mcc_generated_files/tmr2.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;		None
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		None
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2552 ;;Total ram usage:        0 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:    4
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_TMR2_Initialize
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text12
  2563  0009C2                     __ptext12:
  2564                           	opt stack 0
  2565  0009C2                     _TMR2_StartTimer:
  2566                           	opt stack 24
  2567                           
  2568                           ;tmr2.c: 97: T2CONbits.TMR2ON = 1;
  2569                           
  2570                           ;incstack = 0
  2571  0009C2  84BA               	bsf	4026,2,c	;volatile
  2572  0009C4  0012               	return		;funcret
  2573  0009C6                     __end_of_TMR2_StartTimer:
  2574                           	opt stack 0
  2575                           tblptru	equ	0xFF8
  2576                           tblptrh	equ	0xFF7
  2577                           tblptrl	equ	0xFF6
  2578                           tablat	equ	0xFF5
  2579                           intcon	equ	0xFF2
  2580                           postinc0	equ	0xFEE
  2581                           wreg	equ	0xFE8
  2582                           postdec1	equ	0xFE5
  2583                           fsr1l	equ	0xFE1
  2584                           indf2	equ	0xFDF
  2585                           fsr2h	equ	0xFDA
  2586                           fsr2l	equ	0xFD9
  2587                           status	equ	0xFD8
  2588                           
  2589 ;; *************** function _TMR2_SetInterruptHandler *****************
  2590 ;; Defined at:
  2591 ;;		line 150 in file "mcc_generated_files/tmr2.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  InterruptHan    2   14[COMRAM] PTR void 
  2594 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;Total ram usage:        2 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    4
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_TMR2_Initialize
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text13
  2621  0009AA                     __ptext13:
  2622                           	opt stack 0
  2623  0009AA                     _TMR2_SetInterruptHandler:
  2624                           	opt stack 24
  2625                           
  2626                           ;tmr2.c: 151: TMR2_InterruptHandler = InterruptHandler;
  2627                           
  2628                           ;incstack = 0
  2629  0009AA  C02F  F04A         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  2630  0009AE  C030  F04B         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  2631  0009B2  0012               	return		;funcret
  2632  0009B4                     __end_of_TMR2_SetInterruptHandler:
  2633                           	opt stack 0
  2634                           tblptru	equ	0xFF8
  2635                           tblptrh	equ	0xFF7
  2636                           tblptrl	equ	0xFF6
  2637                           tablat	equ	0xFF5
  2638                           intcon	equ	0xFF2
  2639                           postinc0	equ	0xFEE
  2640                           wreg	equ	0xFE8
  2641                           postdec1	equ	0xFE5
  2642                           fsr1l	equ	0xFE1
  2643                           indf2	equ	0xFDF
  2644                           fsr2h	equ	0xFDA
  2645                           fsr2l	equ	0xFD9
  2646                           status	equ	0xFD8
  2647                           
  2648 ;; *************** function _PIN_MANAGER_Initialize *****************
  2649 ;; Defined at:
  2650 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;Total ram usage:        0 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    4
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_SYSTEM_Initialize
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text14
  2679  000742                     __ptext14:
  2680                           	opt stack 0
  2681  000742                     _PIN_MANAGER_Initialize:
  2682                           	opt stack 25
  2683                           
  2684                           ;pin_manager.c: 56: LATE = 0x00;
  2685                           
  2686                           ;incstack = 0
  2687  000742  0E00               	movlw	0
  2688  000744  6E8D               	movwf	3981,c	;volatile
  2689                           
  2690                           ;pin_manager.c: 57: LATD = 0x00;
  2691  000746  0E00               	movlw	0
  2692  000748  6E8C               	movwf	3980,c	;volatile
  2693                           
  2694                           ;pin_manager.c: 58: LATA = 0x00;
  2695  00074A  0E00               	movlw	0
  2696  00074C  6E89               	movwf	3977,c	;volatile
  2697                           
  2698                           ;pin_manager.c: 59: LATB = 0x00;
  2699  00074E  0E00               	movlw	0
  2700  000750  6E8A               	movwf	3978,c	;volatile
  2701                           
  2702                           ;pin_manager.c: 60: LATC = 0x00;
  2703  000752  0E00               	movlw	0
  2704  000754  6E8B               	movwf	3979,c	;volatile
  2705                           
  2706                           ;pin_manager.c: 65: TRISE = 0x07;
  2707  000756  0E07               	movlw	7
  2708  000758  6E96               	movwf	3990,c	;volatile
  2709                           
  2710                           ;pin_manager.c: 66: TRISA = 0xEB;
  2711  00075A  0EEB               	movlw	235
  2712  00075C  6E92               	movwf	3986,c	;volatile
  2713                           
  2714                           ;pin_manager.c: 67: TRISB = 0xBF;
  2715  00075E  0EBF               	movlw	191
  2716  000760  6E93               	movwf	3987,c	;volatile
  2717                           
  2718                           ;pin_manager.c: 68: TRISC = 0xB8;
  2719  000762  0EB8               	movlw	184
  2720  000764  6E94               	movwf	3988,c	;volatile
  2721                           
  2722                           ;pin_manager.c: 69: TRISD = 0xDF;
  2723  000766  0EDF               	movlw	223
  2724  000768  6E95               	movwf	3989,c	;volatile
  2725                           
  2726                           ;pin_manager.c: 74: ANSELC = 0x38;
  2727  00076A  0E38               	movlw	56
  2728  00076C  010F               	movlb	15	; () banked
  2729  00076E  6F3A               	movwf	58,b	;volatile
  2730                           
  2731                           ;pin_manager.c: 75: ANSELB = 0x3E;
  2732  000770  0E3E               	movlw	62
  2733  000772  010F               	movlb	15	; () banked
  2734  000774  6F39               	movwf	57,b	;volatile
  2735                           
  2736                           ;pin_manager.c: 76: ANSELD = 0xDF;
  2737  000776  0EDF               	movlw	223
  2738  000778  010F               	movlb	15	; () banked
  2739  00077A  6F3B               	movwf	59,b	;volatile
  2740                           
  2741                           ;pin_manager.c: 77: ANSELE = 0x03;
  2742  00077C  0E03               	movlw	3
  2743  00077E  010F               	movlb	15	; () banked
  2744  000780  6F3C               	movwf	60,b	;volatile
  2745                           
  2746                           ;pin_manager.c: 78: ANSELA = 0x2B;
  2747  000782  0E2B               	movlw	43
  2748  000784  010F               	movlb	15	; () banked
  2749  000786  6F38               	movwf	56,b	;volatile
  2750                           
  2751                           ; BSR set to: 15
  2752                           ;pin_manager.c: 83: WPUB = 0xFF;
  2753  000788  6861               	setf	3937,c	;volatile
  2754                           
  2755                           ; BSR set to: 15
  2756                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  2757  00078A  9EF1               	bcf	intcon2,7,c	;volatile
  2758                           
  2759                           ; BSR set to: 15
  2760  00078C  0012               	return		;funcret
  2761  00078E                     __end_of_PIN_MANAGER_Initialize:
  2762                           	opt stack 0
  2763                           tblptru	equ	0xFF8
  2764                           tblptrh	equ	0xFF7
  2765                           tblptrl	equ	0xFF6
  2766                           tablat	equ	0xFF5
  2767                           intcon	equ	0xFF2
  2768                           intcon2	equ	0xFF1
  2769                           postinc0	equ	0xFEE
  2770                           wreg	equ	0xFE8
  2771                           postdec1	equ	0xFE5
  2772                           fsr1l	equ	0xFE1
  2773                           indf2	equ	0xFDF
  2774                           fsr2h	equ	0xFDA
  2775                           fsr2l	equ	0xFD9
  2776                           status	equ	0xFD8
  2777                           
  2778 ;; *************** function _OSCILLATOR_Initialize *****************
  2779 ;; Defined at:
  2780 ;;		line 126 in file "mcc_generated_files/mcc.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;		None
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;Total ram usage:        0 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:    4
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_SYSTEM_Initialize
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text15
  2809  000992                     __ptext15:
  2810                           	opt stack 0
  2811  000992                     _OSCILLATOR_Initialize:
  2812                           	opt stack 25
  2813                           
  2814                           ;mcc.c: 129: OSCCON = 0x70;
  2815                           
  2816                           ; BSR set to: 15
  2817                           ;incstack = 0
  2818  000992  0E70               	movlw	112
  2819  000994  6ED3               	movwf	4051,c	;volatile
  2820                           
  2821                           ;mcc.c: 131: OSCCON2 = 0x04;
  2822  000996  0E04               	movlw	4
  2823  000998  6ED2               	movwf	4050,c	;volatile
  2824                           
  2825                           ;mcc.c: 133: OSCTUNE = 0x00;
  2826  00099A  0E00               	movlw	0
  2827  00099C  6E9B               	movwf	3995,c	;volatile
  2828  00099E  0012               	return		;funcret
  2829  0009A0                     __end_of_OSCILLATOR_Initialize:
  2830                           	opt stack 0
  2831                           tblptru	equ	0xFF8
  2832                           tblptrh	equ	0xFF7
  2833                           tblptrl	equ	0xFF6
  2834                           tablat	equ	0xFF5
  2835                           intcon	equ	0xFF2
  2836                           intcon2	equ	0xFF1
  2837                           postinc0	equ	0xFEE
  2838                           wreg	equ	0xFE8
  2839                           postdec1	equ	0xFE5
  2840                           fsr1l	equ	0xFE1
  2841                           indf2	equ	0xFDF
  2842                           fsr2h	equ	0xFDA
  2843                           fsr2l	equ	0xFD9
  2844                           status	equ	0xFD8
  2845                           
  2846 ;; *************** function _INTERRUPT_Initialize *****************
  2847 ;; Defined at:
  2848 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		None
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;Total ram usage:        0 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    4
  2869 ;; This function calls:
  2870 ;;		Nothing
  2871 ;; This function is called by:
  2872 ;;		_SYSTEM_Initialize
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text16
  2877  0009C6                     __ptext16:
  2878                           	opt stack 0
  2879  0009C6                     _INTERRUPT_Initialize:
  2880                           	opt stack 25
  2881                           
  2882                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2883                           
  2884                           ;incstack = 0
  2885  0009C6  9ED0               	bcf	4048,7,c	;volatile
  2886  0009C8  0012               	return		;funcret
  2887  0009CA                     __end_of_INTERRUPT_Initialize:
  2888                           	opt stack 0
  2889                           tblptru	equ	0xFF8
  2890                           tblptrh	equ	0xFF7
  2891                           tblptrl	equ	0xFF6
  2892                           tablat	equ	0xFF5
  2893                           intcon	equ	0xFF2
  2894                           intcon2	equ	0xFF1
  2895                           postinc0	equ	0xFEE
  2896                           wreg	equ	0xFE8
  2897                           postdec1	equ	0xFE5
  2898                           fsr1l	equ	0xFE1
  2899                           indf2	equ	0xFDF
  2900                           fsr2h	equ	0xFDA
  2901                           fsr2l	equ	0xFD9
  2902                           status	equ	0xFD8
  2903                           
  2904 ;; *************** function _EUSART1_Initialize *****************
  2905 ;; Defined at:
  2906 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;Total ram usage:        0 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    4
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_SYSTEM_Initialize
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text17
  2935  000948                     __ptext17:
  2936                           	opt stack 0
  2937  000948                     _EUSART1_Initialize:
  2938                           	opt stack 25
  2939                           
  2940                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  2941                           
  2942                           ;incstack = 0
  2943  000948  0E08               	movlw	8
  2944  00094A  6EB8               	movwf	4024,c	;volatile
  2945                           
  2946                           ;eusart1.c: 63: RCSTA1 = 0x90;
  2947  00094C  0E90               	movlw	144
  2948  00094E  6EAB               	movwf	4011,c	;volatile
  2949                           
  2950                           ;eusart1.c: 66: TXSTA1 = 0x24;
  2951  000950  0E24               	movlw	36
  2952  000952  6EAC               	movwf	4012,c	;volatile
  2953                           
  2954                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  2955  000954  0EA0               	movlw	160
  2956  000956  6EAF               	movwf	4015,c	;volatile
  2957                           
  2958                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  2959  000958  0E01               	movlw	1
  2960  00095A  6EB0               	movwf	4016,c	;volatile
  2961  00095C  0012               	return		;funcret
  2962  00095E                     __end_of_EUSART1_Initialize:
  2963                           	opt stack 0
  2964                           tblptru	equ	0xFF8
  2965                           tblptrh	equ	0xFF7
  2966                           tblptrl	equ	0xFF6
  2967                           tablat	equ	0xFF5
  2968                           intcon	equ	0xFF2
  2969                           intcon2	equ	0xFF1
  2970                           postinc0	equ	0xFEE
  2971                           wreg	equ	0xFE8
  2972                           postdec1	equ	0xFE5
  2973                           fsr1l	equ	0xFE1
  2974                           indf2	equ	0xFDF
  2975                           fsr2h	equ	0xFDA
  2976                           fsr2l	equ	0xFD9
  2977                           status	equ	0xFD8
  2978                           
  2979 ;; *************** function _EPWM2_Initialize *****************
  2980 ;; Defined at:
  2981 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:    4
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_SYSTEM_Initialize
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text18
  3010  000868                     __ptext18:
  3011                           	opt stack 0
  3012  000868                     _EPWM2_Initialize:
  3013                           	opt stack 25
  3014                           
  3015                           ;epwm2.c: 68: CCP2CON = 0x3C;
  3016                           
  3017                           ;incstack = 0
  3018  000868  0E3C               	movlw	60
  3019  00086A  6E66               	movwf	3942,c	;volatile
  3020                           
  3021                           ;epwm2.c: 71: ECCP2AS = 0x00;
  3022  00086C  0E00               	movlw	0
  3023  00086E  6E64               	movwf	3940,c	;volatile
  3024                           
  3025                           ;epwm2.c: 74: PWM2CON = 0x80;
  3026  000870  0E80               	movlw	128
  3027  000872  6E65               	movwf	3941,c	;volatile
  3028                           
  3029                           ;epwm2.c: 77: PSTR2CON = 0x03;
  3030  000874  0E03               	movlw	3
  3031  000876  6E63               	movwf	3939,c	;volatile
  3032                           
  3033                           ;epwm2.c: 80: CCPR2L = 0x14;
  3034  000878  0E14               	movlw	20
  3035  00087A  6E67               	movwf	3943,c	;volatile
  3036                           
  3037                           ;epwm2.c: 83: CCPR2H = 0x00;
  3038  00087C  0E00               	movlw	0
  3039  00087E  6E68               	movwf	3944,c	;volatile
  3040                           
  3041                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  3042  000880  010F               	movlb	15	; () banked
  3043  000882  5149               	movf	73,w,b	;volatile
  3044  000884  0BE7               	andlw	-25
  3045  000886  0910               	iorlw	16
  3046  000888  6F49               	movwf	73,b	;volatile
  3047                           
  3048                           ; BSR set to: 15
  3049  00088A  0012               	return		;funcret
  3050  00088C                     __end_of_EPWM2_Initialize:
  3051                           	opt stack 0
  3052                           tblptru	equ	0xFF8
  3053                           tblptrh	equ	0xFF7
  3054                           tblptrl	equ	0xFF6
  3055                           tablat	equ	0xFF5
  3056                           intcon	equ	0xFF2
  3057                           intcon2	equ	0xFF1
  3058                           postinc0	equ	0xFEE
  3059                           wreg	equ	0xFE8
  3060                           postdec1	equ	0xFE5
  3061                           fsr1l	equ	0xFE1
  3062                           indf2	equ	0xFDF
  3063                           fsr2h	equ	0xFDA
  3064                           fsr2l	equ	0xFD9
  3065                           status	equ	0xFD8
  3066                           
  3067 ;; *************** function _EPWM1_Initialize *****************
  3068 ;; Defined at:
  3069 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;		None
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;		None
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      void 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;Total ram usage:        0 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    4
  3090 ;; This function calls:
  3091 ;;		Nothing
  3092 ;; This function is called by:
  3093 ;;		_SYSTEM_Initialize
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text19
  3098  00088C                     __ptext19:
  3099                           	opt stack 0
  3100  00088C                     _EPWM1_Initialize:
  3101                           	opt stack 25
  3102                           
  3103                           ;epwm1.c: 68: CCP1CON = 0x3C;
  3104                           
  3105                           ; BSR set to: 15
  3106                           ;incstack = 0
  3107  00088C  0E3C               	movlw	60
  3108  00088E  6EBD               	movwf	4029,c	;volatile
  3109                           
  3110                           ;epwm1.c: 71: ECCP1AS = 0x00;
  3111  000890  0E00               	movlw	0
  3112  000892  6EB6               	movwf	4022,c	;volatile
  3113                           
  3114                           ;epwm1.c: 74: PWM1CON = 0x80;
  3115  000894  0E80               	movlw	128
  3116  000896  6EB7               	movwf	4023,c	;volatile
  3117                           
  3118                           ;epwm1.c: 77: PSTR1CON = 0x03;
  3119  000898  0E03               	movlw	3
  3120  00089A  6EB9               	movwf	4025,c	;volatile
  3121                           
  3122                           ;epwm1.c: 80: CCPR1L = 0x14;
  3123  00089C  0E14               	movlw	20
  3124  00089E  6EBE               	movwf	4030,c	;volatile
  3125                           
  3126                           ;epwm1.c: 83: CCPR1H = 0x00;
  3127  0008A0  0E00               	movlw	0
  3128  0008A2  6EBF               	movwf	4031,c	;volatile
  3129                           
  3130                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  3131  0008A4  010F               	movlb	15	; () banked
  3132  0008A6  5149               	movf	73,w,b	;volatile
  3133  0008A8  0BFC               	andlw	-4
  3134  0008AA  0902               	iorlw	2
  3135  0008AC  6F49               	movwf	73,b	;volatile
  3136                           
  3137                           ; BSR set to: 15
  3138  0008AE  0012               	return		;funcret
  3139  0008B0                     __end_of_EPWM1_Initialize:
  3140                           	opt stack 0
  3141                           tblptru	equ	0xFF8
  3142                           tblptrh	equ	0xFF7
  3143                           tblptrl	equ	0xFF6
  3144                           tablat	equ	0xFF5
  3145                           intcon	equ	0xFF2
  3146                           intcon2	equ	0xFF1
  3147                           postinc0	equ	0xFEE
  3148                           wreg	equ	0xFE8
  3149                           postdec1	equ	0xFE5
  3150                           fsr1l	equ	0xFE1
  3151                           indf2	equ	0xFDF
  3152                           fsr2h	equ	0xFDA
  3153                           fsr2l	equ	0xFD9
  3154                           status	equ	0xFD8
  3155                           
  3156 ;; *************** function _CCP5_Initialize *****************
  3157 ;; Defined at:
  3158 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;Total ram usage:        0 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    4
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_SYSTEM_Initialize
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text20
  3187  00095E                     __ptext20:
  3188                           	opt stack 0
  3189  00095E                     _CCP5_Initialize:
  3190                           	opt stack 25
  3191                           
  3192                           ;ccp5.c: 60: CCP5CON = 0x00;
  3193                           
  3194                           ; BSR set to: 15
  3195                           ;incstack = 0
  3196  00095E  0E00               	movlw	0
  3197  000960  010F               	movlb	15	; () banked
  3198  000962  6F54               	movwf	84,b	;volatile
  3199                           
  3200                           ;ccp5.c: 62: CCPR5L = 0x00;
  3201  000964  0E00               	movlw	0
  3202  000966  010F               	movlb	15	; () banked
  3203  000968  6F55               	movwf	85,b	;volatile
  3204                           
  3205                           ;ccp5.c: 64: CCPR5H = 0x00;
  3206  00096A  0E00               	movlw	0
  3207  00096C  010F               	movlb	15	; () banked
  3208  00096E  6F56               	movwf	86,b	;volatile
  3209                           
  3210                           ; BSR set to: 15
  3211  000970  0012               	return		;funcret
  3212  000972                     __end_of_CCP5_Initialize:
  3213                           	opt stack 0
  3214                           tblptru	equ	0xFF8
  3215                           tblptrh	equ	0xFF7
  3216                           tblptrl	equ	0xFF6
  3217                           tablat	equ	0xFF5
  3218                           intcon	equ	0xFF2
  3219                           intcon2	equ	0xFF1
  3220                           postinc0	equ	0xFEE
  3221                           wreg	equ	0xFE8
  3222                           postdec1	equ	0xFE5
  3223                           fsr1l	equ	0xFE1
  3224                           indf2	equ	0xFDF
  3225                           fsr2h	equ	0xFDA
  3226                           fsr2l	equ	0xFD9
  3227                           status	equ	0xFD8
  3228                           
  3229 ;; *************** function _ADC_Initialize *****************
  3230 ;; Defined at:
  3231 ;;		line 61 in file "mcc_generated_files/adc.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;Total ram usage:        0 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    4
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_SYSTEM_Initialize
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text21
  3260  000930                     __ptext21:
  3261                           	opt stack 0
  3262  000930                     _ADC_Initialize:
  3263                           	opt stack 25
  3264                           
  3265                           ;adc.c: 66: ADCON0 = 0x01;
  3266                           
  3267                           ; BSR set to: 15
  3268                           ;incstack = 0
  3269  000930  0E01               	movlw	1
  3270  000932  6EC2               	movwf	4034,c	;volatile
  3271                           
  3272                           ;adc.c: 69: ADCON1 = 0x00;
  3273  000934  0E00               	movlw	0
  3274  000936  6EC1               	movwf	4033,c	;volatile
  3275                           
  3276                           ;adc.c: 72: ADCON2 = 0x05;
  3277  000938  0E05               	movlw	5
  3278  00093A  6EC0               	movwf	4032,c	;volatile
  3279                           
  3280                           ;adc.c: 75: ADRESL = 0x00;
  3281  00093C  0E00               	movlw	0
  3282  00093E  6EC3               	movwf	4035,c	;volatile
  3283                           
  3284                           ;adc.c: 78: ADRESH = 0x00;
  3285  000940  0E00               	movlw	0
  3286  000942  6EC4               	movwf	4036,c	;volatile
  3287                           
  3288                           ;adc.c: 81: PIE1bits.ADIE = 1;
  3289  000944  8C9D               	bsf	3997,6,c	;volatile
  3290  000946  0012               	return		;funcret
  3291  000948                     __end_of_ADC_Initialize:
  3292                           	opt stack 0
  3293                           tblptru	equ	0xFF8
  3294                           tblptrh	equ	0xFF7
  3295                           tblptrl	equ	0xFF6
  3296                           tablat	equ	0xFF5
  3297                           intcon	equ	0xFF2
  3298                           intcon2	equ	0xFF1
  3299                           postinc0	equ	0xFEE
  3300                           wreg	equ	0xFE8
  3301                           postdec1	equ	0xFE5
  3302                           fsr1l	equ	0xFE1
  3303                           indf2	equ	0xFDF
  3304                           fsr2h	equ	0xFDA
  3305                           fsr2l	equ	0xFD9
  3306                           status	equ	0xFD8
  3307                           
  3308 ;; *************** function _Motor_Stop *****************
  3309 ;; Defined at:
  3310 ;;		line 81 in file "MotorDriver.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    4
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text22
  3339  000972                     __ptext22:
  3340                           	opt stack 0
  3341  000972                     _Motor_Stop:
  3342                           	opt stack 26
  3343                           
  3344                           ;MotorDriver.c: 82: PSTR1CON = 0x00; PSTR2CON = 0x00;
  3345                           
  3346                           ;incstack = 0
  3347  000972  0E00               	movlw	0
  3348  000974  6EB9               	movwf	4025,c	;volatile
  3349  000976  0E00               	movlw	0
  3350  000978  6E63               	movwf	3939,c	;volatile
  3351                           
  3352                           ;MotorDriver.c: 83: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whil
      +                          e(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  3353  00097A  948B               	bcf	3979,2,c	;volatile
  3354  00097C  9A8C               	bcf	3980,5,c	;volatile
  3355  00097E  928B               	bcf	3979,1,c	;volatile
  3356  000980  908B               	bcf	3979,0,c	;volatile
  3357  000982  0012               	return	
  3358  000984                     __end_of_Motor_Stop:
  3359                           	opt stack 0
  3360                           tblptru	equ	0xFF8
  3361                           tblptrh	equ	0xFF7
  3362                           tblptrl	equ	0xFF6
  3363                           tablat	equ	0xFF5
  3364                           intcon	equ	0xFF2
  3365                           intcon2	equ	0xFF1
  3366                           postinc0	equ	0xFEE
  3367                           wreg	equ	0xFE8
  3368                           postdec1	equ	0xFE5
  3369                           fsr1l	equ	0xFE1
  3370                           indf2	equ	0xFDF
  3371                           fsr2h	equ	0xFDA
  3372                           fsr2l	equ	0xFD9
  3373                           status	equ	0xFD8
  3374                           
  3375 ;; *************** function _DelayTmr2 *****************
  3376 ;; Defined at:
  3377 ;;		line 86 in file "MotorDriver.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  Timeout         2   14[COMRAM] unsigned int 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;Total ram usage:        2 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    4
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_main
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text23
  3406  000914                     __ptext23:
  3407                           	opt stack 0
  3408  000914                     _DelayTmr2:
  3409                           	opt stack 0
  3410                           
  3411                           ;incstack = 0
  3412  000914  D006               	goto	l1935
  3413  000916                     l1931:
  3414                           
  3415                           ;MotorDriver.c: 92: {
  3416                           ;MotorDriver.c: 93: if (DelayTimerTicked)
  3417  000916  5048               	movf	_DelayTimerTicked,w,c	;volatile
  3418  000918  B4D8               	btfsc	status,2,c
  3419  00091A  D005               	goto	l1937
  3420                           
  3421                           ;MotorDriver.c: 94: {
  3422                           ;MotorDriver.c: 95: Timeout--;
  3423  00091C  062F               	decf	DelayTmr2@Timeout,f,c
  3424  00091E  A0D8               	btfss	status,0,c
  3425  000920  0630               	decf	DelayTmr2@Timeout+1,f,c
  3426  000922                     l1935:
  3427                           
  3428                           ;MotorDriver.c: 96: DelayTimerTicked = 0;
  3429  000922  0E00               	movlw	0
  3430  000924  6E48               	movwf	_DelayTimerTicked,c	;volatile
  3431  000926                     l1937:
  3432  000926  502F               	movf	DelayTmr2@Timeout,w,c
  3433  000928  1030               	iorwf	DelayTmr2@Timeout+1,w,c
  3434  00092A  B4D8               	btfsc	status,2,c
  3435  00092C  0012               	return	
  3436  00092E  D7F3               	goto	l1931
  3437  000930                     __end_of_DelayTmr2:
  3438                           	opt stack 0
  3439                           tblptru	equ	0xFF8
  3440                           tblptrh	equ	0xFF7
  3441                           tblptrl	equ	0xFF6
  3442                           tablat	equ	0xFF5
  3443                           intcon	equ	0xFF2
  3444                           intcon2	equ	0xFF1
  3445                           postinc0	equ	0xFEE
  3446                           wreg	equ	0xFE8
  3447                           postdec1	equ	0xFE5
  3448                           fsr1l	equ	0xFE1
  3449                           indf2	equ	0xFDF
  3450                           fsr2h	equ	0xFDA
  3451                           fsr2l	equ	0xFD9
  3452                           status	equ	0xFD8
  3453                           
  3454 ;; *************** function _INTERRUPT_InterruptManager *****************
  3455 ;; Defined at:
  3456 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;		None
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;Total ram usage:       14 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; Hardware stack levels required when called:    3
  3477 ;; This function calls:
  3478 ;;		_ADC_ISR
  3479 ;;		_TMR2_ISR
  3480 ;;		_TMR6_ISR
  3481 ;; This function is called by:
  3482 ;;		Interrupt level 2
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	intcode
  3487  000008                     __pintcode:
  3488                           	opt stack 0
  3489  000008                     _INTERRUPT_InterruptManager:
  3490                           	opt stack 24
  3491                           
  3492                           ;incstack = 0
  3493  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3494  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  3495  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3496  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3497  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3498  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3499  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3500  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3501  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3502  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3503  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3504  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3505  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3506  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3507  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3508                           
  3509                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  3510  000042  BCF2               	btfsc	intcon,6,c	;volatile
  3511  000044  AC9D               	btfss	3997,6,c	;volatile
  3512  000046  D005               	goto	i2l270
  3513  000048  AC9E               	btfss	3998,6,c	;volatile
  3514  00004A  D003               	goto	i2l270
  3515                           
  3516                           ;interrupt_manager.c: 61: {
  3517                           ;interrupt_manager.c: 62: ADC_ISR();
  3518  00004C  ECE5  F004         	call	_ADC_ISR	;wreg free
  3519                           
  3520                           ;interrupt_manager.c: 63: }
  3521  000050  D00E               	goto	i2l276
  3522  000052                     i2l270:
  3523                           
  3524                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  3525  000052  BCF2               	btfsc	intcon,6,c	;volatile
  3526  000054  A47D               	btfss	3965,2,c	;volatile
  3527  000056  D005               	goto	i2l272
  3528  000058  A47E               	btfss	3966,2,c	;volatile
  3529  00005A  D003               	goto	i2l272
  3530                           
  3531                           ;interrupt_manager.c: 65: {
  3532                           ;interrupt_manager.c: 66: TMR6_ISR();
  3533  00005C  EC69  F004         	call	_TMR6_ISR	;wreg free
  3534                           
  3535                           ;interrupt_manager.c: 67: }
  3536  000060  D006               	goto	i2l276
  3537  000062                     i2l272:
  3538                           
  3539                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  3540  000062  BCF2               	btfsc	intcon,6,c	;volatile
  3541  000064  A29D               	btfss	3997,1,c	;volatile
  3542  000066  D003               	goto	i2l276
  3543  000068  B29E               	btfsc	3998,1,c	;volatile
  3544                           
  3545                           ;interrupt_manager.c: 69: {
  3546                           ;interrupt_manager.c: 70: TMR2_ISR();
  3547  00006A  ECDA  F004         	call	_TMR2_ISR	;wreg free
  3548  00006E                     i2l276:
  3549  00006E  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3550  000072  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3551  000076  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3552  00007A  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3553  00007E  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3554  000082  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3555  000086  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3556  00008A  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3557  00008E  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3558  000092  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3559  000096  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3560  00009A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3561  00009E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3562  0000A2  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3563  0000A6  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3564  0000A8  0011               	retfie		f
  3565  0000AA                     __end_of_INTERRUPT_InterruptManager:
  3566                           	opt stack 0
  3567                           pclatu	equ	0xFFB
  3568                           pclath	equ	0xFFA
  3569                           tblptru	equ	0xFF8
  3570                           tblptrh	equ	0xFF7
  3571                           tblptrl	equ	0xFF6
  3572                           tablat	equ	0xFF5
  3573                           prodh	equ	0xFF4
  3574                           prodl	equ	0xFF3
  3575                           intcon	equ	0xFF2
  3576                           intcon2	equ	0xFF1
  3577                           postinc0	equ	0xFEE
  3578                           fsr0h	equ	0xFEA
  3579                           fsr0l	equ	0xFE9
  3580                           wreg	equ	0xFE8
  3581                           postdec1	equ	0xFE5
  3582                           fsr1h	equ	0xFE2
  3583                           fsr1l	equ	0xFE1
  3584                           indf2	equ	0xFDF
  3585                           fsr2h	equ	0xFDA
  3586                           fsr2l	equ	0xFD9
  3587                           status	equ	0xFD8
  3588                           
  3589 ;; *************** function _TMR6_ISR *****************
  3590 ;; Defined at:
  3591 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;		None
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;		None
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  1    wreg      void 
  3598 ;; Registers used:
  3599 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;Total ram usage:        0 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; Hardware stack levels required when called:    1
  3612 ;; This function calls:
  3613 ;;		Absolute function
  3614 ;;		_TMR6_DefaultInterruptHandler
  3615 ;; This function is called by:
  3616 ;;		_INTERRUPT_InterruptManager
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           	psect	text25
  3621  0008D2                     __ptext25:
  3622                           	opt stack 0
  3623  0008D2                     _TMR6_ISR:
  3624                           	opt stack 25
  3625                           
  3626                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  3627                           
  3628                           ;incstack = 0
  3629  0008D2  947E               	bcf	3966,2,c	;volatile
  3630                           
  3631                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  3632  0008D4  504C               	movf	_TMR6_InterruptHandler,w,c
  3633  0008D6  104D               	iorwf	_TMR6_InterruptHandler+1,w,c
  3634  0008D8  B4D8               	btfsc	status,2,c
  3635  0008DA  0012               	return	
  3636                           
  3637                           ;tmr6.c: 128: {
  3638                           ;tmr6.c: 129: TMR6_InterruptHandler();
  3639  0008DC  D801               	call	i2u42_48
  3640  0008DE  0012               	return	
  3641  0008E0                     i2u42_48:
  3642  0008E0  0005               	push	
  3643  0008E2  6EFA               	movwf	pclath,c
  3644  0008E4  504C               	movf	_TMR6_InterruptHandler,w,c
  3645  0008E6  6EFD               	movwf	tosl,c
  3646  0008E8  504D               	movf	_TMR6_InterruptHandler+1,w,c
  3647  0008EA  6EFE               	movwf	tosh,c
  3648  0008EC  50F8               	movf	tblptru,w,c
  3649  0008EE  6EFF               	movwf	tosu,c
  3650  0008F0  50FA               	movf	pclath,w,c
  3651  0008F2  0012               	return		;indir
  3652  0008F4                     __end_of_TMR6_ISR:
  3653                           	opt stack 0
  3654                           tosu	equ	0xFFF
  3655                           tosh	equ	0xFFE
  3656                           tosl	equ	0xFFD
  3657                           pclatu	equ	0xFFB
  3658                           pclath	equ	0xFFA
  3659                           tblptru	equ	0xFF8
  3660                           tblptrh	equ	0xFF7
  3661                           tblptrl	equ	0xFF6
  3662                           tablat	equ	0xFF5
  3663                           prodh	equ	0xFF4
  3664                           prodl	equ	0xFF3
  3665                           intcon	equ	0xFF2
  3666                           intcon2	equ	0xFF1
  3667                           postinc0	equ	0xFEE
  3668                           fsr0h	equ	0xFEA
  3669                           fsr0l	equ	0xFE9
  3670                           wreg	equ	0xFE8
  3671                           postdec1	equ	0xFE5
  3672                           fsr1h	equ	0xFE2
  3673                           fsr1l	equ	0xFE1
  3674                           indf2	equ	0xFDF
  3675                           fsr2h	equ	0xFDA
  3676                           fsr2l	equ	0xFD9
  3677                           status	equ	0xFD8
  3678                           
  3679 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  3680 ;; Defined at:
  3681 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		None
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3699 ;;Total ram usage:        0 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_TMR6_Initialize
  3705 ;;		_TMR6_ISR
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text26
  3710  0009CE                     __ptext26:
  3711                           	opt stack 0
  3712  0009CE                     _TMR6_DefaultInterruptHandler:
  3713                           	opt stack 25
  3714                           
  3715                           ;incstack = 0
  3716  0009CE  0012               	return		;funcret
  3717  0009D0                     __end_of_TMR6_DefaultInterruptHandler:
  3718                           	opt stack 0
  3719                           tosu	equ	0xFFF
  3720                           tosh	equ	0xFFE
  3721                           tosl	equ	0xFFD
  3722                           pclatu	equ	0xFFB
  3723                           pclath	equ	0xFFA
  3724                           tblptru	equ	0xFF8
  3725                           tblptrh	equ	0xFF7
  3726                           tblptrl	equ	0xFF6
  3727                           tablat	equ	0xFF5
  3728                           prodh	equ	0xFF4
  3729                           prodl	equ	0xFF3
  3730                           intcon	equ	0xFF2
  3731                           intcon2	equ	0xFF1
  3732                           postinc0	equ	0xFEE
  3733                           fsr0h	equ	0xFEA
  3734                           fsr0l	equ	0xFE9
  3735                           wreg	equ	0xFE8
  3736                           postdec1	equ	0xFE5
  3737                           fsr1h	equ	0xFE2
  3738                           fsr1l	equ	0xFE1
  3739                           indf2	equ	0xFDF
  3740                           fsr2h	equ	0xFDA
  3741                           fsr2l	equ	0xFD9
  3742                           status	equ	0xFD8
  3743                           
  3744 ;; *************** function _TMR2_ISR *****************
  3745 ;; Defined at:
  3746 ;;		line 126 in file "mcc_generated_files/tmr2.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;Total ram usage:        0 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    2
  3767 ;; This function calls:
  3768 ;;		_TMR2_CallBack
  3769 ;; This function is called by:
  3770 ;;		_INTERRUPT_InterruptManager
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text27
  3775  0009B4                     __ptext27:
  3776                           	opt stack 0
  3777  0009B4                     _TMR2_ISR:
  3778                           	opt stack 24
  3779                           
  3780                           ;tmr2.c: 130: PIR1bits.TMR2IF = 0;
  3781                           
  3782                           ;incstack = 0
  3783  0009B4  929E               	bcf	3998,1,c	;volatile
  3784                           
  3785                           ;tmr2.c: 134: TMR2_CallBack();
  3786  0009B6  EC20  F004         	call	_TMR2_CallBack	;wreg free
  3787  0009BA  0012               	return		;funcret
  3788  0009BC                     __end_of_TMR2_ISR:
  3789                           	opt stack 0
  3790                           tosu	equ	0xFFF
  3791                           tosh	equ	0xFFE
  3792                           tosl	equ	0xFFD
  3793                           pclatu	equ	0xFFB
  3794                           pclath	equ	0xFFA
  3795                           tblptru	equ	0xFF8
  3796                           tblptrh	equ	0xFF7
  3797                           tblptrl	equ	0xFF6
  3798                           tablat	equ	0xFF5
  3799                           prodh	equ	0xFF4
  3800                           prodl	equ	0xFF3
  3801                           intcon	equ	0xFF2
  3802                           intcon2	equ	0xFF1
  3803                           postinc0	equ	0xFEE
  3804                           fsr0h	equ	0xFEA
  3805                           fsr0l	equ	0xFE9
  3806                           wreg	equ	0xFE8
  3807                           postdec1	equ	0xFE5
  3808                           fsr1h	equ	0xFE2
  3809                           fsr1l	equ	0xFE1
  3810                           indf2	equ	0xFDF
  3811                           fsr2h	equ	0xFDA
  3812                           fsr2l	equ	0xFD9
  3813                           status	equ	0xFD8
  3814                           
  3815 ;; *************** function _TMR2_CallBack *****************
  3816 ;; Defined at:
  3817 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;		None
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;Total ram usage:        0 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    1
  3838 ;; This function calls:
  3839 ;;		Absolute function
  3840 ;;		_TMR2_DefaultInterruptHandler
  3841 ;; This function is called by:
  3842 ;;		_TMR2_ISR
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text28
  3847  000840                     __ptext28:
  3848                           	opt stack 0
  3849  000840                     _TMR2_CallBack:
  3850                           	opt stack 24
  3851                           
  3852                           ;tmr2.c: 140: Timer2Ticked = 1;
  3853                           
  3854                           ;incstack = 0
  3855  000840  0E01               	movlw	1
  3856  000842  6E49               	movwf	_Timer2Ticked,c	;volatile
  3857                           
  3858                           ;tmr2.c: 141: DelayTimerTicked = 1;
  3859  000844  0E01               	movlw	1
  3860  000846  6E48               	movwf	_DelayTimerTicked,c	;volatile
  3861                           
  3862                           ;tmr2.c: 144: if(TMR2_InterruptHandler)
  3863  000848  504A               	movf	_TMR2_InterruptHandler,w,c
  3864  00084A  104B               	iorwf	_TMR2_InterruptHandler+1,w,c
  3865  00084C  B4D8               	btfsc	status,2,c
  3866  00084E  0012               	return	
  3867                           
  3868                           ;tmr2.c: 145: {
  3869                           ;tmr2.c: 146: TMR2_InterruptHandler();
  3870  000850  D801               	call	i2u2_48
  3871  000852  0012               	return	
  3872  000854                     i2u2_48:
  3873  000854  0005               	push	
  3874  000856  6EFA               	movwf	pclath,c
  3875  000858  504A               	movf	_TMR2_InterruptHandler,w,c
  3876  00085A  6EFD               	movwf	tosl,c
  3877  00085C  504B               	movf	_TMR2_InterruptHandler+1,w,c
  3878  00085E  6EFE               	movwf	tosh,c
  3879  000860  50F8               	movf	tblptru,w,c
  3880  000862  6EFF               	movwf	tosu,c
  3881  000864  50FA               	movf	pclath,w,c
  3882  000866  0012               	return		;indir
  3883  000868                     __end_of_TMR2_CallBack:
  3884                           	opt stack 0
  3885                           tosu	equ	0xFFF
  3886                           tosh	equ	0xFFE
  3887                           tosl	equ	0xFFD
  3888                           pclatu	equ	0xFFB
  3889                           pclath	equ	0xFFA
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           prodh	equ	0xFF4
  3895                           prodl	equ	0xFF3
  3896                           intcon	equ	0xFF2
  3897                           intcon2	equ	0xFF1
  3898                           postinc0	equ	0xFEE
  3899                           fsr0h	equ	0xFEA
  3900                           fsr0l	equ	0xFE9
  3901                           wreg	equ	0xFE8
  3902                           postdec1	equ	0xFE5
  3903                           fsr1h	equ	0xFE2
  3904                           fsr1l	equ	0xFE1
  3905                           indf2	equ	0xFDF
  3906                           fsr2h	equ	0xFDA
  3907                           fsr2l	equ	0xFD9
  3908                           status	equ	0xFD8
  3909                           
  3910 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3911 ;; Defined at:
  3912 ;;		line 154 in file "mcc_generated_files/tmr2.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;		None
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		None
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;Total ram usage:        0 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_TMR2_Initialize
  3936 ;;		_TMR2_CallBack
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text29
  3941  0009D0                     __ptext29:
  3942                           	opt stack 0
  3943  0009D0                     _TMR2_DefaultInterruptHandler:
  3944                           	opt stack 24
  3945                           
  3946                           ;incstack = 0
  3947  0009D0  0012               	return		;funcret
  3948  0009D2                     __end_of_TMR2_DefaultInterruptHandler:
  3949                           	opt stack 0
  3950                           tosu	equ	0xFFF
  3951                           tosh	equ	0xFFE
  3952                           tosl	equ	0xFFD
  3953                           pclatu	equ	0xFFB
  3954                           pclath	equ	0xFFA
  3955                           tblptru	equ	0xFF8
  3956                           tblptrh	equ	0xFF7
  3957                           tblptrl	equ	0xFF6
  3958                           tablat	equ	0xFF5
  3959                           prodh	equ	0xFF4
  3960                           prodl	equ	0xFF3
  3961                           intcon	equ	0xFF2
  3962                           intcon2	equ	0xFF1
  3963                           postinc0	equ	0xFEE
  3964                           fsr0h	equ	0xFEA
  3965                           fsr0l	equ	0xFE9
  3966                           wreg	equ	0xFE8
  3967                           postdec1	equ	0xFE5
  3968                           fsr1h	equ	0xFE2
  3969                           fsr1l	equ	0xFE1
  3970                           indf2	equ	0xFDF
  3971                           fsr2h	equ	0xFDA
  3972                           fsr2l	equ	0xFD9
  3973                           status	equ	0xFD8
  3974                           
  3975 ;; *************** function _ADC_ISR *****************
  3976 ;; Defined at:
  3977 ;;		line 144 in file "mcc_generated_files/adc.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      void 
  3984 ;; Registers used:
  3985 ;;		None
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;Total ram usage:        0 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; This function calls:
  3998 ;;		Nothing
  3999 ;; This function is called by:
  4000 ;;		_INTERRUPT_InterruptManager
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text30
  4005  0009CA                     __ptext30:
  4006                           	opt stack 0
  4007  0009CA                     _ADC_ISR:
  4008                           	opt stack 26
  4009                           
  4010                           ;adc.c: 149: PIR1bits.ADIF = 0;
  4011                           
  4012                           ;incstack = 0
  4013  0009CA  9C9E               	bcf	3998,6,c	;volatile
  4014  0009CC  0012               	return		;funcret
  4015  0009CE                     __end_of_ADC_ISR:
  4016                           	opt stack 0
  4017  0000                     tosu	equ	0xFFF
  4018                           tosh	equ	0xFFE
  4019                           tosl	equ	0xFFD
  4020                           pclatu	equ	0xFFB
  4021                           pclath	equ	0xFFA
  4022                           tblptru	equ	0xFF8
  4023                           tblptrh	equ	0xFF7
  4024                           tblptrl	equ	0xFF6
  4025                           tablat	equ	0xFF5
  4026                           prodh	equ	0xFF4
  4027                           prodl	equ	0xFF3
  4028                           intcon	equ	0xFF2
  4029                           intcon2	equ	0xFF1
  4030                           postinc0	equ	0xFEE
  4031                           fsr0h	equ	0xFEA
  4032                           fsr0l	equ	0xFE9
  4033                           wreg	equ	0xFE8
  4034                           postdec1	equ	0xFE5
  4035                           fsr1h	equ	0xFE2
  4036                           fsr1l	equ	0xFE1
  4037                           indf2	equ	0xFDF
  4038                           fsr2h	equ	0xFDA
  4039                           fsr2l	equ	0xFD9
  4040                           status	equ	0xFD8
  4041                           tosu	equ	0xFFF
  4042                           tosh	equ	0xFFE
  4043                           tosl	equ	0xFFD
  4044                           pclatu	equ	0xFFB
  4045                           pclath	equ	0xFFA
  4046                           tblptru	equ	0xFF8
  4047                           tblptrh	equ	0xFF7
  4048                           tblptrl	equ	0xFF6
  4049                           tablat	equ	0xFF5
  4050                           prodh	equ	0xFF4
  4051                           prodl	equ	0xFF3
  4052                           intcon	equ	0xFF2
  4053                           intcon2	equ	0xFF1
  4054                           postinc0	equ	0xFEE
  4055                           fsr0h	equ	0xFEA
  4056                           fsr0l	equ	0xFE9
  4057                           wreg	equ	0xFE8
  4058                           postdec1	equ	0xFE5
  4059                           fsr1h	equ	0xFE2
  4060                           fsr1l	equ	0xFE1
  4061                           indf2	equ	0xFDF
  4062                           fsr2h	equ	0xFDA
  4063                           fsr2l	equ	0xFD9
  4064                           status	equ	0xFD8
  4065                           
  4066                           	psect	text31
  4067  000000                     __ptext31:
  4068                           	opt stack 0
  4069                           tosu	equ	0xFFF
  4070                           tosh	equ	0xFFE
  4071                           tosl	equ	0xFFD
  4072                           pclatu	equ	0xFFB
  4073                           pclath	equ	0xFFA
  4074                           tblptru	equ	0xFF8
  4075                           tblptrh	equ	0xFF7
  4076                           tblptrl	equ	0xFF6
  4077                           tablat	equ	0xFF5
  4078                           prodh	equ	0xFF4
  4079                           prodl	equ	0xFF3
  4080                           intcon	equ	0xFF2
  4081                           intcon2	equ	0xFF1
  4082                           postinc0	equ	0xFEE
  4083                           fsr0h	equ	0xFEA
  4084                           fsr0l	equ	0xFE9
  4085                           wreg	equ	0xFE8
  4086                           postdec1	equ	0xFE5
  4087                           fsr1h	equ	0xFE2
  4088                           fsr1l	equ	0xFE1
  4089                           indf2	equ	0xFDF
  4090                           fsr2h	equ	0xFDA
  4091                           fsr2l	equ	0xFD9
  4092                           status	equ	0xFD8
  4093                           
  4094                           	psect	rparam
  4095  0000                     tosu	equ	0xFFF
  4096                           tosh	equ	0xFFE
  4097                           tosl	equ	0xFFD
  4098                           pclatu	equ	0xFFB
  4099                           pclath	equ	0xFFA
  4100                           tblptru	equ	0xFF8
  4101                           tblptrh	equ	0xFF7
  4102                           tblptrl	equ	0xFF6
  4103                           tablat	equ	0xFF5
  4104                           prodh	equ	0xFF4
  4105                           prodl	equ	0xFF3
  4106                           intcon	equ	0xFF2
  4107                           intcon2	equ	0xFF1
  4108                           postinc0	equ	0xFEE
  4109                           fsr0h	equ	0xFEA
  4110                           fsr0l	equ	0xFE9
  4111                           wreg	equ	0xFE8
  4112                           postdec1	equ	0xFE5
  4113                           fsr1h	equ	0xFE2
  4114                           fsr1l	equ	0xFE1
  4115                           indf2	equ	0xFDF
  4116                           fsr2h	equ	0xFDA
  4117                           fsr2l	equ	0xFD9
  4118                           status	equ	0xFD8
  4119                           
  4120                           	psect	temp
  4121  00004F                     btemp:
  4122                           	opt stack 0
  4123  00004F                     	ds	1
  4124  0000                     int$flags	set	btemp
  4125                           tosu	equ	0xFFF
  4126                           tosh	equ	0xFFE
  4127                           tosl	equ	0xFFD
  4128                           pclatu	equ	0xFFB
  4129                           pclath	equ	0xFFA
  4130                           tblptru	equ	0xFF8
  4131                           tblptrh	equ	0xFF7
  4132                           tblptrl	equ	0xFF6
  4133                           tablat	equ	0xFF5
  4134                           prodh	equ	0xFF4
  4135                           prodl	equ	0xFF3
  4136                           intcon	equ	0xFF2
  4137                           intcon2	equ	0xFF1
  4138                           postinc0	equ	0xFEE
  4139                           fsr0h	equ	0xFEA
  4140                           fsr0l	equ	0xFE9
  4141                           wreg	equ	0xFE8
  4142                           postdec1	equ	0xFE5
  4143                           fsr1h	equ	0xFE2
  4144                           fsr1l	equ	0xFE1
  4145                           indf2	equ	0xFDF
  4146                           fsr2h	equ	0xFDA
  4147                           fsr2l	equ	0xFD9
  4148                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        192
    BSS         14
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     27      78
    BANK0           160      0     160
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StepMove
    _StepMove->_State16MEF_act
    _StepMove->_State8MEF_act
    _State8MEF_act->_EPWM1_LoadDutyValue
    _State8MEF_act->_EPWM2_LoadDutyValue
    _State16MEF_act->_EPWM1_LoadDutyValue
    _State16MEF_act->_EPWM2_LoadDutyValue
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3345
                          _DelayTmr2
                         _Motor_Stop
                  _SYSTEM_Initialize
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StepMove                                             7     2      5    3022
                                             20 COMRAM     7     2      5
                     _State16MEF_act
                      _State8MEF_act
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act                                        2     2      0    1200
                                             18 COMRAM     2     2      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act                                       2     2      0    1200
                                             18 COMRAM     2     2      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2     556
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     556
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayTmr2                                            2     0      2     151
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayTmr2
   _Motor_Stop
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_ini
   _StepMove
     _State16MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
     _State8MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1B      4E       1       83.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EE      12        0.0%
DATA                 0      0      EE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Jun 22 11:17:49 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 09B4  
                       ??_TMR6_StartTimer 002F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l427 06E4                                       l543 0564  
                                     l497 0308                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _PR6 000F4B                                       u731 03AE  
                                     u740 03C0                                       u840 04E0  
                                     u921 0152                                       u930 0164  
                                     u691 0328                                       u781 043E  
                                     u790 0450                                       u881 00CC  
                                     u971 01E2                                       u980 01F4  
                         __end_of_ADC_ISR 09CE                           _TMR2_Initialize 08B0  
                                     tosl 000FFD                                       wreg 000FE8  
                __end_of_EPWM2_Initialize 088C                           _CCP5_Initialize 095E  
                                    l1713 041C                                      l1723 0440  
                                    l1715 0424                                      l1707 0408  
                                    l1741 04B4                                      l1733 0498  
                                    l1709 040E                                      l1735 049E  
                                    l1823 01C0                                      l1807 0154  
                                    l1761 052C                                      l1681 0372  
                                    l1673 032A                                      l1665 030E  
                                    l1833 01E4                                      l1825 01C8  
                                    l1817 01AC                                      l1921 06CE  
                                    l1931 0916                                      l1763 0532  
                                    l1739 04AC                                      l1683 0378  
                                    l1771 0548                                      l1851 0258  
                                    l1843 023C                                      l1819 01B2  
                                    l1915 06BC                                      l1923 06D2  
                                    l1749 04D0                                      l1845 0242  
                                    l1917 06C2                                      l1925 06D8  
                                    l1935 0922                                      l1767 0540  
                                    l1687 038C                                      l1871 02D0  
                                    l1791 0116                                      l1783 00CE  
                                    l1775 00B2                                      l1937 0926  
                                    l1697 03B0                                      l1689 0394  
                                    l1873 02D6                                      l1849 0250  
                                    l1793 011C                                      l1881 02EC  
                                    l1953 061C                                      l1859 0274  
                                    l1877 02E4                                      l1797 0130  
                                    l1799 0138                                      l1959 064E  
                                    u1030 0284                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    _TMR2 000FBC                                      _TMR6 000F4C  
                                    _WPUB 000F61                                      _main 0606  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 004F  
                           __CFG_BORV$190 000000                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00AA  
                           __CFG_IESO$OFF 000000                     ??_EPWM1_LoadDutyValue 0031  
                            ___param_bank 000000            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 09A0                                     ?_main 0021  
                                   _T2CON 000FBA                                     _T6CON 000F4A  
                          __CFG_DEBUG$OFF 000000                                     i2l270 0052  
                                   i2l272 0062                                     i2l276 006E  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000         __size_of_TMR6_SetInterruptHandler 000A  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                 ?_TMR6_SetInterruptHandler 002F  
                        __end_of_TMR2_ISR 09BC                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                        __end_of_TMR6_ISR 08F4                            __CFG_EBTRB$OFF 000000  
                        _LookUP_TABLE_COS 0001                          _LookUP_TABLE_SEN 00E0  
                      __CFG_MCLRE$EXTMCLR 000000                        StepMove@StepNumber 0035  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 09C2                            __CFG_PBADEN$ON 000000  
          ??_TMR6_DefaultInterruptHandler 0021                           __initialization 06E8  
              __end_of_EUSART1_Initialize 095E                              __end_of_main 0682  
                 __end_of_TMR2_Initialize 08D2                                 ??_ADC_ISR 0021  
                      __size_of_DelayTmr2 001C               ?_INTERRUPT_InterruptManager 0021  
                _TMR2_SetInterruptHandler 09AA                                    ??_main 003C  
                 __end_of_CCP5_Initialize 0972                             __activetblptr 000002  
                        DelayTmr2@Timeout 002F                           _TMR6_Initialize 0818  
                        __end_of_StepMove 06E8                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR1H 000FBF                                    _CCPR2H 000F68  
                                  _CCPR1L 000FBE                                    _CCPR2L 000F67  
                                  _CCPR5H 000F56                                    _CCPR5L 000F55  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  i2u2_48 0854                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                            __CFG_XINST$OFF 000000  
                            _CCPTMRS0bits 000F49                                _Motor_Stop 0972  
                          __CFG_STVREN$ON 000000                   __size_of_State16MEF_act 025C  
                                  clear_0 072E                              __pdataCOMRAM 0001  
                StepMove@microstep_number 0038                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                     _EPWM2_LoadDutyValue 078E                   __end_of_TMR2_StartTimer 09C6  
TMR2_SetInterruptHandler@InterruptHandler 002F  TMR6_SetInterruptHandler@InterruptHandler 002F  
           __size_of_INTERRUPT_Initialize 0004                         __end_of_DelayTmr2 0930  
                       _SYSTEM_Initialize 07EE                                __accesstop 0060  
                 __end_of__initialization 0734                     __end_of_TMR2_CallBack 0868  
                      ?_SYSTEM_Initialize 0021                           _TMR6_StartTimer 09BC  
                           ___rparam_used 000001                         ?_EPWM1_Initialize 0021  
                          __pcstackCOMRAM 0021                      ?_EPWM2_LoadDutyValue 002F  
                            __pidataBANK0 0566                       ??_SYSTEM_Initialize 0031  
                   __end_of_State8MEF_act 030A                                 ?_TMR2_ISR 0021  
                               ?_TMR6_ISR 0021                        ??_EPWM1_Initialize 002F  
                        ?_TMR2_Initialize 0021                   __end_of_TMR6_Initialize 0840  
                        ?_CCP5_Initialize 0021                         ?_EPWM2_Initialize 0021  
               __end_of_SYSTEM_Initialize 0818                        ??_EPWM2_Initialize 002F  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 004A  
                      __CFG_CCP2MX$PORTC1 000000                     ??_EPWM2_LoadDutyValue 0031  
                             ?_Motor_Stop 0021          __end_of_TMR6_SetInterruptHandler 09AA  
                              ??_TMR2_ISR 0021                        __CFG_CCP3MX$PORTB5 000000  
                               ?_StepMove 0035                                ??_TMR6_ISR 0021  
                                 _CCP1CON 000FBD                                   _CCP2CON 000F66  
                                 _CCP5CON 000F54                                   _ECCP1AS 000FB6  
                                 _ECCP2AS 000F64                                   _ADC_ISR 09CA  
                 __size_of_ADC_Initialize 0018                                   _OSCCON2 000FD2  
                                 i2u42_48 08E0                                   _OSCTUNE 000F9B  
                                 _PWM1CON 000FB7                                   _PWM2CON 000F65  
                                 _SPBRGH1 000FB0                          ?_TMR2_StartTimer 0021  
                 __end_of_TMR6_StartTimer 09C2               __end_of_EPWM1_LoadDutyValue 07EE  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0031  
                              ??_StepMove 003A                            _State16MEF_act 030A  
                                 __pcinit 06E8                          ?_TMR6_Initialize 0021  
                                 __ramtop 1000                                   __ptext0 0606  
                                 __ptext1 0682                                   __ptext2 00AE  
                                 __ptext3 030A                                   __ptext4 078E  
                                 __ptext5 07BE                                   __ptext6 0984  
                                 __ptext7 07EE                                   __ptext8 0818  
                                 __ptext9 09BC                     _OSCILLATOR_Initialize 0992  
                               _T2CONbits 000FBA                             ?_StateMEF_ini 0021  
                      _EUSART1_Initialize 0948                  ??_PIN_MANAGER_Initialize 002F  
                               _T6CONbits 000F4A                __size_of_SYSTEM_Initialize 002A  
                     __size_of_Motor_Stop 0012                      end_of_initialization 0734  
                     ?_EUSART1_Initialize 0021                             __Lmediumconst 0000  
                  __end_of_State16MEF_act 0566                                   postdec1 000FE5  
                                 postinc0 000FEE                      ??_EUSART1_Initialize 002F  
                _TMR6_SetInterruptHandler 09A0                            ??_StateMEF_ini 002F  
                        ?_TMR6_StartTimer 0021                              _EstadoActual 004E  
                               _DelayTmr2 0914                           ?_State16MEF_act 0021  
            __end_of_INTERRUPT_Initialize 09CA      __end_of_TMR2_DefaultInterruptHandler 09D2  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 09D0  
                       StepMove@Velocidad 0037                             __pidataCOMRAM 08F4  
                       __size_of_TMR2_ISR 0008                            _ADC_Initialize 0930  
                       __size_of_TMR6_ISR 0022                    ?_OSCILLATOR_Initialize 0021  
                     start_initialization 06E8                 __size_of_EPWM1_Initialize 0024  
         __size_of_PIN_MANAGER_Initialize 004C                                 _Microstep 0040  
            EPWM1_LoadDutyValue@dutyValue 002F                                ?_DelayTmr2 002F  
               __size_of_EPWM2_Initialize 0024                              ??_Motor_Stop 002F  
                        _DelayTimerTicked 0048                    __end_of_ADC_Initialize 0948  
                             __pdataBANK0 0060                                  ?_ADC_ISR 0021  
                               _StepCount 003E                         StepMove@direccion 0039  
           ?_TMR2_DefaultInterruptHandler 0021                         __size_of_StepMove 0066  
                  __size_of_TMR2_CallBack 0028                               __pbssCOMRAM 003C  
                __size_of_TMR2_Initialize 0022                  __size_of_CCP5_Initialize 0014  
                      __end_of_Motor_Stop 0984                    __size_of_State8MEF_act 025C  
             __end_of_EPWM2_LoadDutyValue 07BE                     _TMR6_InterruptHandler 004C  
                    __end_of_StateMEF_ini 0992                    _PIN_MANAGER_Initialize 0742  
                               __pintcode 0008                           ?_ADC_Initialize 0021  
                 State16MEF_act@direccion 0034              ??_INTERRUPT_InterruptManager 0021  
                        __CFG_PRICLKEN$ON 000000                                  _BAUDCON1 000FB8  
                                _ANALOG_0 0044                                  _ANALOG_1 0042  
                    _INTERRUPT_Initialize 09C6                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                           _TMR2_CallBack 0840                                  _PIE1bits 000F9D  
                                _PIE5bits 000F7D                               ??_DelayTmr2 0031  
                __size_of_TMR2_StartTimer 0004       __size_of_INTERRUPT_InterruptManager 00A2  
                                _PIR1bits 000F9E                                  _PIR5bits 000F7E  
            __size_of_EPWM1_LoadDutyValue 0030                ??_TMR6_SetInterruptHandler 0031  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR2_ISR 09B4                                  _PSTR1CON 000FB9  
                                _PSTR2CON 000F63                                  _TMR6_ISR 08D2  
                           _State8MEF_act 00AE                          _Timer2Tick_count 003C  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
          ??_TMR2_DefaultInterruptHandler 0021                          _EPWM1_Initialize 088C  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 002F  
                __size_of_TMR6_Initialize 0028                               _INTCON2bits 000FF1  
                               copy_data0 06FC                                 copy_data1 071C  
                   ?_INTERRUPT_Initialize 0021                         ??_TMR2_Initialize 0031  
                          ?_TMR2_CallBack 0021                          ??_State16MEF_act 0033  
                       ??_CCP5_Initialize 002F                                  _MoveDone 0046  
                                __Hrparam 0000                              _Timer2Ticked 0049  
                        _EPWM2_Initialize 0868                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTC0 000000  
                          ?_State8MEF_act 0021                                  _StepMove 0682  
                 ??_OSCILLATOR_Initialize 002F               __size_of_EUSART1_Initialize 0016  
                                __ptext10 09A0                                  __ptext11 08B0  
                                __ptext20 095E                                  __ptext12 09C2  
                                __ptext21 0930                                  __ptext13 09AA  
                                __ptext30 09CA                                  __ptext22 0972  
                                __ptext14 0742                                  __ptext31 0000  
                                __ptext23 0914                                  __ptext15 0992  
                                __ptext16 09C6                                  __ptext25 08D2  
                                __ptext17 0948                                  __ptext26 09CE  
                                __ptext18 0868                                  __ptext27 09B4  
                                __ptext19 088C                                  __ptext28 0840  
                                __ptext29 09D0                     __size_of_StateMEF_ini 000E  
                           __size_of_main 007C                       _LookUP_TABLE_COS_16 00A0  
                     _LookUP_TABLE_SEN_16 0060                  __size_of_TMR6_StartTimer 0006  
                                int$flags 004F                         ??_TMR2_StartTimer 002F  
      __end_of_INTERRUPT_InterruptManager 00AA                _INTERRUPT_InterruptManager 0008  
                              _INTCONbits 000FF2                              _StateMEF_ini 0984  
                  ??_INTERRUPT_Initialize 002F      __end_of_TMR6_DefaultInterruptHandler 09D0  
   __size_of_TMR6_DefaultInterruptHandler 0002              _TMR6_DefaultInterruptHandler 09CE  
                                intlevel2 0000                           ??_TMR2_CallBack 0021  
            EPWM2_LoadDutyValue@dutyValue 002F                   ?_PIN_MANAGER_Initialize 0021  
                       ??_TMR6_Initialize 0031                                _RCSTA1bits 000FAB  
                        ??_ADC_Initialize 002F                             _StepsComplete 0047  
                         ??_State8MEF_act 0033                    State8MEF_act@direccion 0034  
                       __CFG_T3CMX$PORTC0 000000                       _EPWM1_LoadDutyValue 07BE  
          __end_of_PIN_MANAGER_Initialize 078E             ?_TMR6_DefaultInterruptHandler 0021  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 004A  
                __end_of_EPWM1_Initialize 08B0                      ?_EPWM1_LoadDutyValue 002F  
