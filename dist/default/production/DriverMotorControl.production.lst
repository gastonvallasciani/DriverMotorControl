

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Jun 07 11:51:05 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           ; Version 1.41
    49                           ; Generated 25/01/2017 GMT
    50                           ; 
    51                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F46K22 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  0007CC                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for _LookUP_TABLE_COS
    88  0007CC  FA                 	db	250
    89  0007CD  ED                 	db	237
    90  0007CE  D8                 	db	216
    91  0007CF  BC                 	db	188
    92  0007D0  99                 	db	153
    93  0007D1  71                 	db	113
    94  0007D2  45                 	db	69
    95  0007D3  18                 	db	24
    96  0007D4  18                 	db	24
    97  0007D5  45                 	db	69
    98  0007D6  71                 	db	113
    99  0007D7  99                 	db	153
   100  0007D8  BC                 	db	188
   101  0007D9  D8                 	db	216
   102  0007DA  ED                 	db	237
   103  0007DB  FA                 	db	250
   104  0007DC  FA                 	db	250
   105  0007DD  ED                 	db	237
   106  0007DE  D8                 	db	216
   107  0007DF  BC                 	db	188
   108  0007E0  99                 	db	153
   109  0007E1  71                 	db	113
   110  0007E2  45                 	db	69
   111  0007E3  18                 	db	24
   112  0007E4  18                 	db	24
   113  0007E5  45                 	db	69
   114  0007E6  71                 	db	113
   115  0007E7  99                 	db	153
   116  0007E8  BC                 	db	188
   117  0007E9  D8                 	db	216
   118  0007EA  ED                 	db	237
   119  0007EB  FA                 	db	250
   120                           
   121                           	psect	idataBANK0
   122  0004A2                     __pidataBANK0:
   123                           	opt stack 0
   124                           
   125                           ;initializer for _LookUP_TABLE_SEN_16
   126  0004A2  0C                 	db	12
   127  0004A3  24                 	db	36
   128  0004A4  3C                 	db	60
   129  0004A5  53                 	db	83
   130  0004A6  6A                 	db	106
   131  0004A7  7F                 	db	127
   132  0004A8  93                 	db	147
   133  0004A9  A6                 	db	166
   134  0004AA  B8                 	db	184
   135  0004AB  C8                 	db	200
   136  0004AC  D6                 	db	214
   137  0004AD  E2                 	db	226
   138  0004AE  EC                 	db	236
   139  0004AF  F4                 	db	244
   140  0004B0  FA                 	db	250
   141  0004B1  FE                 	db	254
   142  0004B2  FE                 	db	254
   143  0004B3  FA                 	db	250
   144  0004B4  F4                 	db	244
   145  0004B5  EC                 	db	236
   146  0004B6  E2                 	db	226
   147  0004B7  D6                 	db	214
   148  0004B8  C8                 	db	200
   149  0004B9  B8                 	db	184
   150  0004BA  A6                 	db	166
   151  0004BB  93                 	db	147
   152  0004BC  7F                 	db	127
   153  0004BD  6A                 	db	106
   154  0004BE  53                 	db	83
   155  0004BF  3C                 	db	60
   156  0004C0  24                 	db	36
   157  0004C1  0C                 	db	12
   158  0004C2  0C                 	db	12
   159  0004C3  24                 	db	36
   160  0004C4  3C                 	db	60
   161  0004C5  53                 	db	83
   162  0004C6  6A                 	db	106
   163  0004C7  7F                 	db	127
   164  0004C8  93                 	db	147
   165  0004C9  A6                 	db	166
   166  0004CA  B8                 	db	184
   167  0004CB  C8                 	db	200
   168  0004CC  D6                 	db	214
   169  0004CD  E2                 	db	226
   170  0004CE  EC                 	db	236
   171  0004CF  F4                 	db	244
   172  0004D0  FA                 	db	250
   173  0004D1  FE                 	db	254
   174  0004D2  FE                 	db	254
   175  0004D3  FA                 	db	250
   176  0004D4  F4                 	db	244
   177  0004D5  EC                 	db	236
   178  0004D6  E2                 	db	226
   179  0004D7  D6                 	db	214
   180  0004D8  C8                 	db	200
   181  0004D9  B8                 	db	184
   182  0004DA  A6                 	db	166
   183  0004DB  93                 	db	147
   184  0004DC  7F                 	db	127
   185  0004DD  6A                 	db	106
   186  0004DE  53                 	db	83
   187  0004DF  3C                 	db	60
   188  0004E0  24                 	db	36
   189  0004E1  0C                 	db	12
   190                           
   191                           ;initializer for _LookUP_TABLE_COS_16
   192  0004E2  FE                 	db	254
   193  0004E3  FA                 	db	250
   194  0004E4  F4                 	db	244
   195  0004E5  EC                 	db	236
   196  0004E6  E2                 	db	226
   197  0004E7  D6                 	db	214
   198  0004E8  C8                 	db	200
   199  0004E9  B8                 	db	184
   200  0004EA  A6                 	db	166
   201  0004EB  93                 	db	147
   202  0004EC  7F                 	db	127
   203  0004ED  6A                 	db	106
   204  0004EE  53                 	db	83
   205  0004EF  3C                 	db	60
   206  0004F0  24                 	db	36
   207  0004F1  0C                 	db	12
   208  0004F2  0C                 	db	12
   209  0004F3  24                 	db	36
   210  0004F4  3C                 	db	60
   211  0004F5  53                 	db	83
   212  0004F6  6A                 	db	106
   213  0004F7  7F                 	db	127
   214  0004F8  93                 	db	147
   215  0004F9  A6                 	db	166
   216  0004FA  B8                 	db	184
   217  0004FB  C8                 	db	200
   218  0004FC  D6                 	db	214
   219  0004FD  E2                 	db	226
   220  0004FE  EC                 	db	236
   221  0004FF  F4                 	db	244
   222  000500  FA                 	db	250
   223  000501  FE                 	db	254
   224  000502  FE                 	db	254
   225  000503  FA                 	db	250
   226  000504  F4                 	db	244
   227  000505  EC                 	db	236
   228  000506  E2                 	db	226
   229  000507  D6                 	db	214
   230  000508  C8                 	db	200
   231  000509  B8                 	db	184
   232  00050A  A6                 	db	166
   233  00050B  93                 	db	147
   234  00050C  7F                 	db	127
   235  00050D  6A                 	db	106
   236  00050E  53                 	db	83
   237  00050F  3C                 	db	60
   238  000510  24                 	db	36
   239  000511  0C                 	db	12
   240  000512  0C                 	db	12
   241  000513  24                 	db	36
   242  000514  3C                 	db	60
   243  000515  53                 	db	83
   244  000516  6A                 	db	106
   245  000517  7F                 	db	127
   246  000518  93                 	db	147
   247  000519  A6                 	db	166
   248  00051A  B8                 	db	184
   249  00051B  C8                 	db	200
   250  00051C  D6                 	db	214
   251  00051D  E2                 	db	226
   252  00051E  EC                 	db	236
   253  00051F  F4                 	db	244
   254  000520  FA                 	db	250
   255  000521  FE                 	db	254
   256                           
   257                           ;initializer for _LookUP_TABLE_SEN
   258  000522  18                 	db	24
   259  000523  45                 	db	69
   260  000524  71                 	db	113
   261  000525  99                 	db	153
   262  000526  BC                 	db	188
   263  000527  D8                 	db	216
   264  000528  ED                 	db	237
   265  000529  FA                 	db	250
   266  00052A  FA                 	db	250
   267  00052B  ED                 	db	237
   268  00052C  D8                 	db	216
   269  00052D  BC                 	db	188
   270  00052E  99                 	db	153
   271  00052F  71                 	db	113
   272  000530  45                 	db	69
   273  000531  18                 	db	24
   274  000532  18                 	db	24
   275  000533  45                 	db	69
   276  000534  71                 	db	113
   277  000535  99                 	db	153
   278  000536  BC                 	db	188
   279  000537  D8                 	db	216
   280  000538  ED                 	db	237
   281  000539  FA                 	db	250
   282  00053A  FA                 	db	250
   283  00053B  ED                 	db	237
   284  00053C  D8                 	db	216
   285  00053D  BC                 	db	188
   286  00053E  99                 	db	153
   287  00053F  71                 	db	113
   288  000540  45                 	db	69
   289  000541  18                 	db	24
   290                           
   291                           	psect	nvCOMRAM
   292  000045                     __pnvCOMRAM:
   293                           	opt stack 0
   294  000045                     _TMR2_InterruptHandler:
   295                           	opt stack 0
   296  000045                     	ds	2
   297  000047                     _TMR6_InterruptHandler:
   298                           	opt stack 0
   299  000047                     	ds	2
   300  000049                     _EstadoActual:
   301                           	opt stack 0
   302  000049                     	ds	1
   303  0000                     _CCPTMRS0bits	set	3913
   304  0000                     _ANSELA	set	3896
   305  0000                     _ANSELE	set	3900
   306  0000                     _ANSELD	set	3899
   307  0000                     _ANSELB	set	3897
   308  0000                     _ANSELC	set	3898
   309  0000                     _CCPR5H	set	3926
   310  0000                     _CCPR5L	set	3925
   311  0000                     _CCP5CON	set	3924
   312  0000                     _T6CONbits	set	3914
   313  0000                     _TMR6	set	3916
   314  0000                     _PR6	set	3915
   315  0000                     _T6CON	set	3914
   316  0000                     _LATDbits	set	3980
   317  0000                     _LATCbits	set	3979
   318  0000                     _LATBbits	set	3978
   319  0000                     _TXREG1	set	4013
   320  0000                     _RCREG1	set	4014
   321  0000                     _RCSTA1bits	set	4011
   322  0000                     _SPBRGH1	set	4016
   323  0000                     _SPBRG1	set	4015
   324  0000                     _TXSTA1	set	4012
   325  0000                     _RCSTA1	set	4011
   326  0000                     _BAUDCON1	set	4024
   327  0000                     _OSCTUNE	set	3995
   328  0000                     _OSCCON2	set	4050
   329  0000                     _OSCCON	set	4051
   330  0000                     _INTCONbits	set	4082
   331  0000                     _RCONbits	set	4048
   332  0000                     _ADCON0bits	set	4034
   333  0000                     _ADRESH	set	4036
   334  0000                     _ADRESL	set	4035
   335  0000                     _ADCON2	set	4032
   336  0000                     _ADCON1	set	4033
   337  0000                     _ADCON0	set	4034
   338  0000                     _CCPR1H	set	4031
   339  0000                     _CCPR1L	set	4030
   340  0000                     _PSTR1CON	set	4025
   341  0000                     _PWM1CON	set	4023
   342  0000                     _ECCP1AS	set	4022
   343  0000                     _CCP1CON	set	4029
   344  0000                     _CCPR2H	set	3944
   345  0000                     _CCPR2L	set	3943
   346  0000                     _PSTR2CON	set	3939
   347  0000                     _PWM2CON	set	3941
   348  0000                     _ECCP2AS	set	3940
   349  0000                     _CCP2CON	set	3942
   350  0000                     _INTCON2bits	set	4081
   351  0000                     _WPUB	set	3937
   352  0000                     _TRISD	set	3989
   353  0000                     _TRISC	set	3988
   354  0000                     _TRISB	set	3987
   355  0000                     _TRISA	set	3986
   356  0000                     _TRISE	set	3990
   357  0000                     _LATC	set	3979
   358  0000                     _LATB	set	3978
   359  0000                     _LATA	set	3977
   360  0000                     _LATD	set	3980
   361  0000                     _LATE	set	3981
   362  0000                     _T2CONbits	set	4026
   363  0000                     _PIE1bits	set	3997
   364  0000                     _PIR1bits	set	3998
   365  0000                     _TMR2	set	4028
   366  0000                     _PR2	set	4027
   367  0000                     _T2CON	set	4026
   368  0000                     _PIE5bits	set	3965
   369  0000                     _PIR5bits	set	3966
   370                           
   371                           ; #config settings
   372  0000                     
   373                           	psect	cinit
   374  000542                     __pcinit:
   375                           	opt stack 0
   376  000542                     start_initialization:
   377                           	opt stack 0
   378  000542                     __initialization:
   379                           	opt stack 0
   380                           
   381                           ; Initialize objects allocated to BANK0 (160 bytes)
   382                           ; load TBLPTR registers with __pidataBANK0
   383  000542  0EA2               	movlw	low __pidataBANK0
   384  000544  6EF6               	movwf	tblptrl,c
   385  000546  0E04               	movlw	high __pidataBANK0
   386  000548  6EF7               	movwf	tblptrh,c
   387  00054A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   388  00054C  6EF8               	movwf	tblptru,c
   389  00054E  EE00  F060         	lfsr	0,__pdataBANK0
   390  000552  EE10 F0A0          	lfsr	1,160
   391  000556                     copy_data0:
   392  000556  0009               	tblrd		*+
   393  000558  CFF5 FFEE          	movff	tablat,postinc0
   394  00055C  50E5               	movf	postdec1,w,c
   395  00055E  50E1               	movf	fsr1l,w,c
   396  000560  E1FA               	bnz	copy_data0
   397                           
   398                           ; Initialize objects allocated to COMRAM (32 bytes)
   399                           ; load TBLPTR registers with __pidataCOMRAM
   400  000562  0ECC               	movlw	low __pidataCOMRAM
   401  000564  6EF6               	movwf	tblptrl,c
   402  000566  0E07               	movlw	high __pidataCOMRAM
   403  000568  6EF7               	movwf	tblptrh,c
   404  00056A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   405  00056C  6EF8               	movwf	tblptru,c
   406  00056E  EE00  F001         	lfsr	0,__pdataCOMRAM
   407  000572  EE10 F020          	lfsr	1,32
   408  000576                     copy_data1:
   409  000576  0009               	tblrd		*+
   410  000578  CFF5 FFEE          	movff	tablat,postinc0
   411  00057C  50E5               	movf	postdec1,w,c
   412  00057E  50E1               	movf	fsr1l,w,c
   413  000580  E1FA               	bnz	copy_data1
   414                           
   415                           ; Clear objects allocated to COMRAM (11 bytes)
   416  000582  EE00  F03A         	lfsr	0,__pbssCOMRAM
   417  000586  0E0B               	movlw	11
   418  000588                     clear_0:
   419  000588  6AEE               	clrf	postinc0,c
   420  00058A  06E8               	decf	wreg,f,c
   421  00058C  E1FD               	bnz	clear_0
   422  00058E                     end_of_initialization:
   423                           	opt stack 0
   424  00058E                     __end_of__initialization:
   425                           	opt stack 0
   426  00058E  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   427  000590  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   428  000592  0E00               	movlw	low (__Lmediumconst shr (0+16))
   429  000594  6EF8               	movwf	tblptru,c
   430  000596  0100               	movlb	0
   431  000598  EF66  F003         	goto	_main	;jump to C main() function
   432                           tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           tblptrl	equ	0xFF6
   435                           tablat	equ	0xFF5
   436                           postinc0	equ	0xFEE
   437                           wreg	equ	0xFE8
   438                           postdec1	equ	0xFE5
   439                           fsr1l	equ	0xFE1
   440                           
   441                           	psect	bssCOMRAM
   442  00003A                     __pbssCOMRAM:
   443                           	opt stack 0
   444  00003A                     _Timer2Tick_count:
   445                           	opt stack 0
   446  00003A                     	ds	2
   447  00003C                     _StepCount:
   448                           	opt stack 0
   449  00003C                     	ds	2
   450  00003E                     _ADRESLH:
   451                           	opt stack 0
   452  00003E                     	ds	2
   453  000040                     _ANALOG_0:
   454                           	opt stack 0
   455  000040                     	ds	2
   456  000042                     	ds	1
   457  000043                     _Microstep:
   458                           	opt stack 0
   459  000043                     	ds	1
   460  000044                     _Timer2Ticked:
   461                           	opt stack 0
   462  000044                     	ds	1
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           postdec1	equ	0xFE5
   470                           fsr1l	equ	0xFE1
   471                           
   472                           	psect	dataCOMRAM
   473  000001                     __pdataCOMRAM:
   474                           	opt stack 0
   475  000001                     _LookUP_TABLE_COS:
   476                           	opt stack 0
   477  000001                     	ds	32
   478                           tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           postdec1	equ	0xFE5
   485                           fsr1l	equ	0xFE1
   486                           
   487                           	psect	dataBANK0
   488  000060                     __pdataBANK0:
   489                           	opt stack 0
   490  000060                     _LookUP_TABLE_SEN_16:
   491                           	opt stack 0
   492  000060                     	ds	64
   493  0000A0                     _LookUP_TABLE_COS_16:
   494                           	opt stack 0
   495  0000A0                     	ds	64
   496  0000E0                     _LookUP_TABLE_SEN:
   497                           	opt stack 0
   498  0000E0                     	ds	32
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	cstackCOMRAM
   509  000021                     __pcstackCOMRAM:
   510                           	opt stack 0
   511  000021                     ??_INTERRUPT_InterruptManager:
   512  000021                     
   513                           ; 1 bytes @ 0x0
   514  000021                     	ds	14
   515  00002F                     EUSART1_Write@txData:
   516                           	opt stack 0
   517  00002F                     TMR6_SetInterruptHandler@InterruptHandler:
   518                           	opt stack 0
   519  00002F                     TMR2_SetInterruptHandler@InterruptHandler:
   520                           	opt stack 0
   521  00002F                     EPWM2_LoadDutyValue@dutyValue:
   522                           	opt stack 0
   523  00002F                     EPWM1_LoadDutyValue@dutyValue:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0xE
   527  00002F                     	ds	2
   528  000031                     ??_EPWM2_LoadDutyValue:
   529  000031                     ??_EPWM1_LoadDutyValue:
   530  000031                     
   531                           ; 1 bytes @ 0x10
   532  000031                     	ds	2
   533  000033                     ??_State8MEF_act:
   534  000033                     ??_State16MEF_act:
   535                           
   536                           ; 1 bytes @ 0x12
   537  000033                     	ds	1
   538  000034                     StepMove@StepNumber:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x13
   542  000034                     	ds	2
   543  000036                     StepMove@Velocidad:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x15
   547  000036                     	ds	1
   548  000037                     StepMove@microstep_number:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x16
   552  000037                     	ds	1
   553  000038                     ??_StepMove:
   554                           
   555                           ; 1 bytes @ 0x17
   556  000038                     	ds	2
   557  00003A                     tblptru	equ	0xFF8
   558                           tblptrh	equ	0xFF7
   559                           tblptrl	equ	0xFF6
   560                           tablat	equ	0xFF5
   561                           postinc0	equ	0xFEE
   562                           wreg	equ	0xFE8
   563                           postdec1	equ	0xFE5
   564                           fsr1l	equ	0xFE1
   565                           
   566                           ; 1 bytes @ 0x19
   567 ;;
   568 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   569 ;;
   570 ;; *************** function _main *****************
   571 ;; Defined at:
   572 ;;		line 21 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;Total ram usage:        0 bytes
   591 ;; Hardware stack levels required when called:    7
   592 ;; This function calls:
   593 ;;		_SYSTEM_Initialize
   594 ;;		_StateMEF_ini
   595 ;;		_StepMove
   596 ;; This function is called by:
   597 ;;		Startup code after reset
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text0
   602  0006CC                     __ptext0:
   603                           	opt stack 0
   604  0006CC                     _main:
   605                           	opt stack 24
   606                           
   607                           ;main.c: 24: SYSTEM_Initialize();
   608                           
   609                           ;incstack = 0
   610  0006CC  EC51  F003         	call	_SYSTEM_Initialize	;wreg free
   611                           
   612                           ;main.c: 25: StateMEF_ini();
   613  0006D0  EC24  F004         	call	_StateMEF_ini	;wreg free
   614                           
   615                           ;main.c: 26: Timer2Ticked=0;
   616  0006D4  0E00               	movlw	0
   617  0006D6  6E44               	movwf	_Timer2Ticked,c	;volatile
   618                           
   619                           ;main.c: 27: do { LATBbits.LATB6 = 1; } while(0);
   620  0006D8  8C8A               	bsf	3978,6,c	;volatile
   621                           
   622                           ;main.c: 30: (INTCONbits.GIE = 1);
   623  0006DA  8EF2               	bsf	intcon,7,c	;volatile
   624                           
   625                           ;main.c: 33: (INTCONbits.PEIE = 1);
   626  0006DC  8CF2               	bsf	intcon,6,c	;volatile
   627  0006DE                     l1824:
   628                           
   629                           ;main.c: 35: {
   630                           ;main.c: 36: StepMove(500,5,16);
   631  0006DE  0E01               	movlw	1
   632  0006E0  6E35               	movwf	StepMove@StepNumber+1,c
   633  0006E2  0EF4               	movlw	244
   634  0006E4  6E34               	movwf	StepMove@StepNumber,c
   635  0006E6  0E05               	movlw	5
   636  0006E8  6E36               	movwf	StepMove@Velocidad,c
   637  0006EA  0E10               	movlw	16
   638  0006EC  6E37               	movwf	StepMove@microstep_number,c
   639  0006EE  ECCE  F002         	call	_StepMove	;wreg free
   640  0006F2  D7F5               	goto	l1824
   641  0006F4                     __end_of_main:
   642                           	opt stack 0
   643                           tblptru	equ	0xFF8
   644                           tblptrh	equ	0xFF7
   645                           tblptrl	equ	0xFF6
   646                           tablat	equ	0xFF5
   647                           intcon	equ	0xFF2
   648                           postinc0	equ	0xFEE
   649                           wreg	equ	0xFE8
   650                           postdec1	equ	0xFE5
   651                           fsr1l	equ	0xFE1
   652                           
   653 ;; *************** function _StepMove *****************
   654 ;; Defined at:
   655 ;;		line 173 in file "MotorDriver.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;  StepNumber      2   19[COMRAM] unsigned int 
   658 ;;  Velocidad       1   21[COMRAM] unsigned char 
   659 ;;  microstep_nu    1   22[COMRAM] unsigned char 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;Total ram usage:        6 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; Hardware stack levels required when called:    6
   678 ;; This function calls:
   679 ;;		_State16MEF_act
   680 ;;		_State8MEF_act
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text1
   687  00059C                     __ptext1:
   688                           	opt stack 0
   689  00059C                     _StepMove:
   690                           	opt stack 24
   691                           
   692                           ;MotorDriver.c: 175: if (StepCount<StepNumber)
   693                           
   694                           ;incstack = 0
   695  00059C  5034               	movf	StepMove@StepNumber,w,c
   696  00059E  5C3C               	subwf	_StepCount,w,c
   697  0005A0  5035               	movf	StepMove@StepNumber+1,w,c
   698  0005A2  583D               	subwfb	_StepCount+1,w,c
   699  0005A4  B0D8               	btfsc	status,0,c
   700  0005A6  0012               	return	
   701                           
   702                           ;MotorDriver.c: 176: {
   703                           ;MotorDriver.c: 177: if (StepCount < StepNumber)
   704  0005A8  5034               	movf	StepMove@StepNumber,w,c
   705  0005AA  5C3C               	subwf	_StepCount,w,c
   706  0005AC  5035               	movf	StepMove@StepNumber+1,w,c
   707  0005AE  583D               	subwfb	_StepCount+1,w,c
   708  0005B0  B0D8               	btfsc	status,0,c
   709  0005B2  0012               	return	
   710                           
   711                           ;MotorDriver.c: 178: {
   712                           ;MotorDriver.c: 179: if (Timer2Ticked){
   713  0005B4  5044               	movf	_Timer2Ticked,w,c	;volatile
   714  0005B6  B4D8               	btfsc	status,2,c
   715  0005B8  0012               	return	
   716                           
   717                           ;MotorDriver.c: 180: Timer2Tick_count++;
   718  0005BA  4A3A               	infsnz	_Timer2Tick_count,f,c
   719  0005BC  2A3B               	incf	_Timer2Tick_count+1,f,c
   720                           
   721                           ;MotorDriver.c: 181: if (Timer2Tick_count == Velocidad){
   722  0005BE  5036               	movf	StepMove@Velocidad,w,c
   723  0005C0  6E38               	movwf	??_StepMove& (0+255),c
   724  0005C2  6A39               	clrf	(??_StepMove+1)& (0+255),c
   725  0005C4  503A               	movf	_Timer2Tick_count,w,c
   726  0005C6  1838               	xorwf	??_StepMove,w,c
   727  0005C8  E113               	bnz	l1810
   728  0005CA  503B               	movf	_Timer2Tick_count+1,w,c
   729  0005CC  1839               	xorwf	??_StepMove+1,w,c
   730  0005CE  A4D8               	btfss	status,2,c
   731  0005D0  D00F               	goto	l1810
   732                           
   733                           ;MotorDriver.c: 182: if (microstep_number==16){
   734  0005D2  0E10               	movlw	16
   735  0005D4  1837               	xorwf	StepMove@microstep_number,w,c
   736  0005D6  A4D8               	btfss	status,2,c
   737  0005D8  D003               	goto	l1804
   738                           
   739                           ;MotorDriver.c: 183: State16MEF_act();
   740  0005DA  EC54  F001         	call	_State16MEF_act	;wreg free
   741                           
   742                           ;MotorDriver.c: 184: }
   743  0005DE  D002               	goto	l1806
   744  0005E0                     l1804:
   745                           
   746                           ;MotorDriver.c: 185: else{State8MEF_act();}
   747  0005E0  EC57  F000         	call	_State8MEF_act	;wreg free
   748  0005E4                     l1806:
   749                           
   750                           ;MotorDriver.c: 186: StepCount++;
   751  0005E4  4A3C               	infsnz	_StepCount,f,c
   752  0005E6  2A3D               	incf	_StepCount+1,f,c
   753                           
   754                           ;MotorDriver.c: 187: Timer2Tick_count=0;
   755  0005E8  0E00               	movlw	0
   756  0005EA  6E3B               	movwf	_Timer2Tick_count+1,c
   757  0005EC  0E00               	movlw	0
   758  0005EE  6E3A               	movwf	_Timer2Tick_count,c
   759  0005F0                     l1810:
   760                           
   761                           ;MotorDriver.c: 188: }
   762                           ;MotorDriver.c: 189: Timer2Ticked = 0;
   763  0005F0  0E00               	movlw	0
   764  0005F2  6E44               	movwf	_Timer2Ticked,c	;volatile
   765  0005F4  0012               	return	
   766  0005F6                     __end_of_StepMove:
   767                           	opt stack 0
   768                           tblptru	equ	0xFF8
   769                           tblptrh	equ	0xFF7
   770                           tblptrl	equ	0xFF6
   771                           tablat	equ	0xFF5
   772                           intcon	equ	0xFF2
   773                           postinc0	equ	0xFEE
   774                           wreg	equ	0xFE8
   775                           postdec1	equ	0xFE5
   776                           fsr1l	equ	0xFE1
   777                           status	equ	0xFD8
   778                           
   779 ;; *************** function _State8MEF_act *****************
   780 ;; Defined at:
   781 ;;		line 41 in file "MotorDriver.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;Total ram usage:        1 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    5
   802 ;; This function calls:
   803 ;;		_EPWM1_LoadDutyValue
   804 ;;		_EPWM2_LoadDutyValue
   805 ;;		_EUSART1_Write
   806 ;; This function is called by:
   807 ;;		_StepMove
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text2
   812  0000AE                     __ptext2:
   813                           	opt stack 0
   814  0000AE                     _State8MEF_act:
   815                           	opt stack 24
   816                           
   817                           ;MotorDriver.c: 42: switch(EstadoActual) {
   818                           
   819                           ;incstack = 0
   820  0000AE  D0EB               	goto	l1664
   821  0000B0                     l1564:
   822                           
   823                           ;MotorDriver.c: 44: PSTR1CON = 0x00; PSTR2CON = 0x00;
   824  0000B0  0E00               	movlw	0
   825  0000B2  6EB9               	movwf	4025,c	;volatile
   826  0000B4  0E00               	movlw	0
   827  0000B6  6E63               	movwf	3939,c	;volatile
   828                           
   829                           ;MotorDriver.c: 45: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whil
      +                          e(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
   830  0000B8  948B               	bcf	3979,2,c	;volatile
   831  0000BA  9A8C               	bcf	3980,5,c	;volatile
   832  0000BC  928B               	bcf	3979,1,c	;volatile
   833  0000BE  908B               	bcf	3979,0,c	;volatile
   834                           
   835                           ;MotorDriver.c: 46: EstadoActual = STATE1;
   836  0000C0  0E01               	movlw	1
   837  0000C2  6E49               	movwf	_EstadoActual,c
   838                           
   839                           ;MotorDriver.c: 47: break;
   840  0000C4  0012               	return	
   841  0000C6                     l1574:
   842                           
   843                           ;MotorDriver.c: 49: PSTR1CON = 0x01; PSTR2CON = 0x01;
   844  0000C6  0E01               	movlw	1
   845  0000C8  6EB9               	movwf	4025,c	;volatile
   846  0000CA  0E01               	movlw	1
   847  0000CC  6E63               	movwf	3939,c	;volatile
   848                           
   849                           ;MotorDriver.c: 50: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
   850  0000CE  9A8C               	bcf	3980,5,c	;volatile
   851  0000D0  908B               	bcf	3979,0,c	;volatile
   852                           
   853                           ;MotorDriver.c: 51: if (Microstep<8){
   854  0000D2  5043               	movf	_Microstep,w,c
   855  0000D4  0A80               	xorlw	128
   856  0000D6  0F78               	addlw	-136
   857  0000D8  B0D8               	btfsc	status,0,c
   858  0000DA  0012               	return	
   859                           
   860                           ;MotorDriver.c: 52: EUSART1_Write(Microstep);
   861  0000DC  5043               	movf	_Microstep,w,c
   862  0000DE  EC1E  F004         	call	_EUSART1_Write
   863                           
   864                           ;MotorDriver.c: 53: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   865  0000E2  5043               	movf	_Microstep,w,c
   866  0000E4  0D01               	mullw	1
   867  0000E6  0E01               	movlw	low _LookUP_TABLE_COS
   868  0000E8  24F3               	addwf	prodl,w,c
   869  0000EA  6ED9               	movwf	fsr2l,c
   870  0000EC  0E00               	movlw	high _LookUP_TABLE_COS
   871  0000EE  20F4               	addwfc	prodh,w,c
   872  0000F0  6EDA               	movwf	fsr2h,c
   873  0000F2  50DF               	movf	indf2,w,c
   874  0000F4  6E33               	movwf	??_State8MEF_act& (0+255),c
   875  0000F6  5033               	movf	??_State8MEF_act,w,c
   876  0000F8  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   877  0000FA  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   878  0000FC  EC39  F003         	call	_EPWM1_LoadDutyValue	;wreg free
   879                           
   880                           ;MotorDriver.c: 54: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   881  000100  5043               	movf	_Microstep,w,c
   882  000102  0D01               	mullw	1
   883  000104  0EE0               	movlw	low _LookUP_TABLE_SEN
   884  000106  24F3               	addwf	prodl,w,c
   885  000108  6ED9               	movwf	fsr2l,c
   886  00010A  0E00               	movlw	high _LookUP_TABLE_SEN
   887  00010C  20F4               	addwfc	prodh,w,c
   888  00010E  6EDA               	movwf	fsr2h,c
   889  000110  50DF               	movf	indf2,w,c
   890  000112  6E33               	movwf	??_State8MEF_act& (0+255),c
   891  000114  5033               	movf	??_State8MEF_act,w,c
   892  000116  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   893  000118  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   894  00011A  EC21  F003         	call	_EPWM2_LoadDutyValue	;wreg free
   895                           
   896                           ;MotorDriver.c: 55: if (Microstep==7){
   897  00011E  0E07               	movlw	7
   898  000120  1843               	xorwf	_Microstep,w,c
   899  000122  A4D8               	btfss	status,2,c
   900  000124  D002               	goto	l1592
   901                           
   902                           ;MotorDriver.c: 56: EstadoActual = STATE2;
   903  000126  0E02               	movlw	2
   904  000128  6E49               	movwf	_EstadoActual,c
   905  00012A                     l1592:
   906                           
   907                           ;MotorDriver.c: 57: }
   908                           ;MotorDriver.c: 58: Microstep++;
   909  00012A  2A43               	incf	_Microstep,f,c
   910                           
   911                           ;MotorDriver.c: 59: }
   912                           ;MotorDriver.c: 60: break;
   913  00012C  0012               	return	
   914  00012E                     l1594:
   915                           
   916                           ;MotorDriver.c: 62: PSTR1CON = 0x02; PSTR2CON = 0x01;
   917  00012E  0E02               	movlw	2
   918  000130  6EB9               	movwf	4025,c	;volatile
   919  000132  0E01               	movlw	1
   920  000134  6E63               	movwf	3939,c	;volatile
   921                           
   922                           ;MotorDriver.c: 63: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
   923  000136  948B               	bcf	3979,2,c	;volatile
   924  000138  908B               	bcf	3979,0,c	;volatile
   925                           
   926                           ;MotorDriver.c: 64: if ((Microstep<16)&&(Microstep>7)){
   927  00013A  5043               	movf	_Microstep,w,c
   928  00013C  0A80               	xorlw	128
   929  00013E  0F70               	addlw	-144
   930  000140  B0D8               	btfsc	status,0,c
   931  000142  0012               	return	
   932  000144  5043               	movf	_Microstep,w,c
   933  000146  0A80               	xorlw	128
   934  000148  0F78               	addlw	-136
   935  00014A  A0D8               	btfss	status,0,c
   936  00014C  0012               	return	
   937                           
   938                           ;MotorDriver.c: 65: EUSART1_Write(Microstep);
   939  00014E  5043               	movf	_Microstep,w,c
   940  000150  EC1E  F004         	call	_EUSART1_Write
   941                           
   942                           ;MotorDriver.c: 66: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
   943  000154  5043               	movf	_Microstep,w,c
   944  000156  0D01               	mullw	1
   945  000158  0E01               	movlw	low _LookUP_TABLE_COS
   946  00015A  24F3               	addwf	prodl,w,c
   947  00015C  6ED9               	movwf	fsr2l,c
   948  00015E  0E00               	movlw	high _LookUP_TABLE_COS
   949  000160  20F4               	addwfc	prodh,w,c
   950  000162  6EDA               	movwf	fsr2h,c
   951  000164  50DF               	movf	indf2,w,c
   952  000166  6E33               	movwf	??_State8MEF_act& (0+255),c
   953  000168  5033               	movf	??_State8MEF_act,w,c
   954  00016A  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   955  00016C  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
   956  00016E  EC39  F003         	call	_EPWM1_LoadDutyValue	;wreg free
   957                           
   958                           ;MotorDriver.c: 67: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
   959  000172  5043               	movf	_Microstep,w,c
   960  000174  0D01               	mullw	1
   961  000176  0EE0               	movlw	low _LookUP_TABLE_SEN
   962  000178  24F3               	addwf	prodl,w,c
   963  00017A  6ED9               	movwf	fsr2l,c
   964  00017C  0E00               	movlw	high _LookUP_TABLE_SEN
   965  00017E  20F4               	addwfc	prodh,w,c
   966  000180  6EDA               	movwf	fsr2h,c
   967  000182  50DF               	movf	indf2,w,c
   968  000184  6E33               	movwf	??_State8MEF_act& (0+255),c
   969  000186  5033               	movf	??_State8MEF_act,w,c
   970  000188  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   971  00018A  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
   972  00018C  EC21  F003         	call	_EPWM2_LoadDutyValue	;wreg free
   973                           
   974                           ;MotorDriver.c: 68: if (Microstep==15){
   975  000190  0E0F               	movlw	15
   976  000192  1843               	xorwf	_Microstep,w,c
   977  000194  A4D8               	btfss	status,2,c
   978  000196  D002               	goto	l1614
   979                           
   980                           ;MotorDriver.c: 69: EstadoActual = STATE3;
   981  000198  0E03               	movlw	3
   982  00019A  6E49               	movwf	_EstadoActual,c
   983  00019C                     l1614:
   984                           
   985                           ;MotorDriver.c: 70: }
   986                           ;MotorDriver.c: 71: Microstep++;
   987  00019C  2A43               	incf	_Microstep,f,c
   988                           
   989                           ;MotorDriver.c: 72: }
   990                           ;MotorDriver.c: 73: break;
   991  00019E  0012               	return	
   992  0001A0                     l1616:
   993                           
   994                           ;MotorDriver.c: 75: PSTR1CON = 0x02; PSTR2CON = 0x02;
   995  0001A0  0E02               	movlw	2
   996  0001A2  6EB9               	movwf	4025,c	;volatile
   997  0001A4  0E02               	movlw	2
   998  0001A6  6E63               	movwf	3939,c	;volatile
   999                           
  1000                           ;MotorDriver.c: 76: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
  1001  0001A8  948B               	bcf	3979,2,c	;volatile
  1002  0001AA  928B               	bcf	3979,1,c	;volatile
  1003                           
  1004                           ;MotorDriver.c: 77: if ((Microstep<24)&&(Microstep>15)){
  1005  0001AC  5043               	movf	_Microstep,w,c
  1006  0001AE  0A80               	xorlw	128
  1007  0001B0  0F68               	addlw	-152
  1008  0001B2  B0D8               	btfsc	status,0,c
  1009  0001B4  0012               	return	
  1010  0001B6  5043               	movf	_Microstep,w,c
  1011  0001B8  0A80               	xorlw	128
  1012  0001BA  0F70               	addlw	-144
  1013  0001BC  A0D8               	btfss	status,0,c
  1014  0001BE  0012               	return	
  1015                           
  1016                           ;MotorDriver.c: 78: EUSART1_Write(Microstep);
  1017  0001C0  5043               	movf	_Microstep,w,c
  1018  0001C2  EC1E  F004         	call	_EUSART1_Write
  1019                           
  1020                           ;MotorDriver.c: 79: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1021  0001C6  5043               	movf	_Microstep,w,c
  1022  0001C8  0D01               	mullw	1
  1023  0001CA  0E01               	movlw	low _LookUP_TABLE_COS
  1024  0001CC  24F3               	addwf	prodl,w,c
  1025  0001CE  6ED9               	movwf	fsr2l,c
  1026  0001D0  0E00               	movlw	high _LookUP_TABLE_COS
  1027  0001D2  20F4               	addwfc	prodh,w,c
  1028  0001D4  6EDA               	movwf	fsr2h,c
  1029  0001D6  50DF               	movf	indf2,w,c
  1030  0001D8  6E33               	movwf	??_State8MEF_act& (0+255),c
  1031  0001DA  5033               	movf	??_State8MEF_act,w,c
  1032  0001DC  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1033  0001DE  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1034  0001E0  EC39  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1035                           
  1036                           ;MotorDriver.c: 80: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1037  0001E4  5043               	movf	_Microstep,w,c
  1038  0001E6  0D01               	mullw	1
  1039  0001E8  0EE0               	movlw	low _LookUP_TABLE_SEN
  1040  0001EA  24F3               	addwf	prodl,w,c
  1041  0001EC  6ED9               	movwf	fsr2l,c
  1042  0001EE  0E00               	movlw	high _LookUP_TABLE_SEN
  1043  0001F0  20F4               	addwfc	prodh,w,c
  1044  0001F2  6EDA               	movwf	fsr2h,c
  1045  0001F4  50DF               	movf	indf2,w,c
  1046  0001F6  6E33               	movwf	??_State8MEF_act& (0+255),c
  1047  0001F8  5033               	movf	??_State8MEF_act,w,c
  1048  0001FA  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1049  0001FC  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1050  0001FE  EC21  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1051                           
  1052                           ;MotorDriver.c: 81: if (Microstep==23){
  1053  000202  0E17               	movlw	23
  1054  000204  1843               	xorwf	_Microstep,w,c
  1055  000206  A4D8               	btfss	status,2,c
  1056  000208  D002               	goto	l1636
  1057                           
  1058                           ;MotorDriver.c: 82: EstadoActual = STATE4;
  1059  00020A  0E04               	movlw	4
  1060  00020C  6E49               	movwf	_EstadoActual,c
  1061  00020E                     l1636:
  1062                           
  1063                           ;MotorDriver.c: 83: }
  1064                           ;MotorDriver.c: 84: Microstep++;
  1065  00020E  2A43               	incf	_Microstep,f,c
  1066                           
  1067                           ;MotorDriver.c: 85: }
  1068                           ;MotorDriver.c: 86: break;
  1069  000210  0012               	return	
  1070  000212                     l1638:
  1071                           
  1072                           ;MotorDriver.c: 88: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1073  000212  0E01               	movlw	1
  1074  000214  6EB9               	movwf	4025,c	;volatile
  1075  000216  0E02               	movlw	2
  1076  000218  6E63               	movwf	3939,c	;volatile
  1077                           
  1078                           ;MotorDriver.c: 89: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whil
      +                          e(0);
  1079  00021A  9A8C               	bcf	3980,5,c	;volatile
  1080  00021C  928B               	bcf	3979,1,c	;volatile
  1081                           
  1082                           ;MotorDriver.c: 90: if ((Microstep<32)&&(Microstep>23)){
  1083  00021E  5043               	movf	_Microstep,w,c
  1084  000220  0A80               	xorlw	128
  1085  000222  0F60               	addlw	-160
  1086  000224  B0D8               	btfsc	status,0,c
  1087  000226  0012               	return	
  1088  000228  5043               	movf	_Microstep,w,c
  1089  00022A  0A80               	xorlw	128
  1090  00022C  0F68               	addlw	-152
  1091  00022E  A0D8               	btfss	status,0,c
  1092  000230  0012               	return	
  1093                           
  1094                           ;MotorDriver.c: 91: EUSART1_Write(Microstep);
  1095  000232  5043               	movf	_Microstep,w,c
  1096  000234  EC1E  F004         	call	_EUSART1_Write
  1097                           
  1098                           ;MotorDriver.c: 92: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  1099  000238  5043               	movf	_Microstep,w,c
  1100  00023A  0D01               	mullw	1
  1101  00023C  0E01               	movlw	low _LookUP_TABLE_COS
  1102  00023E  24F3               	addwf	prodl,w,c
  1103  000240  6ED9               	movwf	fsr2l,c
  1104  000242  0E00               	movlw	high _LookUP_TABLE_COS
  1105  000244  20F4               	addwfc	prodh,w,c
  1106  000246  6EDA               	movwf	fsr2h,c
  1107  000248  50DF               	movf	indf2,w,c
  1108  00024A  6E33               	movwf	??_State8MEF_act& (0+255),c
  1109  00024C  5033               	movf	??_State8MEF_act,w,c
  1110  00024E  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1111  000250  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1112  000252  EC39  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1113                           
  1114                           ;MotorDriver.c: 93: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  1115  000256  5043               	movf	_Microstep,w,c
  1116  000258  0D01               	mullw	1
  1117  00025A  0EE0               	movlw	low _LookUP_TABLE_SEN
  1118  00025C  24F3               	addwf	prodl,w,c
  1119  00025E  6ED9               	movwf	fsr2l,c
  1120  000260  0E00               	movlw	high _LookUP_TABLE_SEN
  1121  000262  20F4               	addwfc	prodh,w,c
  1122  000264  6EDA               	movwf	fsr2h,c
  1123  000266  50DF               	movf	indf2,w,c
  1124  000268  6E33               	movwf	??_State8MEF_act& (0+255),c
  1125  00026A  5033               	movf	??_State8MEF_act,w,c
  1126  00026C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1127  00026E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1128  000270  EC21  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1129                           
  1130                           ;MotorDriver.c: 94: if (Microstep==31){
  1131  000274  0E1F               	movlw	31
  1132  000276  1843               	xorwf	_Microstep,w,c
  1133  000278  A4D8               	btfss	status,2,c
  1134  00027A  D003               	goto	l1660
  1135                           
  1136                           ;MotorDriver.c: 95: EstadoActual = STATE0;
  1137  00027C  0E00               	movlw	0
  1138  00027E  6E49               	movwf	_EstadoActual,c
  1139                           
  1140                           ;MotorDriver.c: 96: Microstep=-1;
  1141  000280  6843               	setf	_Microstep,c
  1142  000282                     l1660:
  1143                           
  1144                           ;MotorDriver.c: 97: }
  1145                           ;MotorDriver.c: 98: Microstep++;
  1146  000282  2A43               	incf	_Microstep,f,c
  1147                           
  1148                           ;MotorDriver.c: 104: }
  1149                           
  1150                           ;MotorDriver.c: 103: break;
  1151                           
  1152                           ;MotorDriver.c: 101: default:
  1153                           
  1154                           ;MotorDriver.c: 99: }
  1155                           ;MotorDriver.c: 100: break;
  1156  000284  0012               	return	
  1157  000286                     l1664:
  1158  000286  5049               	movf	_EstadoActual,w,c
  1159                           
  1160                           ; Switch size 1, requested type "space"
  1161                           ; Number of cases is 5, Range of values is 0 to 4
  1162                           ; switch strategies available:
  1163                           ; Name         Instructions Cycles
  1164                           ; simple_byte           16     9 (average)
  1165                           ;	Chosen strategy is simple_byte
  1166  000288  0A00               	xorlw	0	; case 0
  1167  00028A  B4D8               	btfsc	status,2,c
  1168  00028C  D711               	goto	l1564
  1169  00028E  0A01               	xorlw	1	; case 1
  1170  000290  B4D8               	btfsc	status,2,c
  1171  000292  D719               	goto	l1574
  1172  000294  0A03               	xorlw	3	; case 2
  1173  000296  B4D8               	btfsc	status,2,c
  1174  000298  D74A               	goto	l1594
  1175  00029A  0A01               	xorlw	1	; case 3
  1176  00029C  B4D8               	btfsc	status,2,c
  1177  00029E  D780               	goto	l1616
  1178  0002A0  0A07               	xorlw	7	; case 4
  1179  0002A2  A4D8               	btfss	status,2,c
  1180  0002A4  0012               	return	
  1181  0002A6  D7B5               	goto	l1638
  1182  0002A8                     __end_of_State8MEF_act:
  1183                           	opt stack 0
  1184                           tblptru	equ	0xFF8
  1185                           tblptrh	equ	0xFF7
  1186                           tblptrl	equ	0xFF6
  1187                           tablat	equ	0xFF5
  1188                           prodh	equ	0xFF4
  1189                           prodl	equ	0xFF3
  1190                           intcon	equ	0xFF2
  1191                           postinc0	equ	0xFEE
  1192                           wreg	equ	0xFE8
  1193                           postdec1	equ	0xFE5
  1194                           fsr1l	equ	0xFE1
  1195                           indf2	equ	0xFDF
  1196                           fsr2h	equ	0xFDA
  1197                           fsr2l	equ	0xFD9
  1198                           status	equ	0xFD8
  1199                           
  1200 ;; *************** function _State16MEF_act *****************
  1201 ;; Defined at:
  1202 ;;		line 107 in file "MotorDriver.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1218 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1220 ;;Total ram usage:        1 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    5
  1223 ;; This function calls:
  1224 ;;		_EPWM1_LoadDutyValue
  1225 ;;		_EPWM2_LoadDutyValue
  1226 ;;		_EUSART1_Write
  1227 ;; This function is called by:
  1228 ;;		_StepMove
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text3
  1233  0002A8                     __ptext3:
  1234                           	opt stack 0
  1235  0002A8                     _State16MEF_act:
  1236                           	opt stack 24
  1237                           
  1238                           ;MotorDriver.c: 108: switch(EstadoActual) {
  1239                           
  1240                           ;incstack = 0
  1241  0002A8  D0EB               	goto	l1768
  1242  0002AA                     l1668:
  1243                           
  1244                           ;MotorDriver.c: 110: PSTR1CON = 0x00; PSTR2CON = 0x00;
  1245  0002AA  0E00               	movlw	0
  1246  0002AC  6EB9               	movwf	4025,c	;volatile
  1247  0002AE  0E00               	movlw	0
  1248  0002B0  6E63               	movwf	3939,c	;volatile
  1249                           
  1250                           ;MotorDriver.c: 111: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  1251  0002B2  948B               	bcf	3979,2,c	;volatile
  1252  0002B4  9A8C               	bcf	3980,5,c	;volatile
  1253  0002B6  928B               	bcf	3979,1,c	;volatile
  1254  0002B8  908B               	bcf	3979,0,c	;volatile
  1255                           
  1256                           ;MotorDriver.c: 112: EstadoActual = STATE1;
  1257  0002BA  0E01               	movlw	1
  1258  0002BC  6E49               	movwf	_EstadoActual,c
  1259                           
  1260                           ;MotorDriver.c: 113: break;
  1261  0002BE  0012               	return	
  1262  0002C0                     l1678:
  1263                           
  1264                           ;MotorDriver.c: 115: PSTR1CON = 0x01; PSTR2CON = 0x01;
  1265  0002C0  0E01               	movlw	1
  1266  0002C2  6EB9               	movwf	4025,c	;volatile
  1267  0002C4  0E01               	movlw	1
  1268  0002C6  6E63               	movwf	3939,c	;volatile
  1269                           
  1270                           ;MotorDriver.c: 116: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1271  0002C8  9A8C               	bcf	3980,5,c	;volatile
  1272  0002CA  908B               	bcf	3979,0,c	;volatile
  1273                           
  1274                           ;MotorDriver.c: 117: if (Microstep<16){
  1275  0002CC  5043               	movf	_Microstep,w,c
  1276  0002CE  0A80               	xorlw	128
  1277  0002D0  0F70               	addlw	-144
  1278  0002D2  B0D8               	btfsc	status,0,c
  1279  0002D4  0012               	return	
  1280                           
  1281                           ;MotorDriver.c: 118: EUSART1_Write(Microstep);
  1282  0002D6  5043               	movf	_Microstep,w,c
  1283  0002D8  EC1E  F004         	call	_EUSART1_Write
  1284                           
  1285                           ;MotorDriver.c: 119: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1286  0002DC  5043               	movf	_Microstep,w,c
  1287  0002DE  0D01               	mullw	1
  1288  0002E0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1289  0002E2  24F3               	addwf	prodl,w,c
  1290  0002E4  6ED9               	movwf	fsr2l,c
  1291  0002E6  0E00               	movlw	high _LookUP_TABLE_COS_16
  1292  0002E8  20F4               	addwfc	prodh,w,c
  1293  0002EA  6EDA               	movwf	fsr2h,c
  1294  0002EC  50DF               	movf	indf2,w,c
  1295  0002EE  6E33               	movwf	??_State16MEF_act& (0+255),c
  1296  0002F0  5033               	movf	??_State16MEF_act,w,c
  1297  0002F2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1298  0002F4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1299  0002F6  EC39  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1300                           
  1301                           ;MotorDriver.c: 120: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1302  0002FA  5043               	movf	_Microstep,w,c
  1303  0002FC  0D01               	mullw	1
  1304  0002FE  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1305  000300  24F3               	addwf	prodl,w,c
  1306  000302  6ED9               	movwf	fsr2l,c
  1307  000304  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1308  000306  20F4               	addwfc	prodh,w,c
  1309  000308  6EDA               	movwf	fsr2h,c
  1310  00030A  50DF               	movf	indf2,w,c
  1311  00030C  6E33               	movwf	??_State16MEF_act& (0+255),c
  1312  00030E  5033               	movf	??_State16MEF_act,w,c
  1313  000310  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1314  000312  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1315  000314  EC21  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1316                           
  1317                           ;MotorDriver.c: 121: if (Microstep==15){
  1318  000318  0E0F               	movlw	15
  1319  00031A  1843               	xorwf	_Microstep,w,c
  1320  00031C  A4D8               	btfss	status,2,c
  1321  00031E  D002               	goto	l1696
  1322                           
  1323                           ;MotorDriver.c: 122: EstadoActual = STATE2;
  1324  000320  0E02               	movlw	2
  1325  000322  6E49               	movwf	_EstadoActual,c
  1326  000324                     l1696:
  1327                           
  1328                           ;MotorDriver.c: 123: }
  1329                           ;MotorDriver.c: 124: Microstep++;
  1330  000324  2A43               	incf	_Microstep,f,c
  1331                           
  1332                           ;MotorDriver.c: 125: }
  1333                           ;MotorDriver.c: 126: break;
  1334  000326  0012               	return	
  1335  000328                     l1698:
  1336                           
  1337                           ;MotorDriver.c: 128: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1338  000328  0E02               	movlw	2
  1339  00032A  6EB9               	movwf	4025,c	;volatile
  1340  00032C  0E01               	movlw	1
  1341  00032E  6E63               	movwf	3939,c	;volatile
  1342                           
  1343                           ;MotorDriver.c: 129: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  1344  000330  948B               	bcf	3979,2,c	;volatile
  1345  000332  908B               	bcf	3979,0,c	;volatile
  1346                           
  1347                           ;MotorDriver.c: 130: if ((Microstep<32)&&(Microstep>15)){
  1348  000334  5043               	movf	_Microstep,w,c
  1349  000336  0A80               	xorlw	128
  1350  000338  0F60               	addlw	-160
  1351  00033A  B0D8               	btfsc	status,0,c
  1352  00033C  0012               	return	
  1353  00033E  5043               	movf	_Microstep,w,c
  1354  000340  0A80               	xorlw	128
  1355  000342  0F70               	addlw	-144
  1356  000344  A0D8               	btfss	status,0,c
  1357  000346  0012               	return	
  1358                           
  1359                           ;MotorDriver.c: 131: EUSART1_Write(Microstep);
  1360  000348  5043               	movf	_Microstep,w,c
  1361  00034A  EC1E  F004         	call	_EUSART1_Write
  1362                           
  1363                           ;MotorDriver.c: 132: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1364  00034E  5043               	movf	_Microstep,w,c
  1365  000350  0D01               	mullw	1
  1366  000352  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1367  000354  24F3               	addwf	prodl,w,c
  1368  000356  6ED9               	movwf	fsr2l,c
  1369  000358  0E00               	movlw	high _LookUP_TABLE_COS_16
  1370  00035A  20F4               	addwfc	prodh,w,c
  1371  00035C  6EDA               	movwf	fsr2h,c
  1372  00035E  50DF               	movf	indf2,w,c
  1373  000360  6E33               	movwf	??_State16MEF_act& (0+255),c
  1374  000362  5033               	movf	??_State16MEF_act,w,c
  1375  000364  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1376  000366  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1377  000368  EC39  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1378                           
  1379                           ;MotorDriver.c: 133: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1380  00036C  5043               	movf	_Microstep,w,c
  1381  00036E  0D01               	mullw	1
  1382  000370  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1383  000372  24F3               	addwf	prodl,w,c
  1384  000374  6ED9               	movwf	fsr2l,c
  1385  000376  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1386  000378  20F4               	addwfc	prodh,w,c
  1387  00037A  6EDA               	movwf	fsr2h,c
  1388  00037C  50DF               	movf	indf2,w,c
  1389  00037E  6E33               	movwf	??_State16MEF_act& (0+255),c
  1390  000380  5033               	movf	??_State16MEF_act,w,c
  1391  000382  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1392  000384  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1393  000386  EC21  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1394                           
  1395                           ;MotorDriver.c: 134: if (Microstep==31){
  1396  00038A  0E1F               	movlw	31
  1397  00038C  1843               	xorwf	_Microstep,w,c
  1398  00038E  A4D8               	btfss	status,2,c
  1399  000390  D002               	goto	l1718
  1400                           
  1401                           ;MotorDriver.c: 135: EstadoActual = STATE3;
  1402  000392  0E03               	movlw	3
  1403  000394  6E49               	movwf	_EstadoActual,c
  1404  000396                     l1718:
  1405                           
  1406                           ;MotorDriver.c: 136: }
  1407                           ;MotorDriver.c: 137: Microstep++;
  1408  000396  2A43               	incf	_Microstep,f,c
  1409                           
  1410                           ;MotorDriver.c: 138: }
  1411                           ;MotorDriver.c: 139: break;
  1412  000398  0012               	return	
  1413  00039A                     l1720:
  1414                           
  1415                           ;MotorDriver.c: 141: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1416  00039A  0E02               	movlw	2
  1417  00039C  6EB9               	movwf	4025,c	;volatile
  1418  00039E  0E02               	movlw	2
  1419  0003A0  6E63               	movwf	3939,c	;volatile
  1420                           
  1421                           ;MotorDriver.c: 142: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1422  0003A2  948B               	bcf	3979,2,c	;volatile
  1423  0003A4  928B               	bcf	3979,1,c	;volatile
  1424                           
  1425                           ;MotorDriver.c: 143: if ((Microstep<48)&&(Microstep>31)){
  1426  0003A6  5043               	movf	_Microstep,w,c
  1427  0003A8  0A80               	xorlw	128
  1428  0003AA  0F50               	addlw	-176
  1429  0003AC  B0D8               	btfsc	status,0,c
  1430  0003AE  0012               	return	
  1431  0003B0  5043               	movf	_Microstep,w,c
  1432  0003B2  0A80               	xorlw	128
  1433  0003B4  0F60               	addlw	-160
  1434  0003B6  A0D8               	btfss	status,0,c
  1435  0003B8  0012               	return	
  1436                           
  1437                           ;MotorDriver.c: 144: EUSART1_Write(Microstep);
  1438  0003BA  5043               	movf	_Microstep,w,c
  1439  0003BC  EC1E  F004         	call	_EUSART1_Write
  1440                           
  1441                           ;MotorDriver.c: 145: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1442  0003C0  5043               	movf	_Microstep,w,c
  1443  0003C2  0D01               	mullw	1
  1444  0003C4  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1445  0003C6  24F3               	addwf	prodl,w,c
  1446  0003C8  6ED9               	movwf	fsr2l,c
  1447  0003CA  0E00               	movlw	high _LookUP_TABLE_COS_16
  1448  0003CC  20F4               	addwfc	prodh,w,c
  1449  0003CE  6EDA               	movwf	fsr2h,c
  1450  0003D0  50DF               	movf	indf2,w,c
  1451  0003D2  6E33               	movwf	??_State16MEF_act& (0+255),c
  1452  0003D4  5033               	movf	??_State16MEF_act,w,c
  1453  0003D6  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1454  0003D8  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1455  0003DA  EC39  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1456                           
  1457                           ;MotorDriver.c: 146: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1458  0003DE  5043               	movf	_Microstep,w,c
  1459  0003E0  0D01               	mullw	1
  1460  0003E2  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1461  0003E4  24F3               	addwf	prodl,w,c
  1462  0003E6  6ED9               	movwf	fsr2l,c
  1463  0003E8  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1464  0003EA  20F4               	addwfc	prodh,w,c
  1465  0003EC  6EDA               	movwf	fsr2h,c
  1466  0003EE  50DF               	movf	indf2,w,c
  1467  0003F0  6E33               	movwf	??_State16MEF_act& (0+255),c
  1468  0003F2  5033               	movf	??_State16MEF_act,w,c
  1469  0003F4  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1470  0003F6  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1471  0003F8  EC21  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1472                           
  1473                           ;MotorDriver.c: 147: if (Microstep==47){
  1474  0003FC  0E2F               	movlw	47
  1475  0003FE  1843               	xorwf	_Microstep,w,c
  1476  000400  A4D8               	btfss	status,2,c
  1477  000402  D002               	goto	l1740
  1478                           
  1479                           ;MotorDriver.c: 148: EstadoActual = STATE4;
  1480  000404  0E04               	movlw	4
  1481  000406  6E49               	movwf	_EstadoActual,c
  1482  000408                     l1740:
  1483                           
  1484                           ;MotorDriver.c: 149: }
  1485                           ;MotorDriver.c: 150: Microstep++;
  1486  000408  2A43               	incf	_Microstep,f,c
  1487                           
  1488                           ;MotorDriver.c: 151: }
  1489                           ;MotorDriver.c: 152: break;
  1490  00040A  0012               	return	
  1491  00040C                     l1742:
  1492                           
  1493                           ;MotorDriver.c: 154: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1494  00040C  0E01               	movlw	1
  1495  00040E  6EB9               	movwf	4025,c	;volatile
  1496  000410  0E02               	movlw	2
  1497  000412  6E63               	movwf	3939,c	;volatile
  1498                           
  1499                           ;MotorDriver.c: 155: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  1500  000414  9A8C               	bcf	3980,5,c	;volatile
  1501  000416  928B               	bcf	3979,1,c	;volatile
  1502                           
  1503                           ;MotorDriver.c: 156: if ((Microstep<64)&&(Microstep>47)){
  1504  000418  5043               	movf	_Microstep,w,c
  1505  00041A  0A80               	xorlw	128
  1506  00041C  0F40               	addlw	-192
  1507  00041E  B0D8               	btfsc	status,0,c
  1508  000420  0012               	return	
  1509  000422  5043               	movf	_Microstep,w,c
  1510  000424  0A80               	xorlw	128
  1511  000426  0F50               	addlw	-176
  1512  000428  A0D8               	btfss	status,0,c
  1513  00042A  0012               	return	
  1514                           
  1515                           ;MotorDriver.c: 157: EUSART1_Write(Microstep);
  1516  00042C  5043               	movf	_Microstep,w,c
  1517  00042E  EC1E  F004         	call	_EUSART1_Write
  1518                           
  1519                           ;MotorDriver.c: 158: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  1520  000432  5043               	movf	_Microstep,w,c
  1521  000434  0D01               	mullw	1
  1522  000436  0EA0               	movlw	low _LookUP_TABLE_COS_16
  1523  000438  24F3               	addwf	prodl,w,c
  1524  00043A  6ED9               	movwf	fsr2l,c
  1525  00043C  0E00               	movlw	high _LookUP_TABLE_COS_16
  1526  00043E  20F4               	addwfc	prodh,w,c
  1527  000440  6EDA               	movwf	fsr2h,c
  1528  000442  50DF               	movf	indf2,w,c
  1529  000444  6E33               	movwf	??_State16MEF_act& (0+255),c
  1530  000446  5033               	movf	??_State16MEF_act,w,c
  1531  000448  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1532  00044A  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1533  00044C  EC39  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1534                           
  1535                           ;MotorDriver.c: 159: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  1536  000450  5043               	movf	_Microstep,w,c
  1537  000452  0D01               	mullw	1
  1538  000454  0E60               	movlw	low _LookUP_TABLE_SEN_16
  1539  000456  24F3               	addwf	prodl,w,c
  1540  000458  6ED9               	movwf	fsr2l,c
  1541  00045A  0E00               	movlw	high _LookUP_TABLE_SEN_16
  1542  00045C  20F4               	addwfc	prodh,w,c
  1543  00045E  6EDA               	movwf	fsr2h,c
  1544  000460  50DF               	movf	indf2,w,c
  1545  000462  6E33               	movwf	??_State16MEF_act& (0+255),c
  1546  000464  5033               	movf	??_State16MEF_act,w,c
  1547  000466  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1548  000468  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1549  00046A  EC21  F003         	call	_EPWM2_LoadDutyValue	;wreg free
  1550                           
  1551                           ;MotorDriver.c: 160: if (Microstep==63){
  1552  00046E  0E3F               	movlw	63
  1553  000470  1843               	xorwf	_Microstep,w,c
  1554  000472  A4D8               	btfss	status,2,c
  1555  000474  D003               	goto	l1764
  1556                           
  1557                           ;MotorDriver.c: 161: EstadoActual = STATE0;
  1558  000476  0E00               	movlw	0
  1559  000478  6E49               	movwf	_EstadoActual,c
  1560                           
  1561                           ;MotorDriver.c: 162: Microstep=-1;
  1562  00047A  6843               	setf	_Microstep,c
  1563  00047C                     l1764:
  1564                           
  1565                           ;MotorDriver.c: 163: }
  1566                           ;MotorDriver.c: 164: Microstep++;
  1567  00047C  2A43               	incf	_Microstep,f,c
  1568                           
  1569                           ;MotorDriver.c: 170: }
  1570                           
  1571                           ;MotorDriver.c: 169: break;
  1572                           
  1573                           ;MotorDriver.c: 167: default:
  1574                           
  1575                           ;MotorDriver.c: 165: }
  1576                           ;MotorDriver.c: 166: break;
  1577  00047E  0012               	return	
  1578  000480                     l1768:
  1579  000480  5049               	movf	_EstadoActual,w,c
  1580                           
  1581                           ; Switch size 1, requested type "space"
  1582                           ; Number of cases is 5, Range of values is 0 to 4
  1583                           ; switch strategies available:
  1584                           ; Name         Instructions Cycles
  1585                           ; simple_byte           16     9 (average)
  1586                           ;	Chosen strategy is simple_byte
  1587  000482  0A00               	xorlw	0	; case 0
  1588  000484  B4D8               	btfsc	status,2,c
  1589  000486  D711               	goto	l1668
  1590  000488  0A01               	xorlw	1	; case 1
  1591  00048A  B4D8               	btfsc	status,2,c
  1592  00048C  D719               	goto	l1678
  1593  00048E  0A03               	xorlw	3	; case 2
  1594  000490  B4D8               	btfsc	status,2,c
  1595  000492  D74A               	goto	l1698
  1596  000494  0A01               	xorlw	1	; case 3
  1597  000496  B4D8               	btfsc	status,2,c
  1598  000498  D780               	goto	l1720
  1599  00049A  0A07               	xorlw	7	; case 4
  1600  00049C  A4D8               	btfss	status,2,c
  1601  00049E  0012               	return	
  1602  0004A0  D7B5               	goto	l1742
  1603  0004A2                     __end_of_State16MEF_act:
  1604                           	opt stack 0
  1605                           tblptru	equ	0xFF8
  1606                           tblptrh	equ	0xFF7
  1607                           tblptrl	equ	0xFF6
  1608                           tablat	equ	0xFF5
  1609                           prodh	equ	0xFF4
  1610                           prodl	equ	0xFF3
  1611                           intcon	equ	0xFF2
  1612                           postinc0	equ	0xFEE
  1613                           wreg	equ	0xFE8
  1614                           postdec1	equ	0xFE5
  1615                           fsr1l	equ	0xFE1
  1616                           indf2	equ	0xFDF
  1617                           fsr2h	equ	0xFDA
  1618                           fsr2l	equ	0xFD9
  1619                           status	equ	0xFD8
  1620                           
  1621 ;; *************** function _EUSART1_Write *****************
  1622 ;; Defined at:
  1623 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  txData          1    wreg     unsigned char 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  txData          1   14[COMRAM] unsigned char 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;Total ram usage:        1 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    4
  1644 ;; This function calls:
  1645 ;;		Nothing
  1646 ;; This function is called by:
  1647 ;;		_State8MEF_act
  1648 ;;		_State16MEF_act
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text4
  1653  00083C                     __ptext4:
  1654                           	opt stack 0
  1655  00083C                     _EUSART1_Write:
  1656                           	opt stack 24
  1657                           
  1658                           ;incstack = 0
  1659                           ;EUSART1_Write@txData stored from wreg
  1660  00083C  6E2F               	movwf	EUSART1_Write@txData,c
  1661  00083E                     l325:
  1662  00083E  A89E               	btfss	3998,4,c	;volatile
  1663  000840  D7FE               	goto	l325
  1664                           
  1665                           ;eusart1.c: 100: }
  1666                           ;eusart1.c: 102: TXREG1 = txData;
  1667  000842  C02F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1668  000846  0012               	return		;funcret
  1669  000848                     __end_of_EUSART1_Write:
  1670                           	opt stack 0
  1671                           tblptru	equ	0xFF8
  1672                           tblptrh	equ	0xFF7
  1673                           tblptrl	equ	0xFF6
  1674                           tablat	equ	0xFF5
  1675                           prodh	equ	0xFF4
  1676                           prodl	equ	0xFF3
  1677                           intcon	equ	0xFF2
  1678                           postinc0	equ	0xFEE
  1679                           wreg	equ	0xFE8
  1680                           postdec1	equ	0xFE5
  1681                           fsr1l	equ	0xFE1
  1682                           indf2	equ	0xFDF
  1683                           fsr2h	equ	0xFDA
  1684                           fsr2l	equ	0xFD9
  1685                           status	equ	0xFD8
  1686                           
  1687 ;; *************** function _EPWM2_LoadDutyValue *****************
  1688 ;; Defined at:
  1689 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2, status,0
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;Total ram usage:        4 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    4
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_State8MEF_act
  1714 ;;		_State16MEF_act
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text5
  1719  000642                     __ptext5:
  1720                           	opt stack 0
  1721  000642                     _EPWM2_LoadDutyValue:
  1722                           	opt stack 24
  1723                           
  1724                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  1725                           
  1726                           ;incstack = 0
  1727  000642  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1728  000646  C030  F032         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  1729  00064A  90D8               	bcf	status,0,c
  1730  00064C  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1731  00064E  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1732  000650  90D8               	bcf	status,0,c
  1733  000652  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1734  000654  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1735  000656  5031               	movf	??_EPWM2_LoadDutyValue,w,c
  1736  000658  6E67               	movwf	3943,c	;volatile
  1737                           
  1738                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1739  00065A  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1740  00065E  0E03               	movlw	3
  1741  000660  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  1742  000662  3A31               	swapf	??_EPWM2_LoadDutyValue,f,c
  1743  000664  0EF0               	movlw	240
  1744  000666  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  1745  000668  5066               	movf	3942,w,c	;volatile
  1746  00066A  0BCF               	andlw	207
  1747  00066C  1031               	iorwf	??_EPWM2_LoadDutyValue,w,c
  1748  00066E  6E66               	movwf	3942,c	;volatile
  1749  000670  0012               	return		;funcret
  1750  000672                     __end_of_EPWM2_LoadDutyValue:
  1751                           	opt stack 0
  1752                           tblptru	equ	0xFF8
  1753                           tblptrh	equ	0xFF7
  1754                           tblptrl	equ	0xFF6
  1755                           tablat	equ	0xFF5
  1756                           prodh	equ	0xFF4
  1757                           prodl	equ	0xFF3
  1758                           intcon	equ	0xFF2
  1759                           postinc0	equ	0xFEE
  1760                           wreg	equ	0xFE8
  1761                           postdec1	equ	0xFE5
  1762                           fsr1l	equ	0xFE1
  1763                           indf2	equ	0xFDF
  1764                           fsr2h	equ	0xFDA
  1765                           fsr2l	equ	0xFD9
  1766                           status	equ	0xFD8
  1767                           
  1768 ;; *************** function _EPWM1_LoadDutyValue *****************
  1769 ;; Defined at:
  1770 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;Total ram usage:        4 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; Hardware stack levels required when called:    4
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_State8MEF_act
  1795 ;;		_State16MEF_act
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text6
  1800  000672                     __ptext6:
  1801                           	opt stack 0
  1802  000672                     _EPWM1_LoadDutyValue:
  1803                           	opt stack 24
  1804                           
  1805                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  1806                           
  1807                           ;incstack = 0
  1808  000672  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1809  000676  C030  F032         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  1810  00067A  90D8               	bcf	status,0,c
  1811  00067C  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1812  00067E  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1813  000680  90D8               	bcf	status,0,c
  1814  000682  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1815  000684  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1816  000686  5031               	movf	??_EPWM1_LoadDutyValue,w,c
  1817  000688  6EBE               	movwf	4030,c	;volatile
  1818                           
  1819                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1820  00068A  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1821  00068E  0E03               	movlw	3
  1822  000690  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  1823  000692  3A31               	swapf	??_EPWM1_LoadDutyValue,f,c
  1824  000694  0EF0               	movlw	240
  1825  000696  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  1826  000698  50BD               	movf	4029,w,c	;volatile
  1827  00069A  0BCF               	andlw	207
  1828  00069C  1031               	iorwf	??_EPWM1_LoadDutyValue,w,c
  1829  00069E  6EBD               	movwf	4029,c	;volatile
  1830  0006A0  0012               	return		;funcret
  1831  0006A2                     __end_of_EPWM1_LoadDutyValue:
  1832                           	opt stack 0
  1833                           tblptru	equ	0xFF8
  1834                           tblptrh	equ	0xFF7
  1835                           tblptrl	equ	0xFF6
  1836                           tablat	equ	0xFF5
  1837                           prodh	equ	0xFF4
  1838                           prodl	equ	0xFF3
  1839                           intcon	equ	0xFF2
  1840                           postinc0	equ	0xFEE
  1841                           wreg	equ	0xFE8
  1842                           postdec1	equ	0xFE5
  1843                           fsr1l	equ	0xFE1
  1844                           indf2	equ	0xFDF
  1845                           fsr2h	equ	0xFDA
  1846                           fsr2l	equ	0xFD9
  1847                           status	equ	0xFD8
  1848                           
  1849 ;; *************** function _StateMEF_ini *****************
  1850 ;; Defined at:
  1851 ;;		line 36 in file "MotorDriver.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;		None
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;		None
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      void 
  1858 ;; Registers used:
  1859 ;;		wreg, status,2
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;Total ram usage:        0 bytes
  1870 ;; Hardware stack levels used:    1
  1871 ;; Hardware stack levels required when called:    4
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_main
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text7
  1880  000848                     __ptext7:
  1881                           	opt stack 0
  1882  000848                     _StateMEF_ini:
  1883                           	opt stack 26
  1884                           
  1885                           ;MotorDriver.c: 37: EstadoActual = STATE1;
  1886                           
  1887                           ;incstack = 0
  1888  000848  0E01               	movlw	1
  1889  00084A  6E49               	movwf	_EstadoActual,c
  1890                           
  1891                           ;MotorDriver.c: 38: Microstep=0;
  1892  00084C  0E00               	movlw	0
  1893  00084E  6E43               	movwf	_Microstep,c
  1894  000850  0012               	return		;funcret
  1895  000852                     __end_of_StateMEF_ini:
  1896                           	opt stack 0
  1897                           tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           tblptrl	equ	0xFF6
  1900                           tablat	equ	0xFF5
  1901                           prodh	equ	0xFF4
  1902                           prodl	equ	0xFF3
  1903                           intcon	equ	0xFF2
  1904                           postinc0	equ	0xFEE
  1905                           wreg	equ	0xFE8
  1906                           postdec1	equ	0xFE5
  1907                           fsr1l	equ	0xFE1
  1908                           indf2	equ	0xFDF
  1909                           fsr2h	equ	0xFDA
  1910                           fsr2l	equ	0xFD9
  1911                           status	equ	0xFD8
  1912                           
  1913 ;; *************** function _SYSTEM_Initialize *****************
  1914 ;; Defined at:
  1915 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;Total ram usage:        0 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    6
  1936 ;; This function calls:
  1937 ;;		_ADC_Initialize
  1938 ;;		_CCP5_Initialize
  1939 ;;		_EPWM1_Initialize
  1940 ;;		_EPWM2_Initialize
  1941 ;;		_EUSART1_Initialize
  1942 ;;		_INTERRUPT_Initialize
  1943 ;;		_OSCILLATOR_Initialize
  1944 ;;		_PIN_MANAGER_Initialize
  1945 ;;		_TMR2_Initialize
  1946 ;;		_TMR6_Initialize
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text8
  1953  0006A2                     __ptext8:
  1954                           	opt stack 0
  1955  0006A2                     _SYSTEM_Initialize:
  1956                           	opt stack 24
  1957                           
  1958                           ;mcc.c: 114: INTERRUPT_Initialize();
  1959                           
  1960                           ;incstack = 0
  1961  0006A2  EC3C  F004         	call	_INTERRUPT_Initialize	;wreg free
  1962                           
  1963                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1964  0006A6  ECFB  F002         	call	_PIN_MANAGER_Initialize	;wreg free
  1965                           
  1966                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1967  0006AA  EC17  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1968                           
  1969                           ;mcc.c: 117: TMR6_Initialize();
  1970  0006AE  EC7A  F003         	call	_TMR6_Initialize	;wreg free
  1971                           
  1972                           ;mcc.c: 118: EPWM2_Initialize();
  1973  0006B2  EC8E  F003         	call	_EPWM2_Initialize	;wreg free
  1974                           
  1975                           ;mcc.c: 119: CCP5_Initialize();
  1976  0006B6  EC0D  F004         	call	_CCP5_Initialize	;wreg free
  1977                           
  1978                           ;mcc.c: 120: ADC_Initialize();
  1979  0006BA  ECF6  F003         	call	_ADC_Initialize	;wreg free
  1980                           
  1981                           ;mcc.c: 121: EPWM1_Initialize();
  1982  0006BE  ECA0  F003         	call	_EPWM1_Initialize	;wreg free
  1983                           
  1984                           ;mcc.c: 122: TMR2_Initialize();
  1985  0006C2  ECC4  F003         	call	_TMR2_Initialize	;wreg free
  1986                           
  1987                           ;mcc.c: 123: EUSART1_Initialize();
  1988  0006C6  EC02  F004         	call	_EUSART1_Initialize	;wreg free
  1989  0006CA  0012               	return		;funcret
  1990  0006CC                     __end_of_SYSTEM_Initialize:
  1991                           	opt stack 0
  1992                           tblptru	equ	0xFF8
  1993                           tblptrh	equ	0xFF7
  1994                           tblptrl	equ	0xFF6
  1995                           tablat	equ	0xFF5
  1996                           prodh	equ	0xFF4
  1997                           prodl	equ	0xFF3
  1998                           intcon	equ	0xFF2
  1999                           postinc0	equ	0xFEE
  2000                           wreg	equ	0xFE8
  2001                           postdec1	equ	0xFE5
  2002                           fsr1l	equ	0xFE1
  2003                           indf2	equ	0xFDF
  2004                           fsr2h	equ	0xFDA
  2005                           fsr2l	equ	0xFD9
  2006                           status	equ	0xFD8
  2007                           
  2008 ;; *************** function _TMR6_Initialize *****************
  2009 ;; Defined at:
  2010 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;Total ram usage:        0 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    5
  2031 ;; This function calls:
  2032 ;;		_TMR6_SetInterruptHandler
  2033 ;;		_TMR6_StartTimer
  2034 ;; This function is called by:
  2035 ;;		_SYSTEM_Initialize
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text9
  2040  0006F4                     __ptext9:
  2041                           	opt stack 0
  2042  0006F4                     _TMR6_Initialize:
  2043                           	opt stack 24
  2044                           
  2045                           ;tmr6.c: 68: T6CON = 0x01;
  2046                           
  2047                           ;incstack = 0
  2048  0006F4  0E01               	movlw	1
  2049  0006F6  010F               	movlb	15	; () banked
  2050  0006F8  6F4A               	movwf	74,b	;volatile
  2051                           
  2052                           ;tmr6.c: 71: PR6 = 0x3C;
  2053  0006FA  0E3C               	movlw	60
  2054  0006FC  010F               	movlb	15	; () banked
  2055  0006FE  6F4B               	movwf	75,b	;volatile
  2056                           
  2057                           ;tmr6.c: 74: TMR6 = 0x00;
  2058  000700  0E00               	movlw	0
  2059  000702  010F               	movlb	15	; () banked
  2060  000704  6F4C               	movwf	76,b	;volatile
  2061                           
  2062                           ; BSR set to: 15
  2063                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
  2064  000706  947E               	bcf	3966,2,c	;volatile
  2065                           
  2066                           ; BSR set to: 15
  2067                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
  2068  000708  847D               	bsf	3965,2,c	;volatile
  2069                           
  2070                           ; BSR set to: 15
  2071                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  2072  00070A  0E80               	movlw	low _TMR6_DefaultInterruptHandler
  2073  00070C  6E2F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  2074  00070E  0E08               	movlw	high _TMR6_DefaultInterruptHandler
  2075  000710  6E30               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  2076  000712  EC29  F004         	call	_TMR6_SetInterruptHandler	;wreg free
  2077                           
  2078                           ;tmr6.c: 86: TMR6_StartTimer();
  2079  000716  EC37  F004         	call	_TMR6_StartTimer	;wreg free
  2080  00071A  0012               	return		;funcret
  2081  00071C                     __end_of_TMR6_Initialize:
  2082                           	opt stack 0
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           prodh	equ	0xFF4
  2088                           prodl	equ	0xFF3
  2089                           intcon	equ	0xFF2
  2090                           postinc0	equ	0xFEE
  2091                           wreg	equ	0xFE8
  2092                           postdec1	equ	0xFE5
  2093                           fsr1l	equ	0xFE1
  2094                           indf2	equ	0xFDF
  2095                           fsr2h	equ	0xFDA
  2096                           fsr2l	equ	0xFD9
  2097                           status	equ	0xFD8
  2098                           
  2099 ;; *************** function _TMR6_StartTimer *****************
  2100 ;; Defined at:
  2101 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		None
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;Total ram usage:        0 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    4
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_TMR6_Initialize
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text10
  2130  00086E                     __ptext10:
  2131                           	opt stack 0
  2132  00086E                     _TMR6_StartTimer:
  2133                           	opt stack 24
  2134                           
  2135                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  2136                           
  2137                           ;incstack = 0
  2138  00086E  010F               	movlb	15	; () banked
  2139  000870  854A               	bsf	74,2,b	;volatile
  2140                           
  2141                           ; BSR set to: 15
  2142  000872  0012               	return		;funcret
  2143  000874                     __end_of_TMR6_StartTimer:
  2144                           	opt stack 0
  2145                           tblptru	equ	0xFF8
  2146                           tblptrh	equ	0xFF7
  2147                           tblptrl	equ	0xFF6
  2148                           tablat	equ	0xFF5
  2149                           prodh	equ	0xFF4
  2150                           prodl	equ	0xFF3
  2151                           intcon	equ	0xFF2
  2152                           postinc0	equ	0xFEE
  2153                           wreg	equ	0xFE8
  2154                           postdec1	equ	0xFE5
  2155                           fsr1l	equ	0xFE1
  2156                           indf2	equ	0xFDF
  2157                           fsr2h	equ	0xFDA
  2158                           fsr2l	equ	0xFD9
  2159                           status	equ	0xFD8
  2160                           
  2161 ;; *************** function _TMR6_SetInterruptHandler *****************
  2162 ;; Defined at:
  2163 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  InterruptHan    2   14[COMRAM] PTR void 
  2166 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;Total ram usage:        2 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    4
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_TMR6_Initialize
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text11
  2193  000852                     __ptext11:
  2194                           	opt stack 0
  2195  000852                     _TMR6_SetInterruptHandler:
  2196                           	opt stack 24
  2197                           
  2198                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  2199                           
  2200                           ; BSR set to: 15
  2201                           ;incstack = 0
  2202  000852  C02F  F047         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  2203  000856  C030  F048         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  2204  00085A  0012               	return		;funcret
  2205  00085C                     __end_of_TMR6_SetInterruptHandler:
  2206                           	opt stack 0
  2207                           tblptru	equ	0xFF8
  2208                           tblptrh	equ	0xFF7
  2209                           tblptrl	equ	0xFF6
  2210                           tablat	equ	0xFF5
  2211                           prodh	equ	0xFF4
  2212                           prodl	equ	0xFF3
  2213                           intcon	equ	0xFF2
  2214                           postinc0	equ	0xFEE
  2215                           wreg	equ	0xFE8
  2216                           postdec1	equ	0xFE5
  2217                           fsr1l	equ	0xFE1
  2218                           indf2	equ	0xFDF
  2219                           fsr2h	equ	0xFDA
  2220                           fsr2l	equ	0xFD9
  2221                           status	equ	0xFD8
  2222                           
  2223 ;; *************** function _TMR2_Initialize *****************
  2224 ;; Defined at:
  2225 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;		None
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0, cstack
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;Total ram usage:        0 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    5
  2246 ;; This function calls:
  2247 ;;		_TMR2_SetInterruptHandler
  2248 ;;		_TMR2_StartTimer
  2249 ;; This function is called by:
  2250 ;;		_SYSTEM_Initialize
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text12
  2255  000788                     __ptext12:
  2256                           	opt stack 0
  2257  000788                     _TMR2_Initialize:
  2258                           	opt stack 24
  2259                           
  2260                           ;tmr2.c: 69: T2CON = 0x08;
  2261                           
  2262                           ;incstack = 0
  2263  000788  0E08               	movlw	8
  2264  00078A  6EBA               	movwf	4026,c	;volatile
  2265                           
  2266                           ;tmr2.c: 72: PR2 = 0xF9;
  2267  00078C  0EF9               	movlw	249
  2268  00078E  6EBB               	movwf	4027,c	;volatile
  2269                           
  2270                           ;tmr2.c: 75: TMR2 = 0x4E;
  2271  000790  0E4E               	movlw	78
  2272  000792  6EBC               	movwf	4028,c	;volatile
  2273                           
  2274                           ;tmr2.c: 78: PIR1bits.TMR2IF = 0;
  2275  000794  929E               	bcf	3998,1,c	;volatile
  2276                           
  2277                           ;tmr2.c: 81: PIE1bits.TMR2IE = 1;
  2278  000796  829D               	bsf	3997,1,c	;volatile
  2279                           
  2280                           ;tmr2.c: 84: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  2281  000798  0E82               	movlw	low _TMR2_DefaultInterruptHandler
  2282  00079A  6E2F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  2283  00079C  0E08               	movlw	high _TMR2_DefaultInterruptHandler
  2284  00079E  6E30               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  2285  0007A0  EC2E  F004         	call	_TMR2_SetInterruptHandler	;wreg free
  2286                           
  2287                           ;tmr2.c: 87: TMR2_StartTimer();
  2288  0007A4  EC3A  F004         	call	_TMR2_StartTimer	;wreg free
  2289  0007A8  0012               	return		;funcret
  2290  0007AA                     __end_of_TMR2_Initialize:
  2291                           	opt stack 0
  2292                           tblptru	equ	0xFF8
  2293                           tblptrh	equ	0xFF7
  2294                           tblptrl	equ	0xFF6
  2295                           tablat	equ	0xFF5
  2296                           prodh	equ	0xFF4
  2297                           prodl	equ	0xFF3
  2298                           intcon	equ	0xFF2
  2299                           postinc0	equ	0xFEE
  2300                           wreg	equ	0xFE8
  2301                           postdec1	equ	0xFE5
  2302                           fsr1l	equ	0xFE1
  2303                           indf2	equ	0xFDF
  2304                           fsr2h	equ	0xFDA
  2305                           fsr2l	equ	0xFD9
  2306                           status	equ	0xFD8
  2307                           
  2308 ;; *************** function _TMR2_StartTimer *****************
  2309 ;; Defined at:
  2310 ;;		line 90 in file "mcc_generated_files/tmr2.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		None
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    4
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_TMR2_Initialize
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text13
  2339  000874                     __ptext13:
  2340                           	opt stack 0
  2341  000874                     _TMR2_StartTimer:
  2342                           	opt stack 24
  2343                           
  2344                           ;tmr2.c: 93: T2CONbits.TMR2ON = 1;
  2345                           
  2346                           ;incstack = 0
  2347  000874  84BA               	bsf	4026,2,c	;volatile
  2348  000876  0012               	return		;funcret
  2349  000878                     __end_of_TMR2_StartTimer:
  2350                           	opt stack 0
  2351                           tblptru	equ	0xFF8
  2352                           tblptrh	equ	0xFF7
  2353                           tblptrl	equ	0xFF6
  2354                           tablat	equ	0xFF5
  2355                           prodh	equ	0xFF4
  2356                           prodl	equ	0xFF3
  2357                           intcon	equ	0xFF2
  2358                           postinc0	equ	0xFEE
  2359                           wreg	equ	0xFE8
  2360                           postdec1	equ	0xFE5
  2361                           fsr1l	equ	0xFE1
  2362                           indf2	equ	0xFDF
  2363                           fsr2h	equ	0xFDA
  2364                           fsr2l	equ	0xFD9
  2365                           status	equ	0xFD8
  2366                           
  2367 ;; *************** function _TMR2_SetInterruptHandler *****************
  2368 ;; Defined at:
  2369 ;;		line 144 in file "mcc_generated_files/tmr2.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  InterruptHan    2   14[COMRAM] PTR void 
  2372 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;Total ram usage:        2 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    4
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_TMR2_Initialize
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text14
  2399  00085C                     __ptext14:
  2400                           	opt stack 0
  2401  00085C                     _TMR2_SetInterruptHandler:
  2402                           	opt stack 24
  2403                           
  2404                           ;tmr2.c: 145: TMR2_InterruptHandler = InterruptHandler;
  2405                           
  2406                           ;incstack = 0
  2407  00085C  C02F  F045         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  2408  000860  C030  F046         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  2409  000864  0012               	return		;funcret
  2410  000866                     __end_of_TMR2_SetInterruptHandler:
  2411                           	opt stack 0
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           prodh	equ	0xFF4
  2417                           prodl	equ	0xFF3
  2418                           intcon	equ	0xFF2
  2419                           postinc0	equ	0xFEE
  2420                           wreg	equ	0xFE8
  2421                           postdec1	equ	0xFE5
  2422                           fsr1l	equ	0xFE1
  2423                           indf2	equ	0xFDF
  2424                           fsr2h	equ	0xFDA
  2425                           fsr2l	equ	0xFD9
  2426                           status	equ	0xFD8
  2427                           
  2428 ;; *************** function _PIN_MANAGER_Initialize *****************
  2429 ;; Defined at:
  2430 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;		None
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;		None
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;Total ram usage:        0 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    4
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_SYSTEM_Initialize
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text15
  2459  0005F6                     __ptext15:
  2460                           	opt stack 0
  2461  0005F6                     _PIN_MANAGER_Initialize:
  2462                           	opt stack 25
  2463                           
  2464                           ;pin_manager.c: 56: LATE = 0x00;
  2465                           
  2466                           ;incstack = 0
  2467  0005F6  0E00               	movlw	0
  2468  0005F8  6E8D               	movwf	3981,c	;volatile
  2469                           
  2470                           ;pin_manager.c: 57: LATD = 0x00;
  2471  0005FA  0E00               	movlw	0
  2472  0005FC  6E8C               	movwf	3980,c	;volatile
  2473                           
  2474                           ;pin_manager.c: 58: LATA = 0x00;
  2475  0005FE  0E00               	movlw	0
  2476  000600  6E89               	movwf	3977,c	;volatile
  2477                           
  2478                           ;pin_manager.c: 59: LATB = 0x00;
  2479  000602  0E00               	movlw	0
  2480  000604  6E8A               	movwf	3978,c	;volatile
  2481                           
  2482                           ;pin_manager.c: 60: LATC = 0x00;
  2483  000606  0E00               	movlw	0
  2484  000608  6E8B               	movwf	3979,c	;volatile
  2485                           
  2486                           ;pin_manager.c: 65: TRISE = 0x07;
  2487  00060A  0E07               	movlw	7
  2488  00060C  6E96               	movwf	3990,c	;volatile
  2489                           
  2490                           ;pin_manager.c: 66: TRISA = 0xEB;
  2491  00060E  0EEB               	movlw	235
  2492  000610  6E92               	movwf	3986,c	;volatile
  2493                           
  2494                           ;pin_manager.c: 67: TRISB = 0xBF;
  2495  000612  0EBF               	movlw	191
  2496  000614  6E93               	movwf	3987,c	;volatile
  2497                           
  2498                           ;pin_manager.c: 68: TRISC = 0xB8;
  2499  000616  0EB8               	movlw	184
  2500  000618  6E94               	movwf	3988,c	;volatile
  2501                           
  2502                           ;pin_manager.c: 69: TRISD = 0xDF;
  2503  00061A  0EDF               	movlw	223
  2504  00061C  6E95               	movwf	3989,c	;volatile
  2505                           
  2506                           ;pin_manager.c: 74: ANSELC = 0x38;
  2507  00061E  0E38               	movlw	56
  2508  000620  010F               	movlb	15	; () banked
  2509  000622  6F3A               	movwf	58,b	;volatile
  2510                           
  2511                           ;pin_manager.c: 75: ANSELB = 0x3E;
  2512  000624  0E3E               	movlw	62
  2513  000626  010F               	movlb	15	; () banked
  2514  000628  6F39               	movwf	57,b	;volatile
  2515                           
  2516                           ;pin_manager.c: 76: ANSELD = 0xDF;
  2517  00062A  0EDF               	movlw	223
  2518  00062C  010F               	movlb	15	; () banked
  2519  00062E  6F3B               	movwf	59,b	;volatile
  2520                           
  2521                           ;pin_manager.c: 77: ANSELE = 0x03;
  2522  000630  0E03               	movlw	3
  2523  000632  010F               	movlb	15	; () banked
  2524  000634  6F3C               	movwf	60,b	;volatile
  2525                           
  2526                           ;pin_manager.c: 78: ANSELA = 0x2B;
  2527  000636  0E2B               	movlw	43
  2528  000638  010F               	movlb	15	; () banked
  2529  00063A  6F38               	movwf	56,b	;volatile
  2530                           
  2531                           ; BSR set to: 15
  2532                           ;pin_manager.c: 83: WPUB = 0xFF;
  2533  00063C  6861               	setf	3937,c	;volatile
  2534                           
  2535                           ; BSR set to: 15
  2536                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  2537  00063E  9EF1               	bcf	intcon2,7,c	;volatile
  2538                           
  2539                           ; BSR set to: 15
  2540  000640  0012               	return		;funcret
  2541  000642                     __end_of_PIN_MANAGER_Initialize:
  2542                           	opt stack 0
  2543                           tblptru	equ	0xFF8
  2544                           tblptrh	equ	0xFF7
  2545                           tblptrl	equ	0xFF6
  2546                           tablat	equ	0xFF5
  2547                           prodh	equ	0xFF4
  2548                           prodl	equ	0xFF3
  2549                           intcon	equ	0xFF2
  2550                           intcon2	equ	0xFF1
  2551                           postinc0	equ	0xFEE
  2552                           wreg	equ	0xFE8
  2553                           postdec1	equ	0xFE5
  2554                           fsr1l	equ	0xFE1
  2555                           indf2	equ	0xFDF
  2556                           fsr2h	equ	0xFDA
  2557                           fsr2l	equ	0xFD9
  2558                           status	equ	0xFD8
  2559                           
  2560 ;; *************** function _OSCILLATOR_Initialize *****************
  2561 ;; Defined at:
  2562 ;;		line 126 in file "mcc_generated_files/mcc.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    4
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_SYSTEM_Initialize
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text16
  2591  00082E                     __ptext16:
  2592                           	opt stack 0
  2593  00082E                     _OSCILLATOR_Initialize:
  2594                           	opt stack 25
  2595                           
  2596                           ;mcc.c: 129: OSCCON = 0x70;
  2597                           
  2598                           ; BSR set to: 15
  2599                           ;incstack = 0
  2600  00082E  0E70               	movlw	112
  2601  000830  6ED3               	movwf	4051,c	;volatile
  2602                           
  2603                           ;mcc.c: 131: OSCCON2 = 0x04;
  2604  000832  0E04               	movlw	4
  2605  000834  6ED2               	movwf	4050,c	;volatile
  2606                           
  2607                           ;mcc.c: 133: OSCTUNE = 0x00;
  2608  000836  0E00               	movlw	0
  2609  000838  6E9B               	movwf	3995,c	;volatile
  2610  00083A  0012               	return		;funcret
  2611  00083C                     __end_of_OSCILLATOR_Initialize:
  2612                           	opt stack 0
  2613                           tblptru	equ	0xFF8
  2614                           tblptrh	equ	0xFF7
  2615                           tblptrl	equ	0xFF6
  2616                           tablat	equ	0xFF5
  2617                           prodh	equ	0xFF4
  2618                           prodl	equ	0xFF3
  2619                           intcon	equ	0xFF2
  2620                           intcon2	equ	0xFF1
  2621                           postinc0	equ	0xFEE
  2622                           wreg	equ	0xFE8
  2623                           postdec1	equ	0xFE5
  2624                           fsr1l	equ	0xFE1
  2625                           indf2	equ	0xFDF
  2626                           fsr2h	equ	0xFDA
  2627                           fsr2l	equ	0xFD9
  2628                           status	equ	0xFD8
  2629                           
  2630 ;; *************** function _INTERRUPT_Initialize *****************
  2631 ;; Defined at:
  2632 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		None
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;Total ram usage:        0 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    4
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_SYSTEM_Initialize
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text17
  2661  000878                     __ptext17:
  2662                           	opt stack 0
  2663  000878                     _INTERRUPT_Initialize:
  2664                           	opt stack 25
  2665                           
  2666                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2667                           
  2668                           ;incstack = 0
  2669  000878  9ED0               	bcf	4048,7,c	;volatile
  2670  00087A  0012               	return		;funcret
  2671  00087C                     __end_of_INTERRUPT_Initialize:
  2672                           	opt stack 0
  2673                           tblptru	equ	0xFF8
  2674                           tblptrh	equ	0xFF7
  2675                           tblptrl	equ	0xFF6
  2676                           tablat	equ	0xFF5
  2677                           prodh	equ	0xFF4
  2678                           prodl	equ	0xFF3
  2679                           intcon	equ	0xFF2
  2680                           intcon2	equ	0xFF1
  2681                           postinc0	equ	0xFEE
  2682                           wreg	equ	0xFE8
  2683                           postdec1	equ	0xFE5
  2684                           fsr1l	equ	0xFE1
  2685                           indf2	equ	0xFDF
  2686                           fsr2h	equ	0xFDA
  2687                           fsr2l	equ	0xFD9
  2688                           status	equ	0xFD8
  2689                           
  2690 ;; *************** function _EUSART1_Initialize *****************
  2691 ;; Defined at:
  2692 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;Total ram usage:        0 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    4
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_SYSTEM_Initialize
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text18
  2721  000804                     __ptext18:
  2722                           	opt stack 0
  2723  000804                     _EUSART1_Initialize:
  2724                           	opt stack 25
  2725                           
  2726                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  2727                           
  2728                           ;incstack = 0
  2729  000804  0E08               	movlw	8
  2730  000806  6EB8               	movwf	4024,c	;volatile
  2731                           
  2732                           ;eusart1.c: 63: RCSTA1 = 0x90;
  2733  000808  0E90               	movlw	144
  2734  00080A  6EAB               	movwf	4011,c	;volatile
  2735                           
  2736                           ;eusart1.c: 66: TXSTA1 = 0x24;
  2737  00080C  0E24               	movlw	36
  2738  00080E  6EAC               	movwf	4012,c	;volatile
  2739                           
  2740                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  2741  000810  0EA0               	movlw	160
  2742  000812  6EAF               	movwf	4015,c	;volatile
  2743                           
  2744                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  2745  000814  0E01               	movlw	1
  2746  000816  6EB0               	movwf	4016,c	;volatile
  2747  000818  0012               	return		;funcret
  2748  00081A                     __end_of_EUSART1_Initialize:
  2749                           	opt stack 0
  2750                           tblptru	equ	0xFF8
  2751                           tblptrh	equ	0xFF7
  2752                           tblptrl	equ	0xFF6
  2753                           tablat	equ	0xFF5
  2754                           prodh	equ	0xFF4
  2755                           prodl	equ	0xFF3
  2756                           intcon	equ	0xFF2
  2757                           intcon2	equ	0xFF1
  2758                           postinc0	equ	0xFEE
  2759                           wreg	equ	0xFE8
  2760                           postdec1	equ	0xFE5
  2761                           fsr1l	equ	0xFE1
  2762                           indf2	equ	0xFDF
  2763                           fsr2h	equ	0xFDA
  2764                           fsr2l	equ	0xFD9
  2765                           status	equ	0xFD8
  2766                           
  2767 ;; *************** function _EPWM2_Initialize *****************
  2768 ;; Defined at:
  2769 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;Total ram usage:        0 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    4
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_SYSTEM_Initialize
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text19
  2798  00071C                     __ptext19:
  2799                           	opt stack 0
  2800  00071C                     _EPWM2_Initialize:
  2801                           	opt stack 25
  2802                           
  2803                           ;epwm2.c: 68: CCP2CON = 0x0C;
  2804                           
  2805                           ;incstack = 0
  2806  00071C  0E0C               	movlw	12
  2807  00071E  6E66               	movwf	3942,c	;volatile
  2808                           
  2809                           ;epwm2.c: 71: ECCP2AS = 0x00;
  2810  000720  0E00               	movlw	0
  2811  000722  6E64               	movwf	3940,c	;volatile
  2812                           
  2813                           ;epwm2.c: 74: PWM2CON = 0x80;
  2814  000724  0E80               	movlw	128
  2815  000726  6E65               	movwf	3941,c	;volatile
  2816                           
  2817                           ;epwm2.c: 77: PSTR2CON = 0x03;
  2818  000728  0E03               	movlw	3
  2819  00072A  6E63               	movwf	3939,c	;volatile
  2820                           
  2821                           ;epwm2.c: 80: CCPR2L = 0x0C;
  2822  00072C  0E0C               	movlw	12
  2823  00072E  6E67               	movwf	3943,c	;volatile
  2824                           
  2825                           ;epwm2.c: 83: CCPR2H = 0x00;
  2826  000730  0E00               	movlw	0
  2827  000732  6E68               	movwf	3944,c	;volatile
  2828                           
  2829                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  2830  000734  010F               	movlb	15	; () banked
  2831  000736  5149               	movf	73,w,b	;volatile
  2832  000738  0BE7               	andlw	-25
  2833  00073A  0910               	iorlw	16
  2834  00073C  6F49               	movwf	73,b	;volatile
  2835                           
  2836                           ; BSR set to: 15
  2837  00073E  0012               	return		;funcret
  2838  000740                     __end_of_EPWM2_Initialize:
  2839                           	opt stack 0
  2840                           tblptru	equ	0xFF8
  2841                           tblptrh	equ	0xFF7
  2842                           tblptrl	equ	0xFF6
  2843                           tablat	equ	0xFF5
  2844                           prodh	equ	0xFF4
  2845                           prodl	equ	0xFF3
  2846                           intcon	equ	0xFF2
  2847                           intcon2	equ	0xFF1
  2848                           postinc0	equ	0xFEE
  2849                           wreg	equ	0xFE8
  2850                           postdec1	equ	0xFE5
  2851                           fsr1l	equ	0xFE1
  2852                           indf2	equ	0xFDF
  2853                           fsr2h	equ	0xFDA
  2854                           fsr2l	equ	0xFD9
  2855                           status	equ	0xFD8
  2856                           
  2857 ;; *************** function _EPWM1_Initialize *****************
  2858 ;; Defined at:
  2859 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, status,2
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;Total ram usage:        0 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    4
  2880 ;; This function calls:
  2881 ;;		Nothing
  2882 ;; This function is called by:
  2883 ;;		_SYSTEM_Initialize
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text20
  2888  000740                     __ptext20:
  2889                           	opt stack 0
  2890  000740                     _EPWM1_Initialize:
  2891                           	opt stack 25
  2892                           
  2893                           ;epwm1.c: 68: CCP1CON = 0x0C;
  2894                           
  2895                           ; BSR set to: 15
  2896                           ;incstack = 0
  2897  000740  0E0C               	movlw	12
  2898  000742  6EBD               	movwf	4029,c	;volatile
  2899                           
  2900                           ;epwm1.c: 71: ECCP1AS = 0x00;
  2901  000744  0E00               	movlw	0
  2902  000746  6EB6               	movwf	4022,c	;volatile
  2903                           
  2904                           ;epwm1.c: 74: PWM1CON = 0x80;
  2905  000748  0E80               	movlw	128
  2906  00074A  6EB7               	movwf	4023,c	;volatile
  2907                           
  2908                           ;epwm1.c: 77: PSTR1CON = 0x03;
  2909  00074C  0E03               	movlw	3
  2910  00074E  6EB9               	movwf	4025,c	;volatile
  2911                           
  2912                           ;epwm1.c: 80: CCPR1L = 0x0C;
  2913  000750  0E0C               	movlw	12
  2914  000752  6EBE               	movwf	4030,c	;volatile
  2915                           
  2916                           ;epwm1.c: 83: CCPR1H = 0x00;
  2917  000754  0E00               	movlw	0
  2918  000756  6EBF               	movwf	4031,c	;volatile
  2919                           
  2920                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  2921  000758  010F               	movlb	15	; () banked
  2922  00075A  5149               	movf	73,w,b	;volatile
  2923  00075C  0BFC               	andlw	-4
  2924  00075E  0902               	iorlw	2
  2925  000760  6F49               	movwf	73,b	;volatile
  2926                           
  2927                           ; BSR set to: 15
  2928  000762  0012               	return		;funcret
  2929  000764                     __end_of_EPWM1_Initialize:
  2930                           	opt stack 0
  2931                           tblptru	equ	0xFF8
  2932                           tblptrh	equ	0xFF7
  2933                           tblptrl	equ	0xFF6
  2934                           tablat	equ	0xFF5
  2935                           prodh	equ	0xFF4
  2936                           prodl	equ	0xFF3
  2937                           intcon	equ	0xFF2
  2938                           intcon2	equ	0xFF1
  2939                           postinc0	equ	0xFEE
  2940                           wreg	equ	0xFE8
  2941                           postdec1	equ	0xFE5
  2942                           fsr1l	equ	0xFE1
  2943                           indf2	equ	0xFDF
  2944                           fsr2h	equ	0xFDA
  2945                           fsr2l	equ	0xFD9
  2946                           status	equ	0xFD8
  2947                           
  2948 ;; *************** function _CCP5_Initialize *****************
  2949 ;; Defined at:
  2950 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;Total ram usage:        0 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    4
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_SYSTEM_Initialize
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text21
  2979  00081A                     __ptext21:
  2980                           	opt stack 0
  2981  00081A                     _CCP5_Initialize:
  2982                           	opt stack 25
  2983                           
  2984                           ;ccp5.c: 60: CCP5CON = 0x00;
  2985                           
  2986                           ; BSR set to: 15
  2987                           ;incstack = 0
  2988  00081A  0E00               	movlw	0
  2989  00081C  010F               	movlb	15	; () banked
  2990  00081E  6F54               	movwf	84,b	;volatile
  2991                           
  2992                           ;ccp5.c: 62: CCPR5L = 0x00;
  2993  000820  0E00               	movlw	0
  2994  000822  010F               	movlb	15	; () banked
  2995  000824  6F55               	movwf	85,b	;volatile
  2996                           
  2997                           ;ccp5.c: 64: CCPR5H = 0x00;
  2998  000826  0E00               	movlw	0
  2999  000828  010F               	movlb	15	; () banked
  3000  00082A  6F56               	movwf	86,b	;volatile
  3001                           
  3002                           ; BSR set to: 15
  3003  00082C  0012               	return		;funcret
  3004  00082E                     __end_of_CCP5_Initialize:
  3005                           	opt stack 0
  3006                           tblptru	equ	0xFF8
  3007                           tblptrh	equ	0xFF7
  3008                           tblptrl	equ	0xFF6
  3009                           tablat	equ	0xFF5
  3010                           prodh	equ	0xFF4
  3011                           prodl	equ	0xFF3
  3012                           intcon	equ	0xFF2
  3013                           intcon2	equ	0xFF1
  3014                           postinc0	equ	0xFEE
  3015                           wreg	equ	0xFE8
  3016                           postdec1	equ	0xFE5
  3017                           fsr1l	equ	0xFE1
  3018                           indf2	equ	0xFDF
  3019                           fsr2h	equ	0xFDA
  3020                           fsr2l	equ	0xFD9
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function _ADC_Initialize *****************
  3024 ;; Defined at:
  3025 ;;		line 58 in file "mcc_generated_files/adc.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    4
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_SYSTEM_Initialize
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           	psect	text22
  3054  0007EC                     __ptext22:
  3055                           	opt stack 0
  3056  0007EC                     _ADC_Initialize:
  3057                           	opt stack 25
  3058                           
  3059                           ;adc.c: 63: ADCON0 = 0x01;
  3060                           
  3061                           ; BSR set to: 15
  3062                           ;incstack = 0
  3063  0007EC  0E01               	movlw	1
  3064  0007EE  6EC2               	movwf	4034,c	;volatile
  3065                           
  3066                           ;adc.c: 66: ADCON1 = 0x00;
  3067  0007F0  0E00               	movlw	0
  3068  0007F2  6EC1               	movwf	4033,c	;volatile
  3069                           
  3070                           ;adc.c: 69: ADCON2 = 0x05;
  3071  0007F4  0E05               	movlw	5
  3072  0007F6  6EC0               	movwf	4032,c	;volatile
  3073                           
  3074                           ;adc.c: 72: ADRESL = 0x00;
  3075  0007F8  0E00               	movlw	0
  3076  0007FA  6EC3               	movwf	4035,c	;volatile
  3077                           
  3078                           ;adc.c: 75: ADRESH = 0x00;
  3079  0007FC  0E00               	movlw	0
  3080  0007FE  6EC4               	movwf	4036,c	;volatile
  3081                           
  3082                           ;adc.c: 78: PIE1bits.ADIE = 1;
  3083  000800  8C9D               	bsf	3997,6,c	;volatile
  3084  000802  0012               	return		;funcret
  3085  000804                     __end_of_ADC_Initialize:
  3086                           	opt stack 0
  3087                           tblptru	equ	0xFF8
  3088                           tblptrh	equ	0xFF7
  3089                           tblptrl	equ	0xFF6
  3090                           tablat	equ	0xFF5
  3091                           prodh	equ	0xFF4
  3092                           prodl	equ	0xFF3
  3093                           intcon	equ	0xFF2
  3094                           intcon2	equ	0xFF1
  3095                           postinc0	equ	0xFEE
  3096                           wreg	equ	0xFE8
  3097                           postdec1	equ	0xFE5
  3098                           fsr1l	equ	0xFE1
  3099                           indf2	equ	0xFDF
  3100                           fsr2h	equ	0xFDA
  3101                           fsr2l	equ	0xFD9
  3102                           status	equ	0xFD8
  3103                           
  3104 ;; *************** function _INTERRUPT_InterruptManager *****************
  3105 ;; Defined at:
  3106 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;		None
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      void 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;Total ram usage:       14 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; Hardware stack levels required when called:    3
  3127 ;; This function calls:
  3128 ;;		_ADC_ISR
  3129 ;;		_TMR2_ISR
  3130 ;;		_TMR6_ISR
  3131 ;; This function is called by:
  3132 ;;		Interrupt level 2
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	intcode
  3137  000008                     __pintcode:
  3138                           	opt stack 0
  3139  000008                     _INTERRUPT_InterruptManager:
  3140                           	opt stack 24
  3141                           
  3142                           ;incstack = 0
  3143  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3144  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  3145  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3146  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3147  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3148  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3149  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3150  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3151  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3152  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3153  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3154  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3155  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3156  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3157  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3158                           
  3159                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  3160  000042  BCF2               	btfsc	intcon,6,c	;volatile
  3161  000044  AC9D               	btfss	3997,6,c	;volatile
  3162  000046  D005               	goto	i2l256
  3163  000048  AC9E               	btfss	3998,6,c	;volatile
  3164  00004A  D003               	goto	i2l256
  3165                           
  3166                           ;interrupt_manager.c: 61: {
  3167                           ;interrupt_manager.c: 62: ADC_ISR();
  3168  00004C  EC3E  F004         	call	_ADC_ISR	;wreg free
  3169                           
  3170                           ;interrupt_manager.c: 63: }
  3171  000050  D00E               	goto	i2l262
  3172  000052                     i2l256:
  3173                           
  3174                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  3175  000052  BCF2               	btfsc	intcon,6,c	;volatile
  3176  000054  A47D               	btfss	3965,2,c	;volatile
  3177  000056  D005               	goto	i2l258
  3178  000058  A47E               	btfss	3966,2,c	;volatile
  3179  00005A  D003               	goto	i2l258
  3180                           
  3181                           ;interrupt_manager.c: 65: {
  3182                           ;interrupt_manager.c: 66: TMR6_ISR();
  3183  00005C  ECD5  F003         	call	_TMR6_ISR	;wreg free
  3184                           
  3185                           ;interrupt_manager.c: 67: }
  3186  000060  D006               	goto	i2l262
  3187  000062                     i2l258:
  3188                           
  3189                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  3190  000062  BCF2               	btfsc	intcon,6,c	;volatile
  3191  000064  A29D               	btfss	3997,1,c	;volatile
  3192  000066  D003               	goto	i2l262
  3193  000068  B29E               	btfsc	3998,1,c	;volatile
  3194                           
  3195                           ;interrupt_manager.c: 69: {
  3196                           ;interrupt_manager.c: 70: TMR2_ISR();
  3197  00006A  EC33  F004         	call	_TMR2_ISR	;wreg free
  3198  00006E                     i2l262:
  3199  00006E  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3200  000072  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3201  000076  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3202  00007A  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3203  00007E  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3204  000082  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3205  000086  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3206  00008A  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3207  00008E  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3208  000092  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3209  000096  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3210  00009A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3211  00009E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3212  0000A2  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3213  0000A6  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3214  0000A8  0011               	retfie		f
  3215  0000AA                     __end_of_INTERRUPT_InterruptManager:
  3216                           	opt stack 0
  3217                           pclatu	equ	0xFFB
  3218                           pclath	equ	0xFFA
  3219                           tblptru	equ	0xFF8
  3220                           tblptrh	equ	0xFF7
  3221                           tblptrl	equ	0xFF6
  3222                           tablat	equ	0xFF5
  3223                           prodh	equ	0xFF4
  3224                           prodl	equ	0xFF3
  3225                           intcon	equ	0xFF2
  3226                           intcon2	equ	0xFF1
  3227                           postinc0	equ	0xFEE
  3228                           fsr0h	equ	0xFEA
  3229                           fsr0l	equ	0xFE9
  3230                           wreg	equ	0xFE8
  3231                           postdec1	equ	0xFE5
  3232                           fsr1h	equ	0xFE2
  3233                           fsr1l	equ	0xFE1
  3234                           indf2	equ	0xFDF
  3235                           fsr2h	equ	0xFDA
  3236                           fsr2l	equ	0xFD9
  3237                           status	equ	0xFD8
  3238                           
  3239 ;; *************** function _TMR6_ISR *****************
  3240 ;; Defined at:
  3241 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;Total ram usage:        0 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    1
  3262 ;; This function calls:
  3263 ;;		Absolute function
  3264 ;;		_TMR6_DefaultInterruptHandler
  3265 ;; This function is called by:
  3266 ;;		_INTERRUPT_InterruptManager
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text24
  3271  0007AA                     __ptext24:
  3272                           	opt stack 0
  3273  0007AA                     _TMR6_ISR:
  3274                           	opt stack 25
  3275                           
  3276                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  3277                           
  3278                           ;incstack = 0
  3279  0007AA  947E               	bcf	3966,2,c	;volatile
  3280                           
  3281                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  3282  0007AC  5047               	movf	_TMR6_InterruptHandler,w,c
  3283  0007AE  1048               	iorwf	_TMR6_InterruptHandler+1,w,c
  3284  0007B0  B4D8               	btfsc	status,2,c
  3285  0007B2  0012               	return	
  3286                           
  3287                           ;tmr6.c: 128: {
  3288                           ;tmr6.c: 129: TMR6_InterruptHandler();
  3289  0007B4  D801               	call	i2u27_48
  3290  0007B6  0012               	return	
  3291  0007B8                     i2u27_48:
  3292  0007B8  0005               	push	
  3293  0007BA  6EFA               	movwf	pclath,c
  3294  0007BC  5047               	movf	_TMR6_InterruptHandler,w,c
  3295  0007BE  6EFD               	movwf	tosl,c
  3296  0007C0  5048               	movf	_TMR6_InterruptHandler+1,w,c
  3297  0007C2  6EFE               	movwf	tosh,c
  3298  0007C4  50F8               	movf	tblptru,w,c
  3299  0007C6  6EFF               	movwf	tosu,c
  3300  0007C8  50FA               	movf	pclath,w,c
  3301  0007CA  0012               	return		;indir
  3302  0007CC                     __end_of_TMR6_ISR:
  3303                           	opt stack 0
  3304                           tosu	equ	0xFFF
  3305                           tosh	equ	0xFFE
  3306                           tosl	equ	0xFFD
  3307                           pclatu	equ	0xFFB
  3308                           pclath	equ	0xFFA
  3309                           tblptru	equ	0xFF8
  3310                           tblptrh	equ	0xFF7
  3311                           tblptrl	equ	0xFF6
  3312                           tablat	equ	0xFF5
  3313                           prodh	equ	0xFF4
  3314                           prodl	equ	0xFF3
  3315                           intcon	equ	0xFF2
  3316                           intcon2	equ	0xFF1
  3317                           postinc0	equ	0xFEE
  3318                           fsr0h	equ	0xFEA
  3319                           fsr0l	equ	0xFE9
  3320                           wreg	equ	0xFE8
  3321                           postdec1	equ	0xFE5
  3322                           fsr1h	equ	0xFE2
  3323                           fsr1l	equ	0xFE1
  3324                           indf2	equ	0xFDF
  3325                           fsr2h	equ	0xFDA
  3326                           fsr2l	equ	0xFD9
  3327                           status	equ	0xFD8
  3328                           
  3329 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  3330 ;; Defined at:
  3331 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		None
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;Total ram usage:        0 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_TMR6_Initialize
  3355 ;;		_TMR6_ISR
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text25
  3360  000880                     __ptext25:
  3361                           	opt stack 0
  3362  000880                     _TMR6_DefaultInterruptHandler:
  3363                           	opt stack 25
  3364                           
  3365                           ;incstack = 0
  3366  000880  0012               	return		;funcret
  3367  000882                     __end_of_TMR6_DefaultInterruptHandler:
  3368                           	opt stack 0
  3369                           tosu	equ	0xFFF
  3370                           tosh	equ	0xFFE
  3371                           tosl	equ	0xFFD
  3372                           pclatu	equ	0xFFB
  3373                           pclath	equ	0xFFA
  3374                           tblptru	equ	0xFF8
  3375                           tblptrh	equ	0xFF7
  3376                           tblptrl	equ	0xFF6
  3377                           tablat	equ	0xFF5
  3378                           prodh	equ	0xFF4
  3379                           prodl	equ	0xFF3
  3380                           intcon	equ	0xFF2
  3381                           intcon2	equ	0xFF1
  3382                           postinc0	equ	0xFEE
  3383                           fsr0h	equ	0xFEA
  3384                           fsr0l	equ	0xFE9
  3385                           wreg	equ	0xFE8
  3386                           postdec1	equ	0xFE5
  3387                           fsr1h	equ	0xFE2
  3388                           fsr1l	equ	0xFE1
  3389                           indf2	equ	0xFDF
  3390                           fsr2h	equ	0xFDA
  3391                           fsr2l	equ	0xFD9
  3392                           status	equ	0xFD8
  3393                           
  3394 ;; *************** function _TMR2_ISR *****************
  3395 ;; Defined at:
  3396 ;;		line 122 in file "mcc_generated_files/tmr2.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;Total ram usage:        0 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; Hardware stack levels required when called:    2
  3417 ;; This function calls:
  3418 ;;		_TMR2_CallBack
  3419 ;; This function is called by:
  3420 ;;		_INTERRUPT_InterruptManager
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text26
  3425  000866                     __ptext26:
  3426                           	opt stack 0
  3427  000866                     _TMR2_ISR:
  3428                           	opt stack 24
  3429                           
  3430                           ;tmr2.c: 126: PIR1bits.TMR2IF = 0;
  3431                           
  3432                           ;incstack = 0
  3433  000866  929E               	bcf	3998,1,c	;volatile
  3434                           
  3435                           ;tmr2.c: 130: TMR2_CallBack();
  3436  000868  ECB2  F003         	call	_TMR2_CallBack	;wreg free
  3437  00086C  0012               	return		;funcret
  3438  00086E                     __end_of_TMR2_ISR:
  3439                           	opt stack 0
  3440                           tosu	equ	0xFFF
  3441                           tosh	equ	0xFFE
  3442                           tosl	equ	0xFFD
  3443                           pclatu	equ	0xFFB
  3444                           pclath	equ	0xFFA
  3445                           tblptru	equ	0xFF8
  3446                           tblptrh	equ	0xFF7
  3447                           tblptrl	equ	0xFF6
  3448                           tablat	equ	0xFF5
  3449                           prodh	equ	0xFF4
  3450                           prodl	equ	0xFF3
  3451                           intcon	equ	0xFF2
  3452                           intcon2	equ	0xFF1
  3453                           postinc0	equ	0xFEE
  3454                           fsr0h	equ	0xFEA
  3455                           fsr0l	equ	0xFE9
  3456                           wreg	equ	0xFE8
  3457                           postdec1	equ	0xFE5
  3458                           fsr1h	equ	0xFE2
  3459                           fsr1l	equ	0xFE1
  3460                           indf2	equ	0xFDF
  3461                           fsr2h	equ	0xFDA
  3462                           fsr2l	equ	0xFD9
  3463                           status	equ	0xFD8
  3464                           
  3465 ;; *************** function _TMR2_CallBack *****************
  3466 ;; Defined at:
  3467 ;;		line 133 in file "mcc_generated_files/tmr2.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;Total ram usage:        0 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:    1
  3488 ;; This function calls:
  3489 ;;		Absolute function
  3490 ;;		_TMR2_DefaultInterruptHandler
  3491 ;; This function is called by:
  3492 ;;		_TMR2_ISR
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text27
  3497  000764                     __ptext27:
  3498                           	opt stack 0
  3499  000764                     _TMR2_CallBack:
  3500                           	opt stack 24
  3501                           
  3502                           ;tmr2.c: 135: Timer2Ticked=1;
  3503                           
  3504                           ;incstack = 0
  3505  000764  0E01               	movlw	1
  3506  000766  6E44               	movwf	_Timer2Ticked,c	;volatile
  3507                           
  3508                           ;tmr2.c: 138: if(TMR2_InterruptHandler)
  3509  000768  5045               	movf	_TMR2_InterruptHandler,w,c
  3510  00076A  1046               	iorwf	_TMR2_InterruptHandler+1,w,c
  3511  00076C  B4D8               	btfsc	status,2,c
  3512  00076E  0012               	return	
  3513                           
  3514                           ;tmr2.c: 139: {
  3515                           ;tmr2.c: 140: TMR2_InterruptHandler();
  3516  000770  D801               	call	i2u3_48
  3517  000772  0012               	return	
  3518  000774                     i2u3_48:
  3519  000774  0005               	push	
  3520  000776  6EFA               	movwf	pclath,c
  3521  000778  5045               	movf	_TMR2_InterruptHandler,w,c
  3522  00077A  6EFD               	movwf	tosl,c
  3523  00077C  5046               	movf	_TMR2_InterruptHandler+1,w,c
  3524  00077E  6EFE               	movwf	tosh,c
  3525  000780  50F8               	movf	tblptru,w,c
  3526  000782  6EFF               	movwf	tosu,c
  3527  000784  50FA               	movf	pclath,w,c
  3528  000786  0012               	return		;indir
  3529  000788                     __end_of_TMR2_CallBack:
  3530                           	opt stack 0
  3531                           tosu	equ	0xFFF
  3532                           tosh	equ	0xFFE
  3533                           tosl	equ	0xFFD
  3534                           pclatu	equ	0xFFB
  3535                           pclath	equ	0xFFA
  3536                           tblptru	equ	0xFF8
  3537                           tblptrh	equ	0xFF7
  3538                           tblptrl	equ	0xFF6
  3539                           tablat	equ	0xFF5
  3540                           prodh	equ	0xFF4
  3541                           prodl	equ	0xFF3
  3542                           intcon	equ	0xFF2
  3543                           intcon2	equ	0xFF1
  3544                           postinc0	equ	0xFEE
  3545                           fsr0h	equ	0xFEA
  3546                           fsr0l	equ	0xFE9
  3547                           wreg	equ	0xFE8
  3548                           postdec1	equ	0xFE5
  3549                           fsr1h	equ	0xFE2
  3550                           fsr1l	equ	0xFE1
  3551                           indf2	equ	0xFDF
  3552                           fsr2h	equ	0xFDA
  3553                           fsr2l	equ	0xFD9
  3554                           status	equ	0xFD8
  3555                           
  3556 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3557 ;; Defined at:
  3558 ;;		line 148 in file "mcc_generated_files/tmr2.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		None
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; This function calls:
  3579 ;;		Nothing
  3580 ;; This function is called by:
  3581 ;;		_TMR2_Initialize
  3582 ;;		_TMR2_CallBack
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text28
  3587  000882                     __ptext28:
  3588                           	opt stack 0
  3589  000882                     _TMR2_DefaultInterruptHandler:
  3590                           	opt stack 24
  3591                           
  3592                           ;incstack = 0
  3593  000882  0012               	return		;funcret
  3594  000884                     __end_of_TMR2_DefaultInterruptHandler:
  3595                           	opt stack 0
  3596                           tosu	equ	0xFFF
  3597                           tosh	equ	0xFFE
  3598                           tosl	equ	0xFFD
  3599                           pclatu	equ	0xFFB
  3600                           pclath	equ	0xFFA
  3601                           tblptru	equ	0xFF8
  3602                           tblptrh	equ	0xFF7
  3603                           tblptrl	equ	0xFF6
  3604                           tablat	equ	0xFF5
  3605                           prodh	equ	0xFF4
  3606                           prodl	equ	0xFF3
  3607                           intcon	equ	0xFF2
  3608                           intcon2	equ	0xFF1
  3609                           postinc0	equ	0xFEE
  3610                           fsr0h	equ	0xFEA
  3611                           fsr0l	equ	0xFE9
  3612                           wreg	equ	0xFE8
  3613                           postdec1	equ	0xFE5
  3614                           fsr1h	equ	0xFE2
  3615                           fsr1l	equ	0xFE1
  3616                           indf2	equ	0xFDF
  3617                           fsr2h	equ	0xFDA
  3618                           fsr2l	equ	0xFD9
  3619                           status	equ	0xFD8
  3620                           
  3621 ;; *************** function _ADC_ISR *****************
  3622 ;; Defined at:
  3623 ;;		line 129 in file "mcc_generated_files/adc.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;		None
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;		None
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      void 
  3630 ;; Registers used:
  3631 ;;		None
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;Total ram usage:        0 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_INTERRUPT_InterruptManager
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text29
  3651  00087C                     __ptext29:
  3652                           	opt stack 0
  3653  00087C                     _ADC_ISR:
  3654                           	opt stack 26
  3655                           
  3656                           ;adc.c: 132: PIR1bits.ADIF = 0;
  3657                           
  3658                           ;incstack = 0
  3659  00087C  9C9E               	bcf	3998,6,c	;volatile
  3660  00087E  0012               	return		;funcret
  3661  000880                     __end_of_ADC_ISR:
  3662                           	opt stack 0
  3663  0000                     tosu	equ	0xFFF
  3664                           tosh	equ	0xFFE
  3665                           tosl	equ	0xFFD
  3666                           pclatu	equ	0xFFB
  3667                           pclath	equ	0xFFA
  3668                           tblptru	equ	0xFF8
  3669                           tblptrh	equ	0xFF7
  3670                           tblptrl	equ	0xFF6
  3671                           tablat	equ	0xFF5
  3672                           prodh	equ	0xFF4
  3673                           prodl	equ	0xFF3
  3674                           intcon	equ	0xFF2
  3675                           intcon2	equ	0xFF1
  3676                           postinc0	equ	0xFEE
  3677                           fsr0h	equ	0xFEA
  3678                           fsr0l	equ	0xFE9
  3679                           wreg	equ	0xFE8
  3680                           postdec1	equ	0xFE5
  3681                           fsr1h	equ	0xFE2
  3682                           fsr1l	equ	0xFE1
  3683                           indf2	equ	0xFDF
  3684                           fsr2h	equ	0xFDA
  3685                           fsr2l	equ	0xFD9
  3686                           status	equ	0xFD8
  3687                           tosu	equ	0xFFF
  3688                           tosh	equ	0xFFE
  3689                           tosl	equ	0xFFD
  3690                           pclatu	equ	0xFFB
  3691                           pclath	equ	0xFFA
  3692                           tblptru	equ	0xFF8
  3693                           tblptrh	equ	0xFF7
  3694                           tblptrl	equ	0xFF6
  3695                           tablat	equ	0xFF5
  3696                           prodh	equ	0xFF4
  3697                           prodl	equ	0xFF3
  3698                           intcon	equ	0xFF2
  3699                           intcon2	equ	0xFF1
  3700                           postinc0	equ	0xFEE
  3701                           fsr0h	equ	0xFEA
  3702                           fsr0l	equ	0xFE9
  3703                           wreg	equ	0xFE8
  3704                           postdec1	equ	0xFE5
  3705                           fsr1h	equ	0xFE2
  3706                           fsr1l	equ	0xFE1
  3707                           indf2	equ	0xFDF
  3708                           fsr2h	equ	0xFDA
  3709                           fsr2l	equ	0xFD9
  3710                           status	equ	0xFD8
  3711                           
  3712                           	psect	text30
  3713  000000                     __ptext30:
  3714                           	opt stack 0
  3715                           tosu	equ	0xFFF
  3716                           tosh	equ	0xFFE
  3717                           tosl	equ	0xFFD
  3718                           pclatu	equ	0xFFB
  3719                           pclath	equ	0xFFA
  3720                           tblptru	equ	0xFF8
  3721                           tblptrh	equ	0xFF7
  3722                           tblptrl	equ	0xFF6
  3723                           tablat	equ	0xFF5
  3724                           prodh	equ	0xFF4
  3725                           prodl	equ	0xFF3
  3726                           intcon	equ	0xFF2
  3727                           intcon2	equ	0xFF1
  3728                           postinc0	equ	0xFEE
  3729                           fsr0h	equ	0xFEA
  3730                           fsr0l	equ	0xFE9
  3731                           wreg	equ	0xFE8
  3732                           postdec1	equ	0xFE5
  3733                           fsr1h	equ	0xFE2
  3734                           fsr1l	equ	0xFE1
  3735                           indf2	equ	0xFDF
  3736                           fsr2h	equ	0xFDA
  3737                           fsr2l	equ	0xFD9
  3738                           status	equ	0xFD8
  3739                           
  3740                           	psect	rparam
  3741  0000                     tosu	equ	0xFFF
  3742                           tosh	equ	0xFFE
  3743                           tosl	equ	0xFFD
  3744                           pclatu	equ	0xFFB
  3745                           pclath	equ	0xFFA
  3746                           tblptru	equ	0xFF8
  3747                           tblptrh	equ	0xFF7
  3748                           tblptrl	equ	0xFF6
  3749                           tablat	equ	0xFF5
  3750                           prodh	equ	0xFF4
  3751                           prodl	equ	0xFF3
  3752                           intcon	equ	0xFF2
  3753                           intcon2	equ	0xFF1
  3754                           postinc0	equ	0xFEE
  3755                           fsr0h	equ	0xFEA
  3756                           fsr0l	equ	0xFE9
  3757                           wreg	equ	0xFE8
  3758                           postdec1	equ	0xFE5
  3759                           fsr1h	equ	0xFE2
  3760                           fsr1l	equ	0xFE1
  3761                           indf2	equ	0xFDF
  3762                           fsr2h	equ	0xFDA
  3763                           fsr2l	equ	0xFD9
  3764                           status	equ	0xFD8
  3765                           
  3766                           	psect	temp
  3767  00004A                     btemp:
  3768                           	opt stack 0
  3769  00004A                     	ds	1
  3770  0000                     int$flags	set	btemp
  3771                           tosu	equ	0xFFF
  3772                           tosh	equ	0xFFE
  3773                           tosl	equ	0xFFD
  3774                           pclatu	equ	0xFFB
  3775                           pclath	equ	0xFFA
  3776                           tblptru	equ	0xFF8
  3777                           tblptrh	equ	0xFF7
  3778                           tblptrl	equ	0xFF6
  3779                           tablat	equ	0xFF5
  3780                           prodh	equ	0xFF4
  3781                           prodl	equ	0xFF3
  3782                           intcon	equ	0xFF2
  3783                           intcon2	equ	0xFF1
  3784                           postinc0	equ	0xFEE
  3785                           fsr0h	equ	0xFEA
  3786                           fsr0l	equ	0xFE9
  3787                           wreg	equ	0xFE8
  3788                           postdec1	equ	0xFE5
  3789                           fsr1h	equ	0xFE2
  3790                           fsr1l	equ	0xFE1
  3791                           indf2	equ	0xFDF
  3792                           fsr2h	equ	0xFDA
  3793                           fsr2l	equ	0xFD9
  3794                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        192
    BSS         11
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      73
    BANK0           160      0     160
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StepMove
    _StepMove->_State16MEF_act
    _StepMove->_State8MEF_act
    _State8MEF_act->_EPWM1_LoadDutyValue
    _State8MEF_act->_EPWM2_LoadDutyValue
    _State16MEF_act->_EPWM1_LoadDutyValue
    _State16MEF_act->_EPWM2_LoadDutyValue
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2720
                  _SYSTEM_Initialize
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _StepMove                                             6     2      4    2548
                                             19 COMRAM     6     2      4
                     _State16MEF_act
                      _State8MEF_act
 ---------------------------------------------------------------------------------
 (2) _State8MEF_act                                        1     1      0    1134
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _State16MEF_act                                       1     1      0    1134
                                             18 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2     556
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     556
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_ini
   _StepMove
     _State16MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _EUSART1_Write
     _State8MEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      49       1       77.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E9      12        0.0%
DATA                 0      0      E9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Jun 07 11:51:05 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 0866  
                       ??_TMR6_StartTimer 002F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l325 083E                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _PR6 000F4B                           __end_of_ADC_ISR 0880  
                         _TMR2_Initialize 0788                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                __end_of_EPWM2_Initialize 0740                           _CCP5_Initialize 081A  
                                    l1614 019C                                      l1720 039A  
                                    l1616 01A0                                      l1810 05F0  
                                    l1740 0408                                      l1660 0282  
                                    l1636 020E                                      l1564 00B0  
                                    l1804 05E0                                      l1742 040C  
                                    l1718 0396                                      l1638 0212  
                                    l1574 00C6                                      l1806 05E4  
                                    l1592 012A                                      l1664 0286  
                                    l1824 06DE                                      l1594 012E  
                                    l1764 047C                                      l1668 02AA  
                                    l1678 02C0                                      l1696 0324  
                                    l1768 0480                                      l1698 0328  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _TMR2 000FBC  
                                    _TMR6 000F4C                                      _WPUB 000F61  
                           _EUSART1_Write 083C                                      _main 06CC  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 004A  
                           __CFG_BORV$190 000000                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00AA  
                           __CFG_IESO$OFF 000000                     ??_EPWM1_LoadDutyValue 0031  
                            ___param_bank 000000            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 083C                                     ?_main 0021  
                                   _T2CON 000FBA                                     _T6CON 000F4A  
                          __CFG_DEBUG$OFF 000000                                     i2l262 006E  
                                   i2l256 0052                                     i2l258 0062  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000         __size_of_TMR6_SetInterruptHandler 000A  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                 ?_TMR6_SetInterruptHandler 002F  
                        __end_of_TMR2_ISR 086E                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                        __end_of_TMR6_ISR 07CC                            __CFG_EBTRB$OFF 000000  
                        _LookUP_TABLE_COS 0001                          _LookUP_TABLE_SEN 00E0  
                      __CFG_MCLRE$EXTMCLR 000000                        StepMove@StepNumber 0034  
                          ?_EUSART1_Write 0021                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 0874  
                          __CFG_PBADEN$ON 000000            ??_TMR6_DefaultInterruptHandler 0021  
                         __initialization 0542                __end_of_EUSART1_Initialize 081A  
                            __end_of_main 06F4                   __end_of_TMR2_Initialize 07AA  
                               ??_ADC_ISR 0021               ?_INTERRUPT_InterruptManager 0021  
                _TMR2_SetInterruptHandler 085C                                    ??_main 003A  
                 __end_of_CCP5_Initialize 082E                             __activetblptr 000002  
                         _TMR6_Initialize 06F4                          __end_of_StepMove 05F6  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1H 000FBF  
                                  _CCPR2H 000F68                                    _CCPR1L 000FBE  
                                  _CCPR2L 000F67                                    _CCPR5H 000F56  
                                  _CCPR5L 000F55                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAE  
                                  _RCSTA1 000FAB                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                    i2u3_48 0774  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                          __CFG_XINST$OFF 000000                              _CCPTMRS0bits 000F49  
                          __CFG_STVREN$ON 000000                   __size_of_State16MEF_act 01FA  
                                  clear_0 0588                              __pdataCOMRAM 0001  
                StepMove@microstep_number 0037                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                         ??_EUSART1_Write 002F                       _EPWM2_LoadDutyValue 0642  
                 __end_of_TMR2_StartTimer 0878  TMR2_SetInterruptHandler@InterruptHandler 002F  
TMR6_SetInterruptHandler@InterruptHandler 002F             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 06A2                                __accesstop 0060  
                 __end_of__initialization 058E                     __end_of_TMR2_CallBack 0788  
                      ?_SYSTEM_Initialize 0021                           _TMR6_StartTimer 086E  
                           ___rparam_used 000001                         ?_EPWM1_Initialize 0021  
                          __pcstackCOMRAM 0021                      ?_EPWM2_LoadDutyValue 002F  
                            __pidataBANK0 04A2                       ??_SYSTEM_Initialize 0031  
                   __end_of_State8MEF_act 02A8                                 ?_TMR2_ISR 0021  
                               ?_TMR6_ISR 0021                        ??_EPWM1_Initialize 002F  
                        ?_TMR2_Initialize 0021                   __end_of_TMR6_Initialize 071C  
                        ?_CCP5_Initialize 0021                         ?_EPWM2_Initialize 0021  
               __end_of_SYSTEM_Initialize 06CC                        ??_EPWM2_Initialize 002F  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 0045  
                      __CFG_CCP2MX$PORTC1 000000                     ??_EPWM2_LoadDutyValue 0031  
        __end_of_TMR6_SetInterruptHandler 085C                                ??_TMR2_ISR 0021  
                      __CFG_CCP3MX$PORTB5 000000                                 ?_StepMove 0034  
                              ??_TMR6_ISR 0021                                   _CCP1CON 000FBD  
                                 _CCP2CON 000F66                                   _CCP5CON 000F54  
                                 _ECCP1AS 000FB6                                   _ECCP2AS 000F64  
                                 _ADC_ISR 087C                                   _ADRESLH 003E  
                 __size_of_ADC_Initialize 0018                                   _OSCCON2 000FD2  
                                 i2u27_48 07B8                                   _OSCTUNE 000F9B  
                                 _PWM1CON 000FB7                                   _PWM2CON 000F65  
                                 _SPBRGH1 000FB0                          ?_TMR2_StartTimer 0021  
                 __end_of_TMR6_StartTimer 0874               __end_of_EPWM1_LoadDutyValue 06A2  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0031  
                              ??_StepMove 0038                            _State16MEF_act 02A8  
                                 __pcinit 0542                          ?_TMR6_Initialize 0021  
                                 __ramtop 1000                                   __ptext0 06CC  
                                 __ptext1 059C                                   __ptext2 00AE  
                                 __ptext3 02A8                                   __ptext4 083C  
                                 __ptext5 0642                                   __ptext6 0672  
                                 __ptext7 0848                                   __ptext8 06A2  
                                 __ptext9 06F4                     _OSCILLATOR_Initialize 082E  
                               _T2CONbits 000FBA                             ?_StateMEF_ini 0021  
                      _EUSART1_Initialize 0804                  ??_PIN_MANAGER_Initialize 002F  
                               _T6CONbits 000F4A                __size_of_SYSTEM_Initialize 002A  
                    end_of_initialization 058E                       ?_EUSART1_Initialize 0021  
                           __Lmediumconst 0000                    __end_of_State16MEF_act 04A2  
                                 postdec1 000FE5                                   postinc0 000FEE  
                    ??_EUSART1_Initialize 002F                  _TMR6_SetInterruptHandler 0852  
                          ??_StateMEF_ini 002F                       EUSART1_Write@txData 002F  
                        ?_TMR6_StartTimer 0021                              _EstadoActual 0049  
                         ?_State16MEF_act 0021              __end_of_INTERRUPT_Initialize 087C  
                               _Direccion 0042      __end_of_TMR2_DefaultInterruptHandler 0884  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 0882  
                       StepMove@Velocidad 0036                             __pidataCOMRAM 07CC  
                       __size_of_TMR2_ISR 0008                            _ADC_Initialize 07EC  
                       __size_of_TMR6_ISR 0022                    ?_OSCILLATOR_Initialize 0021  
                     start_initialization 0542                 __size_of_EPWM1_Initialize 0024  
         __size_of_PIN_MANAGER_Initialize 004C                                 _Microstep 0043  
            EPWM1_LoadDutyValue@dutyValue 002F                     __end_of_EUSART1_Write 0848  
               __size_of_EPWM2_Initialize 0024                    __end_of_ADC_Initialize 0804  
                             __pdataBANK0 0060                                  ?_ADC_ISR 0021  
                               _StepCount 003C             ?_TMR2_DefaultInterruptHandler 0021  
                       __size_of_StepMove 005A                    __size_of_TMR2_CallBack 0024  
                             __pbssCOMRAM 003A                  __size_of_TMR2_Initialize 0022  
                __size_of_CCP5_Initialize 0014                    __size_of_State8MEF_act 01FA  
             __end_of_EPWM2_LoadDutyValue 0672                     _TMR6_InterruptHandler 0047  
                    __end_of_StateMEF_ini 0852                    _PIN_MANAGER_Initialize 05F6  
                               __pintcode 0008                           ?_ADC_Initialize 0021  
            ??_INTERRUPT_InterruptManager 0021                          __CFG_PRICLKEN$ON 000000  
                                _BAUDCON1 000FB8                                  _ANALOG_0 0040  
                    _INTERRUPT_Initialize 0878                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                           _TMR2_CallBack 0764                                  _PIE1bits 000F9D  
                                _PIE5bits 000F7D                  __size_of_TMR2_StartTimer 0004  
     __size_of_INTERRUPT_InterruptManager 00A2                                  _PIR1bits 000F9E  
                                _PIR5bits 000F7E              __size_of_EPWM1_LoadDutyValue 0030  
              ??_TMR6_SetInterruptHandler 0031                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR2_ISR 0866  
                                _PSTR1CON 000FB9                                  _PSTR2CON 000F63  
                                _TMR6_ISR 07AA                             _State8MEF_act 00AE  
                        _Timer2Tick_count 003A                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2            ??_TMR2_DefaultInterruptHandler 0021  
                        _EPWM1_Initialize 0740         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 002F                  __size_of_TMR6_Initialize 0028  
                             _INTCON2bits 000FF1                                 copy_data0 0556  
                               copy_data1 0576                     ?_INTERRUPT_Initialize 0021  
                       ??_TMR2_Initialize 0031                            ?_TMR2_CallBack 0021  
                        ??_State16MEF_act 0033                         ??_CCP5_Initialize 002F  
                                __Hrparam 0000                              _Timer2Ticked 0044  
                        _EPWM2_Initialize 071C                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTC0 000000  
                          ?_State8MEF_act 0021                                  _StepMove 059C  
                 ??_OSCILLATOR_Initialize 002F               __size_of_EUSART1_Initialize 0016  
                                __ptext10 086E                                  __ptext11 0852  
                                __ptext20 0740                                  __ptext12 0788  
                                __ptext21 081A                                  __ptext13 0874  
                                __ptext30 0000                                  __ptext22 07EC  
                                __ptext14 085C                                  __ptext15 05F6  
                                __ptext24 07AA                                  __ptext16 082E  
                                __ptext25 0880                                  __ptext17 0878  
                                __ptext26 0866                                  __ptext18 0804  
                                __ptext27 0764                                  __ptext19 071C  
                                __ptext28 0882                                  __ptext29 087C  
                   __size_of_StateMEF_ini 000A                             __size_of_main 0028  
                     _LookUP_TABLE_COS_16 00A0                       _LookUP_TABLE_SEN_16 0060  
                __size_of_TMR6_StartTimer 0006                                  int$flags 004A  
                       ??_TMR2_StartTimer 002F        __end_of_INTERRUPT_InterruptManager 00AA  
              _INTERRUPT_InterruptManager 0008                                _INTCONbits 000FF2  
                            _StateMEF_ini 0848                    ??_INTERRUPT_Initialize 002F  
    __end_of_TMR6_DefaultInterruptHandler 0882     __size_of_TMR6_DefaultInterruptHandler 0002  
            _TMR6_DefaultInterruptHandler 0880                                  intlevel2 0000  
                         ??_TMR2_CallBack 0021              EPWM2_LoadDutyValue@dutyValue 002F  
                 ?_PIN_MANAGER_Initialize 0021                         ??_TMR6_Initialize 0031  
                              _RCSTA1bits 000FAB                          ??_ADC_Initialize 002F  
                         ??_State8MEF_act 0033                    __size_of_EUSART1_Write 000C  
                       __CFG_T3CMX$PORTC0 000000                       _EPWM1_LoadDutyValue 0672  
          __end_of_PIN_MANAGER_Initialize 0642             ?_TMR6_DefaultInterruptHandler 0021  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 0045  
                __end_of_EPWM1_Initialize 0764                      ?_EPWM1_LoadDutyValue 002F  
